(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    216222,       4476]
NotebookOptionsPosition[    204689,       4269]
NotebookOutlinePosition[    205067,       4285]
CellTagsIndexPosition[    205024,       4282]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["\<\
Building WolframCloud APIs for JavaScript (React, Node, AWS)

Livecoding Session 1\
\>", "Title",
 CellChangeTimes->{{3.7638898877493024`*^9, 3.763889938762308*^9}, {
  3.7638899734873037`*^9, 3.763889994907301*^9}, {3.7647562659747314`*^9, 
  3.764756281453726*^9}, {3.773063878620057*^9, 3.7730638977200856`*^9}, {
  3.7732444445448933`*^9, 
  3.7732444546978936`*^9}},ExpressionUUID->"7d907abe-a0ba-4b39-905d-\
46d65bf1926e"],

Cell[CellGroupData[{

Cell["Overview", "Section",
 CellChangeTimes->{{3.764756563582971*^9, 
  3.764756565220968*^9}},ExpressionUUID->"aadec40a-3368-4723-89fd-\
8eb251f38546"],

Cell["\<\
Assumptions:
- Familiarity with Mathematica.  
- Familiarity of JS is helpful but not required for this presentation.

A few words about:
- Introduction and background for React (https://reactjs.org/) / Axios and \
Node (https://nodejs.org/en/) / Express.
- Wolfram setup, we will use the following tools:
\t- Mathematica desktop (wolfram.com/) & Wolfram Cloud (wolframcloud.com - \
free sign up.  You can use Wolfram Cloud (WC) alone if you like)
- Other than Wolfram setup:
\t- npm (https://www.npmjs.com/) 
\t- git (https://git-scm.com/)
\t- GitHub (https://github.com/)
\t- AWS (free tier: https://aws.amazon.com/console/)
\t- AWS-CLI (https://aws.amazon.com/cli/)
\t- AWS Amplify (https://aws.amazon.com/amplify/)
\t- create-react-app (https://facebook.github.io/create-react-app/)
\t- Chrome browser (google.com/chrome).  We will use chrome developer tools.  \
Other browsers and their browser tools may not be sufficient for what we will \
doing)
\t- Postman (getpostman.com/ for validating and testing APIs) \
\>", "Text",
 CellChangeTimes->{{3.763890011612302*^9, 3.7638901696143055`*^9}, {
   3.763890200718302*^9, 3.7638902611903043`*^9}, 3.764756403943945*^9, {
   3.7647565533949785`*^9, 3.764756557441941*^9}, {3.764756840776133*^9, 
   3.764756841297163*^9}, {3.764757171913148*^9, 3.764757183439116*^9}, {
   3.764757372949869*^9, 3.7647573743968663`*^9}, {3.764757413359903*^9, 
   3.7647574358868675`*^9}, {3.7647574930818973`*^9, 
   3.7647574986978655`*^9}, {3.7647575428068686`*^9, 
   3.7647575515239162`*^9}, {3.764757605406885*^9, 3.7647576177608685`*^9}, {
   3.765994705983547*^9, 3.7659947241623526`*^9}, {3.772980054888672*^9, 
   3.7729800636716423`*^9}, {3.772992965596657*^9, 3.7729929935746317`*^9}, {
   3.7729931157593164`*^9, 3.7729933743705482`*^9}, {3.7729934104615884`*^9, 
   3.772993510872326*^9}, {3.7729939744644995`*^9, 3.772993976561745*^9}, {
   3.773232226841055*^9, 3.7732322335620775`*^9}, {3.773232270260056*^9, 
   3.773232301914174*^9}},ExpressionUUID->"61070079-5b9c-44ad-ba6d-\
a20bd75cf098"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Introduction", "Section",
 CellChangeTimes->{{3.7647565738499856`*^9, 
  3.7647565760699434`*^9}},ExpressionUUID->"c94a9a1d-f6a8-4105-87a9-\
29514bdfea20"],

Cell[TextData[{
 "Motivating principle: separation of duties for people and software \
supporting the goals of modular design principles.  Easy to understand \
separating people by expertise in front-end, back-end and quantitative \
capabilities and code production.\n\nThis is the first of three (or more) \
live-coding walk-through\[CloseCurlyQuote]s that show an approach to \
integrating Mathematica to a browser front-end (ReactJS) and a serverless \
back-end (Node JS and AWS).\n\nReactJS is a JavaScript (JS) library widely \
used to make single page applications (SPAs).   \[OpenCurlyQuote]Hooks\
\[CloseCurlyQuote] were introduced in the recently released version 16.8 \
(https://reactjs.org/docs/hooks-intro.html).  Using hooks allows React \
developers to ",
 StyleBox["write JS applications using 100% functional methods",
  FontSlant->"Italic"],
 " - eliminating the need for JS classes.  There are many advantages to this \
new capability and we will focus on the implications for APIs between React \
and the Wolfram Cloud (WC) and between AWS and WC.\n\nWe will show JS and JSX \
(https://reactjs.org/docs/introducing-jsx.html) with respect to how the API \
requests (req) and responses (res) are managed.  The JS browser app is a bear \
bones deployment with minimal styling and organization considerations.  \n\n\
We will iterate from the simplest possible API (that I can think of) to ever \
more complex patterns.  There are JS and React considerations that impact the \
WC side of the API.  A number of these considerations will be presented, \
discussed and dealt with.  In every instance the goal is to produce \
Mathematica side code that is simultaneously used for presentation in a \
browser and analytical use is Mathematica. \n\nSome requests and \
considerations:\n- You will see the URL I use (my WC account) and API \
end-points I am using.  I've made these public for these live coding \
sessions.  It's ok during the live coding session to use my APIs if you can't \
make yours work, but please setup your own WC account, make your own APIs and \
use them.\n\nThe general development pattern:\n1.0) Three parts to \
APIFunction[...]:\n\t1.1) inputs\n\t1.2) functions\n\t1.3) output format\n\
2.0) Test by passing an association of API inputs <|key -> value, ...|>\n3.0) \
Two\[CloseCurlyQuote]ish parts to CloudDeploy[...]:\n\t3.1) the api function \
(1 above)\n\t3.2) options:\n\t\t3.2.1) the path and api name\n\t\t3.2.2) \
permissions\n4.0) Test:\n\t4.1) to a browser with StartWebSession[...] and \
WebExecute[...]\n\t4.2) to postman\n5.0) Connect to:\n\t5.1) front-end \
(React)\n\t5.2) backend (Node)\n\t\t5.2.1) test serverless api between AWS \
(via Node) and WC \n\nHere are a couple web sites that are built on this \
pattern where the front-end is a Single Page Application (SPA) using React, \
the back-end is serverless and built on NodeJS - AWS, and everything \
computational is done with Wolfram (Wolfram Cloud):\n\t- \
https://www.aitoconsulting.org/options-pub\n\t- \
https://www.christyhealth.org/ "
}], "Text",
 CellChangeTimes->{{3.7638925113235245`*^9, 3.763892602952525*^9}, {
   3.7638926449898577`*^9, 3.763892679550857*^9}, {3.7638927610188594`*^9, 
   3.763892870950164*^9}, {3.763892919391177*^9, 3.7638929197561655`*^9}, {
   3.763892955061165*^9, 3.7638929800851707`*^9}, {3.763893021724162*^9, 
   3.7638930466791625`*^9}, {3.763893083743539*^9, 3.763893241971854*^9}, {
   3.763893325857852*^9, 3.7638933827108536`*^9}, {3.763893503539854*^9, 
   3.763893729315853*^9}, {3.7638937626608524`*^9, 3.763893772730853*^9}, {
   3.763893813032853*^9, 3.763893829265854*^9}, {3.763893938532851*^9, 
   3.763894148194852*^9}, {3.7638942514368525`*^9, 3.7638943385438538`*^9}, {
   3.763901766635436*^9, 3.7639019780990415`*^9}, {3.763902013962042*^9, 
   3.763902198031045*^9}, {3.7647564315139456`*^9, 3.764756431692975*^9}, {
   3.764756465136969*^9, 3.7647565251609664`*^9}, {3.7647566636861153`*^9, 
   3.764756769370118*^9}, {3.7647568109481173`*^9, 3.764756823416159*^9}, {
   3.764756881883115*^9, 3.7647568877021427`*^9}, {3.7647569634591217`*^9, 
   3.7647570924251404`*^9}, {3.76475766166391*^9, 3.7647576621639104`*^9}, {
   3.764757730854865*^9, 3.7647577487108665`*^9}, {3.7647577840658665`*^9, 
   3.7647579290088663`*^9}, {3.764757988805909*^9, 3.7647580408408937`*^9}, {
   3.7649622307181253`*^9, 3.7649622315621276`*^9}, {3.7649626531221275`*^9, 
   3.7649626773441277`*^9}, {3.772993077615311*^9, 3.7729931022412853`*^9}, {
   3.7729935878615055`*^9, 3.77299362437051*^9}, {3.7729936643474936`*^9, 
   3.7729936649064684`*^9}, {3.7729937384994183`*^9, 3.772993739050414*^9}, {
   3.7729937745017257`*^9, 3.772993794516692*^9}, {3.7729938280945597`*^9, 
   3.7729938590646877`*^9}, {3.7729939121487713`*^9, 3.772993943128764*^9}, {
   3.7729939959827538`*^9, 3.7729940407840967`*^9}, {3.772994093559266*^9, 
   3.772994160221322*^9}, {3.77299464254669*^9, 3.7729946757376604`*^9}, {
   3.7729947195446897`*^9, 3.772994853649682*^9}, {3.772994884498707*^9, 
   3.7729951249580517`*^9}, {3.7730641663149085`*^9, 
   3.7730644514901915`*^9}, {3.773232313741212*^9, 3.7732324943412533`*^9}, 
   3.773232538264116*^9},ExpressionUUID->"4ffdfe0e-774a-401d-ba25-\
ab0a9cd91077"]
}, Open  ]],

Cell[CellGroupData[{

Cell["API-1) A random integer", "Chapter",
 CellChangeTimes->{{3.7638903241703033`*^9, 3.763890345648301*^9}, {
  3.763920750380166*^9, 3.763920777375168*^9}, {3.76397758892791*^9, 
  3.7639776129499083`*^9}, {3.7649631764271154`*^9, 3.7649631917430525`*^9}, {
  3.76599497419532*^9, 
  3.765994974354337*^9}},ExpressionUUID->"86744b33-baa5-45d9-b76f-\
1d1f2b2ef393"],

Cell[CellGroupData[{

Cell["1.1) Passing no arguments", "Subchapter",
 CellChangeTimes->{{3.7649632001230555`*^9, 3.764963200415079*^9}, {
  3.7649637507377095`*^9, 
  3.7649637826186466`*^9}},ExpressionUUID->"5a03c004-b612-416b-9689-\
9f11d88acc72"],

Cell["\<\
The first API function takes no arguments.  This case is used when the URL \
endpoint is sufficient for kicking off the WL function.  It means there is no \
UI input requirement.\
\>", "Text",
 CellChangeTimes->{{3.763981780369082*^9, 3.763981835552082*^9}, {
  3.7649631241321545`*^9, 3.7649631411111703`*^9}, {3.7649632235590506`*^9, 
  3.7649632237210503`*^9}, {3.765100793071695*^9, 3.765100794283702*^9}, {
  3.765100834613697*^9, 3.7651009288056993`*^9}, {3.7651010641736917`*^9, 
  3.765101090691696*^9}, {3.7659948093983493`*^9, 
  3.7659948113723*^9}},ExpressionUUID->"5fc7426e-e81f-4699-873a-9a91806ac32f"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"ClearAll", "[", "api", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"api", "=", " ", 
    RowBox[{"APIFunction", "[", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{" ", "1.1", ")"}], " ", "inputs"}], " ", "&"}], " ", 
       "interpreters"}], " ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{" ", "1.2", ")"}], " ", "function"}], " ", "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{
         RowBox[{"RandomInteger", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "10"}], ",", "10"}], "}"}], "]"}], "&"}], ","}], 
       "*)"}], "\[IndentingNewLine]", 
      RowBox[{"Function", "[", "\[IndentingNewLine]", 
       RowBox[{"RandomInteger", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "10"}], ",", "10"}], "}"}], "]"}], 
       "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{" ", "1.3", ")"}], " ", "output", " ", "format"}], " ", 
       "*)"}], "\[IndentingNewLine]", " ", "\"\<JSON\>\""}], 
     "\[IndentingNewLine]", "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"api", "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"2.0", " ", "test", " ", "api"}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"api", "[", 
  RowBox[{"<|", "|>"}], "]"}]}], "Input",
 CellChangeTimes->{{3.763901121307186*^9, 3.763901256902187*^9}, {
   3.763916236533563*^9, 3.7639162926155634`*^9}, {3.763919066994918*^9, 
   3.7639190671439037`*^9}, 3.7639845794641066`*^9, {3.7649633240126247`*^9, 
   3.7649633482456603`*^9}, {3.7649634414730606`*^9, 3.764963447238737*^9}, {
   3.7649636340227394`*^9, 3.764963668359709*^9}, 3.7649648706042633`*^9, {
   3.765100447290723*^9, 3.7651004768817244`*^9}, {3.765995149293326*^9, 
   3.765995211139327*^9}, 3.7659952496902933`*^9, {3.7659954108153114`*^9, 
   3.765995429756359*^9}, {3.7729952140270405`*^9, 3.772995221547048*^9}, {
   3.7729952529110684`*^9, 3.77299525300904*^9}, {3.772995283385069*^9, 
   3.7729952835860744`*^9}, 3.772995320398079*^9, {3.7729953754680767`*^9, 
   3.772995386483082*^9}},
 CellLabel->"In[2]:=",ExpressionUUID->"0397b080-569b-4355-80de-cd7f4f7d1f5a"],

Cell[BoxData[
 RowBox[{"APIFunction", "[", 
  RowBox[{
   RowBox[{"{", "}"}], ",", 
   RowBox[{
    RowBox[{"RandomInteger", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "10"}], ",", "10"}], "}"}], "]"}], "&"}], 
   ",", "\<\"JSON\"\>"}], "]"}]], "Output",
 CellChangeTimes->{
  3.764963394642662*^9, 3.7649634484257283`*^9, {3.7649636366257005`*^9, 
   3.7649636691337347`*^9}, 3.764964891021227*^9, 3.7649677072340317`*^9, 
   3.765100272943754*^9, {3.765100461220722*^9, 3.765100499644873*^9}, 
   3.765995214601307*^9, {3.7659954124033227`*^9, 3.765995433660327*^9}, {
   3.7729952315140467`*^9, 3.772995238706077*^9}, {3.772995296884079*^9, 
   3.7729953209670677`*^9}, 3.773075960451565*^9, 3.773232599561121*^9},
 CellLabel->"Out[4]=",ExpressionUUID->"36917922-5031-4882-b7ef-e86bcbfae80f"],

Cell[BoxData[
 RowBox[{"-", "9"}]], "Output",
 CellChangeTimes->{
  3.764963394642662*^9, 3.7649634484257283`*^9, {3.7649636366257005`*^9, 
   3.7649636691337347`*^9}, 3.764964891021227*^9, 3.7649677072340317`*^9, 
   3.765100272943754*^9, {3.765100461220722*^9, 3.765100499644873*^9}, 
   3.765995214601307*^9, {3.7659954124033227`*^9, 3.765995433660327*^9}, {
   3.7729952315140467`*^9, 3.772995238706077*^9}, {3.772995296884079*^9, 
   3.7729953209670677`*^9}, 3.773075960451565*^9, 3.7732326016111193`*^9},
 CellLabel->"Out[5]=",ExpressionUUID->"7b817612-754b-4b25-ba0c-e140e9ad9035"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"ClearAll", "[", "cd", "]"}], "\[IndentingNewLine]", 
 RowBox[{"cd", "=", 
  RowBox[{"CloudDeploy", "[", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"3.1", " ", "api", " ", "function"}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{"api", ",", "\[IndentingNewLine]", 
    RowBox[{"(*", " ", 
     RowBox[{
     "3.2", " ", "url", " ", "path", " ", "and", " ", "end", " ", "point", 
      " ", "name"}], " ", "*)"}], "\[IndentingNewLine]", 
    "\"\</live-coding/random-integer/\>\"", ",", "\[IndentingNewLine]", 
    RowBox[{"Permissions", "\[Rule]", "\"\<Public\>\""}]}], 
   "\[IndentingNewLine]", "]"}]}]}], "Input",
 CellChangeTimes->{{3.763901121307186*^9, 3.7639012201341887`*^9}, {
  3.7649633623816247`*^9, 3.7649633839976244`*^9}, {3.7729952586860857`*^9, 
  3.772995278872053*^9}, {3.772995401418043*^9, 3.772995446220129*^9}},
 CellLabel->"In[6]:=",ExpressionUUID->"5d008666-8d22-466f-a42e-c110beadb02e"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"CloudObject", "[", 
   TemplateBox[{
    "\"https://www.wolframcloud.com/obj/mitch/live-coding/random-integer\"",
     "https://www.wolframcloud.com/obj/mitch/live-coding/random-integer"},
    "HyperlinkURL"], "]"}],
  CloudObject[
  "https://www.wolframcloud.com/obj/mitch/live-coding/random-integer"],
  SelectWithContents->True]], "Output",
 CellChangeTimes->{3.7649634027076597`*^9, 3.764963677175733*^9, 
  3.764964895315258*^9, 3.764967715144039*^9, 3.7651005247879095`*^9, 
  3.7659955068784747`*^9, 3.7729953401910768`*^9, 3.7729954537541103`*^9, 
  3.7730759656066003`*^9, 3.773232604609148*^9},
 CellLabel->"Out[7]=",ExpressionUUID->"939516c4-6fd7-4b5c-994b-9460829496cc"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"ClearAll", "[", 
  RowBox[{"url", ",", "session"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"url", "=", 
  RowBox[{"URLBuild", "[", 
   RowBox[{"cd", ",", 
    RowBox[{"<|", "|>"}]}], "]"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"session", "=", 
    RowBox[{"StartWebSession", "[", "\"\<Chrome\>\"", "]"}]}], ";"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", "4.1", " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"WebExecute", "[", 
   RowBox[{"session", ",", 
    RowBox[{"{", 
     RowBox[{"\"\<OpenPage\>\"", "\[Rule]", "url"}], "}"}]}], "]"}], 
  ";"}]}], "Input",
 CellChangeTimes->{
  3.764964887146223*^9, {3.772995261546049*^9, 3.772995293247046*^9}, {
   3.772995498557371*^9, 3.7729955036403666`*^9}},
 CellLabel->"In[8]:=",ExpressionUUID->"6bac3849-9196-4af7-9098-712a31beffd5"],

Cell[BoxData["\<\"https://www.wolframcloud.com/obj/mitch/live-coding/random-\
integer\"\>"], "Output",
 CellChangeTimes->{3.7649648965682526`*^9, 3.7649677169070024`*^9, 
  3.7651005265369062`*^9, 3.765100557457695*^9, 3.765995509373418*^9, 
  3.7729955096433535`*^9, 3.7730759667955723`*^9, 3.7730766714491377`*^9, 
  3.7732326051121445`*^9},
 CellLabel->"Out[9]=",ExpressionUUID->"fe01b8c9-9cf6-4e27-ab2c-589a7916b3f9"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["1.2) Passing arguments", "Subchapter",
 CellChangeTimes->{{3.7649632001230555`*^9, 3.7649632123330564`*^9}, {
  3.7649637746056833`*^9, 
  3.764963785873648*^9}},ExpressionUUID->"111288b6-6a59-4ccc-b4c8-\
566f3395ae15"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"ClearAll", "[", "api", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"api", "=", " ", 
    RowBox[{"APIFunction", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"\"\<x\>\"", "\[Rule]", 
         RowBox[{"Interpreter", "[", "\"\<Integer\>\"", "]"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"\"\<y\>\"", "\[Rule]", 
         RowBox[{"Interpreter", "[", "\"\<Integer\>\"", "]"}]}]}], 
       "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{"Function", "[", "\[IndentingNewLine]", 
       RowBox[{"RandomInteger", "[", 
        RowBox[{"{", 
         RowBox[{"#x", ",", "#y"}], "}"}], "]"}], "\[IndentingNewLine]", 
       "]"}], ",", "\[IndentingNewLine]", " ", "\"\<JSON\>\""}], 
     "\[IndentingNewLine]", "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"api", "[", 
  RowBox[{"<|", 
   RowBox[{
    RowBox[{"\"\<x\>\"", "\[Rule]", 
     RowBox[{"-", "10"}]}], ",", 
    RowBox[{"\"\<y\>\"", "\[Rule]", "10"}]}], "|>"}], "]"}]}], "Input",
 CellChangeTimes->{{3.763901121307186*^9, 3.763901256902187*^9}, {
   3.763916236533563*^9, 3.7639162926155634`*^9}, {3.763919066994918*^9, 
   3.7639190671439037`*^9}, 3.7639845794641066`*^9, {3.7649648568242207`*^9, 
   3.7649648640992455`*^9}, {3.7651012691799736`*^9, 
   3.7651013011729727`*^9}, {3.7651013540659714`*^9, 3.765101354827973*^9}, {
   3.7651028527948976`*^9, 3.765102861122898*^9}, {3.7651072184152927`*^9, 
   3.765107223281315*^9}, {3.7651073708892927`*^9, 3.765107380546299*^9}, {
   3.765107585625296*^9, 3.765107600034295*^9}, {3.7651076420952945`*^9, 
   3.7651077115402946`*^9}, {3.765107767870296*^9, 3.7651077944532948`*^9}, {
   3.7651079524620886`*^9, 3.765107974766073*^9}, {3.7651080420290756`*^9, 
   3.765108055522079*^9}, {3.772995594649849*^9, 3.772995594847872*^9}},
 CellLabel->"In[12]:=",ExpressionUUID->"ea932a15-364e-40a1-a534-769f6e452494"],

Cell[BoxData[
 RowBox[{"-", "10"}]], "Output",
 CellChangeTimes->{{3.763901237139187*^9, 3.7639012633511868`*^9}, {
   3.7639162948865633`*^9, 3.763916300635563*^9}, {3.7639190692039037`*^9, 
   3.7639190763179235`*^9}, 3.76496380115366*^9, 3.7649642062882004`*^9, 
   3.7649642581365547`*^9, 3.7649677320479813`*^9, {3.765101262699973*^9, 
   3.7651013021469707`*^9}, 3.765101355603971*^9, 3.7651072240252943`*^9, 
   3.7651073814193134`*^9, 3.7651076008462944`*^9, {3.765107695847299*^9, 
   3.7651077133802943`*^9}, 3.765107796160296*^9, {3.765107956818108*^9, 
   3.7651079761970735`*^9}, {3.765108044621073*^9, 3.765108056123072*^9}, 
   3.7651082171857705`*^9, 3.7659956960487895`*^9, 3.772995599789873*^9, 
   3.773075976914976*^9, 3.7732326183161945`*^9},
 CellLabel->"Out[14]=",ExpressionUUID->"907cf795-83c5-4f9e-b837-af734e1ba9a7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"ClearAll", "[", "cd", "]"}], "\[IndentingNewLine]", 
 RowBox[{"cd", "=", 
  RowBox[{"CloudDeploy", "[", "\[IndentingNewLine]", 
   RowBox[{
   "api", ",", "\[IndentingNewLine]", 
    "\"\</live-coding/random-integer-range/\>\"", ",", "\[IndentingNewLine]", 
    RowBox[{"Permissions", "\[Rule]", "\"\<Public\>\""}]}], 
   "\[IndentingNewLine]", "]"}]}]}], "Input",
 CellChangeTimes->{{3.763901121307186*^9, 3.7639012201341887`*^9}, {
  3.7649633623816247`*^9, 3.764963363470626*^9}, {3.7729955691699467`*^9, 
  3.7729955793693886`*^9}},
 CellLabel->"In[15]:=",ExpressionUUID->"d8dcba96-bb01-4cfe-b394-6fb768ada10d"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"CloudObject", "[", 
   TemplateBox[{
    "\"https://www.wolframcloud.com/obj/mitch/live-coding/random-integer-\
range\"","https://www.wolframcloud.com/obj/mitch/live-coding/random-integer-\
range"},
    "HyperlinkURL"], "]"}],
  CloudObject[
  "https://www.wolframcloud.com/obj/mitch/live-coding/random-integer-range"],
  SelectWithContents->True]], "Output",
 CellChangeTimes->{3.7639012678211875`*^9, 3.7639163103045645`*^9, 
  3.764964208507205*^9, 3.76496425975456*^9, 3.7649677334379854`*^9, 
  3.7651013613649735`*^9, 3.765108062310072*^9, 3.7651082186227865`*^9, 
  3.7659956984387903`*^9, 3.77299560802787*^9, 3.773075977983946*^9, 
  3.7732326194522123`*^9},
 CellLabel->"Out[16]=",ExpressionUUID->"257ac60e-57a8-4e82-bf2f-d1d553b59e11"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"ClearAll", "[", 
  RowBox[{"url", ",", "session"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"url", "=", 
  RowBox[{"URLBuild", "[", 
   RowBox[{"cd", ",", 
    RowBox[{"<|", 
     RowBox[{
      RowBox[{"\"\<x\>\"", "\[Rule]", 
       RowBox[{"-", "10"}]}], ",", 
      RowBox[{"\"\<y\>\"", "\[Rule]", "10"}]}], "|>"}]}], "]"}]}], "\n", 
 RowBox[{
  RowBox[{"session", "=", 
   RowBox[{"StartWebSession", "[", "\"\<Chrome\>\"", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"WebExecute", "[", 
   RowBox[{"session", ",", 
    RowBox[{"{", 
     RowBox[{"\"\<OpenPage\>\"", "\[Rule]", "url"}], "}"}]}], "]"}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.7649641023121696`*^9, 3.764964157926174*^9}, {
  3.7649642012452173`*^9, 3.7649642141841803`*^9}, {3.764964307855609*^9, 
  3.7649643178974476`*^9}, {3.764964536098332*^9, 3.7649645461833124`*^9}, {
  3.7649647543484306`*^9, 3.7649647915204725`*^9}, {3.765107199362294*^9, 
  3.7651072138173027`*^9}, {3.7729955845858493`*^9, 3.772995589046815*^9}, {
  3.772995629206936*^9, 3.772995629461942*^9}},
 CellLabel->"In[17]:=",ExpressionUUID->"bafa1c37-177d-4dd1-84d5-cc3b3111840b"],

Cell[BoxData["\<\"https://www.wolframcloud.com/obj/mitch/live-coding/random-\
integer-range?x=-10&y=10\"\>"], "Output",
 CellChangeTimes->{
  3.765108063570072*^9, 3.765108221735769*^9, 3.7659957026888247`*^9, {
   3.772995612660842*^9, 3.7729956305908957`*^9}, 3.7730759794719524`*^9, 
   3.7732326215152116`*^9},
 CellLabel->"Out[18]=",ExpressionUUID->"329ce5f3-91a5-4dc0-8f0b-721046a3053a"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Handling API Failures", "Subsubsection",
 CellChangeTimes->{{3.7651080266390724`*^9, 3.765108034834078*^9}, 
   3.765108084965769*^9, {3.765996059198262*^9, 
   3.7659960654513273`*^9}},ExpressionUUID->"3ea8b4d3-6d47-4130-a979-\
f607f1e2dc4d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"api", "[", 
  RowBox[{"<|", 
   RowBox[{
    RowBox[{"\"\<x\>\"", "\[Rule]", 
     RowBox[{"-", "10.5"}]}], ",", 
    RowBox[{"\"\<y\>\"", "\[Rule]", "10.5"}]}], "|>"}], "]"}]], "Input",
 CellChangeTimes->{{3.7651081051407757`*^9, 3.7651081091847787`*^9}},
 CellLabel->"In[21]:=",ExpressionUUID->"3e4a9b63-59e3-4890-a431-005fb2e03387"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["Failure",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    TemplateBox[{PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource[
               "FEBitmaps", "SquarePlusIconMedium"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              Evaluator -> Automatic, Method -> "Preemptive"], 
             Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 3.5 CurrentValue["FontCapHeight"]/
                AbsoluteCurrentValue[Magnification]}]], 
            FrameBox[
             StyleBox["\"\[WarningSign]\"", 
              Directive["Message", 35], StripOnInput -> False], 
             ContentPadding -> False, FrameStyle -> None, 
             FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
            GridBox[{{
               TagBox[
                GridBox[{{
                   TagBox["\"Message: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                   "\"The API could not be evaluated because the following \
fields contain failures: \\\"x\\\", \\\"y\\\".\"", "SummaryItem"]}}, 
                 GridBoxItemSize -> {"Columns" -> {6.5, All}}, 
                 GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                 GridBoxSpacings -> {"Columns" -> {{0}}}], "SummaryItem"]}, {
               TagBox[
                GridBox[{{
                   TagBox["\"Tag: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"ValidationFailure\"", "SummaryItem"]}}, 
                 GridBoxItemSize -> {"Columns" -> {6.5, All}}, 
                 GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                 GridBoxSpacings -> {"Columns" -> {{0}}}], "SummaryItem"]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource[
               "FEBitmaps", "SquareMinusIconMedium"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              Evaluator -> Automatic, Method -> "Preemptive"], 
             Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 3.5 CurrentValue["FontCapHeight"]/
                AbsoluteCurrentValue[Magnification]}]], 
            FrameBox[
             StyleBox["\"\[WarningSign]\"", 
              Directive["Message", 35], StripOnInput -> False], 
             ContentPadding -> False, FrameStyle -> None, 
             FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
            GridBox[{{
               TagBox[
                GridBox[{{
                   TagBox["\"Message: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                   "\"The API could not be evaluated because the following \
fields contain failures: \\\"x\\\", \\\"y\\\".\"", "SummaryItem"]}}, 
                 GridBoxItemSize -> {"Columns" -> {6.5, All}}, 
                 GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                 GridBoxSpacings -> {"Columns" -> {{0}}}], "SummaryItem"]}, {
               TagBox[
                GridBox[{{
                   TagBox["\"Tag: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"ValidationFailure\"", "SummaryItem"]}}, 
                 GridBoxItemSize -> {"Columns" -> {6.5, All}}, 
                 GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                 GridBoxSpacings -> {"Columns" -> {{0}}}], "SummaryItem"]}, {
               RowBox[{
                 TagBox[
                  TemplateBox[{"\"Parameters\"", "\": \""}, "RowDefault"], 
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox[
                  TagBox[
                   RowBox[{"\[LeftAssociation]", 
                    RowBox[{
                    RowBox[{"\"x\"", "\[Rule]", 
                    InterpretationBox[
                    RowBox[{
                    TagBox["Failure", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{
                    Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    FrameBox[
                    StyleBox["\"\[WarningSign]\"", 
                    Directive["Message", 35], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    TagBox["\"Message: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Enter a valid number.\"", "SummaryItem"]}}, 
                    GridBoxItemSize -> {"Columns" -> {6.5, All}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0}}}], 
                    "SummaryItem"]}, {
                    TagBox[
                    GridBox[{{
                    TagBox["\"Tag: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"RestrictionFailure\"", "SummaryItem"]}}, 
                    GridBoxItemSize -> {"Columns" -> {6.5, All}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0}}}], 
                    "SummaryItem"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    FrameBox[
                    StyleBox["\"\[WarningSign]\"", 
                    Directive["Message", 35], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    TagBox["\"Message: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Enter a valid number.\"", "SummaryItem"]}}, 
                    GridBoxItemSize -> {"Columns" -> {6.5, All}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0}}}], 
                    "SummaryItem"]}, {
                    TagBox[
                    GridBox[{{
                    TagBox["\"Tag: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"RestrictionFailure\"", "SummaryItem"]}}, 
                    GridBoxItemSize -> {"Columns" -> {6.5, All}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0}}}], 
                    "SummaryItem"]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Input\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    TagBox[
                    RowBox[{"-", "10.5`"}], HoldForm], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Type\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    TagBox["\"Integer\"", HoldForm], "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}], 
                    Failure["RestrictionFailure", 
                    Association[
                    "MessageTemplate" :> MessageName[Interpreter, "number"], 
                    "MessageParameters" -> Association["Input" -> -10.5], 
                    "Input" -> -10.5, "Type" -> "Integer"]], Selectable -> 
                    False, Editable -> False, SelectWithContents -> True]}], 
                    ",", 
                    RowBox[{"\"y\"", "\[Rule]", 
                    InterpretationBox[
                    RowBox[{
                    TagBox["Failure", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{
                    Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    FrameBox[
                    StyleBox["\"\[WarningSign]\"", 
                    Directive["Message", 35], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    TagBox["\"Message: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Enter a valid number.\"", "SummaryItem"]}}, 
                    GridBoxItemSize -> {"Columns" -> {6.5, All}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0}}}], 
                    "SummaryItem"]}, {
                    TagBox[
                    GridBox[{{
                    TagBox["\"Tag: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"RestrictionFailure\"", "SummaryItem"]}}, 
                    GridBoxItemSize -> {"Columns" -> {6.5, All}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0}}}], 
                    "SummaryItem"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    FrameBox[
                    StyleBox["\"\[WarningSign]\"", 
                    Directive["Message", 35], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    TagBox["\"Message: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Enter a valid number.\"", "SummaryItem"]}}, 
                    GridBoxItemSize -> {"Columns" -> {6.5, All}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0}}}], 
                    "SummaryItem"]}, {
                    TagBox[
                    GridBox[{{
                    TagBox["\"Tag: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"RestrictionFailure\"", "SummaryItem"]}}, 
                    GridBoxItemSize -> {"Columns" -> {6.5, All}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0}}}], 
                    "SummaryItem"]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Input\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    TagBox["10.5`", HoldForm], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Type\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    TagBox["\"Integer\"", HoldForm], "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}], 
                    Failure["RestrictionFailure", 
                    Association[
                    "MessageTemplate" :> MessageName[Interpreter, "number"], 
                    "MessageParameters" -> Association["Input" -> 10.5], 
                    "Input" -> 10.5, "Type" -> "Integer"]], Selectable -> 
                    False, Editable -> False, SelectWithContents -> True]}]}],
                     "\[RightAssociation]"}], HoldForm], "SummaryItem"]}]}, {
               RowBox[{
                 TagBox[
                  TemplateBox[{"\"FormObject\"", "\": \""}, "RowDefault"], 
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox[
                  TagBox[
                   InterpretationBox[
                    TagBox[
                    GridBox[{{
                    ItemBox[
                    TagBox[
                    StyleBox["\"x\"", "FormLabel", StripOnInput -> False], 
                    Annotation[#, "x", "HTMLLabel"]& ], Alignment -> Right, 
                    StripOnInput -> False], 
                    TagBox[
                    TagBox[
                    DynamicModuleBox[{Typeset`i$$ = "-10.5"}, 
                    InputFieldBox[
                    Dynamic[Typeset`i$$], String, FieldHint -> Null, 
                    DefaultBaseStyle -> "FormField", DefaultFieldHintStyle -> 
                    "FormFieldHint", FieldMasked -> False, Enabled -> 
                    Automatic], DynamicModuleValues -> Automatic], InputField[
                    Setting[#], String, FieldHint -> Null, DefaultBaseStyle -> 
                    "FormField", DefaultFieldHintStyle -> "FormFieldHint", 
                    FieldMasked -> False, Enabled -> Automatic]& ], 
                    Annotation[#, {
                    "x", "data-field-name" -> "Integer", "data-field-type" -> 
                    "Structured", "data-field-verbose" -> "integer number"}, 
                    "HTMLControl"]& ]}, {"\"\"", 
                    StyleBox[
                    TagBox[
                    "\"Enter a valid number.\"", 
                    Annotation[#, {"p", "class" -> "help-block help-error"}, 
                    "HTMLAttrs"]& ], "FormFailure", StripOnInput -> False]}, {
                    ItemBox[
                    TagBox[
                    StyleBox["\"y\"", "FormLabel", StripOnInput -> False], 
                    Annotation[#, "y", "HTMLLabel"]& ], Alignment -> Right, 
                    StripOnInput -> False], 
                    TagBox[
                    TagBox[
                    DynamicModuleBox[{Typeset`i$$ = "10.5"}, 
                    InputFieldBox[
                    Dynamic[Typeset`i$$], String, FieldHint -> Null, 
                    DefaultBaseStyle -> "FormField", DefaultFieldHintStyle -> 
                    "FormFieldHint", FieldMasked -> False, Enabled -> 
                    Automatic], DynamicModuleValues -> Automatic], InputField[
                    Setting[#], String, FieldHint -> Null, DefaultBaseStyle -> 
                    "FormField", DefaultFieldHintStyle -> "FormFieldHint", 
                    FieldMasked -> False, Enabled -> Automatic]& ], 
                    Annotation[#, {
                    "y", "data-field-name" -> "Integer", "data-field-type" -> 
                    "Structured", "data-field-verbose" -> "integer number"}, 
                    "HTMLControl"]& ]}, {"\"\"", 
                    StyleBox[
                    TagBox[
                    "\"Enter a valid number.\"", 
                    Annotation[#, {"p", "class" -> "help-block help-error"}, 
                    "HTMLAttrs"]& ], "FormFailure", StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    "ControlStyle", ShowStringCharacters -> False}], "Grid"], 
                    FormObject[
                    Association[
                    "x" -> Association[
                    "Disambiguation" -> None, "Interpreter" -> "Integer", 
                    "Input" -> -10.5], "y" -> 
                    Association[
                    "Disambiguation" -> None, "Interpreter" -> "Integer", 
                    "Input" -> 10.5]], 
                    Association["x" -> Failure["RestrictionFailure", 
                    Association[
                    "MessageTemplate" :> MessageName[Interpreter, "number"], 
                    "MessageParameters" -> Association["Input" -> -10.5], 
                    "Input" -> -10.5, "Type" -> "Integer"]], "y" -> 
                    Failure["RestrictionFailure", 
                    Association[
                    "MessageTemplate" :> MessageName[Interpreter, "number"], 
                    "MessageParameters" -> Association["Input" -> 10.5], 
                    "Input" -> 10.5, "Type" -> "Integer"]]]]], HoldForm], 
                  "SummaryItem"]}]}, {
               RowBox[{
                 TagBox[
                  TemplateBox[{"\"Fields\"", "\": \""}, "RowDefault"], 
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox[
                  TagBox[
                   RowBox[{"\[LeftAssociation]", 
                    RowBox[{
                    RowBox[{"\"x\"", "\[Rule]", 
                    RowBox[{"\[LeftAssociation]", 
                    RowBox[{
                    RowBox[{"\"AllowedExtensions\"", "\[Rule]", 
                    RowBox[{"{", "\"json\"", "}"}]}], ",", 
                    RowBox[{"\"AutoSubmitting\"", "\[Rule]", "False"}], ",", 
                    RowBox[{"\"CodeLanguage\"", "\[Rule]", "Automatic"}], ",", 
                    RowBox[{"\"Default\"", "\[Rule]", 
                    RowBox[{"Missing", "[", "\"NoInput\"", "]"}]}], ",", 
                    RowBox[{"\"Enabled\"", "\[Rule]", "True"}], ",", 
                    RowBox[{"\"Failure\"", "\[Rule]", 
                    TagBox[
                    "\"Enter a valid number.\"", 
                    Annotation[#, {"p", "class" -> "help-block help-error"}, 
                    "HTMLAttrs"]& ]}], ",", 
                    RowBox[{"\"Help\"", "\[Rule]", "None"}], ",", 
                    RowBox[{"\"Hidden\"", "\[Rule]", "False"}], ",", 
                    RowBox[{"\"Hint\"", "\[Rule]", "Null"}], ",", 
                    RowBox[{"\"Input\"", "\[Rule]", 
                    RowBox[{"-", "10.5`"}]}], ",", 
                    RowBox[{"\"Interpreter\"", "\[Rule]", "\"Integer\""}], 
                    ",", 
                    RowBox[{"\"Label\"", "\[Rule]", 
                    TagBox["\"x\"", Annotation[#, "x", "HTMLLabel"]& ]}], ",", 
                    RowBox[{"\"Required\"", "\[Rule]", "True"}], ",", 
                    RowBox[{"\"Type\"", "\[Rule]", "\"Element\""}]}], 
                    "\[RightAssociation]"}]}], ",", 
                    RowBox[{"\"y\"", "\[Rule]", 
                    RowBox[{"\[LeftAssociation]", 
                    RowBox[{
                    RowBox[{"\"AllowedExtensions\"", "\[Rule]", 
                    RowBox[{"{", "\"json\"", "}"}]}], ",", 
                    RowBox[{"\"AutoSubmitting\"", "\[Rule]", "False"}], ",", 
                    RowBox[{"\"CodeLanguage\"", "\[Rule]", "Automatic"}], ",", 
                    RowBox[{"\"Default\"", "\[Rule]", 
                    RowBox[{"Missing", "[", "\"NoInput\"", "]"}]}], ",", 
                    RowBox[{"\"Enabled\"", "\[Rule]", "True"}], ",", 
                    RowBox[{"\"Failure\"", "\[Rule]", 
                    TagBox[
                    "\"Enter a valid number.\"", 
                    Annotation[#, {"p", "class" -> "help-block help-error"}, 
                    "HTMLAttrs"]& ]}], ",", 
                    RowBox[{"\"Help\"", "\[Rule]", "None"}], ",", 
                    RowBox[{"\"Hidden\"", "\[Rule]", "False"}], ",", 
                    RowBox[{"\"Hint\"", "\[Rule]", "Null"}], ",", 
                    RowBox[{"\"Input\"", "\[Rule]", "10.5`"}], ",", 
                    RowBox[{"\"Interpreter\"", "\[Rule]", "\"Integer\""}], 
                    ",", 
                    RowBox[{"\"Label\"", "\[Rule]", 
                    TagBox["\"y\"", Annotation[#, "y", "HTMLLabel"]& ]}], ",", 
                    RowBox[{"\"Required\"", "\[Rule]", "True"}], ",", 
                    RowBox[{"\"Type\"", "\[Rule]", "\"Element\""}]}], 
                    "\[RightAssociation]"}]}]}], "\[RightAssociation]"}], 
                   HoldForm], "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  Failure["ValidationFailure", 
   Association[
   "MessageTemplate" :> MessageName[APIFunction, "failurefields"], 
    "Parameters" -> Association["x" -> Failure["RestrictionFailure", 
        Association[
        "MessageTemplate" :> MessageName[Interpreter, "number"], 
         "MessageParameters" -> Association["Input" -> -10.5], 
         "Input" -> -10.5, "Type" -> "Integer"]], "y" -> 
      Failure["RestrictionFailure", 
        Association[
        "MessageTemplate" :> MessageName[Interpreter, "number"], 
         "MessageParameters" -> Association["Input" -> 10.5], "Input" -> 10.5,
          "Type" -> "Integer"]]], "FormObject" -> FormObject[
      Association[
      "x" -> Association[
        "Disambiguation" -> None, "Interpreter" -> "Integer", 
         "Input" -> -10.5], "y" -> 
       Association[
        "Disambiguation" -> None, "Interpreter" -> "Integer", "Input" -> 
         10.5]], 
      Association["x" -> Failure["RestrictionFailure", 
         Association[
         "MessageTemplate" :> MessageName[Interpreter, "number"], 
          "MessageParameters" -> Association["Input" -> -10.5], 
          "Input" -> -10.5, "Type" -> "Integer"]], "y" -> 
       Failure["RestrictionFailure", 
         Association[
         "MessageTemplate" :> MessageName[Interpreter, "number"], 
          "MessageParameters" -> Association["Input" -> 10.5], "Input" -> 
          10.5, "Type" -> "Integer"]]]], "Fields" -> 
    Association[
     "x" -> Association[
       "AllowedExtensions" -> {"json"}, "AutoSubmitting" -> False, 
        "CodeLanguage" -> Automatic, "Default" -> Missing["NoInput"], 
        "Enabled" -> True, "Failure" -> 
        Annotation[
         "Enter a valid number.", {"p", "class" -> "help-block help-error"}, 
          "HTMLAttrs"], "Help" -> None, "Hidden" -> False, "Hint" -> Null, 
        "Input" -> -10.5, "Interpreter" -> "Integer", "Label" -> 
        Annotation["x", "x", "HTMLLabel"], "Required" -> True, "Type" -> 
        "Element"], "y" -> 
      Association[
       "AllowedExtensions" -> {"json"}, "AutoSubmitting" -> False, 
        "CodeLanguage" -> Automatic, "Default" -> Missing["NoInput"], 
        "Enabled" -> True, "Failure" -> 
        Annotation[
         "Enter a valid number.", {"p", "class" -> "help-block help-error"}, 
          "HTMLAttrs"], "Help" -> None, "Hidden" -> False, "Hint" -> Null, 
        "Input" -> 10.5, "Interpreter" -> "Integer", "Label" -> 
        Annotation["y", "y", "HTMLLabel"], "Required" -> True, "Type" -> 
        "Element"]], "MessageParameters" -> 
    Association["FailureFields" -> "\"x\", \"y\""]]],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.7651080948547688`*^9, 3.7651081098287673`*^9}, 
   3.7659958063362665`*^9, 3.772995762993851*^9, 3.7730759926659408`*^9, 
   3.773232631607829*^9},
 CellLabel->"Out[21]=",ExpressionUUID->"22bd1038-c12c-49b3-ad1c-fcdd0d9fcf5e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"api", "[", 
   RowBox[{"<|", 
    RowBox[{
     RowBox[{"\"\<x\>\"", "\[Rule]", 
      RowBox[{"-", "10.5"}]}], ",", 
     RowBox[{"\"\<y\>\"", "\[Rule]", "10.5"}]}], "|>"}], "]"}], "[", 
  "\"\<MessageTemplate\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.765108116585806*^9, 3.7651081238977675`*^9}, {
   3.7659958589203978`*^9, 3.7659958646663275`*^9}, {3.7729958175012856`*^9, 
   3.7729958789944553`*^9}, 3.773232586690141*^9},
 CellLabel->"In[22]:=",ExpressionUUID->"dfc1768c-63da-4968-a450-e08c60c5c934"],

Cell[BoxData["\<\"The API could not be evaluated because the following fields \
contain failures: `FailureFields`.\"\>"], "Output",
 CellChangeTimes->{3.773232590612114*^9, 3.7732326330438104`*^9},
 CellLabel->"Out[22]=",ExpressionUUID->"6d3acd5e-165c-41d1-a715-4bcdd6548f99"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"api", "[", 
   RowBox[{"<|", 
    RowBox[{
     RowBox[{"\"\<x\>\"", "\[Rule]", 
      RowBox[{"-", "10.5"}]}], ",", 
     RowBox[{"\"\<y\>\"", "\[Rule]", "10.5"}]}], "|>"}], "]"}], "[", 
  "\"\<MessageParameters\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.765108116585806*^9, 3.7651081238977675`*^9}, {
   3.7659958589203978`*^9, 3.7659958646663275`*^9}, {3.7729958175012856`*^9, 
   3.7729958789944553`*^9}, 3.773232586690141*^9, 3.7732326362808084`*^9},
 CellLabel->"In[23]:=",ExpressionUUID->"5e8ee83e-65a0-4c1d-a80d-8547f24c4a8f"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{"\<\"FailureFields\"\>", 
   "\[Rule]", "\<\"\\\"x\\\", \\\"y\\\"\"\>"}], 
  "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{3.773232637637849*^9},
 CellLabel->"Out[23]=",ExpressionUUID->"1fe4d620-01ed-4374-a4a5-9744f0b7dd18"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"api", "[", 
   RowBox[{"<|", 
    RowBox[{
     RowBox[{"\"\<x\>\"", "\[Rule]", 
      RowBox[{"-", "10.5"}]}], ",", 
     RowBox[{"\"\<y\>\"", "\[Rule]", "10"}]}], "|>"}], "]"}], "[", 
  "\"\<MessageParameters\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.765108116585806*^9, 3.7651081238977675`*^9}, {
   3.7659958589203978`*^9, 3.7659958646663275`*^9}, {3.7729958175012856`*^9, 
   3.7729958789944553`*^9}, 3.773232586690141*^9, 3.7732326362808084`*^9},
 CellLabel->"In[24]:=",ExpressionUUID->"47eee340-1960-4bb6-b551-ba5815958eea"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{"\<\"FailureFields\"\>", "\[Rule]", "\<\"\\\"x\\\"\"\>"}], 
  "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{{3.765108096774767*^9, 3.7651081245147667`*^9}, 
   3.7659958656332717`*^9, 3.7729957961752653`*^9, {3.772995831433424*^9, 
   3.772995880653432*^9}, 3.7730759941709394`*^9, 3.773232638906846*^9},
 CellLabel->"Out[24]=",ExpressionUUID->"8213b3e3-b02a-4cce-9890-ae24218b3ce6"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["API-2) A random real value", "Chapter",
 CellChangeTimes->{{3.7638903241703033`*^9, 3.763890387306302*^9}, {
  3.7639207865581675`*^9, 3.7639207907491674`*^9}, {3.7639775742549334`*^9, 
  3.763977580028909*^9}},ExpressionUUID->"2580dd58-322d-4431-9a00-\
ccb617c07744"],

Cell["\<\
Random button
Managing the format and decimals places...\
\>", "Text",
 CellChangeTimes->{{3.763890393429302*^9, 3.7638904539383016`*^9}, {
  3.763890516530302*^9, 
  3.7638905168453016`*^9}},ExpressionUUID->"1a8eaf68-71f8-434c-9931-\
f9aa8ba8722a"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"ClearAll", "[", "api", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"api", "=", " ", 
   RowBox[{"APIFunction", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"\"\<x\>\"", "\[Rule]", "\"\<Real\>\""}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"\"\<y\>\"", "\[Rule]", "\"\<Real\>\""}]}], 
      "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"Function", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"RandomReal", "[", 
         RowBox[{"{", 
          RowBox[{"#x", ",", "#y"}], "}"}], "]"}], "//", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Round", "[", 
           RowBox[{"#", ",", " ", "0.001"}], "]"}], "&"}], ")"}]}], "//", 
       "ToString"}], "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{" ", "1", ")"}], " ", 
       RowBox[{"RandomReal", "[", 
        RowBox[{"{", 
         RowBox[{"#x", ",", "#y"}], "}"}], "]"}]}], " ", "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{" ", "2", ")"}], " ", "//", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Round", "[", 
          RowBox[{"#", ",", " ", "0.001"}], "]"}], "&"}], ")"}]}], " ", 
      "*)"}], "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{
        RowBox[{" ", "3", ")"}], " ", "//", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Round", "[", 
           RowBox[{"#", ",", " ", "0.001"}], "]"}], "&"}], ")"}]}], "//", 
       "ToString"}], " ", "*)"}], "\[IndentingNewLine]", " ", 
     "\"\<JSON\>\""}], "\[IndentingNewLine]", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"api", "[", 
  RowBox[{"<|", 
   RowBox[{
    RowBox[{"\"\<x\>\"", "\[Rule]", 
     RowBox[{"-", "1.1"}]}], ",", 
    RowBox[{"\"\<y\>\"", "\[Rule]", "1.1"}]}], "|>"}], "]"}]}], "Input",
 CellChangeTimes->{{3.763901121307186*^9, 3.763901256902187*^9}, {
   3.763916236533563*^9, 3.7639162926155634`*^9}, {3.763919066994918*^9, 
   3.7639190671439037`*^9}, {3.7639207143211665`*^9, 
   3.7639207152071676`*^9}, {3.7639210013791676`*^9, 3.763921051540167*^9}, {
   3.7639217826340637`*^9, 3.7639217985300617`*^9}, {3.763921863094063*^9, 
   3.7639218661150618`*^9}, {3.7639219205955763`*^9, 
   3.7639219394975843`*^9}, {3.763922008099579*^9, 3.763922015996581*^9}, {
   3.7639220506155787`*^9, 3.7639220689125786`*^9}, {3.7639221485605783`*^9, 
   3.763922154965576*^9}, 3.763984595251107*^9, {3.7649653538679867`*^9, 
   3.764965397364025*^9}, 3.764965432438038*^9, {3.764965463126748*^9, 
   3.764965469051712*^9}, {3.765102643439731*^9, 3.7651026714067307`*^9}, {
   3.765102735958968*^9, 3.7651027875069504`*^9}, 3.765102841270899*^9, {
   3.765102872228898*^9, 3.7651028897518992`*^9}, {3.765102985238905*^9, 
   3.7651030888019004`*^9}, {3.765103119189899*^9, 3.765103149453897*^9}, {
   3.7651032315002947`*^9, 3.7651032564022927`*^9}, 3.7651032980462933`*^9, 
   3.76510354797534*^9, {3.765103889102269*^9, 3.7651039091993093`*^9}, 
   3.7659970882918663`*^9, 3.765997215038641*^9, 3.7659972730493793`*^9, {
   3.76600024834426*^9, 3.7660002956842566`*^9}, {3.7729959508474474`*^9, 
   3.7729959510504203`*^9}},
 CellLabel->"In[25]:=",ExpressionUUID->"89c37a52-eb64-474b-8470-8230c555a8b5"],

Cell[BoxData["\<\"-0.989\"\>"], "Output",
 CellChangeTimes->{{3.763901237139187*^9, 3.7639012633511868`*^9}, {
   3.7639162948865633`*^9, 3.763916300635563*^9}, {3.7639190692039037`*^9, 
   3.7639190763179235`*^9}, 3.7639207177831683`*^9, {3.763921032078168*^9, 
   3.7639210523761663`*^9}, 3.763921800564064*^9, 3.763921833184062*^9, 
   3.763921867571063*^9, {3.763921921429577*^9, 3.7639219451225777`*^9}, 
   3.7639220552525764`*^9, 3.7639221574915867`*^9, 3.7649654011550245`*^9, 
   3.76496543569003*^9, 3.7649654695017166`*^9, 3.7649656493651953`*^9, 
   3.7649677508890853`*^9, 3.7651025971308684`*^9, 3.7651026754757304`*^9, 
   3.765102754955943*^9, 3.7651027891369457`*^9, {3.7651030046648984`*^9, 
   3.765103017906901*^9}, {3.765103050083912*^9, 3.7651030645268984`*^9}, 
   3.765103151181899*^9, 3.765103261195292*^9, 3.765103299493329*^9, 
   3.765103551133294*^9, 3.7651036937972655`*^9, {3.765103891066287*^9, 
   3.765103911095265*^9}, 3.7659970904058743`*^9, 3.7659972172866697`*^9, 
   3.7659972752113805`*^9, 3.7660002976682906`*^9, 3.7660016724603386`*^9, 
   3.772995968058537*^9, 3.7730760116279755`*^9, 3.773232659653866*^9},
 CellLabel->"Out[27]=",ExpressionUUID->"f0f7a4c3-295d-44fe-8f46-edac6888c12e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"ClearAll", "[", "cd", "]"}], "\[IndentingNewLine]", 
 RowBox[{"cd", "=", 
  RowBox[{"CloudDeploy", "[", "\[IndentingNewLine]", 
   RowBox[{
   "api", ",", "\[IndentingNewLine]", "\"\</live-coding/random-real/\>\"", 
    ",", "\[IndentingNewLine]", 
    RowBox[{"Permissions", "\[Rule]", "\"\<Public\>\""}]}], 
   "\[IndentingNewLine]", "]"}]}]}], "Input",
 CellChangeTimes->{{3.763901121307186*^9, 3.7639012201341887`*^9}, {
  3.7639207259831667`*^9, 3.763920726399167*^9}, {3.763922108219579*^9, 
  3.7639221138985796`*^9}, {3.7729959372744246`*^9, 3.7729959647884107`*^9}},
 CellLabel->"In[28]:=",ExpressionUUID->"5c53af93-699b-44d0-b85e-6b736d6ffc8c"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"CloudObject", "[", 
   TemplateBox[{
    "\"https://www.wolframcloud.com/obj/mitch/live-coding/random-real\"",
     "https://www.wolframcloud.com/obj/mitch/live-coding/random-real"},
    "HyperlinkURL"], "]"}],
  CloudObject[
  "https://www.wolframcloud.com/obj/mitch/live-coding/random-real"],
  SelectWithContents->True]], "Output",
 CellChangeTimes->{
  3.7639012678211875`*^9, 3.7639163103045645`*^9, 3.763920802304191*^9, 
   3.7639210578971677`*^9, {3.7639218030390644`*^9, 3.7639218346240726`*^9}, 
   3.763921869690063*^9, {3.7639219226765785`*^9, 3.763921946343579*^9}, 
   3.7639221591885767`*^9, 3.764965404076989*^9, 3.764965437841033*^9, 
   3.7649654716047525`*^9, 3.764965651697191*^9, 3.764967752544025*^9, 
   3.7651025996418743`*^9, 3.765102677197734*^9, 3.765102756592944*^9, 
   3.765102790398945*^9, 3.7651031529208984`*^9, 3.765103262670293*^9, 
   3.7651033008472924`*^9, 3.765103553565294*^9, {3.76510389479531*^9, 
   3.765103912537267*^9}, 3.765997093464883*^9, 3.7659972190706067`*^9, 
   3.765997279436347*^9, 3.766000299589263*^9, 3.772995970000512*^9, 
   3.773076013625944*^9, 3.7732326622278423`*^9},
 CellLabel->"Out[29]=",ExpressionUUID->"4a3b5bb5-3e0e-4835-baf9-55c130d8644e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"ClearAll", "[", 
  RowBox[{"url", ",", "session"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"url", "=", 
  RowBox[{"URLBuild", "[", 
   RowBox[{"cd", ",", 
    RowBox[{"<|", 
     RowBox[{
      RowBox[{"\"\<x\>\"", "\[Rule]", 
       RowBox[{"-", "1.1"}]}], ",", 
      RowBox[{"\"\<y\>\"", "\[Rule]", "1.1"}]}], "|>"}]}], "]"}]}], "\n", 
 RowBox[{
  RowBox[{"session", "=", 
   RowBox[{"StartWebSession", "[", "\"\<Chrome\>\"", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"WebExecute", "[", 
   RowBox[{"session", ",", 
    RowBox[{"{", 
     RowBox[{"\"\<OpenPage\>\"", "\[Rule]", "url"}], "}"}]}], "]"}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.765997119602253*^9, 3.765997127393299*^9}, {
  3.7659972864113445`*^9, 3.7659972935913515`*^9}, {3.7729959450424547`*^9, 
  3.7729959587984447`*^9}},
 CellLabel->"In[30]:=",ExpressionUUID->"3e66d552-4327-4f49-9d36-e3ea3b48285d"],

Cell[BoxData["\<\"https://www.wolframcloud.com/obj/mitch/live-coding/random-\
real?x=-1.1&y=1.1\"\>"], "Output",
 CellChangeTimes->{
  3.7649654077909904`*^9, 3.7649656530331964`*^9, 3.7649677536640577`*^9, 
   3.765102601475874*^9, 3.765102695143732*^9, 3.7651031557108984`*^9, {
   3.765997100775875*^9, 3.7659971297092915`*^9}, 3.765997219873632*^9, 
   3.765997294832381*^9, 3.766000301298254*^9, 3.772995971718505*^9, 
   3.7730760151459455`*^9, 3.7732326639068394`*^9},
 CellLabel->"Out[31]=",ExpressionUUID->"6587d382-f4f1-42db-adc0-12653e7cf2b9"]
}, Open  ]],

Cell[CellGroupData[{

Cell["API Validation and Performance Testing", "Subsubsection",
 CellChangeTimes->{{3.7651038128362904`*^9, 
  3.7651038465192633`*^9}},ExpressionUUID->"febbbedc-6d3c-4703-9227-\
10f55e2d8e90"],

Cell["\<\
We want to know how long it takes to process n api calls and what the longest \
string length is.\
\>", "Text",
 CellChangeTimes->{{3.7729960561948633`*^9, 
  3.772996098853855*^9}},ExpressionUUID->"fbc75e82-c7ad-4106-aefc-\
f31716983330"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"ClearAll", "[", "n", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"n", "=", "100"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Grid", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Transpose", "[", "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\"\<time of \>\"", "<>", 
         RowBox[{"ToString", "[", "n", "]"}], "<>", "\"\< api calls\>\""}], 
        ",", "\"\<max string length\>\""}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{"AbsoluteTiming", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"api", "[", 
            RowBox[{"<|", 
             RowBox[{
              RowBox[{"\"\<x\>\"", "\[Rule]", 
               RowBox[{"-", "1.1"}]}], ",", 
              RowBox[{"\"\<y\>\"", "\[Rule]", "1.1"}]}], "|>"}], "]"}], ",", 
           RowBox[{"{", "n", "}"}]}], "]"}], "//", "StringLength"}], "//", 
        "Max"}], "\[IndentingNewLine]", "]"}]}], "}"}], "\[IndentingNewLine]",
     "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"Frame", "\[Rule]", "All"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.765103619845297*^9, 3.7651036679052763`*^9}, {
   3.765103701118306*^9, 3.7651037508242636`*^9}, 3.76510389965827*^9, {
   3.7729961158758793`*^9, 3.772996253564083*^9}},
 CellLabel->"In[34]:=",ExpressionUUID->"24c36ab6-a9ab-4559-a757-56f92baeba84"],

Cell[BoxData[
 TagBox[GridBox[{
    {"\<\"time of 100 api calls\"\>", "0.7037531`"},
    {"\<\"max string length\"\>", "6"}
   },
   AutoDelete->False,
   GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{{3.7651036326933026`*^9, 3.7651037102602654`*^9}, {
   3.7651037429982653`*^9, 3.765103758387266*^9}, {3.7651039009722633`*^9, 
   3.7651039165272665`*^9}, {3.7659973671616297`*^9, 3.765997378514262*^9}, 
   3.7729959994333153`*^9, {3.7729962029301496`*^9, 3.7729962188317757`*^9}, 
   3.7729962553080835`*^9, 3.7730760229105806`*^9, 3.773232673907729*^9},
 CellLabel->"Out[36]=",ExpressionUUID->"bc7fdbab-b01d-40da-b708-097edde4b38e"]
}, Open  ]]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["API-3) An array of reals - a JS Object", "Chapter",
 CellChangeTimes->{{3.7638903241703033`*^9, 3.7638903692583017`*^9}, {
  3.7638905371863003`*^9, 3.7638905559883013`*^9}, {3.7639776261559095`*^9, 
  3.76397762789091*^9}, {3.7639789551019173`*^9, 3.7639790112679024`*^9}, {
  3.763979115882925*^9, 
  3.7639791160539007`*^9}},ExpressionUUID->"8c7ee5e2-fef4-4225-bd4c-\
d8a59b39f784"],

Cell["\<\
Given a lower and upper bound make some number of random reals.  Organize the \
result into an Association[ ]  with JSON keys { \[OpenCurlyDoubleQuote]index\
\[CloseCurlyDoubleQuote], \
\[OpenCurlyDoubleQuote]value\[CloseCurlyDoubleQuote] }.  This will make it \
trivial to use the common JS pattern, \[OpenCurlyQuote]... results.map( \
result ) => ( ... ) ...\[CloseCurlyQuote], in our JS component.  Note: in \
React, map() requires a unique element key for each \[OpenCurlyQuote]row\
\[CloseCurlyQuote] of the map.  Example ReactJS code: results.map(result => \
(<p key=result.index> result.value </p>)).\
\>", "Text",
 CellChangeTimes->{{3.7651058263882675`*^9, 3.7651060503162656`*^9}, {
  3.765106080553264*^9, 3.765106084682308*^9}, {3.765106137075265*^9, 
  3.765106171311263*^9}, {3.7659975072232695`*^9, 3.7659975087402997`*^9}, {
  3.773052771115868*^9, 3.7730527787638693`*^9}, {3.773052898596614*^9, 
  3.773053195471233*^9}, {3.773053277241227*^9, 
  3.7730532780162535`*^9}},ExpressionUUID->"d02da929-817f-42df-9612-\
f4ef39a796d4"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"ClearAll", "[", 
  RowBox[{"testX", ",", "testY", ",", "testZ"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"testX", "=", 
   RowBox[{"-", "1.25"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"testY", "=", "1.25"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"testZ", "=", "10"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"st", "=", 
  RowBox[{"Range", "[", "testZ", "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"rn", "=", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     RowBox[{"ToString", "[", 
      RowBox[{"Round", "[", 
       RowBox[{"#", ",", "0.001"}], "]"}], "]"}], "&"}], "/@", 
    RowBox[{"RandomReal", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"testX", ",", "testY"}], "}"}], ",", "testZ"}], "]"}]}], 
   ")"}]}]}], "Input",
 CellChangeTimes->{{3.763981327918619*^9, 3.7639813379206195`*^9}, {
   3.7639813865406313`*^9, 3.763981458295617*^9}, {3.7639917485611334`*^9, 
   3.7639917527261314`*^9}, {3.7649657391048527`*^9, 
   3.7649657394698925`*^9}, {3.764965950091181*^9, 3.7649659514441805`*^9}, {
   3.7651049507352667`*^9, 3.7651049511242647`*^9}, {3.7651049874492645`*^9, 
   3.7651050178952665`*^9}, {3.765997925331419*^9, 3.7659980172874174`*^9}, {
   3.7659980574344516`*^9, 3.76599822749544*^9}, {3.7659982829429736`*^9, 
   3.7659984186814575`*^9}, {3.765998554682455*^9, 3.76599859502247*^9}, {
   3.766000000123661*^9, 3.7660000723976035`*^9}, 3.766000106078639*^9, {
   3.766000555309308*^9, 3.766000555660346*^9}, {3.7660014053063326`*^9, 
   3.7660014091653075`*^9}, {3.7660014478363447`*^9, 3.766001469594308*^9}, {
   3.7660020119240723`*^9, 3.7660021346828885`*^9}, {3.766002174315858*^9, 
   3.7660022346218376`*^9}, 3.7660022723338337`*^9, {3.766002304706234*^9, 
   3.766002305422222*^9}, {3.7660023733662224`*^9, 3.766002376635219*^9}},
 CellLabel->"In[37]:=",ExpressionUUID->"c492cdd7-b5b8-46ea-a6bf-c6231da90d74"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6", ",", "7", ",", "8", 
   ",", "9", ",", "10"}], "}"}]], "Output",
 CellChangeTimes->{3.766002274804855*^9, 3.7660023081472607`*^9, 
  3.7660023771192255`*^9, 3.773052820506132*^9, 3.7730760412425795`*^9, 
  3.7732327188386974`*^9},
 CellLabel->"Out[41]=",ExpressionUUID->"8000c44e-a58d-477c-849a-c1c339687ffc"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"-0.812\"\>", ",", "\<\"0.763\"\>", ",", "\<\"0.57\"\>", 
   ",", "\<\"1.242\"\>", ",", "\<\"0.115\"\>", ",", "\<\"-0.814\"\>", 
   ",", "\<\"-0.549\"\>", ",", "\<\"-0.636\"\>", ",", "\<\"-0.93\"\>", 
   ",", "\<\"0.8\"\>"}], "}"}]], "Output",
 CellChangeTimes->{3.766002274804855*^9, 3.7660023081472607`*^9, 
  3.7660023771192255`*^9, 3.773052820506132*^9, 3.7730760412425795`*^9, 
  3.77323271884372*^9},
 CellLabel->"Out[42]=",ExpressionUUID->"36340a91-360b-453c-b5c0-950334951920"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"AssociationThread", "[", 
  RowBox[{"st", ",", "rn"}], "]"}]], "Input",
 CellChangeTimes->{{3.763981327918619*^9, 3.7639813379206195`*^9}, {
   3.7639813865406313`*^9, 3.763981458295617*^9}, {3.7639917485611334`*^9, 
   3.7639917527261314`*^9}, {3.7649657391048527`*^9, 
   3.7649657394698925`*^9}, {3.764965950091181*^9, 3.7649659514441805`*^9}, {
   3.7651049507352667`*^9, 3.7651049511242647`*^9}, {3.7651049874492645`*^9, 
   3.7651050178952665`*^9}, {3.765997925331419*^9, 3.7659980172874174`*^9}, {
   3.7659980574344516`*^9, 3.76599822749544*^9}, {3.7659982829429736`*^9, 
   3.7659984186814575`*^9}, {3.765998554682455*^9, 3.76599859502247*^9}, {
   3.766000000123661*^9, 3.7660000723976035`*^9}, 3.766000106078639*^9, {
   3.766000555309308*^9, 3.766000555660346*^9}, {3.7660014053063326`*^9, 
   3.7660014091653075`*^9}, {3.7660014478363447`*^9, 3.766001469594308*^9}, {
   3.7660020119240723`*^9, 3.7660021346828885`*^9}, {3.766002174315858*^9, 
   3.7660022208928566`*^9}, {3.7660023321002207`*^9, 3.7660023369562206`*^9}},
 CellLabel->"In[43]:=",ExpressionUUID->"0acc5ab4-1bae-4c94-8e4f-1e0f3f8dc4f7"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"1", "\[Rule]", "\<\"-0.812\"\>"}], ",", 
   RowBox[{"2", "\[Rule]", "\<\"0.763\"\>"}], ",", 
   RowBox[{"3", "\[Rule]", "\<\"0.57\"\>"}], ",", 
   RowBox[{"4", "\[Rule]", "\<\"1.242\"\>"}], ",", 
   RowBox[{"5", "\[Rule]", "\<\"0.115\"\>"}], ",", 
   RowBox[{"6", "\[Rule]", "\<\"-0.814\"\>"}], ",", 
   RowBox[{"7", "\[Rule]", "\<\"-0.549\"\>"}], ",", 
   RowBox[{"8", "\[Rule]", "\<\"-0.636\"\>"}], ",", 
   RowBox[{"9", "\[Rule]", "\<\"-0.93\"\>"}], ",", 
   RowBox[{"10", "\[Rule]", "\<\"0.8\"\>"}]}], 
  "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{
  3.766000557048312*^9, {3.766001388374343*^9, 3.766001410122307*^9}, {
   3.7660014514043064`*^9, 3.766001470752342*^9}, {3.7660020130000906`*^9, 
   3.7660020298500843`*^9}, 3.766002072278479*^9, {3.766002111270447*^9, 
   3.766002135819892*^9}, {3.766002183416857*^9, 3.7660021988708935`*^9}, 
   3.766002338209258*^9, 3.766002381298222*^9, 3.773052844521373*^9, 
   3.7730760426085434`*^9, 3.7732327205907288`*^9},
 CellLabel->"Out[43]=",ExpressionUUID->"c97d28ab-1601-42fc-bf34-dd970720ba20"]
}, Open  ]],

Cell["\<\
Note: the above is an intermediate step - we\[CloseCurlyQuote]ll continue \
with below.
Now: we need to (proactively solve a WL Real -> JSON String issue.  
Issue: direct import of reals to JSON frequently produces an inconvenient \
\[OpenCurlyQuote]tail\[CloseCurlyQuote]. Example: 10.1200000000000001.
Requirement: round any real number (positive or negative) to some digits \
right of the decimal and make the number a string.\
\>", "Text",
 CellChangeTimes->{{3.773053364209775*^9, 
  3.7730536732010546`*^9}},ExpressionUUID->"9fabffa3-b12b-4e58-aa14-\
85a38b87e4c6"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"ClearAll", "[", "roundToString", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"roundToString", "[", 
    RowBox[{"r_", ",", "p_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"Round", "[", 
     RowBox[{"r", ",", 
      SuperscriptBox["10.", 
       RowBox[{"-", "p"}]]}], "]"}], "//", "ToString"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"roundToString", "[", 
    RowBox[{"#", ",", "3"}], "]"}], "&"}], "/@", 
  RowBox[{"{", 
   RowBox[{"0.123456789", ",", "0.123456789"}], "}"}]}]}], "Input",
 CellChangeTimes->{{3.763981327918619*^9, 3.7639813379206195`*^9}, {
   3.7639813865406313`*^9, 3.763981458295617*^9}, {3.7639917485611334`*^9, 
   3.7639917527261314`*^9}, {3.7649657391048527`*^9, 
   3.7649657394698925`*^9}, {3.764965950091181*^9, 3.7649659514441805`*^9}, {
   3.7651049507352667`*^9, 3.7651049511242647`*^9}, {3.7651049874492645`*^9, 
   3.7651050178952665`*^9}, {3.765997925331419*^9, 3.7659980172874174`*^9}, {
   3.7659980574344516`*^9, 3.76599822749544*^9}, {3.7659982829429736`*^9, 
   3.7659984186814575`*^9}, {3.765998554682455*^9, 3.76599859502247*^9}, {
   3.766000000123661*^9, 3.7660000723976035`*^9}, 3.766000106078639*^9, {
   3.766000150714611*^9, 3.766000157777604*^9}, {3.7660005834933414`*^9, 
   3.766000584034343*^9}, {3.766000625087338*^9, 3.7660006265073113`*^9}, {
   3.7660010066803427`*^9, 3.7660010359163074`*^9}, {3.76600242453922*^9, 
   3.7660024295092187`*^9}, {3.7660024811322203`*^9, 3.7660025026252513`*^9}},
 Background->RGBColor[0.88, 1, 0.88],
 CellLabel->"In[44]:=",ExpressionUUID->"84bfabdd-e0ef-4df9-bb59-4d08f583f095"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"0.123\"\>", ",", "\<\"0.123\"\>"}], "}"}]], "Output",
 CellChangeTimes->{3.7660000732326393`*^9, 3.7660001584976387`*^9, 
  3.766000594672334*^9, 3.7660010365343423`*^9, 3.7660017361713123`*^9, 
  3.766002430301221*^9, 3.7660025042862196`*^9, 3.7730537075670204`*^9, 
  3.7730540443032293`*^9, 3.773076047898574*^9, 3.7732327735095005`*^9},
 CellLabel->"Out[46]=",ExpressionUUID->"b1117d43-09f4-4589-9a8b-33517fe644b6"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"AssociationThread", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Range", "[", "testZ", "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"roundToString", "[", 
      RowBox[{"#", ",", "3"}], "]"}], "&"}], "/@", 
    RowBox[{"RandomReal", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"testX", ",", "testY"}], "}"}], ",", "testZ"}], "]"}]}]}], 
  "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.766000831523312*^9, 3.7660008639363084`*^9}, {
   3.766001114228327*^9, 3.7660011212313104`*^9}, 3.766001368749343*^9, {
   3.7660025123262215`*^9, 3.7660025318552494`*^9}, {3.766002592515247*^9, 
   3.7660026056702504`*^9}, {3.7660030400502214`*^9, 3.766003042284224*^9}},
 CellLabel->"In[47]:=",ExpressionUUID->"d1971fdb-7617-42d0-ba9d-f509eb3a0762"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"1", "\[Rule]", "\<\"0.236\"\>"}], ",", 
   RowBox[{"2", "\[Rule]", "\<\"-1.048\"\>"}], ",", 
   RowBox[{"3", "\[Rule]", "\<\"0.911\"\>"}], ",", 
   RowBox[{"4", "\[Rule]", "\<\"-0.023\"\>"}], ",", 
   RowBox[{"5", "\[Rule]", "\<\"-1.029\"\>"}], ",", 
   RowBox[{"6", "\[Rule]", "\<\"-0.649\"\>"}], ",", 
   RowBox[{"7", "\[Rule]", "\<\"-0.972\"\>"}], ",", 
   RowBox[{"8", "\[Rule]", "\<\"1.225\"\>"}], ",", 
   RowBox[{"9", "\[Rule]", "\<\"-0.196\"\>"}], ",", 
   RowBox[{"10", "\[Rule]", "\<\"-0.536\"\>"}]}], 
  "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{{3.766000808390343*^9, 3.766000864619343*^9}, 
   3.7660011242943525`*^9, 3.7660013713533077`*^9, 3.7660025265662203`*^9, {
   3.7660025940412245`*^9, 3.7660026068312483`*^9}, 3.773053722302235*^9, 
   3.773054045659239*^9, 3.7730760504625826`*^9, 3.773232778318611*^9},
 CellLabel->"Out[47]=",ExpressionUUID->"0d429bb3-6e5c-40a0-b549-a6eae52d84ce"]
}, Open  ]],

Cell["Putting all this together...", "Text",
 CellChangeTimes->{{3.773053740971203*^9, 
  3.7730537489712043`*^9}},ExpressionUUID->"1964be40-47f7-417b-b858-\
e159d9fa1360"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"AssociationThread", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\"\<index\>\"", ",", "\"\<value\>\""}], "}"}], "\[Rule]", 
     "#"}], "]"}], "&"}], "/@", 
  RowBox[{"Transpose", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Range", "[", "testZ", "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"roundToString", "[", 
        RowBox[{"#", ",", "3"}], "]"}], "&"}], "/@", 
      RowBox[{"RandomReal", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"testX", ",", "testY"}], "}"}], ",", "testZ"}], "]"}]}]}], 
    "}"}], "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.7660030501702504`*^9, 3.766003064506009*^9}, {
  3.7732328130657578`*^9, 3.773232815682787*^9}},
 CellLabel->"In[49]:=",ExpressionUUID->"a14407a9-0849-4967-94b3-51e859e4abb0"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"index\"\>", "\[Rule]", "1"}], ",", 
     RowBox[{"\<\"value\"\>", "\[Rule]", "\<\"-0.641\"\>"}]}], 
    "\[RightAssociation]"}], ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"index\"\>", "\[Rule]", "2"}], ",", 
     RowBox[{"\<\"value\"\>", "\[Rule]", "\<\"0.667\"\>"}]}], 
    "\[RightAssociation]"}], ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"index\"\>", "\[Rule]", "3"}], ",", 
     RowBox[{"\<\"value\"\>", "\[Rule]", "\<\"-0.566\"\>"}]}], 
    "\[RightAssociation]"}], ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"index\"\>", "\[Rule]", "4"}], ",", 
     RowBox[{"\<\"value\"\>", "\[Rule]", "\<\"-0.351\"\>"}]}], 
    "\[RightAssociation]"}], ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"index\"\>", "\[Rule]", "5"}], ",", 
     RowBox[{"\<\"value\"\>", "\[Rule]", "\<\"0.216\"\>"}]}], 
    "\[RightAssociation]"}], ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"index\"\>", "\[Rule]", "6"}], ",", 
     RowBox[{"\<\"value\"\>", "\[Rule]", "\<\"-0.086\"\>"}]}], 
    "\[RightAssociation]"}], ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"index\"\>", "\[Rule]", "7"}], ",", 
     RowBox[{"\<\"value\"\>", "\[Rule]", "\<\"0.117\"\>"}]}], 
    "\[RightAssociation]"}], ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"index\"\>", "\[Rule]", "8"}], ",", 
     RowBox[{"\<\"value\"\>", "\[Rule]", "\<\"0.21\"\>"}]}], 
    "\[RightAssociation]"}], ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"index\"\>", "\[Rule]", "9"}], ",", 
     RowBox[{"\<\"value\"\>", "\[Rule]", "\<\"-1.026\"\>"}]}], 
    "\[RightAssociation]"}], ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"index\"\>", "\[Rule]", "10"}], ",", 
     RowBox[{"\<\"value\"\>", "\[Rule]", "\<\"0.825\"\>"}]}], 
    "\[RightAssociation]"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.7660030545902567`*^9, 3.7660030652760134`*^9}, 
   3.7730537617412004`*^9, 3.7730540515032043`*^9, 3.773076052291582*^9, {
   3.773232798023758*^9, 3.773232825296799*^9}},
 CellLabel->"Out[49]=",ExpressionUUID->"a88cd9c8-2e2b-4bf3-ad1f-31f61bce7c17"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"ClearAll", "[", "apiWhich", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"apiWhich", "[", "w_Integer", "]"}], ":=", " ", 
   RowBox[{"APIFunction", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"\"\<x\>\"", "\[Rule]", "\"\<Real\>\""}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"\"\<y\>\"", "\[Rule]", "\"\<Real\>\""}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"\"\<z\>\"", "\[Rule]", "\"\<Integer\>\""}]}], 
      "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"(*", "\[IndentingNewLine]", 
      RowBox[{"1", ":", " ", 
       RowBox[{"not", " ", "formated", "\[IndentingNewLine]", 
        RowBox[{"RandomReal", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"#x", ",", "#y"}], "}"}], ",", "#z"}], "]"}]}]}], 
      "\[IndentingNewLine]", "*)"}], "\[IndentingNewLine]", 
     RowBox[{"(*", "\[IndentingNewLine]", 
      RowBox[{"2", ":", " ", 
       RowBox[{"not", " ", "indexed", "\[IndentingNewLine]", 
        RowBox[{"ToString", "/@", 
         RowBox[{"Round", "[", 
          RowBox[{
           RowBox[{"RandomReal", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"#x", ",", "#y"}], "}"}], ",", "#z"}], "]"}], ",", 
           "0.001"}], "]"}]}]}]}], "\[IndentingNewLine]", "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"(*", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"3", ":", " ", 
         RowBox[{"JS", " ", "Object", " ", 
          RowBox[{"(", "JSON", ")"}], "\[IndentingNewLine]", 
          RowBox[{"AssociationThread", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"\"\<index\>\"", ",", "\"\<value\>\""}], "}"}], 
            "\[Rule]", "#"}], "]"}]}]}], "&"}], "/@", 
       RowBox[{"Transpose", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"ToString", "/@", 
           RowBox[{"Range", "[", "#z", "]"}]}], ",", 
          RowBox[{"ToString", "/@", 
           RowBox[{"Round", "[", 
            RowBox[{
             RowBox[{"RandomReal", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"#x", ",", "#y"}], "}"}], ",", "#z"}], "]"}], ",", 
             "0.001"}], "]"}]}]}], "}"}], "]"}]}], "\[IndentingNewLine]", 
      "*)"}], "\[IndentingNewLine]", 
     RowBox[{"Function", "[", "\[IndentingNewLine]", 
      RowBox[{"Which", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"w", "\[Equal]", "1"}], ",", 
        RowBox[{"RandomReal", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"#x", ",", "#y"}], "}"}], ",", "#z"}], "]"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"w", "\[Equal]", "2"}], ",", 
        RowBox[{"ToString", "/@", 
         RowBox[{"Round", "[", 
          RowBox[{
           RowBox[{"RandomReal", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"#x", ",", "#y"}], "}"}], ",", "#z"}], "]"}], ",", 
           "0.001"}], "]"}]}], ",", "\[IndentingNewLine]", 
        RowBox[{"w", "\[Equal]", "3"}], ",", 
        RowBox[{
         RowBox[{
          RowBox[{"AssociationThread", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"\"\<index\>\"", ",", "\"\<value\>\""}], "}"}], 
            "\[Rule]", "#"}], "]"}], "&"}], "/@", 
         RowBox[{"Transpose", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Range", "[", "#z", "]"}], ",", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{
              RowBox[{"roundToString", "[", 
               RowBox[{"#", ",", "3"}], "]"}], "&"}], "/@", 
             RowBox[{"RandomReal", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"#x", ",", "#y"}], "}"}], ",", "#z"}], "]"}]}]}], 
           "}"}], "]"}]}]}], "\[IndentingNewLine]", "]"}], 
      "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", " ", 
     "\"\<JSON\>\""}], "\[IndentingNewLine]", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"apiWhich", "[", "3", "]"}], "[", 
  RowBox[{"<|", 
   RowBox[{
    RowBox[{"\"\<x\>\"", "\[Rule]", "1.125"}], ",", 
    RowBox[{"\"\<y\>\"", "\[Rule]", "1.75"}], ",", 
    RowBox[{"\"\<z\>\"", "\[Rule]", "10"}]}], "|>"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"%", "//", "Dataset"}]}], "Input",
 CellChangeTimes->{{3.763901121307186*^9, 3.763901256902187*^9}, {
   3.763916236533563*^9, 3.7639162926155634`*^9}, {3.763919066994918*^9, 
   3.7639190671439037`*^9}, {3.7639207143211665`*^9, 
   3.7639207152071676`*^9}, {3.7639210013791676`*^9, 3.763921051540167*^9}, {
   3.7639217826340637`*^9, 3.7639217985300617`*^9}, {3.763921863094063*^9, 
   3.7639218661150618`*^9}, {3.7639219205955763`*^9, 
   3.7639219394975843`*^9}, {3.763922008099579*^9, 3.763922015996581*^9}, {
   3.7639220506155787`*^9, 3.7639220689125786`*^9}, {3.7639222117195797`*^9, 
   3.7639223247375774`*^9}, {3.7639225606175776`*^9, 
   3.7639225837425785`*^9}, {3.763945453764267*^9, 3.7639454825792656`*^9}, {
   3.7639462829188147`*^9, 3.7639463045438204`*^9}, {3.7639791293279023`*^9, 
   3.763979193209901*^9}, {3.763979304009903*^9, 3.7639794484539037`*^9}, {
   3.763979483031904*^9, 3.763979495513901*^9}, {3.7639795695679016`*^9, 
   3.763979595747905*^9}, {3.763979710626902*^9, 3.763979726402907*^9}, {
   3.7639797567069087`*^9, 3.763979861094901*^9}, {3.7639802246679015`*^9, 
   3.7639802248929048`*^9}, 3.7639846067761235`*^9, {3.7649659594212165`*^9, 
   3.764965966322217*^9}, {3.765106361581265*^9, 3.765106361747269*^9}, {
   3.7651064555872784`*^9, 3.765106468974268*^9}, {3.765107098257332*^9, 
   3.765107098458294*^9}, {3.765108430889803*^9, 3.765108431039768*^9}, 
   3.7660029248042564`*^9, {3.766002955257244*^9, 3.7660029636712475`*^9}, {
   3.7660031018910065`*^9, 3.766003120312998*^9}, {3.7730540195322046`*^9, 
   3.773054020558203*^9}, {3.7730540596622314`*^9, 3.7730540897202425`*^9}},
 CellLabel->"In[50]:=",ExpressionUUID->"33cac30a-d601-4ebb-93eb-1b0d679afc45"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"index\"\>", "\[Rule]", "1"}], ",", 
     RowBox[{"\<\"value\"\>", "\[Rule]", "\<\"1.497\"\>"}]}], 
    "\[RightAssociation]"}], ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"index\"\>", "\[Rule]", "2"}], ",", 
     RowBox[{"\<\"value\"\>", "\[Rule]", "\<\"1.475\"\>"}]}], 
    "\[RightAssociation]"}], ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"index\"\>", "\[Rule]", "3"}], ",", 
     RowBox[{"\<\"value\"\>", "\[Rule]", "\<\"1.512\"\>"}]}], 
    "\[RightAssociation]"}], ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"index\"\>", "\[Rule]", "4"}], ",", 
     RowBox[{"\<\"value\"\>", "\[Rule]", "\<\"1.438\"\>"}]}], 
    "\[RightAssociation]"}], ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"index\"\>", "\[Rule]", "5"}], ",", 
     RowBox[{"\<\"value\"\>", "\[Rule]", "\<\"1.299\"\>"}]}], 
    "\[RightAssociation]"}], ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"index\"\>", "\[Rule]", "6"}], ",", 
     RowBox[{"\<\"value\"\>", "\[Rule]", "\<\"1.55\"\>"}]}], 
    "\[RightAssociation]"}], ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"index\"\>", "\[Rule]", "7"}], ",", 
     RowBox[{"\<\"value\"\>", "\[Rule]", "\<\"1.748\"\>"}]}], 
    "\[RightAssociation]"}], ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"index\"\>", "\[Rule]", "8"}], ",", 
     RowBox[{"\<\"value\"\>", "\[Rule]", "\<\"1.233\"\>"}]}], 
    "\[RightAssociation]"}], ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"index\"\>", "\[Rule]", "9"}], ",", 
     RowBox[{"\<\"value\"\>", "\[Rule]", "\<\"1.335\"\>"}]}], 
    "\[RightAssociation]"}], ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"index\"\>", "\[Rule]", "10"}], ",", 
     RowBox[{"\<\"value\"\>", "\[Rule]", "\<\"1.692\"\>"}]}], 
    "\[RightAssociation]"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.763901237139187*^9, 3.7639012633511868`*^9}, {
   3.7639162948865633`*^9, 3.763916300635563*^9}, {3.7639190692039037`*^9, 
   3.7639190763179235`*^9}, 3.7639207177831683`*^9, {3.763921032078168*^9, 
   3.7639210523761663`*^9}, 3.763921800564064*^9, 3.763921833184062*^9, 
   3.763921867571063*^9, {3.763921921429577*^9, 3.7639219451225777`*^9}, 
   3.7639220552525764`*^9, 3.763922176297578*^9, 3.7639222172895765`*^9, 
   3.763922585965577*^9, {3.763945458070267*^9, 3.7639454837572684`*^9}, 
   3.7639463073648148`*^9, 3.763979469052903*^9, {3.7639795042819023`*^9, 
   3.763979519983904*^9}, {3.7639797217579136`*^9, 3.7639797272319007`*^9}, {
   3.7639798616709013`*^9, 3.7639798810049047`*^9}, 3.763980225483902*^9, 
   3.7649657139558926`*^9, 3.7649658001748877`*^9, 3.764965888008003*^9, 
   3.7649659691462183`*^9, 3.764967795085579*^9, 3.765106305849266*^9, {
   3.765106430290265*^9, 3.7651064854402676`*^9}, 3.7651070995662975`*^9, 
   3.76510843220677*^9, 3.766003009082221*^9, 3.7660031213959756`*^9, {
   3.773054054242201*^9, 3.773054090129237*^9}, 3.773076054093549*^9, 
   3.7732328283888025`*^9},
 CellLabel->"Out[52]=",ExpressionUUID->"ea8cf655-a074-4931-a26a-528fad90fbaa"],

Cell[BoxData[
 TemplateBox[{TagBox[
    DynamicModuleBox[{
     TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
      Data`UnorderedAssociation[
       "RowCount" -> 10, "Length" -> 10, "InitialType" -> TypeSystem`Vector[
          TypeSystem`Struct[{"index", "value"}, {
            TypeSystem`Atom[Integer], 
            TypeSystem`Atom[String]}], 10], "Shape" -> 
        TypeSystem`PackageScope`HeaderShape[
          Association[{All, "index"} -> 1, {All, "value"} -> 1], 
          TypeSystem`PackageScope`Limited[
           TypeSystem`PackageScope`ColumnShape[
            TypeSystem`PackageScope`RowShape[
             Association[
             "index" -> TypeSystem`PackageScope`AtomShape[34], "value" -> 
              TypeSystem`PackageScope`AtomShape[48.00000000000001]]]], 
           10, {}]], "InitialData" -> 
        TypeSystem`PackageScope`CacheHandle[1641870258], "Type" -> 
        TypeSystem`Vector[
          TypeSystem`Struct[{"index", "value"}, {
            TypeSystem`Atom[Integer], 
            TypeSystem`Atom[String]}], 10], "HandleQ" -> True, "RowTarget" -> 
        20, "Data" -> TypeSystem`PackageScope`CacheHandle[1641870258]], 
      TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
      TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 1, 
      TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
      DynamicModule[{
        TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
           Style[
            Grid[{{
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"index\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"index\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1322725619][{All, "index"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1322725619][
                  GeneralUtilities`Slice[All, "index"]], "Mouse"], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"value\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"value\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1322725619][{All, "value"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1322725619][
                  GeneralUtilities`Slice[All, "value"]], "Mouse"], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["1"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1322725619][
                  GeneralUtilities`Slice[1, 
                   Key["index"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["1.497", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1322725619][
                  GeneralUtilities`Slice[1, 
                   Key["value"]]], "Mouse"], 
                ImageSize -> {{48.00000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["2"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1322725619][
                  GeneralUtilities`Slice[2, 
                   Key["index"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["1.475", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1322725619][
                  GeneralUtilities`Slice[2, 
                   Key["value"]]], "Mouse"], 
                ImageSize -> {{48.00000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["3"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1322725619][
                  GeneralUtilities`Slice[3, 
                   Key["index"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["1.512", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1322725619][
                  GeneralUtilities`Slice[3, 
                   Key["value"]]], "Mouse"], 
                ImageSize -> {{48.00000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["4"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1322725619][
                  GeneralUtilities`Slice[4, 
                   Key["index"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["1.438", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1322725619][
                  GeneralUtilities`Slice[4, 
                   Key["value"]]], "Mouse"], 
                ImageSize -> {{48.00000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["5"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1322725619][
                  GeneralUtilities`Slice[5, 
                   Key["index"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["1.299", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1322725619][
                  GeneralUtilities`Slice[5, 
                   Key["value"]]], "Mouse"], 
                ImageSize -> {{48.00000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["6"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1322725619][
                  GeneralUtilities`Slice[6, 
                   Key["index"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["1.55", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1322725619][
                  GeneralUtilities`Slice[6, 
                   Key["value"]]], "Mouse"], 
                ImageSize -> {{48.00000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["7"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1322725619][
                  GeneralUtilities`Slice[7, 
                   Key["index"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["1.748", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1322725619][
                  GeneralUtilities`Slice[7, 
                   Key["value"]]], "Mouse"], 
                ImageSize -> {{48.00000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["8"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1322725619][
                  GeneralUtilities`Slice[8, 
                   Key["index"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["1.233", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1322725619][
                  GeneralUtilities`Slice[8, 
                   Key["value"]]], "Mouse"], 
                ImageSize -> {{48.00000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["9"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1322725619][
                  GeneralUtilities`Slice[9, 
                   Key["index"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["1.335", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1322725619][
                  GeneralUtilities`Slice[9, 
                   Key["value"]]], "Mouse"], 
                ImageSize -> {{48.00000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["10"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1322725619][
                  GeneralUtilities`Slice[10, 
                   Key["index"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["1.692", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1322725619][
                  GeneralUtilities`Slice[10, 
                   Key["value"]]], "Mouse"], 
                ImageSize -> {{48.00000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}}, BaseStyle -> {ContextMenu -> {
                 MenuItem["Copy position to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Copy data to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], Delimiter, 
                 MenuItem["Paste position in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Paste data in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic]}, FontFamily -> "Verdana", 
               FontSize -> 12}, Alignment -> Left, RowMinHeight -> 1.5, 
             Dividers -> All, FrameStyle -> GrayLevel[0.85], 
             BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
            LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False,
             ShowAutoStyles -> False]], 
         TypeSystem`NestedGrid`PackagePrivate`initialQ = True, 
         TypeSystem`NestedGrid`PackagePrivate`self = $Failed}, 
        Dynamic[
         TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
         TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
            Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
            
            Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
              TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
              TypeSystem`NestedGrid`PackagePrivate`LookupCacheValue[
                TypeSystem`NestedGrid`PackagePrivate`$state$$["Data"]]}, 
             TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = 
              If[TypeSystem`NestedGrid`PackagePrivate`tmpData$ === 
                TypeSystem`NestedGrid`PackagePrivate`$NotCached, 
                TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1322725619][
                TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
               Not[
                FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
               TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
               TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
          TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
          TypeSystem`NestedGrid`PackagePrivate`$pos$$; If[
            FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
            TypeSystem`SparseGrid[
             TypeSystem`H["(data no longer present)"]], 
            If[GeneralUtilities`$DebugMode, 
             Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
               TypeSystem`NestedGrid`PackagePrivate`formatState[
               TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                TypeSystem`NestedGrid`PackagePrivate`$pos$$]}], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
         TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$pos$$}], 
        DynamicModuleValues :> {}], 
      TypeSystem`NestedGrid`PackagePrivate`$posCell$$, 
      TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
        TypeSystem`NestedGrid`PackagePrivate`alignBar[
        TypeSystem`NestedGrid`PackagePrivate`$state$$][
         TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
          TypeSystem`PackageScope`Pathbar[
          TypeSystem`NestedGrid`PackagePrivate`$path$$, 
           TypeSystem`NestedGrid`PackagePrivate`updateState[
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
            TypeSystem`NestedGrid`PackagePrivate`$path$$, 
            TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1322725619]]]], 
        TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
      TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Framed[
        Dynamic[
         Replace[
          MouseAnnotation[Null], {
          TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1322725619][Null] -> 
           "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1322725619][
             Pattern[TypeSystem`NestedGrid`PackagePrivate`path, 
              Blank[]]] :> (
            TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
             TypeSystem`NestedGrid`PackagePrivate`path; 
            TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
             TypeSystem`NestedGrid`PackagePrivate`path, 
              TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
           Spacer[10], Blank[] :> Spacer[10]}], TrackedSymbols :> {}], 
        FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
        Top, ImageSize -> {Automatic, 14}]}, 
     DynamicBox[
      ToBoxes[
       Column[
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, {
          TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
          TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`alignBar[
           TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}, {
         TypeSystem`NestedGrid`PackagePrivate`$topBar$$, 
          TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
          TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`alignBar[
           TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}], Spacings -> 
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, 
          0, {{}, {0, 0.05, 0}}]], StandardForm], 
      ImageSizeCache -> {133., {207., 216.}}, 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     BaseStyle -> {LineBreakWithin -> False}, Deinitialization :> 
     TypeSystem`NestedGrid`PackagePrivate`deleteState[
      TypeSystem`NestedGrid`PackagePrivate`$state$$], 
     DynamicModuleValues :> {}, Initialization :> 
     Block[{$ContextPath = $ContextPath}, 
       Needs["TypeSystem`"]]], Deploy, DefaultBaseStyle -> "Deploy"]},
  "CopyTag",
  DisplayFunction->(#& ),
  InterpretationFunction->("Dataset[<>]"& )]], "Output",
 CellChangeTimes->{{3.763901237139187*^9, 3.7639012633511868`*^9}, {
   3.7639162948865633`*^9, 3.763916300635563*^9}, {3.7639190692039037`*^9, 
   3.7639190763179235`*^9}, 3.7639207177831683`*^9, {3.763921032078168*^9, 
   3.7639210523761663`*^9}, 3.763921800564064*^9, 3.763921833184062*^9, 
   3.763921867571063*^9, {3.763921921429577*^9, 3.7639219451225777`*^9}, 
   3.7639220552525764`*^9, 3.763922176297578*^9, 3.7639222172895765`*^9, 
   3.763922585965577*^9, {3.763945458070267*^9, 3.7639454837572684`*^9}, 
   3.7639463073648148`*^9, 3.763979469052903*^9, {3.7639795042819023`*^9, 
   3.763979519983904*^9}, {3.7639797217579136`*^9, 3.7639797272319007`*^9}, {
   3.7639798616709013`*^9, 3.7639798810049047`*^9}, 3.763980225483902*^9, 
   3.7649657139558926`*^9, 3.7649658001748877`*^9, 3.764965888008003*^9, 
   3.7649659691462183`*^9, 3.764967795085579*^9, 3.765106305849266*^9, {
   3.765106430290265*^9, 3.7651064854402676`*^9}, 3.7651070995662975`*^9, 
   3.76510843220677*^9, 3.766003009082221*^9, 3.7660031213959756`*^9, {
   3.773054054242201*^9, 3.773054090129237*^9}, 3.773076054093549*^9, 
   3.773232828466793*^9},
 CellLabel->"Out[53]=",ExpressionUUID->"24737e96-d9c0-4f1e-b655-deac6f874c24"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"ClearAll", "[", "cd", "]"}], "\[IndentingNewLine]", 
 RowBox[{"cd", "=", 
  RowBox[{"CloudDeploy", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"apiWhich", "[", "3", "]"}], ",", "\[IndentingNewLine]", 
    "\"\</live-coding/random-array-1/\>\"", ",", "\[IndentingNewLine]", 
    RowBox[{"Permissions", "\[Rule]", "\"\<Public\>\""}]}], 
   "\[IndentingNewLine]", "]"}]}]}], "Input",
 CellChangeTimes->{{3.763901121307186*^9, 3.7639012201341887`*^9}, {
   3.7639207259831667`*^9, 3.763920726399167*^9}, {3.763922108219579*^9, 
   3.7639221138985796`*^9}, {3.7639221667325764`*^9, 3.763922169343578*^9}, 
   3.763980000235904*^9, {3.7639800313509026`*^9, 3.763980031533903*^9}, {
   3.763980220824901*^9, 3.763980221313903*^9}, {3.773053993184243*^9, 
   3.773054005277243*^9}, 3.7730540998142023`*^9, 3.7730541402804394`*^9, 
   3.7730541845849247`*^9},
 CellLabel->"In[54]:=",ExpressionUUID->"3c851114-a0a3-4eb1-917a-2c626c8a056a"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"CloudObject", "[", 
   TemplateBox[{
    "\"https://www.wolframcloud.com/obj/mitch/live-coding/random-array-1\"",
     "https://www.wolframcloud.com/obj/mitch/live-coding/random-array-1"},
    "HyperlinkURL"], "]"}],
  CloudObject[
  "https://www.wolframcloud.com/obj/mitch/live-coding/random-array-1"],
  SelectWithContents->True]], "Output",
 CellChangeTimes->{
  3.7639012678211875`*^9, 3.7639163103045645`*^9, 3.763920802304191*^9, 
   3.7639210578971677`*^9, {3.7639218030390644`*^9, 3.7639218346240726`*^9}, 
   3.763921869690063*^9, {3.7639219226765785`*^9, 3.763921946343579*^9}, 
   3.7639221777025785`*^9, 3.7639222197775784`*^9, 3.7639225923285766`*^9, 
   3.7639463163188143`*^9, {3.7639800042309017`*^9, 3.7639800326009035`*^9}, 
   3.7639802353169026`*^9, 3.764965802423891*^9, 3.7649658901879883`*^9, 
   3.76496597168921*^9, 3.7649677972495832`*^9, 3.7651064908202705`*^9, 
   3.7660031307770123`*^9, 3.773054101674238*^9, 3.773054140925439*^9, 
   3.773054185322933*^9, 3.773076056776575*^9, 3.7732328561947613`*^9},
 CellLabel->"Out[55]=",ExpressionUUID->"93b7db82-ceea-4fa7-8a4f-2d777fa97435"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"ClearAll", "[", 
  RowBox[{"url", ",", "session"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"url", "=", 
  RowBox[{"URLBuild", "[", 
   RowBox[{"cd", ",", 
    RowBox[{"<|", 
     RowBox[{
      RowBox[{"\"\<x\>\"", "\[Rule]", "1.125"}], ",", 
      RowBox[{"\"\<y\>\"", "\[Rule]", "1.75"}], ",", 
      RowBox[{"\"\<z\>\"", "\[Rule]", "10"}]}], "|>"}]}], "]"}]}], "\n", 
 RowBox[{
  RowBox[{"session", "=", 
   RowBox[{"StartWebSession", "[", "\"\<Chrome\>\"", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"WebExecute", "[", 
   RowBox[{"session", ",", 
    RowBox[{"{", 
     RowBox[{"\"\<OpenPage\>\"", "\[Rule]", "url"}], "}"}]}], "]"}], 
  ";"}]}], "Input",
 CellChangeTimes->{
  3.764965859707683*^9, {3.7730540089072285`*^9, 3.773054034905204*^9}},
 CellLabel->"In[60]:=",ExpressionUUID->"75522026-60eb-445b-8325-ffa974e2b963"],

Cell[BoxData["\<\"https://www.wolframcloud.com/obj/mitch/live-coding/random-\
array-1?x=1.125&y=1.75&z=10\"\>"], "Output",
 CellChangeTimes->{
  3.764965806511852*^9, 3.76496586110566*^9, 3.7649658916269493`*^9, 
   3.764965973027185*^9, 3.764967798864584*^9, 3.765106493639264*^9, 
   3.766003132401024*^9, 3.7730541031992445`*^9, 3.773054142626439*^9, 
   3.7730541862968955`*^9, 3.773076057737544*^9, {3.7732328572067575`*^9, 
   3.7732328650783043`*^9}},
 CellLabel->"Out[61]=",ExpressionUUID->"19c68f1c-7bf7-4e4b-9db4-54d97ab28e7e"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["API-4) JSON - JS object of reals and text", "Chapter",
 CellChangeTimes->{{3.7638903241703033`*^9, 3.763890375120303*^9}, {
  3.763890564738304*^9, 3.7638906007673006`*^9}, {3.76397764729491*^9, 
  3.7639776725149107`*^9}, {3.763980787866053*^9, 3.763980802374055*^9}, {
  3.7732328891638317`*^9, 
  3.7732328899248295`*^9}},ExpressionUUID->"c40eb22b-0c5f-42cf-a719-\
14de774fec66"],

Cell["\<\
In addition to returning a list of random reals, return the name of each \
real.  WL already has the function IntegerName[ ] for integers but no \
equivalent for reals.  Let\[CloseCurlyQuote]s see the problem:\
\>", "Text",
 CellChangeTimes->{{3.765106864711295*^9, 3.765106895800294*^9}, {
   3.765108711421774*^9, 3.765108800258767*^9}, 3.7730544090032654`*^9, {
   3.7730544431192937`*^9, 
   3.7730544554692636`*^9}},ExpressionUUID->"a7670cd4-fc07-454b-abcb-\
0adfbfbc6109"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ToExpression", "[", 
  RowBox[{"-", "0"}], "]"}]], "Input",
 CellChangeTimes->{{3.7730544607562637`*^9, 3.7730544774252987`*^9}},
 CellLabel->"In[64]:=",ExpressionUUID->"63ae3dc6-749d-4368-9dc4-b32fb1d022df"],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{3.773054480366299*^9, 3.7732329110998096`*^9},
 CellLabel->"Out[64]=",ExpressionUUID->"531e5a25-29bb-4fb6-9623-f1795aa06671"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"ClearAll", "[", "stringReal", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"stringReal", "=", "\"\<-0.01\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"ToExpression", "[", "stringReal", "]"}], "\[IndentingNewLine]", 
 RowBox[{"Characters", "[", 
  RowBox[{"StringSplit", "[", 
   RowBox[{"stringReal", ",", "\"\<.\>\""}], "]"}], "]"}]}], "Input",
 CellChangeTimes->{{3.773054510953298*^9, 3.7730545214152946`*^9}, {
  3.7730546105373816`*^9, 3.7730546481254187`*^9}, {3.77305470786042*^9, 
  3.77305472480042*^9}, {3.7732329311268277`*^9, 3.7732329315008297`*^9}},
 CellLabel->"In[69]:=",ExpressionUUID->"d4a6cdba-b980-4cc5-bc9f-fd8c23e0800e"],

Cell[BoxData[
 RowBox[{"-", "0.01`"}]], "Output",
 CellChangeTimes->{
  3.7730546573024173`*^9, {3.773054708824418*^9, 3.7730547260754137`*^9}, 
   3.773076072645605*^9, {3.7732329203687935`*^9, 3.773232932359795*^9}},
 CellLabel->"Out[71]=",ExpressionUUID->"860edebe-a6ac-4edd-b64c-50c61e32886f"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\<\"-\"\>", ",", "\<\"0\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"0\"\>", ",", "\<\"1\"\>"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.7730546573024173`*^9, {3.773054708824418*^9, 3.7730547260754137`*^9}, 
   3.773076072645605*^9, {3.7732329203687935`*^9, 3.773232932370829*^9}},
 CellLabel->"Out[72]=",ExpressionUUID->"dba7129a-8a65-4a1e-8f8a-524c81d4897a"]
}, Open  ]],

Cell["\<\
We are going to make a function called \[OpenCurlyQuote]numberName\
\[CloseCurlyQuote] that produces the name of integers and reals.  Start by \
making a function that names reals.\
\>", "Text",
 CellChangeTimes->{{3.7730544126232963`*^9, 3.773054415155299*^9}, {
  3.7732329604711285`*^9, 
  3.7732330082294555`*^9}},ExpressionUUID->"dc368dd1-f901-4ae3-ab4e-\
c8a74d47f516"],

Cell[BoxData[{
 RowBox[{"ClearAll", "[", 
  RowBox[{"makeRealName", ",", "numberName"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"makeRealName", "[", 
     RowBox[{"l_List", ",", "r_List"}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"lSide", ",", "rSide"}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"lSide", "=", 
        RowBox[{"If", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"First", "[", "l", "]"}], "\[Equal]", "\"\<-\>\""}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{"\"\<negative\>\"", ",", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"Rest", "[", "l", "]"}], "//", "StringJoin"}], "//", 
              "ToExpression"}], "//", "IntegerName"}]}], "}"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"l", "//", "StringJoin"}], "//", "ToExpression"}], "//", 
            "IntegerName"}], "}"}]}], "\[IndentingNewLine]", "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"rSide", "=", 
        RowBox[{
         RowBox[{"r", "//", "ToExpression"}], "//", "IntegerName"}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"StringJoin", "[", 
        RowBox[{"Riffle", "[", 
         RowBox[{
          RowBox[{"Flatten", "[", 
           RowBox[{"{", 
            RowBox[{"lSide", ",", "\"\<point\>\"", ",", "rSide"}], "}"}], 
           "]"}], ",", "\"\< \>\""}], "]"}], "]"}]}]}], "\[IndentingNewLine]",
      "]"}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"numberName", "[", "n_Real", "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", "nbrList", "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"nbrList", "=", 
        RowBox[{"Characters", "[", 
         RowBox[{"StringSplit", "[", 
          RowBox[{
           RowBox[{"TextString", "[", "n", "]"}], ",", "\"\<.\>\""}], "]"}], 
         "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"makeRealName", "@@", "nbrList"}]}]}], "\[IndentingNewLine]", 
     "]"}]}], ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"overload", " ", "the", " ", "function"}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"numberName", "[", "n_Integer", "]"}], ":=", 
   RowBox[{"ToString", "[", 
    RowBox[{"IntegerName", "[", "n", "]"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.7639259970282*^9, 3.7639259978464146`*^9}, {
   3.763926833182241*^9, 3.7639268938773556`*^9}, {3.763926967668311*^9, 
   3.7639269791612487`*^9}, {3.7639270292572484`*^9, 3.763927068015889*^9}, {
   3.763927106940922*^9, 3.763927173178607*^9}, {3.7639272466950717`*^9, 
   3.7639272743981047`*^9}, {3.7639274076044116`*^9, 3.763927435616218*^9}, {
   3.763927473684247*^9, 3.7639274785393972`*^9}, {3.763927511104362*^9, 
   3.7639275376043563`*^9}, {3.7639276070463853`*^9, 
   3.7639276078414054`*^9}, {3.7639277703594327`*^9, 
   3.7639277706834326`*^9}, {3.763927808751089*^9, 3.7639278284141207`*^9}, {
   3.7639279260648613`*^9, 3.7639279299526434`*^9}, {3.763927998415865*^9, 
   3.763928001262867*^9}, 3.7639281173643107`*^9, {3.7639809502663355`*^9, 
   3.7639810357973213`*^9}, {3.7639924631311316`*^9, 3.7639924950161324`*^9}, 
   3.763992596232133*^9, {3.7639929042581453`*^9, 3.7639929229431314`*^9}, 
   3.763993021088339*^9, 3.763993569097357*^9, {3.763993607105341*^9, 
   3.76399361546134*^9}, 3.7639936474173403`*^9, {3.7651069135172963`*^9, 
   3.7651069319012957`*^9}, {3.765108515270768*^9, 3.7651085202497683`*^9}, {
   3.7651085735828023`*^9, 3.7651085944737673`*^9}, 3.765108653513776*^9, {
   3.765108773313772*^9, 3.76510878373977*^9}, {3.765109128054775*^9, 
   3.765109128231776*^9}, 3.76510984870877*^9, 3.7651146285672626`*^9, {
   3.7651168227903337`*^9, 3.76511686662731*^9}, 3.7651172491883087`*^9},
 Background->RGBColor[0.88, 1, 0.88],
 CellLabel->"In[73]:=",ExpressionUUID->"b15cacda-e310-4f99-9cd6-fc3ee457d42f"],

Cell[CellGroupData[{

Cell["test the function", "Subsubsection",
 CellChangeTimes->{{3.7639811567756195`*^9, 
  3.763981160474621*^9}},ExpressionUUID->"f18614bf-8d93-44ab-bc27-\
83071ca96328"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"ClearAll", "[", "testReal", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"testReal", "=", 
   RowBox[{"-", "0.001"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"StringSplit", "[", 
  RowBox[{
   RowBox[{"TextString", "[", "testReal", "]"}], ",", "\"\<.\>\""}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Characters", "[", 
  RowBox[{"StringSplit", "[", 
   RowBox[{
    RowBox[{"TextString", "[", "testReal", "]"}], ",", "\"\<.\>\""}], "]"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"f", "@@", 
  RowBox[{"Characters", "[", 
   RowBox[{"StringSplit", "[", 
    RowBox[{
     RowBox[{"TextString", "[", "testReal", "]"}], ",", "\"\<.\>\""}], "]"}], 
   "]"}]}]}], "Input",
 CellChangeTimes->{{3.7651128517015285`*^9, 3.765112859672529*^9}, {
   3.76511308744453*^9, 3.765113089184535*^9}, {3.765113150993558*^9, 
   3.7651131541755466`*^9}, {3.7651136981732597`*^9, 3.765113698506296*^9}, {
   3.7651137788262587`*^9, 3.765113794148264*^9}, {3.7651139121432734`*^9, 
   3.7651139611742578`*^9}, {3.7651140086472597`*^9, 
   3.7651140195102973`*^9}, {3.765114566467292*^9, 3.7651145845352592`*^9}, {
   3.7651146526622596`*^9, 3.7651146614422593`*^9}, 3.7651150778292594`*^9, {
   3.7651151549132586`*^9, 3.7651152259492607`*^9}, {3.7651152730622587`*^9, 
   3.7651152961173015`*^9}, {3.7651154686033106`*^9, 3.7651154733962593`*^9}, 
   3.765115987501259*^9, {3.76511603251031*^9, 3.765116045929309*^9}, {
   3.765116141906313*^9, 3.765116159671342*^9}, 3.7651162146623106`*^9, {
   3.7651164836363087`*^9, 3.7651164945303106`*^9}, {3.7651165443073597`*^9, 
   3.765116554797309*^9}, {3.7730548816999245`*^9, 3.773054885614388*^9}, 
   3.773233107850563*^9},
 CellLabel->"In[77]:=",ExpressionUUID->"cad607ec-722c-4d7f-a278-92dba0d253af"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"-0\"\>", ",", "\<\"001\"\>"}], "}"}]], "Output",
 CellChangeTimes->{
  3.765113795056275*^9, {3.7651139140192585`*^9, 3.7651139621672955`*^9}, {
   3.7651140093682885`*^9, 3.7651140203533*^9}, {3.765114567998293*^9, 
   3.7651145853852596`*^9}, 3.76511475967126*^9, 3.765115078539259*^9, {
   3.7651152056372595`*^9, 3.7651152266953135`*^9}, {3.765115279067273*^9, 
   3.765115296766261*^9}, 3.765115474119259*^9, 3.7651159892603006`*^9, {
   3.7651160332533116`*^9, 3.765116046639321*^9}, {3.7651161426573076`*^9, 
   3.765116160244337*^9}, 3.7651162154043083`*^9, {3.76511648405131*^9, 
   3.7651164950743084`*^9}, {3.7651165447163086`*^9, 3.7651165555223117`*^9}, 
   3.7651172586773434`*^9, 3.76600330820053*^9, {3.773054863788926*^9, 
   3.773054886031375*^9}, 3.7730760818315735`*^9, 3.773233108926572*^9},
 CellLabel->"Out[79]=",ExpressionUUID->"b0e84739-8a6a-4898-86fe-9b4f94e6379c"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\<\"-\"\>", ",", "\<\"0\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"0\"\>", ",", "\<\"0\"\>", ",", "\<\"1\"\>"}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.765113795056275*^9, {3.7651139140192585`*^9, 3.7651139621672955`*^9}, {
   3.7651140093682885`*^9, 3.7651140203533*^9}, {3.765114567998293*^9, 
   3.7651145853852596`*^9}, 3.76511475967126*^9, 3.765115078539259*^9, {
   3.7651152056372595`*^9, 3.7651152266953135`*^9}, {3.765115279067273*^9, 
   3.765115296766261*^9}, 3.765115474119259*^9, 3.7651159892603006`*^9, {
   3.7651160332533116`*^9, 3.765116046639321*^9}, {3.7651161426573076`*^9, 
   3.765116160244337*^9}, 3.7651162154043083`*^9, {3.76511648405131*^9, 
   3.7651164950743084`*^9}, {3.7651165447163086`*^9, 3.7651165555223117`*^9}, 
   3.7651172586773434`*^9, 3.76600330820053*^9, {3.773054863788926*^9, 
   3.773054886031375*^9}, 3.7730760818315735`*^9, 3.7732331089345684`*^9},
 CellLabel->"Out[80]=",ExpressionUUID->"c13727ae-1285-41c7-8389-4ffd6463dfdc"],

Cell[BoxData[
 RowBox[{"f", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\<\"-\"\>", ",", "\<\"0\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"0\"\>", ",", "\<\"0\"\>", ",", "\<\"1\"\>"}], "}"}]}], 
  "]"}]], "Output",
 CellChangeTimes->{
  3.765113795056275*^9, {3.7651139140192585`*^9, 3.7651139621672955`*^9}, {
   3.7651140093682885`*^9, 3.7651140203533*^9}, {3.765114567998293*^9, 
   3.7651145853852596`*^9}, 3.76511475967126*^9, 3.765115078539259*^9, {
   3.7651152056372595`*^9, 3.7651152266953135`*^9}, {3.765115279067273*^9, 
   3.765115296766261*^9}, 3.765115474119259*^9, 3.7651159892603006`*^9, {
   3.7651160332533116`*^9, 3.765116046639321*^9}, {3.7651161426573076`*^9, 
   3.765116160244337*^9}, 3.7651162154043083`*^9, {3.76511648405131*^9, 
   3.7651164950743084`*^9}, {3.7651165447163086`*^9, 3.7651165555223117`*^9}, 
   3.7651172586773434`*^9, 3.76600330820053*^9, {3.773054863788926*^9, 
   3.773054886031375*^9}, 3.7730760818315735`*^9, 3.7732331089405375`*^9},
 CellLabel->"Out[81]=",ExpressionUUID->"b8f089cc-d1da-4f45-bcd9-022419ed47ce"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"makeRealName", "@@", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     RowBox[{"testReal", "//", "TextString"}], "//", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"StringSplit", "[", 
        RowBox[{"#", ",", "\"\<.\>\""}], "]"}], "&"}], ")"}]}], "//", 
    "Characters"}], ")"}]}], "\[IndentingNewLine]", 
 RowBox[{"numberName", "[", "testReal", "]"}]}], "Input",
 CellChangeTimes->{{3.765113983140264*^9, 3.7651139885932713`*^9}, {
   3.7651140349583*^9, 3.7651140483022594`*^9}, {3.765114107508259*^9, 
   3.765114129860267*^9}, {3.7651141803712673`*^9, 3.7651145512392597`*^9}, {
   3.7651149486752863`*^9, 3.7651149536062646`*^9}, {3.765115343534259*^9, 
   3.7651153795472593`*^9}, {3.765115501102295*^9, 3.7651156875122595`*^9}, {
   3.7651157205762615`*^9, 3.76511581613326*^9}, {3.7651158657862587`*^9, 
   3.7651159380522585`*^9}, {3.765116003408309*^9, 3.765116024073332*^9}, {
   3.765116077133309*^9, 3.765116132165308*^9}, {3.7651161812373085`*^9, 
   3.7651161906423407`*^9}, 3.7651163219063115`*^9, {3.765116353221308*^9, 
   3.7651164741973085`*^9}, {3.765116505441308*^9, 3.7651165367843094`*^9}, {
   3.765116578724309*^9, 3.765116581406309*^9}, 3.76511681750031*^9, {
   3.765116917568308*^9, 3.7651169426363196`*^9}, 3.7660038203870897`*^9},
 Background->RGBColor[0.88, 1, 0.88],
 CellLabel->"In[71]:=",ExpressionUUID->"00beeb85-af9f-4f14-99b0-99a9cd10711c"],

Cell[BoxData["\<\"negative zero point zero zero one\"\>"], "Output",
 CellChangeTimes->{
  3.7651142634232965`*^9, {3.765114293954261*^9, 3.7651144005022745`*^9}, 
   3.7651144354462595`*^9, {3.76511447953226*^9, 3.76511458678426*^9}, 
   3.76511476074426*^9, 3.7651149554722633`*^9, 3.76511508334826*^9, {
   3.76511535256526*^9, 3.765115380775298*^9}, 3.7651154878162923`*^9, {
   3.7651155483802595`*^9, 3.7651156440972595`*^9}, 3.7651156888212643`*^9, {
   3.765115725233265*^9, 3.7651158168702974`*^9}, 3.76511588697326*^9, 
   3.76511594007126*^9, {3.765115997048315*^9, 3.7651160475933094`*^9}, {
   3.765116133120338*^9, 3.765116161370345*^9}, {3.765116197280325*^9, 
   3.765116216617346*^9}, 3.7651163239923368`*^9, 3.765116357051314*^9, {
   3.7651164764733577`*^9, 3.7651165565503426`*^9}, {3.765116929991309*^9, 
   3.765116943202314*^9}, 3.76511726042831*^9, 3.766003322926564*^9, 
   3.766003823027099*^9, 3.773054871117895*^9, 3.7730549340523577`*^9, 
   3.7730760842155876`*^9},
 CellLabel->"Out[71]=",ExpressionUUID->"d3918526-6fae-49e9-8b36-3484003a384f"],

Cell[BoxData["\<\"negative zero point zero zero one\"\>"], "Output",
 CellChangeTimes->{
  3.7651142634232965`*^9, {3.765114293954261*^9, 3.7651144005022745`*^9}, 
   3.7651144354462595`*^9, {3.76511447953226*^9, 3.76511458678426*^9}, 
   3.76511476074426*^9, 3.7651149554722633`*^9, 3.76511508334826*^9, {
   3.76511535256526*^9, 3.765115380775298*^9}, 3.7651154878162923`*^9, {
   3.7651155483802595`*^9, 3.7651156440972595`*^9}, 3.7651156888212643`*^9, {
   3.765115725233265*^9, 3.7651158168702974`*^9}, 3.76511588697326*^9, 
   3.76511594007126*^9, {3.765115997048315*^9, 3.7651160475933094`*^9}, {
   3.765116133120338*^9, 3.765116161370345*^9}, {3.765116197280325*^9, 
   3.765116216617346*^9}, 3.7651163239923368`*^9, 3.765116357051314*^9, {
   3.7651164764733577`*^9, 3.7651165565503426`*^9}, {3.765116929991309*^9, 
   3.765116943202314*^9}, 3.76511726042831*^9, 3.766003322926564*^9, 
   3.766003823027099*^9, 3.773054871117895*^9, 3.7730549340523577`*^9, 
   3.773076084219572*^9},
 CellLabel->"Out[72]=",ExpressionUUID->"225329c6-f906-41c2-accc-8dc4eeb56d30"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"ClearAll", "[", "testList", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"testList", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1.0001"}], ",", 
     RowBox[{"-", "1.001"}], ",", 
     RowBox[{"-", "1.01"}], ",", 
     RowBox[{"-", "1.1"}], ",", 
     RowBox[{"-", "1"}], ",", 
     RowBox[{"-", "0.01"}], ",", 
     RowBox[{"-", "0.001"}], ",", 
     RowBox[{"-", "0.0"}], ",", 
     RowBox[{"-", "0"}], ",", "0", ",", "0.0", ",", "0.001", ",", "0.01", ",",
      "1", ",", "1.1", ",", "1.01", ",", "1.001", ",", "1.0001"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"#", ",", 
      RowBox[{"numberName", "[", "#", "]"}]}], "}"}], "&"}], "/@", 
   "testList"}], "//", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"Grid", "[", 
     RowBox[{"#", ",", 
      RowBox[{"Frame", "\[Rule]", "All"}]}], "]"}], "&"}], ")"}]}]}], "Input",
 CellChangeTimes->{{3.7651133243105316`*^9, 3.7651133315935307`*^9}, {
  3.765113379202546*^9, 3.765113388679533*^9}, {3.7651147739163013`*^9, 
  3.765114811065276*^9}, {3.7651149937012606`*^9, 3.76511500193132*^9}, {
  3.7651171047983084`*^9, 3.7651172308553157`*^9}, {3.765117272469309*^9, 
  3.765117314910308*^9}, {3.7660038681590633`*^9, 3.766003893634472*^9}, {
  3.773054954601379*^9, 3.773054979516383*^9}},
 CellLabel->"In[82]:=",ExpressionUUID->"5e5076e8-5673-4aa5-94a6-60b9284bd09b"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     RowBox[{
     "-", "1.0001`"}], "\<\"negative one point zero zero zero one\"\>"},
    {
     RowBox[{"-", "1.001`"}], "\<\"negative one point zero zero one\"\>"},
    {
     RowBox[{"-", "1.01`"}], "\<\"negative one point zero one\"\>"},
    {
     RowBox[{"-", "1.1`"}], "\<\"negative one point one\"\>"},
    {
     RowBox[{"-", "1"}], "\<\"negative one\"\>"},
    {
     RowBox[{"-", "0.01`"}], "\<\"negative zero point zero one\"\>"},
    {
     RowBox[{"-", "0.001`"}], "\<\"negative zero point zero zero one\"\>"},
    {"0.`", "\<\"zero point zero\"\>"},
    {"0", "\<\"zero\"\>"},
    {"0", "\<\"zero\"\>"},
    {"0.`", "\<\"zero point zero\"\>"},
    {"0.001`", "\<\"zero point zero zero one\"\>"},
    {"0.01`", "\<\"zero point zero one\"\>"},
    {"1", "\<\"one\"\>"},
    {"1.1`", "\<\"one point one\"\>"},
    {"1.01`", "\<\"one point zero one\"\>"},
    {"1.001`", "\<\"one point zero zero one\"\>"},
    {"1.0001`", "\<\"one point zero zero zero one\"\>"}
   },
   AutoDelete->False,
   GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{
  3.76511333227853*^9, 3.7651133906615534`*^9, {3.7651147799392586`*^9, 
   3.765114793925265*^9}, {3.7651149976472597`*^9, 3.7651150037522635`*^9}, 
   3.765116782627308*^9, {3.7651171367693114`*^9, 3.765117152966322*^9}, {
   3.7651171882533154`*^9, 3.7651172070103097`*^9}, {3.7651172617853427`*^9, 
   3.765117282403328*^9}, 3.7651173153843117`*^9, 3.7660033335635443`*^9, 
   3.7660038372960625`*^9, 3.7660038943565083`*^9, 3.7730549832180448`*^9, 
   3.773076085526579*^9, 3.7732332455467978`*^9},
 CellLabel->"Out[84]=",ExpressionUUID->"92fdc47d-7d58-47dd-816f-a9477c9818a5"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["test the JSON builder", "Subsubsection",
 CellChangeTimes->{{3.7639811747606173`*^9, 
  3.7639811938886175`*^9}},ExpressionUUID->"f6266c92-78f4-4011-b9cc-\
981f9db2ca05"],

Cell["Now we put together the JSON response from our API.", "Text",
 CellChangeTimes->{{3.7730550228490124`*^9, 
  3.773055051484009*^9}},ExpressionUUID->"f95c6624-7eba-4147-8856-\
60532ce71c1a"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"ClearAll", "[", 
  RowBox[{"testX", ",", "testY", ",", "testZ"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"testX", "=", 
   RowBox[{"-", "1.2"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"testY", "=", "1.2"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"testZ", "=", "10"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"AssociationThread", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\"\<index\>\"", ",", "\"\<value\>\"", ",", "\"\<name\>\""}], 
      "}"}], "\[Rule]", "#"}], "]"}], "&"}], "/@", 
  RowBox[{"Transpose", "[", "\[IndentingNewLine]", 
   RowBox[{"Join", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"Range", "[", "testZ", "]"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"Transpose", "[", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"{", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"ToString", "[", "#", "]"}], ",", "\[IndentingNewLine]", 
           RowBox[{"numberName", "[", "#", "]"}]}], "\[IndentingNewLine]", 
          "}"}], "&"}], "/@", 
        RowBox[{"Round", "[", 
         RowBox[{
          RowBox[{"RandomReal", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"testX", ",", "testY"}], "}"}], ",", "testZ"}], "]"}], 
          ",", "0.001"}], "]"}]}], ")"}], "]"}]}], "\[IndentingNewLine]", 
    "]"}], "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"%", "//", "Dataset"}]}], "Input",
 CellChangeTimes->{{3.7639488700829124`*^9, 3.763948932911913*^9}, {
   3.7639489798079147`*^9, 3.7639489990829124`*^9}, {3.7639490351439133`*^9, 
   3.763949046527914*^9}, {3.7639811062363214`*^9, 3.763981113269619*^9}, {
   3.763991784147133*^9, 3.7639918219001317`*^9}, {3.7639921246881332`*^9, 
   3.7639921263141346`*^9}, {3.7639925184641323`*^9, 3.7639925372711315`*^9}, 
   3.765108819522767*^9, {3.7651175058853106`*^9, 3.7651175083043127`*^9}, {
   3.766003975193472*^9, 3.7660039804354725`*^9}},
 CellLabel->"In[85]:=",ExpressionUUID->"7dcc7522-a301-467c-badf-1f7641d490ac"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"index\"\>", "\[Rule]", "1"}], ",", 
     RowBox[{"\<\"value\"\>", "\[Rule]", "\<\"-0.974\"\>"}], ",", 
     RowBox[{"\<\"name\"\>", 
      "\[Rule]", "\<\"negative zero point nine seven four\"\>"}]}], 
    "\[RightAssociation]"}], ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"index\"\>", "\[Rule]", "2"}], ",", 
     RowBox[{"\<\"value\"\>", "\[Rule]", "\<\"-0.367\"\>"}], ",", 
     RowBox[{"\<\"name\"\>", 
      "\[Rule]", "\<\"negative zero point three six seven\"\>"}]}], 
    "\[RightAssociation]"}], ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"index\"\>", "\[Rule]", "3"}], ",", 
     RowBox[{"\<\"value\"\>", "\[Rule]", "\<\"0.593\"\>"}], ",", 
     RowBox[{"\<\"name\"\>", 
      "\[Rule]", "\<\"zero point five nine three\"\>"}]}], 
    "\[RightAssociation]"}], ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"index\"\>", "\[Rule]", "4"}], ",", 
     RowBox[{"\<\"value\"\>", "\[Rule]", "\<\"0.632\"\>"}], ",", 
     RowBox[{"\<\"name\"\>", 
      "\[Rule]", "\<\"zero point six three two\"\>"}]}], 
    "\[RightAssociation]"}], ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"index\"\>", "\[Rule]", "5"}], ",", 
     RowBox[{"\<\"value\"\>", "\[Rule]", "\<\"-0.922\"\>"}], ",", 
     RowBox[{"\<\"name\"\>", 
      "\[Rule]", "\<\"negative zero point nine two two\"\>"}]}], 
    "\[RightAssociation]"}], ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"index\"\>", "\[Rule]", "6"}], ",", 
     RowBox[{"\<\"value\"\>", "\[Rule]", "\<\"-0.81\"\>"}], ",", 
     RowBox[{"\<\"name\"\>", 
      "\[Rule]", "\<\"negative zero point eight one\"\>"}]}], 
    "\[RightAssociation]"}], ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"index\"\>", "\[Rule]", "7"}], ",", 
     RowBox[{"\<\"value\"\>", "\[Rule]", "\<\"1.024\"\>"}], ",", 
     RowBox[{"\<\"name\"\>", "\[Rule]", "\<\"one point zero two four\"\>"}]}],
     "\[RightAssociation]"}], ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"index\"\>", "\[Rule]", "8"}], ",", 
     RowBox[{"\<\"value\"\>", "\[Rule]", "\<\"-0.806\"\>"}], ",", 
     RowBox[{"\<\"name\"\>", 
      "\[Rule]", "\<\"negative zero point eight zero six\"\>"}]}], 
    "\[RightAssociation]"}], ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"index\"\>", "\[Rule]", "9"}], ",", 
     RowBox[{"\<\"value\"\>", "\[Rule]", "\<\"0.736\"\>"}], ",", 
     RowBox[{"\<\"name\"\>", 
      "\[Rule]", "\<\"zero point seven three six\"\>"}]}], 
    "\[RightAssociation]"}], ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"index\"\>", "\[Rule]", "10"}], ",", 
     RowBox[{"\<\"value\"\>", "\[Rule]", "\<\"-0.745\"\>"}], ",", 
     RowBox[{"\<\"name\"\>", 
      "\[Rule]", "\<\"negative zero point seven four five\"\>"}]}], 
    "\[RightAssociation]"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.763948386848915*^9, {3.7639488490789146`*^9, 3.763948935341915*^9}, {
   3.763948987171914*^9, 3.763948999841915*^9}, {3.7639490393699126`*^9, 
   3.7639490479269133`*^9}, 3.7639811145296183`*^9, 3.7639918249241333`*^9, 
   3.763992127761134*^9, {3.7639925225511312`*^9, 3.7639925388031316`*^9}, 
   3.7639926034641323`*^9, 3.763992939579132*^9, 3.76399311521434*^9, {
   3.7639936243023405`*^9, 3.76399365721035*^9}, 3.7649660770122647`*^9, 
   3.7649678178200665`*^9, {3.765117484706339*^9, 3.7651175090693197`*^9}, 
   3.7660039489425063`*^9, 3.766004002797518*^9, 3.766004112853507*^9, 
   3.773055064434043*^9, 3.7730760919356074`*^9, 3.7732332560661173`*^9},
 CellLabel->"Out[89]=",ExpressionUUID->"45d2ace9-c9a4-4a21-bc93-5bcf4c707968"],

Cell[BoxData[
 TemplateBox[{TagBox[
    DynamicModuleBox[{
     TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
      Data`UnorderedAssociation[
       "RowCount" -> 10, "Length" -> 10, "InitialType" -> TypeSystem`Vector[
          TypeSystem`Struct[{"index", "value", "name"}, {
            TypeSystem`Atom[Integer], 
            TypeSystem`Atom[String], 
            TypeSystem`Atom[String]}], 10], "Shape" -> 
        TypeSystem`PackageScope`HeaderShape[
          
          Association[{All, "index"} -> 1, {All, "value"} -> 1, {All, "name"} -> 
           1], 
          TypeSystem`PackageScope`Limited[
           TypeSystem`PackageScope`ColumnShape[
            TypeSystem`PackageScope`RowShape[
             Association[
             "index" -> TypeSystem`PackageScope`AtomShape[34], "value" -> 
              TypeSystem`PackageScope`AtomShape[57.60000000000001], "name" -> 
              TypeSystem`PackageScope`AtomShape[336.00000000000006`]]]], 
           10, {}]], "InitialData" -> 
        TypeSystem`PackageScope`CacheHandle[1935215306], "Type" -> 
        TypeSystem`Vector[
          TypeSystem`Struct[{"index", "value", "name"}, {
            TypeSystem`Atom[Integer], 
            TypeSystem`Atom[String], 
            TypeSystem`Atom[String]}], 10], "HandleQ" -> True, "RowTarget" -> 
        20, "Data" -> TypeSystem`PackageScope`CacheHandle[1935215306]], 
      TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
      TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 1, 
      TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
      DynamicModule[{
        TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
           Style[
            Grid[{{
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"index\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"index\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1029609155][{All, "index"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1029609155][
                  GeneralUtilities`Slice[All, "index"]], "Mouse"], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"value\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"value\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1029609155][{All, "value"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1029609155][
                  GeneralUtilities`Slice[All, "value"]], "Mouse"], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"name\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"name\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1029609155][{All, "name"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1029609155][
                  GeneralUtilities`Slice[All, "name"]], "Mouse"], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["1"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1029609155][
                  GeneralUtilities`Slice[1, 
                   Key["index"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["-0.974", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1029609155][
                  GeneralUtilities`Slice[1, 
                   Key["value"]]], "Mouse"], 
                ImageSize -> {{57.60000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["negative zero point nine seven four", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1029609155][
                  GeneralUtilities`Slice[1, 
                   Key["name"]]], "Mouse"], 
                ImageSize -> {{336.00000000000006`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["2"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1029609155][
                  GeneralUtilities`Slice[2, 
                   Key["index"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["-0.367", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1029609155][
                  GeneralUtilities`Slice[2, 
                   Key["value"]]], "Mouse"], 
                ImageSize -> {{57.60000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["negative zero point three six seven", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1029609155][
                  GeneralUtilities`Slice[2, 
                   Key["name"]]], "Mouse"], 
                ImageSize -> {{336.00000000000006`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["3"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1029609155][
                  GeneralUtilities`Slice[3, 
                   Key["index"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["0.593", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1029609155][
                  GeneralUtilities`Slice[3, 
                   Key["value"]]], "Mouse"], 
                ImageSize -> {{57.60000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["zero point five nine three", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1029609155][
                  GeneralUtilities`Slice[3, 
                   Key["name"]]], "Mouse"], 
                ImageSize -> {{336.00000000000006`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["4"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1029609155][
                  GeneralUtilities`Slice[4, 
                   Key["index"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["0.632", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1029609155][
                  GeneralUtilities`Slice[4, 
                   Key["value"]]], "Mouse"], 
                ImageSize -> {{57.60000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["zero point six three two", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1029609155][
                  GeneralUtilities`Slice[4, 
                   Key["name"]]], "Mouse"], 
                ImageSize -> {{336.00000000000006`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["5"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1029609155][
                  GeneralUtilities`Slice[5, 
                   Key["index"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["-0.922", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1029609155][
                  GeneralUtilities`Slice[5, 
                   Key["value"]]], "Mouse"], 
                ImageSize -> {{57.60000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["negative zero point nine two two", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1029609155][
                  GeneralUtilities`Slice[5, 
                   Key["name"]]], "Mouse"], 
                ImageSize -> {{336.00000000000006`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["6"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1029609155][
                  GeneralUtilities`Slice[6, 
                   Key["index"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["-0.81", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1029609155][
                  GeneralUtilities`Slice[6, 
                   Key["value"]]], "Mouse"], 
                ImageSize -> {{57.60000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["negative zero point eight one", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1029609155][
                  GeneralUtilities`Slice[6, 
                   Key["name"]]], "Mouse"], 
                ImageSize -> {{336.00000000000006`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["7"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1029609155][
                  GeneralUtilities`Slice[7, 
                   Key["index"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["1.024", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1029609155][
                  GeneralUtilities`Slice[7, 
                   Key["value"]]], "Mouse"], 
                ImageSize -> {{57.60000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["one point zero two four", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1029609155][
                  GeneralUtilities`Slice[7, 
                   Key["name"]]], "Mouse"], 
                ImageSize -> {{336.00000000000006`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["8"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1029609155][
                  GeneralUtilities`Slice[8, 
                   Key["index"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["-0.806", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1029609155][
                  GeneralUtilities`Slice[8, 
                   Key["value"]]], "Mouse"], 
                ImageSize -> {{57.60000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["negative zero point eight zero six", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1029609155][
                  GeneralUtilities`Slice[8, 
                   Key["name"]]], "Mouse"], 
                ImageSize -> {{336.00000000000006`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["9"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1029609155][
                  GeneralUtilities`Slice[9, 
                   Key["index"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["0.736", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1029609155][
                  GeneralUtilities`Slice[9, 
                   Key["value"]]], "Mouse"], 
                ImageSize -> {{57.60000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["zero point seven three six", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1029609155][
                  GeneralUtilities`Slice[9, 
                   Key["name"]]], "Mouse"], 
                ImageSize -> {{336.00000000000006`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["10"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1029609155][
                  GeneralUtilities`Slice[10, 
                   Key["index"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["-0.745", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1029609155][
                  GeneralUtilities`Slice[10, 
                   Key["value"]]], "Mouse"], 
                ImageSize -> {{57.60000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["negative zero point seven four five", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1029609155][
                  GeneralUtilities`Slice[10, 
                   Key["name"]]], "Mouse"], 
                ImageSize -> {{336.00000000000006`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}}, BaseStyle -> {ContextMenu -> {
                 MenuItem["Copy position to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Copy data to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], Delimiter, 
                 MenuItem["Paste position in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Paste data in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic]}, FontFamily -> "Verdana", 
               FontSize -> 12}, Alignment -> Left, RowMinHeight -> 1.5, 
             Dividers -> All, FrameStyle -> GrayLevel[0.85], 
             BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
            LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False,
             ShowAutoStyles -> False]], 
         TypeSystem`NestedGrid`PackagePrivate`initialQ = True, 
         TypeSystem`NestedGrid`PackagePrivate`self = $Failed}, 
        Dynamic[
         TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
         TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
            Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
            
            Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
              TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
              TypeSystem`NestedGrid`PackagePrivate`LookupCacheValue[
                TypeSystem`NestedGrid`PackagePrivate`$state$$["Data"]]}, 
             TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = 
              If[TypeSystem`NestedGrid`PackagePrivate`tmpData$ === 
                TypeSystem`NestedGrid`PackagePrivate`$NotCached, 
                TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1029609155][
                TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
               Not[
                FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
               TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
               TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
          TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
          TypeSystem`NestedGrid`PackagePrivate`$pos$$; If[
            FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
            TypeSystem`SparseGrid[
             TypeSystem`H["(data no longer present)"]], 
            If[GeneralUtilities`$DebugMode, 
             Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
               TypeSystem`NestedGrid`PackagePrivate`formatState[
               TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                TypeSystem`NestedGrid`PackagePrivate`$pos$$]}], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
         TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$pos$$}], 
        DynamicModuleValues :> {}], 
      TypeSystem`NestedGrid`PackagePrivate`$posCell$$, 
      TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
        TypeSystem`NestedGrid`PackagePrivate`alignBar[
        TypeSystem`NestedGrid`PackagePrivate`$state$$][
         TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
          TypeSystem`PackageScope`Pathbar[
          TypeSystem`NestedGrid`PackagePrivate`$path$$, 
           TypeSystem`NestedGrid`PackagePrivate`updateState[
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
            TypeSystem`NestedGrid`PackagePrivate`$path$$, 
            TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1029609155]]]], 
        TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
      TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Framed[
        Dynamic[
         Replace[
          MouseAnnotation[Null], {
          TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1029609155][Null] -> 
           "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1029609155][
             Pattern[TypeSystem`NestedGrid`PackagePrivate`path, 
              Blank[]]] :> (
            TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
             TypeSystem`NestedGrid`PackagePrivate`path; 
            TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
             TypeSystem`NestedGrid`PackagePrivate`path, 
              TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
           Spacer[10], Blank[] :> Spacer[10]}], TrackedSymbols :> {}], 
        FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
        Top, ImageSize -> {Automatic, 14}]}, 
     DynamicBox[
      ToBoxes[
       Column[
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, {
          TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
          TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`alignBar[
           TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}, {
         TypeSystem`NestedGrid`PackagePrivate`$topBar$$, 
          TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
          TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`alignBar[
           TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}], Spacings -> 
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, 
          0, {{}, {0, 0.05, 0}}]], StandardForm], 
      ImageSizeCache -> {496., {207., 216.}}, 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     BaseStyle -> {LineBreakWithin -> False}, Deinitialization :> 
     TypeSystem`NestedGrid`PackagePrivate`deleteState[
      TypeSystem`NestedGrid`PackagePrivate`$state$$], 
     DynamicModuleValues :> {}, Initialization :> 
     Block[{$ContextPath = $ContextPath}, 
       Needs["TypeSystem`"]]], Deploy, DefaultBaseStyle -> "Deploy"]},
  "CopyTag",
  DisplayFunction->(#& ),
  InterpretationFunction->("Dataset[<>]"& )]], "Output",
 CellChangeTimes->{
  3.763948386848915*^9, {3.7639488490789146`*^9, 3.763948935341915*^9}, {
   3.763948987171914*^9, 3.763948999841915*^9}, {3.7639490393699126`*^9, 
   3.7639490479269133`*^9}, 3.7639811145296183`*^9, 3.7639918249241333`*^9, 
   3.763992127761134*^9, {3.7639925225511312`*^9, 3.7639925388031316`*^9}, 
   3.7639926034641323`*^9, 3.763992939579132*^9, 3.76399311521434*^9, {
   3.7639936243023405`*^9, 3.76399365721035*^9}, 3.7649660770122647`*^9, 
   3.7649678178200665`*^9, {3.765117484706339*^9, 3.7651175090693197`*^9}, 
   3.7660039489425063`*^9, 3.766004002797518*^9, 3.766004112853507*^9, 
   3.773055064434043*^9, 3.7730760919356074`*^9, 3.7732332561481056`*^9},
 CellLabel->"Out[90]=",ExpressionUUID->"cc19e845-de8a-4277-a0c3-aa3ab1875970"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["make the API", "Subsubsection",
 CellChangeTimes->{{3.763981239602621*^9, 
  3.7639812425216184`*^9}},ExpressionUUID->"9f4fe94f-29fa-4b3a-b453-\
291f2037aceb"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"ClearAll", "[", "api", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"api", "=", " ", 
   RowBox[{"APIFunction", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"\"\<x\>\"", "\[Rule]", "\"\<Real\>\""}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"\"\<y\>\"", "\[Rule]", "\"\<Real\>\""}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"\"\<z\>\"", "\[Rule]", "\"\<Integer\>\""}]}], 
      "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"AssociationThread", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
           "\"\<index\>\"", ",", "\"\<value\>\"", ",", "\"\<name\>\""}], 
           "}"}], "\[Rule]", "#"}], "]"}], "&"}], "/@", 
       RowBox[{"Transpose", "[", "\[IndentingNewLine]", 
        RowBox[{"Join", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"Range", "[", "#z", "]"}], "}"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"Transpose", "[", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"ToString", "[", "#", "]"}], ",", 
                RowBox[{"numberName", "[", "#", "]"}]}], "}"}], "&"}], "/@", 
             RowBox[{"Round", "[", 
              RowBox[{
               RowBox[{"RandomReal", "[", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"#x", ",", "#y"}], "}"}], ",", "#z"}], "]"}], ",", 
               "0.001"}], "]"}]}], ")"}], "]"}]}], "\[IndentingNewLine]", 
         "]"}], "\[IndentingNewLine]", "]"}]}], "&"}], ",", 
     "\[IndentingNewLine]", " ", "\"\<JSON\>\""}], "\[IndentingNewLine]", 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"api", "[", 
  RowBox[{"<|", 
   RowBox[{
    RowBox[{"\"\<x\>\"", "\[Rule]", "1.125"}], ",", 
    RowBox[{"\"\<y\>\"", "\[Rule]", "10.75"}], ",", 
    RowBox[{"\"\<z\>\"", "\[Rule]", "10"}]}], "|>"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"%", "//", "Dataset"}]}], "Input",
 CellChangeTimes->{{3.763901121307186*^9, 3.763901256902187*^9}, {
   3.763916236533563*^9, 3.7639162926155634`*^9}, {3.763919066994918*^9, 
   3.7639190671439037`*^9}, {3.7639207143211665`*^9, 
   3.7639207152071676`*^9}, {3.7639210013791676`*^9, 3.763921051540167*^9}, {
   3.7639217826340637`*^9, 3.7639217985300617`*^9}, {3.763921863094063*^9, 
   3.7639218661150618`*^9}, {3.7639219205955763`*^9, 
   3.7639219394975843`*^9}, {3.763922008099579*^9, 3.763922015996581*^9}, {
   3.7639220506155787`*^9, 3.7639220689125786`*^9}, {3.7639222117195797`*^9, 
   3.7639223247375774`*^9}, {3.7639225606175776`*^9, 
   3.7639225837425785`*^9}, {3.763925049089897*^9, 3.763925050714862*^9}, {
   3.7639281857041254`*^9, 3.763928190203125*^9}, {3.76392831239211*^9, 
   3.763928318759647*^9}, {3.763928365373703*^9, 3.763928394548895*^9}, 
   3.7639286800026054`*^9, {3.7639287445004606`*^9, 3.763928746829504*^9}, {
   3.7639287811557226`*^9, 3.7639288041347237`*^9}, {3.763945431130155*^9, 
   3.763945433420267*^9}, {3.7639455013592668`*^9, 3.7639455019952836`*^9}, {
   3.7639490765789165`*^9, 3.7639491025109143`*^9}, 3.763984629771115*^9, {
   3.7649660453792324`*^9, 3.7649660491372614`*^9}, 3.765108827643777*^9, {
   3.77305523360324*^9, 3.7730552337522335`*^9}},
 CellLabel->"In[91]:=",ExpressionUUID->"9245bc39-25d0-44df-9270-b53d7c96d1e4"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"index\"\>", "\[Rule]", "1"}], ",", 
     RowBox[{"\<\"value\"\>", "\[Rule]", "\<\"1.465\"\>"}], ",", 
     RowBox[{"\<\"name\"\>", "\[Rule]", "\<\"one point four six five\"\>"}]}],
     "\[RightAssociation]"}], ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"index\"\>", "\[Rule]", "2"}], ",", 
     RowBox[{"\<\"value\"\>", "\[Rule]", "\<\"8.632\"\>"}], ",", 
     RowBox[{"\<\"name\"\>", 
      "\[Rule]", "\<\"eight point six three two\"\>"}]}], 
    "\[RightAssociation]"}], ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"index\"\>", "\[Rule]", "3"}], ",", 
     RowBox[{"\<\"value\"\>", "\[Rule]", "\<\"5.809\"\>"}], ",", 
     RowBox[{"\<\"name\"\>", 
      "\[Rule]", "\<\"five point eight zero nine\"\>"}]}], 
    "\[RightAssociation]"}], ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"index\"\>", "\[Rule]", "4"}], ",", 
     RowBox[{"\<\"value\"\>", "\[Rule]", "\<\"7.274\"\>"}], ",", 
     RowBox[{"\<\"name\"\>", 
      "\[Rule]", "\<\"seven point two seven four\"\>"}]}], 
    "\[RightAssociation]"}], ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"index\"\>", "\[Rule]", "5"}], ",", 
     RowBox[{"\<\"value\"\>", "\[Rule]", "\<\"7.45\"\>"}], ",", 
     RowBox[{"\<\"name\"\>", "\[Rule]", "\<\"seven point four five\"\>"}]}], 
    "\[RightAssociation]"}], ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"index\"\>", "\[Rule]", "6"}], ",", 
     RowBox[{"\<\"value\"\>", "\[Rule]", "\<\"3.296\"\>"}], ",", 
     RowBox[{"\<\"name\"\>", 
      "\[Rule]", "\<\"three point two nine six\"\>"}]}], 
    "\[RightAssociation]"}], ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"index\"\>", "\[Rule]", "7"}], ",", 
     RowBox[{"\<\"value\"\>", "\[Rule]", "\<\"5.377\"\>"}], ",", 
     RowBox[{"\<\"name\"\>", 
      "\[Rule]", "\<\"five point three seven seven\"\>"}]}], 
    "\[RightAssociation]"}], ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"index\"\>", "\[Rule]", "8"}], ",", 
     RowBox[{"\<\"value\"\>", "\[Rule]", "\<\"6.383\"\>"}], ",", 
     RowBox[{"\<\"name\"\>", 
      "\[Rule]", "\<\"six point three eight three\"\>"}]}], 
    "\[RightAssociation]"}], ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"index\"\>", "\[Rule]", "9"}], ",", 
     RowBox[{"\<\"value\"\>", "\[Rule]", "\<\"8.42\"\>"}], ",", 
     RowBox[{"\<\"name\"\>", "\[Rule]", "\<\"eight point four two\"\>"}]}], 
    "\[RightAssociation]"}], ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"index\"\>", "\[Rule]", "10"}], ",", 
     RowBox[{"\<\"value\"\>", "\[Rule]", "\<\"8.853\"\>"}], ",", 
     RowBox[{"\<\"name\"\>", 
      "\[Rule]", "\<\"eight point eight five three\"\>"}]}], 
    "\[RightAssociation]"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.763901237139187*^9, 3.7639012633511868`*^9}, {
   3.7639162948865633`*^9, 3.763916300635563*^9}, {3.7639190692039037`*^9, 
   3.7639190763179235`*^9}, 3.7639207177831683`*^9, {3.763921032078168*^9, 
   3.7639210523761663`*^9}, 3.763921800564064*^9, 3.763921833184062*^9, 
   3.763921867571063*^9, {3.763921921429577*^9, 3.7639219451225777`*^9}, 
   3.7639220552525764`*^9, 3.763922176297578*^9, 3.7639222172895765`*^9, 
   3.763922585965577*^9, 3.763928195728129*^9, 3.7639283686046815`*^9, 
   3.7639286816796255`*^9, 3.763928748685564*^9, {3.763928796971661*^9, 
   3.7639288049676943`*^9}, 3.763945435472267*^9, 3.7639455029262657`*^9, 
   3.763949103911913*^9, 3.7639929426541405`*^9, 3.7639931899603386`*^9, 
   3.764966079937229*^9, 3.764967822350071*^9, 3.7651175630693502`*^9, 
   3.7660041153545084`*^9, 3.7730552350302377`*^9, 3.773076097146581*^9, 
   3.7732332594912796`*^9},
 CellLabel->"Out[93]=",ExpressionUUID->"3499bcc7-f2f9-4ccc-b50f-b33e9878e2f7"],

Cell[BoxData[
 TemplateBox[{TagBox[
    DynamicModuleBox[{
     TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
      Data`UnorderedAssociation[
       "RowCount" -> 10, "Length" -> 10, "InitialType" -> TypeSystem`Vector[
          TypeSystem`Struct[{"index", "value", "name"}, {
            TypeSystem`Atom[Integer], 
            TypeSystem`Atom[String], 
            TypeSystem`Atom[String]}], 10], "Shape" -> 
        TypeSystem`PackageScope`HeaderShape[
          
          Association[{All, "index"} -> 1, {All, "value"} -> 1, {All, "name"} -> 
           1], 
          TypeSystem`PackageScope`Limited[
           TypeSystem`PackageScope`ColumnShape[
            TypeSystem`PackageScope`RowShape[
             Association[
             "index" -> TypeSystem`PackageScope`AtomShape[34], "value" -> 
              TypeSystem`PackageScope`AtomShape[48.00000000000001], "name" -> 
              TypeSystem`PackageScope`AtomShape[268.80000000000007`]]]], 
           10, {}]], "InitialData" -> 
        TypeSystem`PackageScope`CacheHandle[11372152], "Type" -> 
        TypeSystem`Vector[
          TypeSystem`Struct[{"index", "value", "name"}, {
            TypeSystem`Atom[Integer], 
            TypeSystem`Atom[String], 
            TypeSystem`Atom[String]}], 10], "HandleQ" -> True, "RowTarget" -> 
        20, "Data" -> TypeSystem`PackageScope`CacheHandle[11372152]], 
      TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
      TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 1, 
      TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
      DynamicModule[{
        TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
           Style[
            Grid[{{
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"index\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"index\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 206589929][{
                    All, "index"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[206589929][
                  GeneralUtilities`Slice[All, "index"]], "Mouse"], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"value\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"value\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 206589929][{
                    All, "value"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[206589929][
                  GeneralUtilities`Slice[All, "value"]], "Mouse"], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"name\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"name\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 206589929][{
                    All, "name"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[206589929][
                  GeneralUtilities`Slice[All, "name"]], "Mouse"], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["1"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[206589929][
                  GeneralUtilities`Slice[1, 
                   Key["index"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["1.465", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[206589929][
                  GeneralUtilities`Slice[1, 
                   Key["value"]]], "Mouse"], 
                ImageSize -> {{48.00000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["one point four six five", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[206589929][
                  GeneralUtilities`Slice[1, 
                   Key["name"]]], "Mouse"], 
                ImageSize -> {{268.80000000000007`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["2"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[206589929][
                  GeneralUtilities`Slice[2, 
                   Key["index"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["8.632", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[206589929][
                  GeneralUtilities`Slice[2, 
                   Key["value"]]], "Mouse"], 
                ImageSize -> {{48.00000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["eight point six three two", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[206589929][
                  GeneralUtilities`Slice[2, 
                   Key["name"]]], "Mouse"], 
                ImageSize -> {{268.80000000000007`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["3"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[206589929][
                  GeneralUtilities`Slice[3, 
                   Key["index"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["5.809", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[206589929][
                  GeneralUtilities`Slice[3, 
                   Key["value"]]], "Mouse"], 
                ImageSize -> {{48.00000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["five point eight zero nine", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[206589929][
                  GeneralUtilities`Slice[3, 
                   Key["name"]]], "Mouse"], 
                ImageSize -> {{268.80000000000007`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["4"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[206589929][
                  GeneralUtilities`Slice[4, 
                   Key["index"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["7.274", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[206589929][
                  GeneralUtilities`Slice[4, 
                   Key["value"]]], "Mouse"], 
                ImageSize -> {{48.00000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["seven point two seven four", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[206589929][
                  GeneralUtilities`Slice[4, 
                   Key["name"]]], "Mouse"], 
                ImageSize -> {{268.80000000000007`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["5"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[206589929][
                  GeneralUtilities`Slice[5, 
                   Key["index"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["7.45", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[206589929][
                  GeneralUtilities`Slice[5, 
                   Key["value"]]], "Mouse"], 
                ImageSize -> {{48.00000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["seven point four five", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[206589929][
                  GeneralUtilities`Slice[5, 
                   Key["name"]]], "Mouse"], 
                ImageSize -> {{268.80000000000007`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["6"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[206589929][
                  GeneralUtilities`Slice[6, 
                   Key["index"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["3.296", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[206589929][
                  GeneralUtilities`Slice[6, 
                   Key["value"]]], "Mouse"], 
                ImageSize -> {{48.00000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["three point two nine six", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[206589929][
                  GeneralUtilities`Slice[6, 
                   Key["name"]]], "Mouse"], 
                ImageSize -> {{268.80000000000007`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["7"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[206589929][
                  GeneralUtilities`Slice[7, 
                   Key["index"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["5.377", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[206589929][
                  GeneralUtilities`Slice[7, 
                   Key["value"]]], "Mouse"], 
                ImageSize -> {{48.00000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["five point three seven seven", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[206589929][
                  GeneralUtilities`Slice[7, 
                   Key["name"]]], "Mouse"], 
                ImageSize -> {{268.80000000000007`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["8"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[206589929][
                  GeneralUtilities`Slice[8, 
                   Key["index"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["6.383", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[206589929][
                  GeneralUtilities`Slice[8, 
                   Key["value"]]], "Mouse"], 
                ImageSize -> {{48.00000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["six point three eight three", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[206589929][
                  GeneralUtilities`Slice[8, 
                   Key["name"]]], "Mouse"], 
                ImageSize -> {{268.80000000000007`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["9"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[206589929][
                  GeneralUtilities`Slice[9, 
                   Key["index"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["8.42", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[206589929][
                  GeneralUtilities`Slice[9, 
                   Key["value"]]], "Mouse"], 
                ImageSize -> {{48.00000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["eight point four two", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[206589929][
                  GeneralUtilities`Slice[9, 
                   Key["name"]]], "Mouse"], 
                ImageSize -> {{268.80000000000007`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["10"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[206589929][
                  GeneralUtilities`Slice[10, 
                   Key["index"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["8.853", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[206589929][
                  GeneralUtilities`Slice[10, 
                   Key["value"]]], "Mouse"], 
                ImageSize -> {{48.00000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["eight point eight five three", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[206589929][
                  GeneralUtilities`Slice[10, 
                   Key["name"]]], "Mouse"], 
                ImageSize -> {{268.80000000000007`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}}, BaseStyle -> {ContextMenu -> {
                 MenuItem["Copy position to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Copy data to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], Delimiter, 
                 MenuItem["Paste position in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Paste data in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic]}, FontFamily -> "Verdana", 
               FontSize -> 12}, Alignment -> Left, RowMinHeight -> 1.5, 
             Dividers -> All, FrameStyle -> GrayLevel[0.85], 
             BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
            LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False,
             ShowAutoStyles -> False]], 
         TypeSystem`NestedGrid`PackagePrivate`initialQ = True, 
         TypeSystem`NestedGrid`PackagePrivate`self = $Failed}, 
        Dynamic[
         TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
         TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
            Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
            
            Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
              TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
              TypeSystem`NestedGrid`PackagePrivate`LookupCacheValue[
                TypeSystem`NestedGrid`PackagePrivate`$state$$["Data"]]}, 
             TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = 
              If[TypeSystem`NestedGrid`PackagePrivate`tmpData$ === 
                TypeSystem`NestedGrid`PackagePrivate`$NotCached, 
                TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$grid$$, 206589929][
                TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
               Not[
                FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
               TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
               TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
          TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
          TypeSystem`NestedGrid`PackagePrivate`$pos$$; If[
            FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
            TypeSystem`SparseGrid[
             TypeSystem`H["(data no longer present)"]], 
            If[GeneralUtilities`$DebugMode, 
             Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
               TypeSystem`NestedGrid`PackagePrivate`formatState[
               TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                TypeSystem`NestedGrid`PackagePrivate`$pos$$]}], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
         TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$pos$$}], 
        DynamicModuleValues :> {}], 
      TypeSystem`NestedGrid`PackagePrivate`$posCell$$, 
      TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
        TypeSystem`NestedGrid`PackagePrivate`alignBar[
        TypeSystem`NestedGrid`PackagePrivate`$state$$][
         TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
          TypeSystem`PackageScope`Pathbar[
          TypeSystem`NestedGrid`PackagePrivate`$path$$, 
           TypeSystem`NestedGrid`PackagePrivate`updateState[
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
            TypeSystem`NestedGrid`PackagePrivate`$path$$, 
            TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$grid$$, 206589929]]]], 
        TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
      TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Framed[
        Dynamic[
         Replace[
          MouseAnnotation[Null], {
          TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[206589929][Null] -> 
           "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[206589929][
             Pattern[TypeSystem`NestedGrid`PackagePrivate`path, 
              Blank[]]] :> (
            TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
             TypeSystem`NestedGrid`PackagePrivate`path; 
            TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
             TypeSystem`NestedGrid`PackagePrivate`path, 
              TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
           Spacer[10], Blank[] :> Spacer[10]}], TrackedSymbols :> {}], 
        FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
        Top, ImageSize -> {Automatic, 14}]}, 
     DynamicBox[
      ToBoxes[
       Column[
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, {
          TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
          TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`alignBar[
           TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}, {
         TypeSystem`NestedGrid`PackagePrivate`$topBar$$, 
          TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
          TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`alignBar[
           TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}], Spacings -> 
        If[
         TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, 
          0, {{}, {0, 0.05, 0}}]], StandardForm], 
      ImageSizeCache -> {417., {207., 216.}}, 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     BaseStyle -> {LineBreakWithin -> False}, Deinitialization :> 
     TypeSystem`NestedGrid`PackagePrivate`deleteState[
      TypeSystem`NestedGrid`PackagePrivate`$state$$], 
     DynamicModuleValues :> {}, Initialization :> 
     Block[{$ContextPath = $ContextPath}, 
       Needs["TypeSystem`"]]], Deploy, DefaultBaseStyle -> "Deploy"]},
  "CopyTag",
  DisplayFunction->(#& ),
  InterpretationFunction->("Dataset[<>]"& )]], "Output",
 CellChangeTimes->{{3.763901237139187*^9, 3.7639012633511868`*^9}, {
   3.7639162948865633`*^9, 3.763916300635563*^9}, {3.7639190692039037`*^9, 
   3.7639190763179235`*^9}, 3.7639207177831683`*^9, {3.763921032078168*^9, 
   3.7639210523761663`*^9}, 3.763921800564064*^9, 3.763921833184062*^9, 
   3.763921867571063*^9, {3.763921921429577*^9, 3.7639219451225777`*^9}, 
   3.7639220552525764`*^9, 3.763922176297578*^9, 3.7639222172895765`*^9, 
   3.763922585965577*^9, 3.763928195728129*^9, 3.7639283686046815`*^9, 
   3.7639286816796255`*^9, 3.763928748685564*^9, {3.763928796971661*^9, 
   3.7639288049676943`*^9}, 3.763945435472267*^9, 3.7639455029262657`*^9, 
   3.763949103911913*^9, 3.7639929426541405`*^9, 3.7639931899603386`*^9, 
   3.764966079937229*^9, 3.764967822350071*^9, 3.7651175630693502`*^9, 
   3.7660041153545084`*^9, 3.7730552350302377`*^9, 3.773076097146581*^9, 
   3.773233259569278*^9},
 CellLabel->"Out[94]=",ExpressionUUID->"a5df103d-7317-480a-a9f7-915642636d9b"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["CloudDeploy API", "Subsubsection",
 CellChangeTimes->{{3.7639812529526186`*^9, 
  3.763981266669619*^9}},ExpressionUUID->"b5f5c9e5-547e-43c0-ac88-\
4227bcf498d9"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"ClearAll", "[", "cd", "]"}], "\[IndentingNewLine]", 
 RowBox[{"cd", "=", 
  RowBox[{"CloudDeploy", "[", "\[IndentingNewLine]", 
   RowBox[{
   "api", ",", "\[IndentingNewLine]", "\"\</live-coding/random-array-2/\>\"", 
    ",", "\[IndentingNewLine]", 
    RowBox[{"Permissions", "\[Rule]", "\"\<Public\>\""}]}], 
   "\[IndentingNewLine]", "]"}]}]}], "Input",
 CellChangeTimes->{{3.763901121307186*^9, 3.7639012201341887`*^9}, {
  3.7639207259831667`*^9, 3.763920726399167*^9}, {3.763922108219579*^9, 
  3.7639221138985796`*^9}, {3.7639221667325764`*^9, 3.763922169343578*^9}, {
  3.7639250865646954`*^9, 3.7639250867466974`*^9}, {3.773055240558225*^9, 
  3.7730552587822285`*^9}},
 CellLabel->"In[95]:=",ExpressionUUID->"0d4bd675-fc0f-4aae-8904-1283aa7f03a1"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"CloudObject", "[", 
   TemplateBox[{
    "\"https://www.wolframcloud.com/obj/mitch/live-coding/random-array-2\"",
     "https://www.wolframcloud.com/obj/mitch/live-coding/random-array-2"},
    "HyperlinkURL"], "]"}],
  CloudObject[
  "https://www.wolframcloud.com/obj/mitch/live-coding/random-array-2"],
  SelectWithContents->True]], "Output",
 CellChangeTimes->{
  3.7639012678211875`*^9, 3.7639163103045645`*^9, 3.763920802304191*^9, 
   3.7639210578971677`*^9, {3.7639218030390644`*^9, 3.7639218346240726`*^9}, 
   3.763921869690063*^9, {3.7639219226765785`*^9, 3.763921946343579*^9}, 
   3.7639221777025785`*^9, 3.7639222197775784`*^9, 3.7639225923285766`*^9, 
   3.763928704094618*^9, 3.7639288106156673`*^9, 3.7639491270419245`*^9, 
   3.7639931927983403`*^9, 3.764966087891265*^9, 3.7649678255460606`*^9, 
   3.7651175676143103`*^9, 3.7660041182805095`*^9, 3.7730552739242444`*^9, 
   3.7730761010135612`*^9, 3.773233273030664*^9},
 CellLabel->"Out[96]=",ExpressionUUID->"253517e1-fa30-4ff7-85be-b136266a9fc4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"ClearAll", "[", 
  RowBox[{"url", ",", "session"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"url", "=", 
  RowBox[{"URLBuild", "[", 
   RowBox[{"cd", ",", 
    RowBox[{"<|", 
     RowBox[{
      RowBox[{"\"\<x\>\"", "\[Rule]", "1.125"}], ",", 
      RowBox[{"\"\<y\>\"", "\[Rule]", "1.75"}], ",", 
      RowBox[{"\"\<z\>\"", "\[Rule]", "10"}]}], "|>"}]}], "]"}]}], "\n", 
 RowBox[{
  RowBox[{"session", "=", 
   RowBox[{"StartWebSession", "[", "\"\<Chrome\>\"", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"WebExecute", "[", 
   RowBox[{"session", ",", 
    RowBox[{"{", 
     RowBox[{"\"\<OpenPage\>\"", "\[Rule]", "url"}], "}"}]}], "]"}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.77305525414124*^9, 3.7730552698012094`*^9}},
 CellLabel->"In[97]:=",ExpressionUUID->"41c553fa-e96d-4ca1-bed0-94adacf7f3a1"],

Cell[BoxData["\<\"https://www.wolframcloud.com/obj/mitch/live-coding/random-\
array-2?x=1.125&y=1.75&z=10\"\>"], "Output",
 CellChangeTimes->{3.764966127467229*^9, 3.7649678281530294`*^9, 
  3.7651175705153093`*^9, 3.7660041203294754`*^9, 3.7730552758762197`*^9, 
  3.7730761029675426`*^9, 3.7732332753267136`*^9},
 CellLabel->"Out[98]=",ExpressionUUID->"a7016699-4383-4e93-9364-445dd6c09004"]
}, Open  ]]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Upcoming sessions", "Chapter",
 CellChangeTimes->{{3.7638952926466093`*^9, 3.7638952984445906`*^9}, {
  3.7639024836480412`*^9, 3.7639024948250484`*^9}, {3.773237263330803*^9, 
  3.773237277552941*^9}},ExpressionUUID->"a8231bc6-a2be-43b8-b5ad-\
045d367a75d2"],

Cell["\<\
- Add NodeJS (+ Express) to the mix
- Introducing global state management of API requests and responses in React
- User managment
- Security
- Encryption
- AWS serverless (NodeJS)
- Sockets between React/Node and WC
- Making WC read, write, listen, and speak\
\>", "Text",
 CellChangeTimes->{{3.763895311183606*^9, 3.763895404183589*^9}, {
  3.7638955300315895`*^9, 3.763895581598591*^9}, {3.763902220666043*^9, 
  3.763902252925053*^9}, {3.763902357468041*^9, 3.7639024548940425`*^9}, {
  3.7639024981630635`*^9, 3.7639026050470424`*^9}, {3.763998374709749*^9, 
  3.7639983804727407`*^9}, {3.7730598740551395`*^9, 3.773059928816169*^9}, {
  3.7732372166076655`*^9, 
  3.773237238754826*^9}},ExpressionUUID->"da94c342-84e8-4745-9feb-\
29a8dc81f6a8"]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1233, 845},
WindowMargins->{{Automatic, -3213}, {57, Automatic}},
Magnification:>1.25 Inherited,
FrontEndVersion->"12.0 for Microsoft Windows (64-bit) (March 17, 2019)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 438, 10, 346, "Title",ExpressionUUID->"7d907abe-a0ba-4b39-905d-46d65bf1926e"],
Cell[CellGroupData[{
Cell[1043, 36, 153, 3, 83, "Section",ExpressionUUID->"aadec40a-3368-4723-89fd-8eb251f38546"],
Cell[1199, 41, 2055, 38, 571, "Text",ExpressionUUID->"61070079-5b9c-44ad-ba6d-a20bd75cf098"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3291, 84, 161, 3, 83, "Section",ExpressionUUID->"c94a9a1d-f6a8-4105-87a9-29514bdfea20"],
Cell[3455, 89, 5245, 74, 1292, "Text",ExpressionUUID->"4ffdfe0e-774a-401d-ba25-ab0a9cd91077"]
}, Open  ]],
Cell[CellGroupData[{
Cell[8737, 168, 367, 6, 86, "Chapter",ExpressionUUID->"86744b33-baa5-45d9-b76f-1d1f2b2ef393"],
Cell[CellGroupData[{
Cell[9129, 178, 228, 4, 79, "Subchapter",ExpressionUUID->"5a03c004-b612-416b-9689-9f11d88acc72"],
Cell[9360, 184, 626, 10, 71, "Text",ExpressionUUID->"5fc7426e-e81f-4699-873a-9a91806ac32f"],
Cell[CellGroupData[{
Cell[10011, 198, 2434, 55, 396, "Input",ExpressionUUID->"0397b080-569b-4355-80de-cd7f4f7d1f5a"],
Cell[12448, 255, 812, 17, 40, "Output",ExpressionUUID->"36917922-5031-4882-b7ef-e86bcbfae80f"],
Cell[13263, 274, 588, 9, 40, "Output",ExpressionUUID->"7b817612-754b-4b25-ba0c-e140e9ad9035"]
}, Open  ]],
Cell[CellGroupData[{
Cell[13888, 288, 961, 18, 204, "Input",ExpressionUUID->"5d008666-8d22-466f-a42e-c110beadb02e"],
Cell[14852, 308, 727, 14, 43, "Output",ExpressionUUID->"939516c4-6fd7-4b5c-994b-9460829496cc"]
}, Open  ]],
Cell[CellGroupData[{
Cell[15616, 327, 834, 22, 132, "Input",ExpressionUUID->"6bac3849-9196-4af7-9098-712a31beffd5"],
Cell[16453, 351, 421, 6, 40, "Output",ExpressionUUID->"fe01b8c9-9cf6-4e27-ab2c-589a7916b3f9"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[16923, 363, 225, 4, 79, "Subchapter",ExpressionUUID->"111288b6-6a59-4ccc-b4c8-566f3395ae15"],
Cell[CellGroupData[{
Cell[17173, 371, 2004, 39, 324, "Input",ExpressionUUID->"ea932a15-364e-40a1-a534-769f6e452494"],
Cell[19180, 412, 842, 12, 40, "Output",ExpressionUUID->"907cf795-83c5-4f9e-b837-af734e1ba9a7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[20059, 429, 640, 12, 157, "Input",ExpressionUUID->"d8dcba96-bb01-4cfe-b394-6fb768ada10d"],
Cell[20702, 443, 791, 16, 44, "Output",ExpressionUUID->"257ac60e-57a8-4e82-bf2f-d1d553b59e11"]
}, Open  ]],
Cell[CellGroupData[{
Cell[21530, 464, 1171, 27, 109, "Input",ExpressionUUID->"bafa1c37-177d-4dd1-84d5-cc3b3111840b"],
Cell[22704, 493, 393, 6, 40, "Output",ExpressionUUID->"329ce5f3-91a5-4dc0-8f0b-721046a3053a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[23134, 504, 249, 4, 55, "Subsubsection",ExpressionUUID->"3ea8b4d3-6d47-4130-a979-f607f1e2dc4d"],
Cell[CellGroupData[{
Cell[23408, 512, 359, 8, 35, "Input",ExpressionUUID->"3e4a9b63-59e3-4890-a431-005fb2e03387"],
Cell[23770, 522, 30438, 564, 85, "Output",ExpressionUUID->"22bd1038-c12c-49b3-ad1c-fcdd0d9fcf5e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[54245, 1091, 545, 12, 35, "Input",ExpressionUUID->"dfc1768c-63da-4968-a450-e08c60c5c934"],
Cell[54793, 1105, 276, 3, 40, "Output",ExpressionUUID->"6d3acd5e-165c-41d1-a715-4bcdd6548f99"]
}, Open  ]],
Cell[CellGroupData[{
Cell[55106, 1113, 571, 12, 35, "Input",ExpressionUUID->"5e8ee83e-65a0-4c1d-a80d-8547f24c4a8f"],
Cell[55680, 1127, 289, 6, 40, "Output",ExpressionUUID->"1fe4d620-01ed-4374-a4a5-9744f0b7dd18"]
}, Open  ]],
Cell[CellGroupData[{
Cell[56006, 1138, 569, 12, 35, "Input",ExpressionUUID->"47eee340-1960-4bb6-b551-ba5815958eea"],
Cell[56578, 1152, 448, 7, 40, "Output",ExpressionUUID->"8213b3e3-b02a-4cce-9890-ae24218b3ce6"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[57099, 1167, 274, 4, 71, "Chapter",ExpressionUUID->"2580dd58-322d-4431-9a00-ccb617c07744"],
Cell[57376, 1173, 259, 7, 71, "Text",ExpressionUUID->"1a8eaf68-71f8-434c-9931-f9aa8ba8722a"],
Cell[CellGroupData[{
Cell[57660, 1184, 3378, 74, 372, "Input",ExpressionUUID->"89c37a52-eb64-474b-8470-8230c555a8b5"],
Cell[61041, 1260, 1229, 16, 40, "Output",ExpressionUUID->"f0f7a4c3-295d-44fe-8f46-edac6888c12e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[62307, 1281, 679, 12, 156, "Input",ExpressionUUID->"5c53af93-699b-44d0-b85e-6b736d6ffc8c"],
Cell[62989, 1295, 1256, 22, 43, "Output",ExpressionUUID->"4a3b5bb5-3e0e-4835-baf9-55c130d8644e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[64282, 1322, 924, 24, 108, "Input",ExpressionUUID->"3e66d552-4327-4f49-9d36-e3ea3b48285d"],
Cell[65209, 1348, 554, 8, 40, "Output",ExpressionUUID->"6587d382-f4f1-42db-adc0-12653e7cf2b9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[65800, 1361, 193, 3, 55, "Subsubsection",ExpressionUUID->"febbbedc-6d3c-4703-9227-10f55e2d8e90"],
Cell[65996, 1366, 249, 6, 43, "Text",ExpressionUUID->"fbc75e82-c7ad-4106-aefc-f31716983330"],
Cell[CellGroupData[{
Cell[66270, 1376, 1448, 32, 254, "Input",ExpressionUUID->"24c36ab6-a9ab-4559-a757-56f92baeba84"],
Cell[67721, 1410, 766, 14, 75, "Output",ExpressionUUID->"bc7fdbab-b01d-40da-b708-097edde4b38e"]
}, Open  ]]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[68548, 1431, 391, 6, 71, "Chapter",ExpressionUUID->"8c7ee5e2-fef4-4225-bd4c-d8a59b39f784"],
Cell[68942, 1439, 1057, 17, 127, "Text",ExpressionUUID->"d02da929-817f-42df-9612-f4ef39a796d4"],
Cell[CellGroupData[{
Cell[70024, 1460, 1953, 40, 180, "Input",ExpressionUUID->"c492cdd7-b5b8-46ea-a6bf-c6231da90d74"],
Cell[71980, 1502, 406, 8, 40, "Output",ExpressionUUID->"8000c44e-a58d-477c-849a-c1c339687ffc"],
Cell[72389, 1512, 528, 9, 40, "Output",ExpressionUUID->"36340a91-360b-453c-b5c0-950334951920"]
}, Open  ]],
Cell[CellGroupData[{
Cell[72954, 1526, 1138, 16, 35, "Input",ExpressionUUID->"0acc5ab4-1bae-4c94-8e4f-1e0f3f8dc4f7"],
Cell[74095, 1544, 1131, 21, 40, "Output",ExpressionUUID->"c97d28ab-1601-42fc-bf34-dd970720ba20"]
}, Open  ]],
Cell[75241, 1568, 581, 11, 127, "Text",ExpressionUUID->"9fabffa3-b12b-4e58-aa14-85a38b87e4c6"],
Cell[CellGroupData[{
Cell[75847, 1583, 1658, 32, 133, "Input",ExpressionUUID->"84bfabdd-e0ef-4df9-bb59-4d08f583f095"],
Cell[77508, 1617, 463, 7, 40, "Output",ExpressionUUID->"b1117d43-09f4-4589-9a8b-33517fe644b6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[78008, 1629, 824, 17, 109, "Input",ExpressionUUID->"d1971fdb-7617-42d0-ba9d-f509eb3a0762"],
Cell[78835, 1648, 988, 18, 40, "Output",ExpressionUUID->"0d429bb3-6e5c-40a0-b549-a6eae52d84ce"]
}, Open  ]],
Cell[79838, 1669, 172, 3, 43, "Text",ExpressionUUID->"1964be40-47f7-417b-b858-e159d9fa1360"],
Cell[CellGroupData[{
Cell[80035, 1676, 886, 23, 109, "Input",ExpressionUUID->"a14407a9-0849-4967-94b3-51e859e4abb0"],
Cell[80924, 1701, 2321, 56, 65, "Output",ExpressionUUID->"a88cd9c8-2e2b-4bf3-ad1f-31f61bce7c17"]
}, Open  ]],
Cell[CellGroupData[{
Cell[83282, 1762, 6058, 132, 761, "Input",ExpressionUUID->"33cac30a-d601-4ebb-93eb-1b0d679afc45"],
Cell[89343, 1896, 3259, 69, 65, "Output",ExpressionUUID->"ea8cf655-a074-4931-a26a-528fad90fbaa"],
Cell[92605, 1967, 20202, 386, 375, "Output",ExpressionUUID->"24737e96-d9c0-4f1e-b655-deac6f874c24"]
}, Open  ]],
Cell[CellGroupData[{
Cell[112844, 2358, 963, 16, 157, "Input",ExpressionUUID->"3c851114-a0a3-4eb1-917a-2c626c8a056a"],
Cell[113810, 2376, 1157, 20, 44, "Output",ExpressionUUID->"93b7db82-ceea-4fa7-8a4f-2d777fa97435"]
}, Open  ]],
Cell[CellGroupData[{
Cell[115004, 2401, 877, 23, 109, "Input",ExpressionUUID->"75522026-60eb-445b-8325-ffa974e2b963"],
Cell[115884, 2426, 537, 8, 40, "Output",ExpressionUUID->"19c68f1c-7bf7-4e4b-9db4-54d97ab28e7e"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[116470, 2440, 388, 6, 71, "Chapter",ExpressionUUID->"c40eb22b-0c5f-42cf-a719-14de774fec66"],
Cell[116861, 2448, 488, 9, 71, "Text",ExpressionUUID->"a7670cd4-fc07-454b-abcb-0adfbfbc6109"],
Cell[CellGroupData[{
Cell[117374, 2461, 232, 4, 35, "Input",ExpressionUUID->"63ae3dc6-749d-4368-9dc4-b32fb1d022df"],
Cell[117609, 2467, 173, 2, 40, "Output",ExpressionUUID->"531e5a25-29bb-4fb6-9623-f1795aa06671"]
}, Open  ]],
Cell[CellGroupData[{
Cell[117819, 2474, 676, 11, 108, "Input",ExpressionUUID->"d4a6cdba-b980-4cc5-bc9f-fd8c23e0800e"],
Cell[118498, 2487, 297, 5, 40, "Output",ExpressionUUID->"860edebe-a6ac-4edd-b64c-50c61e32886f"],
Cell[118798, 2494, 451, 10, 40, "Output",ExpressionUUID->"dba7129a-8a65-4a1e-8f8a-524c81d4897a"]
}, Open  ]],
Cell[119264, 2507, 385, 8, 71, "Text",ExpressionUUID->"dc368dd1-f901-4ae3-ab4e-c8a74d47f516"],
Cell[119652, 2517, 4215, 90, 488, "Input",ExpressionUUID->"b15cacda-e310-4f99-9cd6-fc3ee457d42f"],
Cell[CellGroupData[{
Cell[123892, 2611, 170, 3, 55, "Subsubsection",ExpressionUUID->"f18614bf-8d93-44ab-bc27-83071ca96328"],
Cell[CellGroupData[{
Cell[124087, 2618, 1771, 34, 133, "Input",ExpressionUUID->"cad607ec-722c-4d7f-a278-92dba0d253af"],
Cell[125861, 2654, 935, 14, 40, "Output",ExpressionUUID->"b0e84739-8a6a-4898-86fe-9b4f94e6379c"],
Cell[126799, 2670, 1069, 19, 40, "Output",ExpressionUUID->"c13727ae-1285-41c7-8389-4ffd6463dfdc"],
Cell[127871, 2691, 1074, 19, 40, "Output",ExpressionUUID->"b8f089cc-d1da-4f45-bcd9-022419ed47ce"]
}, Open  ]],
Cell[CellGroupData[{
Cell[128982, 2715, 1408, 25, 80, "Input",ExpressionUUID->"00beeb85-af9f-4f14-99b0-99a9cd10711c"],
Cell[130393, 2742, 1074, 15, 40, "Output",ExpressionUUID->"d3918526-6fae-49e9-8b36-3484003a384f"],
Cell[131470, 2759, 1072, 15, 40, "Output",ExpressionUUID->"225329c6-f906-41c2-accc-8dc4eeb56d30"]
}, Open  ]],
Cell[CellGroupData[{
Cell[132579, 2779, 1430, 35, 85, "Input",ExpressionUUID->"5e5076e8-5673-4aa5-94a6-60b9284bd09b"],
Cell[134012, 2816, 1803, 41, 459, "Output",ExpressionUUID->"92fdc47d-7d58-47dd-816f-a9477c9818a5"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[135864, 2863, 176, 3, 55, "Subsubsection",ExpressionUUID->"f6266c92-78f4-4011-b9cc-981f9db2ca05"],
Cell[136043, 2868, 195, 3, 43, "Text",ExpressionUUID->"f95c6624-7eba-4147-8856-60532ce71c1a"],
Cell[CellGroupData[{
Cell[136263, 2875, 2085, 47, 326, "Input",ExpressionUUID->"7dcc7522-a301-467c-badf-1f7641d490ac"],
Cell[138351, 2924, 3779, 82, 138, "Output",ExpressionUUID->"45d2ace9-c9a4-4a21-bc93-5bcf4c707968"],
Cell[142133, 3008, 25143, 484, 375, "Output",ExpressionUUID->"cc19e845-de8a-4277-a0c3-aa3ab1875970"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[167325, 3498, 165, 3, 55, "Subsubsection",ExpressionUUID->"9f4fe94f-29fa-4b3a-b453-291f2037aceb"],
Cell[CellGroupData[{
Cell[167515, 3505, 3479, 73, 399, "Input",ExpressionUUID->"9245bc39-25d0-44df-9270-b53d7c96d1e4"],
Cell[170997, 3580, 3928, 83, 138, "Output",ExpressionUUID->"3499bcc7-f2f9-4ccc-b50f-b33e9878e2f7"],
Cell[174928, 3665, 25270, 488, 375, "Output",ExpressionUUID->"a5df103d-7317-480a-a9f7-915642636d9b"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[200247, 4159, 168, 3, 55, "Subsubsection",ExpressionUUID->"b5f5c9e5-547e-43c0-ac88-4227bcf498d9"],
Cell[CellGroupData[{
Cell[200440, 4166, 784, 14, 157, "Input",ExpressionUUID->"0d4bd675-fc0f-4aae-8904-1283aa7f03a1"],
Cell[201227, 4182, 1062, 19, 44, "Output",ExpressionUUID->"253517e1-fa30-4ff7-85be-b136266a9fc4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[202326, 4206, 851, 22, 109, "Input",ExpressionUUID->"41c553fa-e96d-4ca1-bed0-94adacf7f3a1"],
Cell[203180, 4230, 393, 5, 40, "Output",ExpressionUUID->"a7016699-4383-4e93-9364-445dd6c09004"]
}, Open  ]]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[203634, 4242, 265, 4, 71, "Chapter",ExpressionUUID->"a8231bc6-a2be-43b8-b5ad-045d367a75d2"],
Cell[203902, 4248, 759, 17, 238, "Text",ExpressionUUID->"da94c342-84e8-4745-9feb-29a8dc81f6a8"]
}, Open  ]]
}, Open  ]]
}
]
*)

