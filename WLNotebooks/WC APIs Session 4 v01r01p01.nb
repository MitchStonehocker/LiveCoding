(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    893924,      16681]
NotebookOptionsPosition[    881899,      16472]
NotebookOutlinePosition[    882300,      16489]
CellTagsIndexPosition[    882257,      16486]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["\<\
Building WolframCloud APIs for JavaScript (React, Node, AWS)

Livecoding Session 4\
\>", "Title",
 CellChangeTimes->{{3.7638898877493024`*^9, 3.763889938762308*^9}, {
  3.7638899734873037`*^9, 3.763889994907301*^9}, {3.7647562659747314`*^9, 
  3.764756281453726*^9}, {3.773063878620057*^9, 3.7730638977200856`*^9}, {
  3.7732444445448933`*^9, 3.7732444546978936`*^9}, {3.773244662515252*^9, 
  3.77324466285128*^9}, {3.7745518824231167`*^9, 
  3.774551882617113*^9}},ExpressionUUID->"7d907abe-a0ba-4b39-905d-\
46d65bf1926e"],

Cell[CellGroupData[{

Cell["Initializations", "Chapter",
 CellChangeTimes->{{3.774178168969735*^9, 
  3.7741781724947586`*^9}},ExpressionUUID->"cbb3bda8-dc2b-4eac-8dfb-\
a802d8b0bec1"],

Cell["\<\
https://www.wolframcloud.com/
https://datadrop.wolframcloud.com/\
\>", "Text",
 CellChangeTimes->{{3.7741761918734503`*^9, 
  3.774176214087894*^9}},ExpressionUUID->"4f1d6671-dc53-4a50-bed1-\
bbc2202ae343"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"$CloudBase", "=", 
  "\"\<https://www.wolframcloud.com/\>\""}]], "Input",
 CellChangeTimes->{{3.772000558621728*^9, 3.7720005610957527`*^9}, 
   3.772000644225724*^9},
 Background->RGBColor[0.87, 0.94, 1],
 CellLabel->"In[17]:=",ExpressionUUID->"721224c1-4e5a-403f-9de2-be954c80dcbb"],

Cell[BoxData["\<\"https://www.wolframcloud.com/\"\>"], "Output",
 CellChangeTimes->{3.7719997052525387`*^9, 3.771999957407722*^9, 
  3.7720001293997602`*^9, 3.77200021212276*^9, 3.772000375085758*^9, 
  3.7720004382888036`*^9, 3.772000668227727*^9, 3.772000943669759*^9, 
  3.7720299685211945`*^9, 3.772804720396514*^9, 3.7740927555853844`*^9, 
  3.774093003000536*^9, 3.7741159721942987`*^9, 3.7741170108497066`*^9, 
  3.774175890816307*^9, 3.7741764136208315`*^9},
 CellLabel->"Out[17]=",ExpressionUUID->"682ead1a-f060-4c23-a60c-a10152501725"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CloudConnect", "[", "\"\<...your account email...\>\"", 
  "]"}]], "Input",
 CellChangeTimes->{3.77200027031472*^9, 3.7745520481261206`*^9},
 Background->RGBColor[
  0.87, 0.94, 1],ExpressionUUID->"fa87c054-4986-427c-970b-da9bebd5f4c6"],

Cell[BoxData["\<\"mitch@aitoconsulting.com\"\>"], "Output",
 CellChangeTimes->{
  3.7719997241285095`*^9, 3.7719999602937365`*^9, {3.7720004152897463`*^9, 
   3.7720004303207216`*^9}, 3.7720006846057243`*^9, 3.7720009568477554`*^9, 
   3.772029982680825*^9, 3.7728047314390244`*^9, 3.7740927782636814`*^9, 
   3.774093015472249*^9, 3.7741159801637545`*^9, 3.774117019433197*^9, 
   3.774175974665677*^9, 3.774176415561801*^9},
 CellLabel->"Out[18]=",ExpressionUUID->"2d54e654-6749-4a94-8136-8ea862e9454a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"ClearAll", "[", 
  RowBox[{"choices", ",", "get"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"choices", "=", 
  RowBox[{"Sort", "[", 
   RowBox[{"{", 
    RowBox[{
    "\"\<posts\>\"", ",", "\"\<comments\>\"", ",", "\"\<albums\>\"", ",", 
     "\"\<photos\>\"", ",", "\"\<todos\>\"", ",", "\"\<users\>\""}], "}"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"get", "[", "it_String", "]"}], ":=", 
  RowBox[{"Import", "[", 
   RowBox[{
    RowBox[{"\"\<https://jsonplaceholder.typicode.com/\>\"", "<>", "it"}], 
    ",", "\"\<RawJSON\>\""}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.763983312549301*^9, 3.7639833193873*^9}, {
   3.7639833623163166`*^9, 3.7639834394571075`*^9}, {3.7639837733901052`*^9, 
   3.763983776781107*^9}, {3.7639839200371246`*^9, 3.7639839560871067`*^9}, 
   3.763984014286107*^9, 3.7639842443151083`*^9, {3.763993962012494*^9, 
   3.763993963370494*^9}, {3.7649665056809564`*^9, 3.764966565686982*^9}, {
   3.7649666378140173`*^9, 3.7649666381970177`*^9}},
 Background->RGBColor[0.88, 1, 0.88],
 CellLabel->"In[79]:=",ExpressionUUID->"bf085ee1-349b-415e-bf4b-e8df1a01ea50"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"albums\"\>", ",", "\<\"comments\"\>", ",", "\<\"photos\"\>", 
   ",", "\<\"posts\"\>", ",", "\<\"todos\"\>", ",", "\<\"users\"\>"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.774178458754631*^9},
 CellLabel->"Out[80]=",ExpressionUUID->"1a796059-7345-4236-926a-c6644cc2f7e6"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Overview", "Section",
 CellChangeTimes->{{3.764756563582971*^9, 
  3.764756565220968*^9}},ExpressionUUID->"aadec40a-3368-4723-89fd-\
8eb251f38546"],

Cell["\<\
Assumptions:
- Familiarity with Mathematica.  
- Familiarity of JS is helpful but not required for this presentation.

A few words about:
- Introduction and background for React (https://reactjs.org/) / Axios and \
Node (https://nodejs.org/en/) / Express.
- Wolfram setup, we will use the following tools:
\t- Mathematica desktop (wolfram.com/) & Wolfram Cloud (wolframcloud.com - \
free sign up.  You can use Wolfram Cloud (WC) alone if you like)
- Other than Wolfram setup:
\t- npm (https://www.npmjs.com/) 
\t- git (https://git-scm.com/)
\t- GitHub (https://github.com/)
\t- AWS (free tier: https://aws.amazon.com/console/)
\t- AWS-CLI (https://aws.amazon.com/cli/)
\t- AWS Amplify (https://aws.amazon.com/amplify/)
\t- create-react-app (https://facebook.github.io/create-react-app/)
\t- Chrome browser (google.com/chrome).  We will use chrome developer tools.  \
Other browsers and their browser tools may not be sufficient for what we will \
doing)
\t- Postman (getpostman.com/ for validating and testing APIs) \
\>", "Text",
 CellChangeTimes->{{3.763890011612302*^9, 3.7638901696143055`*^9}, {
   3.763890200718302*^9, 3.7638902611903043`*^9}, 3.764756403943945*^9, {
   3.7647565533949785`*^9, 3.764756557441941*^9}, {3.764756840776133*^9, 
   3.764756841297163*^9}, {3.764757171913148*^9, 3.764757183439116*^9}, {
   3.764757372949869*^9, 3.7647573743968663`*^9}, {3.764757413359903*^9, 
   3.7647574358868675`*^9}, {3.7647574930818973`*^9, 
   3.7647574986978655`*^9}, {3.7647575428068686`*^9, 
   3.7647575515239162`*^9}, {3.764757605406885*^9, 3.7647576177608685`*^9}, {
   3.765994705983547*^9, 3.7659947241623526`*^9}, {3.772980054888672*^9, 
   3.7729800636716423`*^9}, {3.772992965596657*^9, 3.7729929935746317`*^9}, {
   3.7729931157593164`*^9, 3.7729933743705482`*^9}, {3.7729934104615884`*^9, 
   3.772993510872326*^9}, {3.7729939744644995`*^9, 3.772993976561745*^9}, {
   3.773232226841055*^9, 3.7732322335620775`*^9}, {3.773232270260056*^9, 
   3.773232301914174*^9}},ExpressionUUID->"61070079-5b9c-44ad-ba6d-\
a20bd75cf098"]
}, Closed]],

Cell[CellGroupData[{

Cell["Introduction", "Section",
 CellChangeTimes->{{3.7647565738499856`*^9, 
  3.7647565760699434`*^9}},ExpressionUUID->"c94a9a1d-f6a8-4105-87a9-\
29514bdfea20"],

Cell[TextData[{
 "Motivating principle: separation of duties for people and software \
supporting the goals of modular design principles.  Easy to understand \
separating people by expertise in front-end, back-end and quantitative \
capabilities and code production.\n\nThis is the first of three (or more) \
live-coding walk-through\[CloseCurlyQuote]s that show an approach to \
integrating Mathematica to a browser front-end (ReactJS) and a serverless \
back-end (Node JS and AWS).\n\nReactJS is a JavaScript (JS) library widely \
used to make single page applications (SPAs).   \[OpenCurlyQuote]Hooks\
\[CloseCurlyQuote] were introduced in the recently released version 16.8 \
(https://reactjs.org/docs/hooks-intro.html).  Using hooks allows React \
developers to ",
 StyleBox["write JS applications using 100% functional methods",
  FontSlant->"Italic"],
 " - eliminating the need for JS classes.  There are many advantages to this \
new capability and we will focus on the implications for APIs between React \
and the Wolfram Cloud (WC) and between AWS and WC.\n\nWe will show JS and JSX \
(https://reactjs.org/docs/introducing-jsx.html) with respect to how the API \
requests (req) and responses (res) are managed.  The JS browser app is a bear \
bones deployment with minimal styling and organization considerations.  \n\n\
We will iterate from the simplest possible API (that I can think of) to ever \
more complex patterns.  There are JS and React considerations that impact the \
WC side of the API.  A number of these considerations will be presented, \
discussed and dealt with.  In every instance the goal is to produce \
Mathematica side code that is simultaneously used for presentation in a \
browser and analytical use is Mathematica. \n\nSome requests and \
considerations:\n- You will see the URL I use (my WC account) and API \
end-points I am using.  I've made these public for these live coding \
sessions.  It's ok during the live coding session to use my APIs if you can't \
make yours work, but please setup your own WC account, make your own APIs and \
use them.\n\nThe general development pattern:\n1.0) Three parts to \
APIFunction[...]:\n\t1.1) inputs\n\t1.2) functions\n\t1.3) output format\n\
2.0) Test by passing an association of API inputs <|key -> value, ...|>\n3.0) \
Two\[CloseCurlyQuote]ish parts to CloudDeploy[...]:\n\t3.1) the api function \
(1 above)\n\t3.2) options:\n\t\t3.2.1) the path and api name\n\t\t3.2.2) \
permissions\n4.0) Test:\n\t4.1) to a browser with StartWebSession[...] and \
WebExecute[...]\n\t4.2) to postman\n5.0) Connect to:\n\t5.1) front-end \
(React)\n\t5.2) backend (Node)\n\t\t5.2.1) test serverless api between AWS \
(via Node) and WC \n\nHere are a couple web sites that are built on this \
pattern where the front-end is a Single Page Application (SPA) using React, \
the back-end is serverless and built on NodeJS - AWS, and everything \
computational is done with Wolfram (Wolfram Cloud):\n\t- \
https://www.aitoconsulting.org/options-pub\n\t- \
https://www.christyhealth.org/ "
}], "Text",
 CellChangeTimes->{{3.7638925113235245`*^9, 3.763892602952525*^9}, {
   3.7638926449898577`*^9, 3.763892679550857*^9}, {3.7638927610188594`*^9, 
   3.763892870950164*^9}, {3.763892919391177*^9, 3.7638929197561655`*^9}, {
   3.763892955061165*^9, 3.7638929800851707`*^9}, {3.763893021724162*^9, 
   3.7638930466791625`*^9}, {3.763893083743539*^9, 3.763893241971854*^9}, {
   3.763893325857852*^9, 3.7638933827108536`*^9}, {3.763893503539854*^9, 
   3.763893729315853*^9}, {3.7638937626608524`*^9, 3.763893772730853*^9}, {
   3.763893813032853*^9, 3.763893829265854*^9}, {3.763893938532851*^9, 
   3.763894148194852*^9}, {3.7638942514368525`*^9, 3.7638943385438538`*^9}, {
   3.763901766635436*^9, 3.7639019780990415`*^9}, {3.763902013962042*^9, 
   3.763902198031045*^9}, {3.7647564315139456`*^9, 3.764756431692975*^9}, {
   3.764756465136969*^9, 3.7647565251609664`*^9}, {3.7647566636861153`*^9, 
   3.764756769370118*^9}, {3.7647568109481173`*^9, 3.764756823416159*^9}, {
   3.764756881883115*^9, 3.7647568877021427`*^9}, {3.7647569634591217`*^9, 
   3.7647570924251404`*^9}, {3.76475766166391*^9, 3.7647576621639104`*^9}, {
   3.764757730854865*^9, 3.7647577487108665`*^9}, {3.7647577840658665`*^9, 
   3.7647579290088663`*^9}, {3.764757988805909*^9, 3.7647580408408937`*^9}, {
   3.7649622307181253`*^9, 3.7649622315621276`*^9}, {3.7649626531221275`*^9, 
   3.7649626773441277`*^9}, {3.772993077615311*^9, 3.7729931022412853`*^9}, {
   3.7729935878615055`*^9, 3.77299362437051*^9}, {3.7729936643474936`*^9, 
   3.7729936649064684`*^9}, {3.7729937384994183`*^9, 3.772993739050414*^9}, {
   3.7729937745017257`*^9, 3.772993794516692*^9}, {3.7729938280945597`*^9, 
   3.7729938590646877`*^9}, {3.7729939121487713`*^9, 3.772993943128764*^9}, {
   3.7729939959827538`*^9, 3.7729940407840967`*^9}, {3.772994093559266*^9, 
   3.772994160221322*^9}, {3.77299464254669*^9, 3.7729946757376604`*^9}, {
   3.7729947195446897`*^9, 3.772994853649682*^9}, {3.772994884498707*^9, 
   3.7729951249580517`*^9}, {3.7730641663149085`*^9, 
   3.7730644514901915`*^9}, {3.773232313741212*^9, 3.7732324943412533`*^9}, 
   3.773232538264116*^9},ExpressionUUID->"4ffdfe0e-774a-401d-ba25-\
ab0a9cd91077"]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Build your own API maker functions : v01", "Chapter",
 CellChangeTimes->{{3.7736617148084087`*^9, 3.7736617465784335`*^9}, {
  3.7736673099547524`*^9, 3.7736673539397755`*^9}, {3.773667404509841*^9, 
  3.7736674161758194`*^9}},ExpressionUUID->"d40c6ba1-9bcf-48d5-b198-\
46dd20d72e26"],

Cell[BoxData[{
 RowBox[{"ClearAll", "[", 
  RowBox[{"makeAPI", ",", "args", ",", "func", ",", "frmt"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"makeAPI", "[", 
     RowBox[{"args_List", ",", " ", "func_Function", ",", "frmt_String"}], 
     "]"}], ":=", " ", 
    RowBox[{"APIFunction", "[", "\[IndentingNewLine]", 
     RowBox[{
     "args", ",", "\[IndentingNewLine]", "func", ",", "\[IndentingNewLine]", 
      " ", "frmt"}], "\[IndentingNewLine]", "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"ClearAll", "[", 
  RowBox[{"makeCD", ",", "args", ",", "func", ",", "frmt"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"makeCD", "[", 
    RowBox[{
    "args_List", ",", " ", "func_Function", ",", "frmt_String", ",", 
     "endPoint_String", ",", "funcName_String", ",", "permit_String"}], "]"}],
    ":=", 
   RowBox[{"CloudDeploy", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"makeAPI", "[", 
      RowBox[{"args", ",", " ", "func", ",", "frmt"}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
     "\"\</\>\"", "<>", "endPoint", "<>", "\"\</\>\"", "<>", "funcName", 
      "<>", "\"\</\>\""}], ",", "\[IndentingNewLine]", 
     RowBox[{"Permissions", "\[Rule]", "\"\<Public\>\""}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.773580716432955*^9, 3.7735807328389626`*^9}, {
   3.7735808569771433`*^9, 3.7735808796991425`*^9}, {3.7735809141251698`*^9, 
   3.773580922534187*^9}, {3.773600092248564*^9, 3.773600098527587*^9}, {
   3.7736596216758986`*^9, 3.773659735256956*^9}, {3.7736599742873755`*^9, 
   3.7736599853993735`*^9}, {3.773660983524245*^9, 3.773661000424245*^9}, {
   3.7736610465622067`*^9, 3.7736610664822454`*^9}, {3.7736619117906775`*^9, 
   3.7736619121756687`*^9}, {3.773664630770135*^9, 3.7736646353111267`*^9}, {
   3.773667462517838*^9, 3.773667487645849*^9}, 3.7736680855313616`*^9, {
   3.7737458687736235`*^9, 3.7737458918665867`*^9}, {3.7737459561496224`*^9, 
   3.7737459789076176`*^9}, {3.773746051127763*^9, 3.773746060579761*^9}, {
   3.7737470564803343`*^9, 3.7737470569753356`*^9}, {3.773747103230336*^9, 
   3.7737471219803357`*^9}, 3.773747181117334*^9, {3.7737473589023714`*^9, 
   3.7737473592443767`*^9}, {3.773762080995393*^9, 3.7737620868813972`*^9}, {
   3.7740161550988865`*^9, 3.774016176176853*^9}, {3.774016272717852*^9, 
   3.7740162821608553`*^9}, {3.7741750982404776`*^9, 3.7741751277812557`*^9}},
 Background->RGBColor[0.88, 1, 0.88],
 CellLabel->"In[19]:=",ExpressionUUID->"725d77f7-93a5-4ad3-bc6a-c4bd3716c6e5"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"ClearAll", "[", 
  RowBox[{"args", ",", "func", ",", "frmt", ",", "params"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"args", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\"\<x\>\"", "\[Rule]", 
      RowBox[{"Interpreter", "[", "\"\<Integer\>\"", "]"}]}], ",", 
     RowBox[{"\"\<y\>\"", "\[Rule]", 
      RowBox[{"Interpreter", "[", "\"\<Integer\>\"", "]"}]}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"func", "=", 
   RowBox[{"Function", "[", " ", 
    RowBox[{"RandomInteger", "[", 
     RowBox[{"{", 
      RowBox[{"#x", ",", "#y"}], "}"}], "]"}], " ", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"frmt", "=", "\"\<JSON\>\""}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"params", "=", 
   RowBox[{"<|", 
    RowBox[{
     RowBox[{"\"\<x\>\"", "\[Rule]", 
      RowBox[{"-", "10"}]}], ",", 
     RowBox[{"\"\<y\>\"", "\[Rule]", "10"}]}], "|>"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"makeAPI", "[", 
   RowBox[{"args", ",", " ", "func", ",", "frmt"}], "]"}], "[", "params", 
  "]"}]}], "Input",
 CellChangeTimes->{{3.7736618675994525`*^9, 3.77366191484867*^9}, {
   3.773662903846877*^9, 3.7736629081608653`*^9}, 3.7737458834606175`*^9, {
   3.77374673095638*^9, 3.773746808504383*^9}, {3.773746944652049*^9, 
   3.773746955305046*^9}, {3.7738375963626957`*^9, 3.773837622260892*^9}},
 CellLabel->"In[23]:=",ExpressionUUID->"370f31d8-63d6-4ae1-b568-0a8fbf6f63f1"],

Cell[BoxData["2"], "Output",
 CellChangeTimes->{{3.7736619213676796`*^9, 3.7736619344566526`*^9}, 
   3.7736630561768427`*^9, 3.773664408177539*^9, {3.773667530601861*^9, 
   3.7736675370128603`*^9}, {3.7736675751278057`*^9, 3.773667579308942*^9}, 
   3.7736680953913956`*^9, {3.7737459696206207`*^9, 3.773745981221617*^9}, {
   3.773746074712762*^9, 3.7737460834837265`*^9}, {3.7737467451203785`*^9, 
   3.773746777397381*^9}, 3.773746810332381*^9, {3.7737469483790436`*^9, 
   3.773746956693183*^9}, 3.7737472414283333`*^9, 3.7737472973934965`*^9, 
   3.7737473778173733`*^9, 3.7737621021274023`*^9, 3.773837636154719*^9, 
   3.774013939600864*^9, 3.774014087081349*^9, 3.774175609816526*^9, 
   3.7741756576965466`*^9, 3.774175770859595*^9, 3.774176463951833*^9},
 CellLabel->"Out[28]=",ExpressionUUID->"c81b73da-42cf-4ea9-914a-1afeda0c5a3f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"endPoint", "=", "\"\<live-coding-unitTest\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"funcName", "=", "\"\<random-integer\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"permit", "=", "\"\<Public\>\""}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"makeCD", "[", 
  RowBox[{
  "args", ",", " ", "func", ",", "frmt", ",", "endPoint", ",", "funcName", 
   ",", "permit"}], "]"}]}], "Input",
 CellChangeTimes->{{3.7736619871076555`*^9, 3.773662013041643*^9}, 
   3.7736681050253935`*^9, 3.773746071272764*^9, {3.7737473736363707`*^9, 
   3.7737473740623913`*^9}, {3.7737620475613937`*^9, 3.773762094389408*^9}, {
   3.7738376924733276`*^9, 3.773837717800318*^9}},
 CellLabel->"In[29]:=",ExpressionUUID->"a23c238a-f39c-4cda-9ce2-ca353ef5b2e0"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"CloudObject", "[", 
   TemplateBox[{
    "\"https://www.wolframcloud.com/obj/mitch/live-coding-unitTest/random-\
integer\"",
     "https://www.wolframcloud.com/obj/mitch/live-coding-unitTest/random-\
integer"},
    "HyperlinkURL"], "]"}],
  CloudObject[
  "https://www.wolframcloud.com/obj/mitch/live-coding-unitTest/random-\
integer"],
  SelectWithContents->True]], "Output",
 CellChangeTimes->{
  3.7736620213611093`*^9, 3.7736630795368547`*^9, 3.7736644117805057`*^9, 
   3.773667585420095*^9, 3.7736681065653977`*^9, {3.7737459886886168`*^9, 
   3.77374601566864*^9}, {3.7737460771527576`*^9, 3.7737460847147627`*^9}, 
   3.773746749911414*^9, 3.773746814396383*^9, 3.773746958317676*^9, 
   3.773747243291335*^9, 3.7737472986895294`*^9, 3.773747379481369*^9, {
   3.773762104218398*^9, 3.7737621270123997`*^9}, 3.7738377315853205`*^9, 
   3.774013941405862*^9, 3.774014090503397*^9, 3.7741757773695908`*^9, 
   3.774176465867833*^9},
 CellLabel->"Out[32]=",ExpressionUUID->"3f0d46be-6bd0-4ba7-be26-3f55ad4356e0"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["API - 10) Images - Getting size and aspect ratio \[OpenCurlyQuote]right\
\[CloseCurlyQuote]", "Chapter",
 CellChangeTimes->{{3.773060186399477*^9, 3.7730602219314637`*^9}, {
   3.7734846084834337`*^9, 3.77348460901343*^9}, {3.77383862351206*^9, 
   3.773838625018071*^9}, 3.7738399120953965`*^9, {3.7739962748694696`*^9, 
   3.77399627660047*^9}},ExpressionUUID->"0493cc2b-5455-4cf2-8c5b-\
23605cbe9aff"],

Cell[CellGroupData[{

Cell["On to Images...", "Subchapter",
 CellChangeTimes->{{3.773843130162216*^9, 
  3.773843134432211*^9}},ExpressionUUID->"1bd1934c-c8be-4b54-93f4-\
3118a6d0fb6d"],

Cell[CellGroupData[{

Cell["Back to making APIs (for <img /> tags)", "Subsection",
 CellChangeTimes->{{3.7737576725087852`*^9, 
  3.7737577035637903`*^9}},ExpressionUUID->"48f51a77-e5a5-44f2-b150-\
475e96dee4e4"],

Cell["\<\
With the basics out of the way let\[CloseCurlyQuote]s get back to making \
APIs.  We\[CloseCurlyQuote]ll use Solve[ ] to produce a couple equations then \
make an image of the result and return it via an API.\
\>", "Text",
 CellChangeTimes->{{3.773237398764903*^9, 3.773237453820902*^9}, {
   3.7732375041236167`*^9, 3.7732376113342266`*^9}, 3.7734106399747686`*^9, {
   3.7736721324796143`*^9, 3.7736721744215827`*^9}, {3.77375854683528*^9, 
   3.7737585998729672`*^9}},ExpressionUUID->"4ae43a17-c9e7-4bd3-a4b9-\
39952928628f"],

Cell["\<\
Note the interaction between font size, image size and aspect ratio.

Comment: 
make sure to load custom functions used in the Function block into kernel \
memory before evaluating APIFunction[ ].  Or, add the custom function into \
the Function block.

Really helpful tip:
don\[CloseCurlyQuote]t send Symbols to HTML!  Replace them with Strings.
/. is shorthand for ReplaceAll[...]\
\>", "Text",
 CellChangeTimes->{{3.7732376341601996`*^9, 3.77323777440237*^9}, {
  3.7732378332349944`*^9, 3.7732378807279987`*^9}, {3.773759591894573*^9, 
  3.773759654310676*^9}, {3.773761439846795*^9, 3.773761444634794*^9}, {
  3.773761476012164*^9, 3.77376157438065*^9}, {3.7737692178810887`*^9, 
  3.773769246338586*^9}, {3.773769431927166*^9, 3.773769460971424*^9}, {
  3.7738486144726524`*^9, 3.773848614970671*^9}, {3.7741850719791126`*^9, 
  3.7741850906140747`*^9}},ExpressionUUID->"e420b43f-c97e-449f-9672-\
3b777dd62622"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"ClearAll", "[", "eq", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"eq", "=", 
   RowBox[{"Solve", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"x", "^", "2"}], "+", 
       RowBox[{"a", " ", "x"}], "+", "1"}], "\[Equal]", "0"}], ",", "x"}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"eq", "//", "Head"}], "\[IndentingNewLine]", 
 RowBox[{"%%", "//", "FullForm"}], "\[IndentingNewLine]", 
 RowBox[{"eq", "/.", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"x", "\[Rule]", "\"\<x\>\""}], ",", 
    RowBox[{"a", "\[Rule]", "\"\<a\>\""}]}], "}"}]}], "\[IndentingNewLine]", 
 RowBox[{"%", "//", "FullForm"}]}], "Input",
 CellChangeTimes->{{3.773775096864229*^9, 3.773775097176188*^9}, {
   3.7741849859499574`*^9, 3.7741849869269924`*^9}, {3.7741850287130733`*^9, 
   3.774185037314074*^9}, 3.774552540838151*^9, {3.77455257226115*^9, 
   3.77455258373315*^9}},
 CellLabel->"In[14]:=",ExpressionUUID->"583a8907-5751-405b-8574-27bd41cc8683"],

Cell[BoxData["List"], "Output",
 CellChangeTimes->{
  3.773774947759201*^9, 3.773775097899188*^9, 3.773848760235318*^9, 
   3.774185038453072*^9, 3.774185129300074*^9, 3.774552543263116*^9, {
   3.7745525747561197`*^9, 3.774552584528146*^9}},
 CellLabel->"Out[16]=",ExpressionUUID->"42540ee8-f59b-4922-a76e-67909875a5e2"],

Cell[BoxData[
 TagBox[
  StyleBox[
   RowBox[{"List", "[", 
    RowBox[{
     RowBox[{"List", "[", 
      RowBox[{"Rule", "[", 
       RowBox[{"x", ",", 
        RowBox[{"Times", "[", 
         RowBox[{
          RowBox[{"Rational", "[", 
           RowBox[{"1", ",", "2"}], "]"}], ",", 
          RowBox[{"Plus", "[", 
           RowBox[{
            RowBox[{"Times", "[", 
             RowBox[{
              RowBox[{"-", "1"}], ",", "a"}], "]"}], ",", 
            RowBox[{"Times", "[", 
             RowBox[{
              RowBox[{"-", "1"}], ",", 
              RowBox[{"Power", "[", 
               RowBox[{
                RowBox[{"Plus", "[", 
                 RowBox[{
                  RowBox[{"-", "4"}], ",", 
                  RowBox[{"Power", "[", 
                   RowBox[{"a", ",", "2"}], "]"}]}], "]"}], ",", 
                RowBox[{"Rational", "[", 
                 RowBox[{"1", ",", "2"}], "]"}]}], "]"}]}], "]"}]}], "]"}]}], 
         "]"}]}], "]"}], "]"}], ",", 
     RowBox[{"List", "[", 
      RowBox[{"Rule", "[", 
       RowBox[{"x", ",", 
        RowBox[{"Times", "[", 
         RowBox[{
          RowBox[{"Rational", "[", 
           RowBox[{"1", ",", "2"}], "]"}], ",", 
          RowBox[{"Plus", "[", 
           RowBox[{
            RowBox[{"Times", "[", 
             RowBox[{
              RowBox[{"-", "1"}], ",", "a"}], "]"}], ",", 
            RowBox[{"Power", "[", 
             RowBox[{
              RowBox[{"Plus", "[", 
               RowBox[{
                RowBox[{"-", "4"}], ",", 
                RowBox[{"Power", "[", 
                 RowBox[{"a", ",", "2"}], "]"}]}], "]"}], ",", 
              RowBox[{"Rational", "[", 
               RowBox[{"1", ",", "2"}], "]"}]}], "]"}]}], "]"}]}], "]"}]}], 
       "]"}], "]"}]}], "]"}],
   ShowSpecialCharacters->False,
   ShowStringCharacters->True,
   NumberMarks->True],
  FullForm]], "Output",
 CellChangeTimes->{
  3.773774947759201*^9, 3.773775097899188*^9, 3.773848760235318*^9, 
   3.774185038453072*^9, 3.774185129300074*^9, 3.774552543263116*^9, {
   3.7745525747561197`*^9, 3.7745525845351453`*^9}},
 CellLabel->
  "Out[17]//FullForm=",ExpressionUUID->"f14ce2fa-62e0-4922-9492-962b10d3c6f8"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\<\"x\"\>", "\[Rule]", 
     RowBox[{
      FractionBox["1", "2"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "\<\"a\"\>"}], "-", 
        SqrtBox[
         RowBox[{
          RowBox[{"-", "4"}], "+", 
          SuperscriptBox["\<\"a\"\>", "2"]}]]}], ")"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"x\"\>", "\[Rule]", 
     RowBox[{
      FractionBox["1", "2"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "\<\"a\"\>"}], "+", 
        SqrtBox[
         RowBox[{
          RowBox[{"-", "4"}], "+", 
          SuperscriptBox["\<\"a\"\>", "2"]}]]}], ")"}]}]}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.773774947759201*^9, 3.773775097899188*^9, 3.773848760235318*^9, 
   3.774185038453072*^9, 3.774185129300074*^9, 3.774552543263116*^9, {
   3.7745525747561197`*^9, 3.7745525845421495`*^9}},
 CellLabel->"Out[18]=",ExpressionUUID->"73b28a2e-f792-41e4-8e32-132cac9d5388"],

Cell[BoxData[
 TagBox[
  StyleBox[
   RowBox[{"List", "[", 
    RowBox[{
     RowBox[{"List", "[", 
      RowBox[{"Rule", "[", 
       RowBox[{"\"\<x\>\"", ",", 
        RowBox[{"Times", "[", 
         RowBox[{
          RowBox[{"Rational", "[", 
           RowBox[{"1", ",", "2"}], "]"}], ",", 
          RowBox[{"Plus", "[", 
           RowBox[{
            RowBox[{"Times", "[", 
             RowBox[{
              RowBox[{"-", "1"}], ",", "\"\<a\>\""}], "]"}], ",", 
            RowBox[{"Times", "[", 
             RowBox[{
              RowBox[{"-", "1"}], ",", 
              RowBox[{"Power", "[", 
               RowBox[{
                RowBox[{"Plus", "[", 
                 RowBox[{
                  RowBox[{"-", "4"}], ",", 
                  RowBox[{"Power", "[", 
                   RowBox[{"\"\<a\>\"", ",", "2"}], "]"}]}], "]"}], ",", 
                RowBox[{"Rational", "[", 
                 RowBox[{"1", ",", "2"}], "]"}]}], "]"}]}], "]"}]}], "]"}]}], 
         "]"}]}], "]"}], "]"}], ",", 
     RowBox[{"List", "[", 
      RowBox[{"Rule", "[", 
       RowBox[{"\"\<x\>\"", ",", 
        RowBox[{"Times", "[", 
         RowBox[{
          RowBox[{"Rational", "[", 
           RowBox[{"1", ",", "2"}], "]"}], ",", 
          RowBox[{"Plus", "[", 
           RowBox[{
            RowBox[{"Times", "[", 
             RowBox[{
              RowBox[{"-", "1"}], ",", "\"\<a\>\""}], "]"}], ",", 
            RowBox[{"Power", "[", 
             RowBox[{
              RowBox[{"Plus", "[", 
               RowBox[{
                RowBox[{"-", "4"}], ",", 
                RowBox[{"Power", "[", 
                 RowBox[{"\"\<a\>\"", ",", "2"}], "]"}]}], "]"}], ",", 
              RowBox[{"Rational", "[", 
               RowBox[{"1", ",", "2"}], "]"}]}], "]"}]}], "]"}]}], "]"}]}], 
       "]"}], "]"}]}], "]"}],
   ShowSpecialCharacters->False,
   ShowStringCharacters->True,
   NumberMarks->True],
  FullForm]], "Output",
 CellChangeTimes->{
  3.773774947759201*^9, 3.773775097899188*^9, 3.773848760235318*^9, 
   3.774185038453072*^9, 3.774185129300074*^9, 3.774552543263116*^9, {
   3.7745525747561197`*^9, 3.77455258456215*^9}},
 CellLabel->
  "Out[19]//FullForm=",ExpressionUUID->"21309614-b8f4-41dd-b159-7631df16c466"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{"ClearAll", "[", 
  RowBox[{
  "grd", ",", "rstr", ",", "bpW", ",", "w", ",", "h", ",", "xL", ",", "xR", 
   ",", "yT", ",", "yC", ",", "yB", ",", "fs", ",", "rsMult"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"xL", "=", "0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"xR", "=", "0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"yT", "=", "0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"yC", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"yB", "=", "0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"bpW", "=", "200"}], ";"}], 
  RowBox[{"(*", 
   RowBox[{"base", " ", "pixels", " ", "width"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"w", "=", "16"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"h", "=", "9"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"fs", "=", "17.5"}], ";"}], 
  RowBox[{"(*", 
   RowBox[{"font", " ", "size"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"rsMult", "=", "3"}], ";"}], 
  RowBox[{"(*", 
   RowBox[{"RasterSize", " ", "multiple"}], "*)"}]}]}], "Input",
 CellChangeTimes->{{3.7734117686554127`*^9, 3.773411918150736*^9}, {
   3.773587109266794*^9, 3.773587109739748*^9}, {3.7736722231116066`*^9, 
   3.7736722263516083`*^9}, 3.7736737022112017`*^9, {3.7737588430719123`*^9, 
   3.773758987423379*^9}, {3.773759017853423*^9, 3.773759212573621*^9}, {
   3.7737592590356574`*^9, 3.7737594770822134`*^9}, {3.773759508707223*^9, 
   3.7737595464434166`*^9}, 3.773760133753598*^9, {3.7737601682586036`*^9, 
   3.7737602118676534`*^9}, {3.7737606536145945`*^9, 
   3.7737606999914665`*^9}, {3.7737607898345013`*^9, 3.773760802354459*^9}, {
   3.7737608431674595`*^9, 3.773760848878462*^9}, {3.7737608863854675`*^9, 
   3.7737609047165003`*^9}, 3.773761025584462*^9, {3.7737612323187895`*^9, 
   3.773761257721845*^9}, {3.7738488149827166`*^9, 
   3.7738488159367065`*^9}},ExpressionUUID->"30bb4b9f-bc98-4728-be09-\
63fdf6cc06f3"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"makeAPI", ",", " ", "makeCD", ",", " ", 
    RowBox[{"and", " ", "WebExecute"}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"ClearAll", "[", 
    RowBox[{
    "args", ",", "func", ",", "frmt", ",", "params", ",", "endPoint", ",", 
     "funcName", ",", "permit", ",", "url", ",", "session"}], "]"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"required", " ", "custom", " ", "functions"}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{"ClearAll", "[", 
    RowBox[{"wPX", ",", "hPX", ",", "bp", ",", "w", ",", "h"}], "]"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"wPX", "[", "base_", "]"}], ":=", "base"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"wPX", "[", 
     RowBox[{"base_", ",", "w_", ",", "h_"}], "]"}], ":=", 
    RowBox[{
     RowBox[{"base", "*", 
      RowBox[{"(", 
       RowBox[{"w", "/", "h"}], ")"}]}], "//", "N"}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"hPX", "[", "base_", "]"}], ":=", "base"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"hPX", "[", 
     RowBox[{"base_", ",", "w_", ",", "h_"}], "]"}], ":=", 
    RowBox[{
     RowBox[{"base", "*", 
      RowBox[{"(", 
       RowBox[{"h", "/", "w"}], ")"}]}], "//", "N"}]}], "\[IndentingNewLine]",
    "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"args", "=", 
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"\"\<xL\>\"", "\[Rule]", "\"\<Number\>\""}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"\"\<xR\>\"", "\[Rule]", "\"\<Number\>\""}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"\"\<yT\>\"", "\[Rule]", "\"\<Number\>\""}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"\"\<yC\>\"", "\[Rule]", "\"\<Number\>\""}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"\"\<yB\>\"", "\[Rule]", "\"\<Number\>\""}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"\"\<bpW\>\"", "\[Rule]", "\"\<Number\>\""}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"\"\<w\>\"", "\[Rule]", "\"\<Number\>\""}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"\"\<h\>\"", "\[Rule]", "\"\<Number\>\""}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"\"\<fs\>\"", "\[Rule]", "\"\<Number\>\""}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"\"\<rsMult\>\"", "\[Rule]", "\"\<Number\>\""}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"\"\<gridFrame\>\"", "\[Rule]", "\"\<Boolean\>\""}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"\"\<imageFrame\>\"", "\[Rule]", "\"\<Boolean\>\""}]}], 
      "\[IndentingNewLine]", "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"func", "=", 
     RowBox[{"Function", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"ClearAll", "[", 
        RowBox[{"a", ",", "x"}], "]"}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"Rasterize", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Framed", "[", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"Item", "[", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"Style", "[", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{
               "Grid", "[", "\[IndentingNewLine]", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"Solve", "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{
                    RowBox[{"x", "^", "2"}], "+", 
                    RowBox[{"a", " ", "x"}], "+", "1"}], "\[Equal]", "0"}], 
                   ",", "x"}], "]"}], ",", "\[IndentingNewLine]", 
                 "\[IndentingNewLine]", 
                 RowBox[{"Spacings", "\[Rule]", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"#xL", ",", "#xR"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"#yT", ",", "#yC", ",", "#yB"}], "}"}]}], "}"}]}],
                  ",", "\[IndentingNewLine]", 
                 RowBox[{"Frame", "\[Rule]", "All"}], ",", 
                 RowBox[{"FrameStyle", "\[Rule]", 
                  RowBox[{"If", "[", 
                   RowBox[{"#gridFrame", ",", "Gray", ",", "White"}], 
                   "]"}]}]}], "\[IndentingNewLine]", "]"}], ",", 
               "\[IndentingNewLine]", 
               RowBox[{
               "FontFamily", "\[Rule]", "\"\<Arabic Transparent\>\""}], ",", 
               RowBox[{"FontSize", "\[Rule]", "#fs"}]}], 
              "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
             RowBox[{"Alignment", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{"Center", ",", "Center"}], "}"}]}]}], 
            "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
           RowBox[{"ImageSize", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"wPX", "[", "#bpW", "]"}], ",", 
              RowBox[{"hPX", "[", 
               RowBox[{"#bpW", ",", "#w", ",", "#h"}], "]"}]}], "}"}]}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"FrameMargins", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"0", ",", "0"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"0", ",", "0"}], "}"}]}], "}"}]}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"ContentPadding", "\[Rule]", "False"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"RoundingRadius", "\[Rule]", "0"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"FrameStyle", "\[Rule]", 
            RowBox[{"If", "[", 
             RowBox[{"#imageFrame", ",", "Red", ",", "White"}], "]"}]}]}], 
          "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
         RowBox[{"ImageSize", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"wPX", "[", "#bpW", "]"}], ",", 
            RowBox[{"hPX", "[", 
             RowBox[{"#bpW", ",", "#w", ",", "#h"}], "]"}]}], "}"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"RasterSize", "\[Rule]", 
          RowBox[{"#rsMult", "*", "#bpW"}]}]}], "\[IndentingNewLine]", 
        "]"}]}], "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"frmt", "=", "\"\<PNG\>\""}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"params", "=", 
     RowBox[{"<|", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"\"\<xL\>\"", "\[Rule]", "0"}], ",", "\[IndentingNewLine]", 
       RowBox[{"\"\<xR\>\"", "\[Rule]", "0"}], ",", "\[IndentingNewLine]", 
       RowBox[{"\"\<yT\>\"", "\[Rule]", "0"}], ",", "\[IndentingNewLine]", 
       RowBox[{"\"\<yC\>\"", "\[Rule]", "0"}], ",", "\[IndentingNewLine]", 
       RowBox[{"\"\<yB\>\"", "\[Rule]", "0"}], ",", "\[IndentingNewLine]", 
       RowBox[{"\"\<bpW\>\"", "\[Rule]", "200"}], ",", "\[IndentingNewLine]", 
       RowBox[{"\"\<w\>\"", "\[Rule]", "16"}], ",", "\[IndentingNewLine]", 
       RowBox[{"\"\<h\>\"", "\[Rule]", "9"}], ",", "\[IndentingNewLine]", 
       RowBox[{"\"\<fs\>\"", "\[Rule]", "17.5"}], ",", "\[IndentingNewLine]", 
       RowBox[{"\"\<rsMult\>\"", "\[Rule]", "3"}], ",", "\[IndentingNewLine]", 
       RowBox[{"\"\<gridFrame\>\"", "\[Rule]", "True"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"\"\<imageFrame\>\"", "\[Rule]", "True"}]}], 
      "\[IndentingNewLine]", "|>"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"endPoint", "=", "\"\<live-coding\>\""}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"funcName", "=", "\"\<equation\>\""}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"permit", "=", "\"\<Public\>\""}], ";"}]}]}]], "Input",
 CellChangeTimes->{
  3.773760569173571*^9, {3.7737611866761217`*^9, 3.7737612086117945`*^9}, {
   3.7737612444167943`*^9, 3.7737612789917965`*^9}, {3.773761317261825*^9, 
   3.7737614181707993`*^9}, {3.773761632567605*^9, 3.7737616574226317`*^9}, {
   3.773761707236599*^9, 3.773761724894602*^9}, {3.773761784041605*^9, 
   3.7737618386406007`*^9}, {3.773762265637114*^9, 3.7737622806491156`*^9}, {
   3.773762348507267*^9, 3.773762360111206*^9}, {3.7737624399395933`*^9, 
   3.7737624406406155`*^9}, {3.7737625345451665`*^9, 
   3.7737625355061255`*^9}, {3.7737626236017094`*^9, 3.7737627351453*^9}, {
   3.7737628779624643`*^9, 3.7737628800754657`*^9}, {3.7737629267095613`*^9, 
   3.7737629847616544`*^9}, {3.773763112051964*^9, 3.7737631179170046`*^9}, {
   3.773763153934928*^9, 3.7737631643539376`*^9}, {3.773763656028555*^9, 
   3.773763668632566*^9}, {3.7737638053007493`*^9, 3.773763805725723*^9}, {
   3.773763936846757*^9, 3.7737639763717847`*^9}, 3.7737640426697702`*^9, {
   3.77376477530385*^9, 3.7737647952698493`*^9}, {3.77376507203111*^9, 
   3.7737650947171135`*^9}, {3.7737651380101085`*^9, 3.773765266906598*^9}, {
   3.773765357382228*^9, 3.7737653715882664`*^9}, {3.7737654884775558`*^9, 
   3.773765489228558*^9}, 3.7737655288136225`*^9, 3.773766774286764*^9, {
   3.773766837004783*^9, 3.773766842317814*^9}, {3.773766972490961*^9, 
   3.773766990746643*^9}, {3.7737671049720287`*^9, 3.7737671067109914`*^9}, {
   3.77376716837512*^9, 3.773767172252102*^9}, {3.773767261790263*^9, 
   3.7737672696407022`*^9}, {3.773767417805055*^9, 3.7737675671822233`*^9}, {
   3.7737676397638297`*^9, 3.7737679214492707`*^9}, 3.7737680170094676`*^9, 
   3.773769115041006*^9, {3.7737691481341743`*^9, 3.7737691593572063`*^9}, {
   3.773769569743718*^9, 3.773769573307681*^9}, {3.773774853629221*^9, 
   3.7737748769222336`*^9}, {3.7737752868466034`*^9, 
   3.7737753781798334`*^9}, {3.7737754221743755`*^9, 3.773775578953766*^9}, {
   3.773776466108606*^9, 3.773776466255603*^9}, {3.7737774905816536`*^9, 
   3.773777526794114*^9}, {3.773777576266156*^9, 3.7737776989548545`*^9}, {
   3.773777731710453*^9, 3.7737778155501294`*^9}, 3.7738497110897923`*^9, {
   3.7738497614738083`*^9, 3.773849789252469*^9}, {3.7738498350773993`*^9, 
   3.773849866196686*^9}, {3.7738499527196684`*^9, 3.7738499529586716`*^9}, 
   3.7741851830316987`*^9},
 CellLabel->
  "In[605]:=",ExpressionUUID->"04657f2b-2ff6-4fc0-bde5-44e4141397b3"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"makeAPI", "[", 
   RowBox[{"args", ",", "func", ",", "frmt"}], "]"}], "[", "params", 
  "]"}]], "Input",
 CellChangeTimes->{{3.773761730942604*^9, 3.7737617335066075`*^9}, {
  3.7737618532836046`*^9, 3.773761872371603*^9}},
 CellLabel->
  "In[618]:=",ExpressionUUID->"6e704d22-87cf-4543-b4b4-0788fe00712f"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
MCIHUcxnDqpBEwMmVQuAugiQuiRcR6QsykIOlqGm8vcaguui607kIIr5zEE1
s2jWgtHoE1kk0+k1l7NTkBzMozqCDXxUyToEWaJMDqKYzxxU9cxMLhqCnhTJ
6PqO/Quk5GAGvdKg347gD8kclHXp5KBdi5dmWkixBnPw6OjI9Sv4sli8PF5f
n0Z0T2DzvetHPUsrdqLenyyS6ew0eskqxz7noKvW3lBZTEKYOfjr79SbLtMo
9f3uBvdSwo9zSxt/Sz5zUM3zoOqZTdrc2ci+HKbaUGLS8uD1o0hmf32y3ZGi
yRxcCD5fx2lrV6MEm/zDSOagXOy7rzkYJaEu4ipqlpZS0O/UCgdsjvuNGY/H
8lO3noN5N4RyDg/t70M7VOVeJ4tk9g4W8d5tLgf3m6G3V3Lb2vePag0fXdVU
25HZbBb/tL85+PdkOXNec7GUgnpjWj+MNpiDpoeS7d/YqKTtXWiIHNHczSKZ
9BTsWw46bu3iw2nj4BpuDlYIN/3A1o9a+kSs1Vj2moNqHnjDOZgyTGx7HWj/
utRieyMl5QjSeptyLOrH1VsZRE6r3sEimZwI6lMOOm7tdXqWTg96IedguSS0
OTFgYqtajEKfOagap9kcrLo/LO0/x6IEvLi42L2rqlc1u14kkxtA/clB1629
3gVWcrA+/Y6KktBmCm4lTsn6cyj9ot6i1RzUzaRG3VUP9t7379/VeE81X3Gh
bhfJFEyE2ZscdN7aM6bcyUcOHiD5jvKS0HAKbiRPo2xtnwPq/RnNQbUjSv6F
7re8TudglIBqhMtO1Ln7/Pws/zwPDw/y1ztVJJNWIpr9gA7nYB9bOzmYnYTG
U3AreSblZyOTh7hKXL2u0RxcbwdQvTxuh1CV/htvcPpEf7ISMHZzc1P+2eQ0
et0qkilMwf7k4LqHrZ0c3EgrhOlCCm4kk9BHG8s50JXh6nXt5mAdJY6dhhUm
4M5wOCwfZ10tkim1J3uUg3WYbu3k4E5iLIKucjLSmNKk3GV23swKD3f5XL0u
OWhHXAyzE3Xfor2jLmzuRN8s84RRXMrf6kyRTNnUIQfttnZy8Kfce7VGmlKm
tDJmpy0t57Mpw9Xr9iIHtxeVEida1o4MhaJDx662czweT6fT5XK5+76aAmhQ
elbY19dX+VsdKZIpnzlh5mA3Wjs5+CUzCd00pE2D8Cet8tjhrAx3h6n9uuod
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
A5wBcjY=
    "], {{0, 340}, {600, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->{200, 112.5},
  ImageSizeRaw->{600, 340},
  PlotRange->{{0, 600}, {0, 340}}]], "Output",
 CellChangeTimes->{{3.773761873492608*^9, 3.7737618813496046`*^9}, 
   3.7737623730792007`*^9, 3.7737624536362886`*^9, 3.7737627378992558`*^9, 
   3.7737628833654757`*^9, 3.7737629891318755`*^9, 3.7737631245699673`*^9, 
   3.773763169408908*^9, 3.773763673018567*^9, 3.7737638091737275`*^9, {
   3.7737639461697483`*^9, 3.7737639795717473`*^9}, 3.773764049012331*^9, 
   3.7737647984858494`*^9, 3.773765100305114*^9, 3.773765149462114*^9, 
   3.773765196695252*^9, 3.7737652703165903`*^9, 3.773765380705263*^9, 
   3.7737654925865636`*^9, 3.7737655359036283`*^9, 3.7737667785827956`*^9, 
   3.7737668456068163`*^9, {3.773766975043955*^9, 3.773766993529637*^9}, 
   3.7737671188229847`*^9, 3.773767175690134*^9, 3.7737672770157704`*^9, 
   3.7737674820504184`*^9, {3.7737675557102537`*^9, 3.77376757141051*^9}, 
   3.7737676574688272`*^9, 3.77376770966048*^9, 3.77376774409484*^9, {
   3.77376779353505*^9, 3.77376782143929*^9}, {3.77376787573456*^9, 
   3.7737679025322046`*^9}, 3.773768023962463*^9, {3.7737691241780467`*^9, 
   3.7737691619522085`*^9}, 3.773769367215746*^9, 3.7737752680612345`*^9, {
   3.773775352453745*^9, 3.7737753822868805`*^9}, 3.7737755909577665`*^9, 
   3.773776469239637*^9, 3.773777495930664*^9, 3.7737775302163224`*^9, 
   3.773777716241767*^9, 3.7737777473443503`*^9, {3.7737777907842846`*^9, 
   3.7737778198568373`*^9}, 3.7738497939794655`*^9, 3.7738498397604055`*^9, 
   3.7738498709396706`*^9, 3.773849955831674*^9, 3.7741851888876953`*^9, 
   3.774185282484181*^9},
 CellLabel->
  "Out[618]=",ExpressionUUID->"0f956120-8984-4419-9e6e-0e8dc8a94791"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"makeCD", "[", 
  RowBox[{
  "args", ",", " ", "func", ",", "frmt", ",", "endPoint", ",", "funcName", 
   ",", "permit"}], "]"}]], "Input",
 CellLabel->
  "In[619]:=",ExpressionUUID->"bdc99fad-6c7c-4118-87e5-1c8af55d37b7"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"CloudObject", "[", 
   TemplateBox[{
    "\"https://www.wolframcloud.com/obj/mitch/live-coding/equation\"",
     "https://www.wolframcloud.com/obj/mitch/live-coding/equation"},
    "HyperlinkURL"], "]"}],
  CloudObject["https://www.wolframcloud.com/obj/mitch/live-coding/equation"],
  SelectWithContents->True]], "Output",
 CellChangeTimes->{
  3.773762486343033*^9, 3.7737628869434633`*^9, 3.773762991534877*^9, 
   3.7737631270409613`*^9, 3.773763171807906*^9, 3.773763677450571*^9, 
   3.7737638140347304`*^9, 3.773763982291752*^9, 3.7737648092248497`*^9, 
   3.7737651517401114`*^9, 3.7737651991602488`*^9, 3.773766784351798*^9, 
   3.773766847840788*^9, {3.773766977267974*^9, 3.773766995623681*^9}, 
   3.7737671209380198`*^9, 3.773767178272132*^9, 3.773767278514809*^9, 
   3.773767574325547*^9, 3.773767659454793*^9, 3.773767711657465*^9, 
   3.7737677458088336`*^9, {3.7737677956101575`*^9, 3.7737678242922697`*^9}, 
   3.773767878519573*^9, 3.7737680261835155`*^9, {3.7737691377500057`*^9, 
   3.773769163829174*^9}, 3.773769377542796*^9, 3.773775270085228*^9, {
   3.773775354269744*^9, 3.773775384151887*^9}, 3.7737755930447636`*^9, 
   3.7737764706886373`*^9, 3.773777497722968*^9, 3.7737775315411463`*^9, 
   3.7737778221733932`*^9, 3.7738497964624653`*^9, 3.773849840802437*^9, 
   3.77384987267364*^9, 3.7738499569066777`*^9, 3.774185286482218*^9},
 CellLabel->
  "Out[619]=",ExpressionUUID->"a3e6e098-6478-4424-9ebd-660fefdc7c04"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"url", "=", 
  RowBox[{"URLBuild", "[", 
   RowBox[{
    RowBox[{"makeCD", "[", 
     RowBox[{
     "args", ",", " ", "func", ",", "frmt", ",", "endPoint", ",", "funcName", 
      ",", "permit"}], "]"}], ",", "params"}], "]"}]}], "\n", 
 RowBox[{
  RowBox[{"session", "=", 
   RowBox[{"StartWebSession", "[", "\"\<Chrome\>\"", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"WebExecute", "[", 
   RowBox[{"session", ",", 
    RowBox[{"{", 
     RowBox[{"\"\<OpenPage\>\"", "\[Rule]", "url"}], "}"}]}], "]"}], 
  ";"}]}], "Input",
 CellChangeTimes->{
  3.773760569173571*^9, {3.7737611866761217`*^9, 3.7737612086117945`*^9}, {
   3.7737612444167943`*^9, 3.7737612789917965`*^9}, {3.773761317261825*^9, 
   3.7737614181707993`*^9}, {3.773761632567605*^9, 3.7737616574226317`*^9}, 
   3.773761707236599*^9, {3.7737622888981376`*^9, 3.773762289268152*^9}},
 CellLabel->
  "In[620]:=",ExpressionUUID->"f0352c38-d467-48a5-80bb-5dcf9d324d62"],

Cell[BoxData["\<\"https://www.wolframcloud.com/obj/mitch/live-coding/equation?\
xL=0&xR=0&yT=0&yC=0&yB=0&bpW=200&w=16&h=9&fs=17.5&rsMult=3&gridFrame=true&\
imageFrame=true\"\>"], "Output",
 CellChangeTimes->{
  3.7737619224376373`*^9, 3.773762385012199*^9, 3.773762455688285*^9, 
   3.7737627488701625`*^9, 3.773762909645464*^9, 3.7737629975178747`*^9, 
   3.773763132820382*^9, 3.7737631738369207`*^9, 3.773763678514557*^9, 
   3.7737638154577274`*^9, 3.7737639837777476`*^9, 3.7737648107308674`*^9, 
   3.773765153286123*^9, 3.7737652004762564`*^9, 3.7737667870677958`*^9, 
   3.7737668490497913`*^9, {3.773766978363923*^9, 3.7737669966966457`*^9}, 
   3.7737671253289948`*^9, 3.7737671799200954`*^9, 3.7737672826527786`*^9, 
   3.7737675760615683`*^9, 3.773767660557799*^9, 3.7737677127175922`*^9, 
   3.7737677469558725`*^9, {3.7737677967561636`*^9, 3.7737678258112698`*^9}, 
   3.7737678798285513`*^9, 3.7737680273994627`*^9, {3.773769138807012*^9, 
   3.773769165199174*^9}, 3.773769378694786*^9, 3.773775271800187*^9, 
   3.7737753553566666`*^9, 3.7737753861398354`*^9, 3.7737755942307324`*^9, 
   3.773776471613611*^9, 3.773777498859049*^9, 3.773777533367388*^9, 
   3.7737778237195625`*^9, 3.7738497982204294`*^9, 3.773849842036401*^9, 
   3.7738498745616393`*^9, 3.773849957771675*^9, 3.774185289641183*^9},
 CellLabel->
  "Out[620]=",ExpressionUUID->"17222bab-0c27-4875-9abd-895a380a2f8c"]
}, Open  ]],

Cell["\<\
Let\[CloseCurlyQuote]s go to the JavaScript <img /> tag and play with width \
and height methods...\
\>", "Text",
 CellChangeTimes->{{3.773778785501286*^9, 
  3.773778833214074*^9}},ExpressionUUID->"3b9d5772-fd6b-4224-a6e0-\
aa512e2f1b90"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"hPX", "[", 
  RowBox[{"200", ",", "16", ",", "9"}], "]"}]], "Input",
 CellChangeTimes->{{3.7737787327452135`*^9, 3.7737787508717813`*^9}},
 CellLabel->
  "In[4720]:=",ExpressionUUID->"70bce0ab-06e7-4bad-a0f0-5bee0237b848"],

Cell[BoxData["112.5`"], "Output",
 CellChangeTimes->{{3.773778741523368*^9, 3.7737787520454254`*^9}},
 CellLabel->
  "Out[4720]=",ExpressionUUID->"1e5d190c-0cc0-42dc-b0ca-7ed5ace01cf8"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"hPX", "[", 
  RowBox[{"400", ",", "21", ",", "9"}], "]"}]], "Input",
 CellChangeTimes->{{3.773850100793599*^9, 3.773850124422599*^9}, {
  3.773850327292638*^9, 3.7738503274516425`*^9}, {3.773851010209587*^9, 
  3.773851015385614*^9}, {3.7738528549629197`*^9, 3.7738528550749187`*^9}},
 CellLabel->
  "In[1731]:=",ExpressionUUID->"0c40a55a-b5ae-4f94-a0cd-1ae36998850b"],

Cell[BoxData["171.42857142857142`"], "Output",
 CellChangeTimes->{{3.7738501207235837`*^9, 3.7738501249816055`*^9}, 
   3.77385032836664*^9, 3.773851015947627*^9, 3.7738528558829536`*^9},
 CellLabel->
  "Out[1731]=",ExpressionUUID->"8e17304c-3345-4175-91bf-0b157d38ac85"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["API-11) Ways to return combinations of images and tables", "Chapter",
 CellChangeTimes->{{3.7638903241703033`*^9, 3.763890387306302*^9}, {
  3.7638906383193026`*^9, 3.7638906506213074`*^9}, {3.763976047180131*^9, 
  3.7639760608231316`*^9}, {3.763976112842131*^9, 3.763976117610132*^9}, {
  3.763990612311146*^9, 3.763990612485146*^9}, {3.7639983208147407`*^9, 
  3.7639983210327415`*^9}, {3.76399845428874*^9, 3.763998454495742*^9}, {
  3.7730601343244324`*^9, 3.7730601418604593`*^9}, {3.773484566528428*^9, 
  3.773484577943428*^9}, {3.773486017532942*^9, 3.7734860607238617`*^9}, {
  3.7735072006684327`*^9, 3.7735072245185504`*^9}, {3.7738515781536674`*^9, 
  3.7738515856266727`*^9}},ExpressionUUID->"662f0697-6bd2-47b5-ad9c-\
5b9db247263c"],

Cell[CellGroupData[{

Cell["Create DB", "Subsubsection",
 CellChangeTimes->{{3.7740190053225164`*^9, 
  3.774019007576517*^9}},ExpressionUUID->"226732a0-a3f9-493c-96f6-\
45d69aad94c8"],

Cell["Make a data repository using Databin", "Text",
 CellChangeTimes->{{3.773502103926482*^9, 3.773502109968481*^9}, {
  3.774020958693462*^9, 
  3.7740209892644625`*^9}},ExpressionUUID->"1af7bef8-8291-45d3-9da0-\
74b411a7a5bf"],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  StyleBox[
   RowBox[{"(*", " ", 
    RowBox[{"CAUTION", " ", "-", " ", 
     RowBox[{
     "running", " ", "this", " ", "cell", " ", "will", " ", "make", " ", "a", 
      " ", "new", " ", "Databin"}]}], " ", "*)"}],
   FontSize->24], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"ClearAll", "[", "readingsDB", "]"}], "\[IndentingNewLine]", 
   RowBox[{"readingsDB", "=", 
    RowBox[{"CreateDatabin", "[", 
     RowBox[{"<|", 
      RowBox[{
       RowBox[{"\"\<Name\>\"", "\[Rule]", "\"\<readings\>\""}], ",", 
       RowBox[{"Permissions", "\[Rule]", "\"\<Public\>\""}]}], "|>"}], 
     "]"}]}], "\[IndentingNewLine]", "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.7734869902400413`*^9, 3.77348703862908*^9}, {
   3.7734870721981654`*^9, 3.773487134205211*^9}, 3.7734871741471944`*^9, {
   3.7734872374602146`*^9, 3.77348727354523*^9}, 3.77348737800634*^9, {
   3.7734874781052947`*^9, 3.773487479706343*^9}, {3.7734875510133305`*^9, 
   3.7734875601993217`*^9}, {3.7734916447115574`*^9, 
   3.7734916450245905`*^9}, {3.773588644791773*^9, 3.77358870740178*^9}, 
   3.774009114916989*^9, {3.774009152203905*^9, 3.7740091987009087`*^9}, {
   3.774021001832488*^9, 3.7740210059324627`*^9}, 3.774021042678499*^9},
 Background->RGBColor[
  1, 0.85, 0.85],ExpressionUUID->"3c2fd98c-5145-4599-a4c1-ca76a25d1b07"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Get your databins", "Subsubsection",
 CellChangeTimes->{{3.774019017314542*^9, 3.7740190269855537`*^9}, {
  3.7741868148959484`*^9, 
  3.7741868194549527`*^9}},ExpressionUUID->"b91d6c81-1862-4a68-9f0b-\
9430c8b42d0e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Databins", "[", "]"}]], "Input",
 CellLabel->
  "In[629]:=",ExpressionUUID->"71550abf-13c2-4977-8dd5-e8681f9cb319"],

Cell[BoxData[
 RowBox[{"{", 
  InterpretationBox[
   RowBox[{
    TagBox["Databin",
     "SummaryHead"], "[", 
    DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
     TemplateBox[{PaneSelectorBox[{False -> GridBox[{{
             PaneBox[
              ButtonBox[
               DynamicBox[
                FEPrivate`FrontEndResource[
                "FEBitmaps", "SquarePlusIconMedium"]], 
               ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
               Evaluator -> Automatic, Method -> "Preemptive"], 
              Alignment -> {Center, Center}, ImageSize -> 
              Dynamic[{
                Automatic, 
                 3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                  Magnification])}]], 
             GraphicsBox[{
               Thickness[0.05555555555555555], 
               StyleBox[{
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                   0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                   0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                   0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                   0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                   0}, {1, 3, 3}}}, {{{15.646999999999998`, 
                   5.933000000000001}, {13.585, 7.263}, {15.533, 8.458}, {
                   17.332, 7.363999999999999}, {15.646999999999998`, 
                   5.933000000000001}}, {{12.697, 3.425}, {10.245, 5.212}, {
                   12.491, 6.591}, {14.725999999999999`, 
                   5.1499999999999995`}, {12.697, 3.425}}, {{8.666, 0.}, {
                   5.978000000000001, 2.285}, {8.666, 4.244}, {
                   11.354000000000001`, 2.285}, {8.666, 0.}}, {{4.635, 
                   3.425}, {2.606, 5.1499999999999995`}, {4.841, 6.591}, {
                   7.087, 5.212}, {4.635, 3.425}}, {{0., 7.363999999999999}, {
                   1.799, 8.458}, {3.7470000000000003`, 7.263}, {
                   1.6840000000000002`, 5.933000000000001}, {0., 
                   7.363999999999999}}, CompressedData["
1:eJxTTMoPSmViYGAQBmIQrbtp7vvlbqIOP+uy9pQIqzr8Wfnxkm+SjIPIOveH
VVNUHNgbpzp3v1Fw2Pb575WKk0YOpnG7PHmYFB1eB+6Qa+U2djDvdEx4OkHR
AWTMMSA/PQ0Ilik61NgDVQLVF9hyXV9coOKwp2SyBMs0FYcFUvp3Vdg04PbJ
twJNikPwV4Gsn6DhAFQdxrdWxWHWTCCI1HAAOSMnXcXB42GVyLrjig5nz4CA
hEMWyOAWRQd+kEfUJaDmKzpoxvQf+qoh4RDQOz1P6LCCA5N2u9jNcxIOlltO
lO2bLwI3TxJoja6RCNw+kO7GqSJw96CHDwDEr32g
                   "]}]}, 
                FaceForm[
                 RGBColor[0.44721600000000006`, 0.519288, 0.528528, 1.]], 
                StripOnInput -> False]}, {
              Background -> GrayLevel[0.93], Axes -> False, AspectRatio -> 1, 
               ImageSize -> {Automatic, 
                 Dynamic[
                 3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])]}, Frame -> True, FrameTicks -> None, 
               PlotRangePadding -> 2.5, FrameStyle -> Directive[
                 Thickness[Tiny], 
                 GrayLevel[0.55]], ImageSize -> {18., 19.}, 
               PlotRange -> {{0., 18.}, {0., 19.}}, AspectRatio -> 
               Automatic}], 
             GridBox[{{
                RowBox[{
                  TagBox["\"Name: \"", "SummaryItemAnnotation"], 
                  "\[InvisibleSpace]", 
                  TagBox["\"readings\"", "SummaryItem"]}]}, {
                RowBox[{
                  TagBox["\"Entry count: \"", "SummaryItemAnnotation"], 
                  "\[InvisibleSpace]", 
                  TagBox[
                   DynamicBox[
                    ToBoxes[
                    Lookup[
                    Replace[
                    
                    DataDropClient`Private`datadropclientcache[{
                    "DatabinStats", 
                    "DD4d864eaa38b-3d22-4a26-b724-aff8e2bb6bde"}], Except[
                    Blank[Association]] -> {}, {0}], "EntryCount", 
                    Missing[]], StandardForm]], "SummaryItem"]}]}}, 
              GridBoxAlignment -> {
               "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
              False, GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              GridBoxSpacings -> {
               "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
              BaseStyle -> {
               ShowStringCharacters -> False, NumberMarks -> False, 
                PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
           GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           BaselinePosition -> {1, 1}], True -> GridBox[{{
             PaneBox[
              ButtonBox[
               DynamicBox[
                FEPrivate`FrontEndResource[
                "FEBitmaps", "SquareMinusIconMedium"]], 
               ButtonFunction :> (Typeset`open$$ = False), Appearance -> None,
                Evaluator -> Automatic, Method -> "Preemptive"], 
              Alignment -> {Center, Center}, ImageSize -> 
              Dynamic[{
                Automatic, 
                 3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                  Magnification])}]], 
             GraphicsBox[{
               Thickness[0.05555555555555555], 
               StyleBox[{
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                   0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                   0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                   0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                   0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                   0}, {1, 3, 3}}}, {{{15.646999999999998`, 
                   5.933000000000001}, {13.585, 7.263}, {15.533, 8.458}, {
                   17.332, 7.363999999999999}, {15.646999999999998`, 
                   5.933000000000001}}, {{12.697, 3.425}, {10.245, 5.212}, {
                   12.491, 6.591}, {14.725999999999999`, 
                   5.1499999999999995`}, {12.697, 3.425}}, {{8.666, 0.}, {
                   5.978000000000001, 2.285}, {8.666, 4.244}, {
                   11.354000000000001`, 2.285}, {8.666, 0.}}, {{4.635, 
                   3.425}, {2.606, 5.1499999999999995`}, {4.841, 6.591}, {
                   7.087, 5.212}, {4.635, 3.425}}, {{0., 7.363999999999999}, {
                   1.799, 8.458}, {3.7470000000000003`, 7.263}, {
                   1.6840000000000002`, 5.933000000000001}, {0., 
                   7.363999999999999}}, CompressedData["
1:eJxTTMoPSmViYGAQBmIQrbtp7vvlbqIOP+uy9pQIqzr8Wfnxkm+SjIPIOveH
VVNUHNgbpzp3v1Fw2Pb575WKk0YOpnG7PHmYFB1eB+6Qa+U2djDvdEx4OkHR
AWTMMSA/PQ0Ilik61NgDVQLVF9hyXV9coOKwp2SyBMs0FYcFUvp3Vdg04PbJ
twJNikPwV4Gsn6DhAFQdxrdWxWHWTCCI1HAAOSMnXcXB42GVyLrjig5nz4CA
hEMWyOAWRQd+kEfUJaDmKzpoxvQf+qoh4RDQOz1P6LCCA5N2u9jNcxIOlltO
lO2bLwI3TxJoja6RCNw+kO7GqSJw96CHDwDEr32g
                   "]}]}, 
                FaceForm[
                 RGBColor[0.44721600000000006`, 0.519288, 0.528528, 1.]], 
                StripOnInput -> False]}, {
              Background -> GrayLevel[0.93], Axes -> False, AspectRatio -> 1, 
               ImageSize -> {Automatic, 
                 Dynamic[
                 3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])]}, Frame -> True, FrameTicks -> None, 
               PlotRangePadding -> 2.5, FrameStyle -> Directive[
                 Thickness[Tiny], 
                 GrayLevel[0.55]], ImageSize -> {18., 19.}, 
               PlotRange -> {{0., 18.}, {0., 19.}}, AspectRatio -> 
               Automatic}], 
             GridBox[{{
                RowBox[{
                  TagBox["\"Name: \"", "SummaryItemAnnotation"], 
                  "\[InvisibleSpace]", 
                  TagBox["\"readings\"", "SummaryItem"]}]}, {
                RowBox[{
                  TagBox["\"Entry count: \"", "SummaryItemAnnotation"], 
                  "\[InvisibleSpace]", 
                  TagBox[
                   DynamicBox[
                    ToBoxes[
                    Lookup[
                    Replace[
                    
                    DataDropClient`Private`datadropclientcache[{
                    "DatabinStats", 
                    "DD4d864eaa38b-3d22-4a26-b724-aff8e2bb6bde"}], Except[
                    Blank[Association]] -> {}, {0}], "EntryCount", 
                    Missing[]], StandardForm]], "SummaryItem"]}]}, {
                RowBox[{
                  TagBox["\"Short ID: \"", "SummaryItemAnnotation"], 
                  "\[InvisibleSpace]", 
                  TagBox["\"FBrnXpZX\"", "SummaryItem"]}]}, {
                RowBox[{
                  TagBox["\"UUID: \"", "SummaryItemAnnotation"], 
                  "\[InvisibleSpace]", 
                  TagBox[
                  "\"DD4d864eaa38b-3d22-4a26-b724-aff8e2bb6bde\"", 
                   "SummaryItem"]}]}, {
                RowBox[{
                  TagBox["\"ShortURL: \"", "SummaryItemAnnotation"], 
                  "\[InvisibleSpace]", 
                  TagBox[
                   
                   TemplateBox[{
                    "\"https://wolfr.am/FBrnXpZX\"", 
                    "https://wolfr.am/FBrnXpZX"}, "HyperlinkURL"], 
                   "SummaryItem"]}]}, {
                RowBox[{
                  TagBox["\"Short ID: \"", "SummaryItemAnnotation"], 
                  "\[InvisibleSpace]", 
                  TagBox["\"FBrnXpZX\"", "SummaryItem"]}]}, {
                RowBox[{
                  TagBox["\"UUID: \"", "SummaryItemAnnotation"], 
                  "\[InvisibleSpace]", 
                  TagBox[
                  "\"DD4d864eaa38b-3d22-4a26-b724-aff8e2bb6bde\"", 
                   "SummaryItem"]}]}, {
                RowBox[{
                  TagBox["\"ShortURL: \"", "SummaryItemAnnotation"], 
                  "\[InvisibleSpace]", 
                  TagBox[
                   
                   TemplateBox[{
                    "\"https://wolfr.am/FBrnXpZX\"", 
                    "https://wolfr.am/FBrnXpZX"}, "HyperlinkURL"], 
                   "SummaryItem"]}]}, {
                RowBox[{
                  TagBox["\"Creator: \"", "SummaryItemAnnotation"], 
                  "\[InvisibleSpace]", 
                  TagBox["\"mitch@aitoconsulting.com\"", "SummaryItem"]}]}, {
                RowBox[{
                  TagBox["\"Owner: \"", "SummaryItemAnnotation"], 
                  "\[InvisibleSpace]", 
                  TagBox["\"mitch@aitoconsulting.com\"", "SummaryItem"]}]}, {
                RowBox[{
                  TagBox["\"Creation date: \"", "SummaryItemAnnotation"], 
                  "\[InvisibleSpace]", 
                  TagBox["\"Mon 5 Aug 2019 14:56:22\"", "SummaryItem"]}]}, {
                RowBox[{
                  TagBox["\"Latest date: \"", "SummaryItemAnnotation"], 
                  "\[InvisibleSpace]", 
                  TagBox[
                   DynamicBox[
                    ToBoxes[
                    Replace[
                    Lookup[
                    Replace[
                    
                    DataDropClient`Private`datadropclientcache[{
                    "DatabinLatest", 
                    "DD4d864eaa38b-3d22-4a26-b724-aff8e2bb6bde"}], Except[
                    Blank[Association]] -> {}, {0}], "Timestamp", 
                    Missing[]], Pattern[DataDropClient`Private`date, 
                    Blank[DateObject]] :> 
                    DateString[DataDropClient`Private`date], {0}], 
                    StandardForm]], "SummaryItem"]}]}, {
                RowBox[{
                  TagBox["\"Size: \"", "SummaryItemAnnotation"], 
                  "\[InvisibleSpace]", 
                  TagBox[
                   DynamicBox[
                    ToBoxes[
                    (If[
                    NumberQ[#], 
                    Round[#, 0.1], #]& )[
                    Lookup[
                    Replace[
                    
                    DataDropClient`Private`datadropclientcache[{
                    "DatabinStats", 
                    "DD4d864eaa38b-3d22-4a26-b724-aff8e2bb6bde"}], Except[
                    Blank[Association]] -> {}, {0}], "Size", 
                    Missing[]]], StandardForm]], "SummaryItem"]}]}, {
                RowBox[{
                  TagBox["\"Latest: \"", "SummaryItemAnnotation"], 
                  "\[InvisibleSpace]", 
                  TagBox[
                   DynamicBox[
                    ToBoxes[
                    Lookup[
                    Replace[
                    
                    DataDropClient`Private`datadropclientcache[{
                    "DatabinLatest", 
                    "DD4d864eaa38b-3d22-4a26-b724-aff8e2bb6bde"}], Except[
                    Blank[Association]] -> {}, {0}], "Data", 
                    Missing[]], StandardForm]], "SummaryItem"]}]}}, 
              GridBoxAlignment -> {
               "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
              False, GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              GridBoxSpacings -> {
               "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
              BaseStyle -> {
               ShowStringCharacters -> False, NumberMarks -> False, 
                PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
           GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           BaselinePosition -> {1, 1}]}, 
        Dynamic[Typeset`open$$], ImageSize -> Automatic]},
      "SummaryPanel"],
     DynamicModuleValues:>{}], "]"}],
   Databin["DD4d864eaa38b-3d22-4a26-b724-aff8e2bb6bde"],
   Editable->False,
   SelectWithContents->True,
   Selectable->False], "}"}]], "Output",
 CellChangeTimes->{3.7740210995714636`*^9, 3.7741864139141736`*^9, 
  3.7741866514408913`*^9},
 CellLabel->
  "Out[629]=",ExpressionUUID->"c3527e7e-f0a5-47d5-bba6-11d959958d9d"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Make Dataset[...] of databins", "Subsubsection",
 CellChangeTimes->{{3.774019017314542*^9, 3.7740190269855537`*^9}, {
  3.774186848941947*^9, 
  3.7741868620469465`*^9}},ExpressionUUID->"44c9280d-574e-4231-91d9-\
2920c6c05ef5"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"ClearAll", "[", "databinDS", "]"}], "\[IndentingNewLine]", 
 RowBox[{"databinDS", "=", 
  RowBox[{"Dataset", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"<|", 
      RowBox[{
       RowBox[{"\"\<shortID\>\"", "\[Rule]", " ", 
        RowBox[{"#", "[", "\"\<ShortID\>\"", "]"}]}], ",", 
       RowBox[{"\"\<name\>\"", "\[Rule]", " ", 
        RowBox[{"#", "[", "\"\<Name\>\"", "]"}]}], ",", 
       RowBox[{"\"\<databin\>\"", "\[Rule]", "#"}]}], "|>"}], "&"}], "/@", 
    RowBox[{"Databins", "[", "]"}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.7741865290798917`*^9, 3.7741866027048893`*^9}, {
  3.774186657624892*^9, 3.7741867834079466`*^9}, {3.7741868838769474`*^9, 
  3.7741868977859592`*^9}},
 CellLabel->
  "In[635]:=",ExpressionUUID->"7b8e4f9d-f30a-4468-8d39-6e62b0740fb2"],

Cell[BoxData[
 TemplateBox[{TagBox[
    DynamicModuleBox[{
     TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
      Data`UnorderedAssociation[
       "RowCount" -> 1, "Length" -> 1, "InitialType" -> TypeSystem`Vector[
          TypeSystem`Struct[{"shortID", "name", "databin"}, {
            TypeSystem`Atom[String], 
            TypeSystem`Atom[String], TypeSystem`AnyType}], 1], "Shape" -> 
        TypeSystem`PackageScope`HeaderShape[
          
          Association[{All, "shortID"} -> 1, {All, "name"} -> 
           1, {All, "databin"} -> 1], 
          TypeSystem`PackageScope`Limited[
           TypeSystem`PackageScope`ColumnShape[
            TypeSystem`PackageScope`RowShape[
             Association[
             "shortID" -> 
              TypeSystem`PackageScope`AtomShape[76.80000000000001], "name" -> 
              TypeSystem`PackageScope`AtomShape[76.80000000000001], "databin" -> 
              TypeSystem`PackageScope`UnknownShape]]], 1, {}]], "InitialData" -> 
        TypeSystem`PackageScope`CacheHandle[960585305], "Type" -> 
        TypeSystem`Vector[
          TypeSystem`Struct[{"shortID", "name", "databin"}, {
            TypeSystem`Atom[String], 
            TypeSystem`Atom[String], TypeSystem`AnyType}], 1], "HandleQ" -> 
        True, "RowTarget" -> 20, "Data" -> 
        TypeSystem`PackageScope`CacheHandle[960585305]], 
      TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
      TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 1, 
      TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
      DynamicModule[{
        TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
           Style[
            Grid[{{
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"shortID\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"shortID\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 587576795][{
                    All, "shortID"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[587576795][
                  GeneralUtilities`Slice[All, "shortID"]], "Mouse"], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"name\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"name\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 587576795][{
                    All, "name"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[587576795][
                  GeneralUtilities`Slice[All, "name"]], "Mouse"], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"databin\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"databin\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 587576795][{
                    All, "databin"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[587576795][
                  GeneralUtilities`Slice[All, "databin"]], "Mouse"], 
                Background -> GrayLevel[0.95], 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["FBrnXpZX", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[587576795][
                  GeneralUtilities`Slice[1, 
                   Key["shortID"]]], "Mouse"], 
                ImageSize -> {{76.80000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["readings", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[587576795][
                  GeneralUtilities`Slice[1, 
                   Key["name"]]], "Mouse"], 
                ImageSize -> {{76.80000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   InterpretationBox[
                    RowBox[{
                    TagBox["Databin", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{
                    Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    GraphicsBox[{
                    Thickness[0.05555555555555555], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}}}, {{{15.646999999999998`, 
                    5.933000000000001}, {13.585, 7.263}, {15.533, 8.458}, {
                    17.332, 7.363999999999999}, {15.646999999999998`, 
                    5.933000000000001}}, {{12.697, 3.425}, {10.245, 5.212}, {
                    12.491, 6.591}, {14.725999999999999`, 
                    5.1499999999999995`}, {12.697, 3.425}}, {{8.666, 0.}, {
                    5.978000000000001, 2.285}, {8.666, 4.244}, {
                    11.354000000000001`, 2.285}, {8.666, 0.}}, {{4.635, 
                    3.425}, {2.606, 5.1499999999999995`}, {4.841, 6.591}, {
                    7.087, 5.212}, {4.635, 3.425}}, {{0., 
                    7.363999999999999}, {1.799, 8.458}, {3.7470000000000003`, 
                    7.263}, {1.6840000000000002`, 5.933000000000001}, {0., 
                    7.363999999999999}}, CompressedData["
1:eJxTTMoPSmViYGAQBmIQrbtp7vvlbqIOP+uy9pQIqzr8Wfnxkm+SjIPIOveH
VVNUHNgbpzp3v1Fw2Pb575WKk0YOpnG7PHmYFB1eB+6Qa+U2djDvdEx4OkHR
AWTMMSA/PQ0Ilik61NgDVQLVF9hyXV9coOKwp2SyBMs0FYcFUvp3Vdg04PbJ
twJNikPwV4Gsn6DhAFQdxrdWxWHWTCCI1HAAOSMnXcXB42GVyLrjig5nz4CA
hEMWyOAWRQd+kEfUJaDmKzpoxvQf+qoh4RDQOz1P6LCCA5N2u9jNcxIOlltO
lO2bLwI3TxJoja6RCNw+kO7GqSJw96CHDwDEr32g
                    "]}]}, 
                    FaceForm[
                    RGBColor[0.44721600000000006`, 0.519288, 0.528528, 1.]], 
                    StripOnInput -> False]}, {
                    Background -> GrayLevel[0.93], Axes -> False, AspectRatio -> 
                    1, ImageSize -> {Automatic, 
                    Dynamic[
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])]}, Frame -> True, FrameTicks -> None, 
                    PlotRangePadding -> 2.5, FrameStyle -> Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.55]], ImageSize -> {18., 19.}, 
                    PlotRange -> {{0., 18.}, {0., 19.}}, AspectRatio -> 
                    Automatic}], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Name: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"readings\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Entry count: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Lookup[
                    Replace[
                    
                    DataDropClient`Private`datadropclientcache[{
                    "DatabinStats", 
                    "DD4d864eaa38b-3d22-4a26-b724-aff8e2bb6bde"}], Except[
                    Blank[Association]] -> {}, {0}], "EntryCount", 
                    Missing[]], StandardForm]], "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    GraphicsBox[{
                    Thickness[0.05555555555555555], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}}}, {{{15.646999999999998`, 
                    5.933000000000001}, {13.585, 7.263}, {15.533, 8.458}, {
                    17.332, 7.363999999999999}, {15.646999999999998`, 
                    5.933000000000001}}, {{12.697, 3.425}, {10.245, 5.212}, {
                    12.491, 6.591}, {14.725999999999999`, 
                    5.1499999999999995`}, {12.697, 3.425}}, {{8.666, 0.}, {
                    5.978000000000001, 2.285}, {8.666, 4.244}, {
                    11.354000000000001`, 2.285}, {8.666, 0.}}, {{4.635, 
                    3.425}, {2.606, 5.1499999999999995`}, {4.841, 6.591}, {
                    7.087, 5.212}, {4.635, 3.425}}, {{0., 
                    7.363999999999999}, {1.799, 8.458}, {3.7470000000000003`, 
                    7.263}, {1.6840000000000002`, 5.933000000000001}, {0., 
                    7.363999999999999}}, CompressedData["
1:eJxTTMoPSmViYGAQBmIQrbtp7vvlbqIOP+uy9pQIqzr8Wfnxkm+SjIPIOveH
VVNUHNgbpzp3v1Fw2Pb575WKk0YOpnG7PHmYFB1eB+6Qa+U2djDvdEx4OkHR
AWTMMSA/PQ0Ilik61NgDVQLVF9hyXV9coOKwp2SyBMs0FYcFUvp3Vdg04PbJ
twJNikPwV4Gsn6DhAFQdxrdWxWHWTCCI1HAAOSMnXcXB42GVyLrjig5nz4CA
hEMWyOAWRQd+kEfUJaDmKzpoxvQf+qoh4RDQOz1P6LCCA5N2u9jNcxIOlltO
lO2bLwI3TxJoja6RCNw+kO7GqSJw96CHDwDEr32g
                    "]}]}, 
                    FaceForm[
                    RGBColor[0.44721600000000006`, 0.519288, 0.528528, 1.]], 
                    StripOnInput -> False]}, {
                    Background -> GrayLevel[0.93], Axes -> False, AspectRatio -> 
                    1, ImageSize -> {Automatic, 
                    Dynamic[
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])]}, Frame -> True, FrameTicks -> None, 
                    PlotRangePadding -> 2.5, FrameStyle -> Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.55]], ImageSize -> {18., 19.}, 
                    PlotRange -> {{0., 18.}, {0., 19.}}, AspectRatio -> 
                    Automatic}], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Name: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"readings\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Entry count: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Lookup[
                    Replace[
                    
                    DataDropClient`Private`datadropclientcache[{
                    "DatabinStats", 
                    "DD4d864eaa38b-3d22-4a26-b724-aff8e2bb6bde"}], Except[
                    Blank[Association]] -> {}, {0}], "EntryCount", 
                    Missing[]], StandardForm]], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Short ID: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"FBrnXpZX\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"UUID: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    "\"DD4d864eaa38b-3d22-4a26-b724-aff8e2bb6bde\"", 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"ShortURL: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"\"https://wolfr.am/FBrnXpZX\"", 
                    "https://wolfr.am/FBrnXpZX"}, "HyperlinkURL"], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Short ID: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"FBrnXpZX\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"UUID: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    "\"DD4d864eaa38b-3d22-4a26-b724-aff8e2bb6bde\"", 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"ShortURL: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"\"https://wolfr.am/FBrnXpZX\"", 
                    "https://wolfr.am/FBrnXpZX"}, "HyperlinkURL"], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Creator: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"mitch@aitoconsulting.com\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Owner: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"mitch@aitoconsulting.com\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Creation date: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Mon 5 Aug 2019 14:56:22\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Latest date: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Replace[
                    Lookup[
                    Replace[
                    
                    DataDropClient`Private`datadropclientcache[{
                    "DatabinLatest", 
                    "DD4d864eaa38b-3d22-4a26-b724-aff8e2bb6bde"}], Except[
                    Blank[Association]] -> {}, {0}], "Timestamp", 
                    Missing[]], Pattern[DataDropClient`Private`date, 
                    Blank[DateObject]] :> 
                    DateString[DataDropClient`Private`date], {0}], 
                    StandardForm]], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Size: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    (If[
                    NumberQ[#], 
                    Round[#, 0.1], #]& )[
                    Lookup[
                    Replace[
                    
                    DataDropClient`Private`datadropclientcache[{
                    "DatabinStats", 
                    "DD4d864eaa38b-3d22-4a26-b724-aff8e2bb6bde"}], Except[
                    Blank[Association]] -> {}, {0}], "Size", 
                    Missing[]]], StandardForm]], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Latest: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Lookup[
                    Replace[
                    
                    DataDropClient`Private`datadropclientcache[{
                    "DatabinLatest", 
                    "DD4d864eaa38b-3d22-4a26-b724-aff8e2bb6bde"}], Except[
                    Blank[Association]] -> {}, {0}], "Data", 
                    Missing[]], StandardForm]], "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}], 
                    Databin["DD4d864eaa38b-3d22-4a26-b724-aff8e2bb6bde"], 
                    Selectable -> False, Editable -> False, 
                    SelectWithContents -> True], FontFamily -> 
                   "Source Code Pro", FontSize -> 13, ShowStringCharacters -> 
                   True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[587576795][
                  GeneralUtilities`Slice[1, 
                   Key["databin"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}}, BaseStyle -> {ContextMenu -> {
                 MenuItem["Copy position to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Copy data to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], Delimiter, 
                 MenuItem["Paste position in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Paste data in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic]}, FontFamily -> "Verdana", 
               FontSize -> 12}, Alignment -> Left, RowMinHeight -> 1.5, 
             Dividers -> All, FrameStyle -> GrayLevel[0.85], 
             BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
            LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False,
             ShowAutoStyles -> False]], 
         TypeSystem`NestedGrid`PackagePrivate`initialQ = True, 
         TypeSystem`NestedGrid`PackagePrivate`self = $Failed}, 
        Dynamic[
         TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
         TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
            Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
            
            Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
              TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
              TypeSystem`NestedGrid`PackagePrivate`LookupCacheValue[
                TypeSystem`NestedGrid`PackagePrivate`$state$$["Data"]]}, 
             TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = 
              If[TypeSystem`NestedGrid`PackagePrivate`tmpData$ === 
                TypeSystem`NestedGrid`PackagePrivate`$NotCached, 
                TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$grid$$, 587576795][
                TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
               Not[
                FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
               TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
               TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
          TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
          TypeSystem`NestedGrid`PackagePrivate`$pos$$; If[
            FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
            TypeSystem`SparseGrid[
             TypeSystem`H["(data no longer present)"]], 
            If[GeneralUtilities`$DebugMode, 
             Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
               TypeSystem`NestedGrid`PackagePrivate`formatState[
               TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                TypeSystem`NestedGrid`PackagePrivate`$pos$$]}], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
         TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$pos$$}], 
        DynamicModuleValues :> {}], 
      TypeSystem`NestedGrid`PackagePrivate`$posCell$$, 
      TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
        TypeSystem`NestedGrid`PackagePrivate`alignBar[
        TypeSystem`NestedGrid`PackagePrivate`$state$$][
         TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
          TypeSystem`PackageScope`Pathbar[
          TypeSystem`NestedGrid`PackagePrivate`$path$$, 
           TypeSystem`NestedGrid`PackagePrivate`updateState[
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
            TypeSystem`NestedGrid`PackagePrivate`$path$$, 
            TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$grid$$, 587576795]]]], 
        TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
      TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Framed[
        Dynamic[
         Replace[
          MouseAnnotation[Null], {
          TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[587576795][Null] -> 
           "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[587576795][
             Pattern[TypeSystem`NestedGrid`PackagePrivate`path, 
              Blank[]]] :> (
            TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
             TypeSystem`NestedGrid`PackagePrivate`path; 
            TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
             TypeSystem`NestedGrid`PackagePrivate`path, 
              TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
           Spacer[10], Blank[] :> Spacer[10]}], TrackedSymbols :> {}], 
        FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
        Top, ImageSize -> {Automatic, 14}]}, 
     DynamicBox[
      ToBoxes[
       Column[
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, {
          TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
          TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`alignBar[
           TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}, {
         TypeSystem`NestedGrid`PackagePrivate`$topBar$$, 
          TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
          TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`alignBar[
           TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}], Spacings -> 
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, 
          0, {{}, {0, 0.05, 0}}]], StandardForm], 
      ImageSizeCache -> {516., {57.5, 64.5}}, 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     BaseStyle -> {LineBreakWithin -> False}, Deinitialization :> 
     TypeSystem`NestedGrid`PackagePrivate`deleteState[
      TypeSystem`NestedGrid`PackagePrivate`$state$$], 
     DynamicModuleValues :> {}, Initialization :> 
     Block[{$ContextPath = $ContextPath}, 
       Needs["TypeSystem`"]]], Deploy, DefaultBaseStyle -> "Deploy"]},
  "CopyTag",
  DisplayFunction->(#& ),
  InterpretationFunction->("Dataset[<>]"& )]], "Output",
 CellChangeTimes->{{3.7741865476528893`*^9, 3.7741866052158957`*^9}, {
   3.774186661770895*^9, 3.7741866667429256`*^9}, {3.7741867416709476`*^9, 
   3.7741867527189465`*^9}, 3.7741867845029483`*^9, 3.774186899200965*^9},
 CellLabel->
  "Out[636]=",ExpressionUUID->"f4167fe8-6393-49b9-a9bd-5d11b51326cf"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"ClearAll", "[", "readingsDB", "]"}], "\[IndentingNewLine]", 
 RowBox[{"readingsDB", "=", 
  RowBox[{
   RowBox[{"databinDS", "[", 
    RowBox[{
     RowBox[{"Select", "[", 
      RowBox[{
       RowBox[{"#name", " ", "\[Equal]", " ", "\"\<readings\>\""}], "&"}], 
      "]"}], ",", "\"\<databin\>\""}], "]"}], "//", "First"}]}]}], "Input",
 CellChangeTimes->{{3.7741869081539526`*^9, 3.7741870201407843`*^9}},
 CellLabel->
  "In[658]:=",ExpressionUUID->"26f794f9-bde1-4708-8312-c09b9d2f11ff"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["Databin",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    TemplateBox[{PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource[
               "FEBitmaps", "SquarePlusIconMedium"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              Evaluator -> Automatic, Method -> "Preemptive"], 
             Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{
              Thickness[0.05555555555555555], 
              StyleBox[{
                
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                  0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                  0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                  0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                  0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {
                  1, 3, 3}}}, {{{15.646999999999998`, 5.933000000000001}, {
                  13.585, 7.263}, {15.533, 8.458}, {17.332, 
                  7.363999999999999}, {15.646999999999998`, 
                  5.933000000000001}}, {{12.697, 3.425}, {10.245, 5.212}, {
                  12.491, 6.591}, {14.725999999999999`, 
                  5.1499999999999995`}, {12.697, 3.425}}, {{8.666, 0.}, {
                  5.978000000000001, 2.285}, {8.666, 4.244}, {
                  11.354000000000001`, 2.285}, {8.666, 0.}}, {{4.635, 
                  3.425}, {2.606, 5.1499999999999995`}, {4.841, 6.591}, {
                  7.087, 5.212}, {4.635, 3.425}}, {{0., 7.363999999999999}, {
                  1.799, 8.458}, {3.7470000000000003`, 7.263}, {
                  1.6840000000000002`, 5.933000000000001}, {0., 
                  7.363999999999999}}, CompressedData["
1:eJxTTMoPSmViYGAQBmIQrbtp7vvlbqIOP+uy9pQIqzr8Wfnxkm+SjIPIOveH
VVNUHNgbpzp3v1Fw2Pb575WKk0YOpnG7PHmYFB1eB+6Qa+U2djDvdEx4OkHR
AWTMMSA/PQ0Ilik61NgDVQLVF9hyXV9coOKwp2SyBMs0FYcFUvp3Vdg04PbJ
twJNikPwV4Gsn6DhAFQdxrdWxWHWTCCI1HAAOSMnXcXB42GVyLrjig5nz4CA
hEMWyOAWRQd+kEfUJaDmKzpoxvQf+qoh4RDQOz1P6LCCA5N2u9jNcxIOlltO
lO2bLwI3TxJoja6RCNw+kO7GqSJw96CHDwDEr32g
                  "]}]}, 
               FaceForm[
                RGBColor[0.44721600000000006`, 0.519288, 0.528528, 1.]], 
               StripOnInput -> False]}, {
             Background -> GrayLevel[0.93], Axes -> False, AspectRatio -> 1, 
              ImageSize -> {Automatic, 
                Dynamic[
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                  Magnification])]}, Frame -> True, FrameTicks -> None, 
              PlotRangePadding -> 2.5, FrameStyle -> Directive[
                Thickness[Tiny], 
                GrayLevel[0.55]], ImageSize -> {18., 19.}, 
              PlotRange -> {{0., 18.}, {0., 19.}}, AspectRatio -> Automatic}], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Name: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"readings\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Entry count: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  DynamicBox[
                   ToBoxes[
                    Lookup[
                    Replace[
                    
                    DataDropClient`Private`datadropclientcache[{
                    "DatabinStats", 
                    "DD4d864eaa38b-3d22-4a26-b724-aff8e2bb6bde"}], Except[
                    Blank[Association]] -> {}, {0}], "EntryCount", 
                    Missing[]], StandardForm]], "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource[
               "FEBitmaps", "SquareMinusIconMedium"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              Evaluator -> Automatic, Method -> "Preemptive"], 
             Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{
              Thickness[0.05555555555555555], 
              StyleBox[{
                
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                  0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                  0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                  0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                  0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {
                  1, 3, 3}}}, {{{15.646999999999998`, 5.933000000000001}, {
                  13.585, 7.263}, {15.533, 8.458}, {17.332, 
                  7.363999999999999}, {15.646999999999998`, 
                  5.933000000000001}}, {{12.697, 3.425}, {10.245, 5.212}, {
                  12.491, 6.591}, {14.725999999999999`, 
                  5.1499999999999995`}, {12.697, 3.425}}, {{8.666, 0.}, {
                  5.978000000000001, 2.285}, {8.666, 4.244}, {
                  11.354000000000001`, 2.285}, {8.666, 0.}}, {{4.635, 
                  3.425}, {2.606, 5.1499999999999995`}, {4.841, 6.591}, {
                  7.087, 5.212}, {4.635, 3.425}}, {{0., 7.363999999999999}, {
                  1.799, 8.458}, {3.7470000000000003`, 7.263}, {
                  1.6840000000000002`, 5.933000000000001}, {0., 
                  7.363999999999999}}, CompressedData["
1:eJxTTMoPSmViYGAQBmIQrbtp7vvlbqIOP+uy9pQIqzr8Wfnxkm+SjIPIOveH
VVNUHNgbpzp3v1Fw2Pb575WKk0YOpnG7PHmYFB1eB+6Qa+U2djDvdEx4OkHR
AWTMMSA/PQ0Ilik61NgDVQLVF9hyXV9coOKwp2SyBMs0FYcFUvp3Vdg04PbJ
twJNikPwV4Gsn6DhAFQdxrdWxWHWTCCI1HAAOSMnXcXB42GVyLrjig5nz4CA
hEMWyOAWRQd+kEfUJaDmKzpoxvQf+qoh4RDQOz1P6LCCA5N2u9jNcxIOlltO
lO2bLwI3TxJoja6RCNw+kO7GqSJw96CHDwDEr32g
                  "]}]}, 
               FaceForm[
                RGBColor[0.44721600000000006`, 0.519288, 0.528528, 1.]], 
               StripOnInput -> False]}, {
             Background -> GrayLevel[0.93], Axes -> False, AspectRatio -> 1, 
              ImageSize -> {Automatic, 
                Dynamic[
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                  Magnification])]}, Frame -> True, FrameTicks -> None, 
              PlotRangePadding -> 2.5, FrameStyle -> Directive[
                Thickness[Tiny], 
                GrayLevel[0.55]], ImageSize -> {18., 19.}, 
              PlotRange -> {{0., 18.}, {0., 19.}}, AspectRatio -> Automatic}], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Name: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"readings\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Entry count: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  DynamicBox[
                   ToBoxes[
                    Lookup[
                    Replace[
                    
                    DataDropClient`Private`datadropclientcache[{
                    "DatabinStats", 
                    "DD4d864eaa38b-3d22-4a26-b724-aff8e2bb6bde"}], Except[
                    Blank[Association]] -> {}, {0}], "EntryCount", 
                    Missing[]], StandardForm]], "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Short ID: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"FBrnXpZX\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"UUID: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                 "\"DD4d864eaa38b-3d22-4a26-b724-aff8e2bb6bde\"", 
                  "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"ShortURL: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  
                  TemplateBox[{
                   "\"https://wolfr.am/FBrnXpZX\"", 
                    "https://wolfr.am/FBrnXpZX"}, "HyperlinkURL"], 
                  "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Short ID: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"FBrnXpZX\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"UUID: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                 "\"DD4d864eaa38b-3d22-4a26-b724-aff8e2bb6bde\"", 
                  "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"ShortURL: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  
                  TemplateBox[{
                   "\"https://wolfr.am/FBrnXpZX\"", 
                    "https://wolfr.am/FBrnXpZX"}, "HyperlinkURL"], 
                  "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Creator: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"mitch@aitoconsulting.com\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Owner: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"mitch@aitoconsulting.com\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Creation date: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"Mon 5 Aug 2019 14:56:22\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Latest date: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  DynamicBox[
                   ToBoxes[
                    Replace[
                    Lookup[
                    Replace[
                    
                    DataDropClient`Private`datadropclientcache[{
                    "DatabinLatest", 
                    "DD4d864eaa38b-3d22-4a26-b724-aff8e2bb6bde"}], Except[
                    Blank[Association]] -> {}, {0}], "Timestamp", 
                    Missing[]], Pattern[DataDropClient`Private`date, 
                    Blank[DateObject]] :> 
                    DateString[DataDropClient`Private`date], {0}], 
                    StandardForm]], "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Size: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  DynamicBox[
                   ToBoxes[
                    (If[
                    NumberQ[#], 
                    Round[#, 0.1], #]& )[
                    Lookup[
                    Replace[
                    
                    DataDropClient`Private`datadropclientcache[{
                    "DatabinStats", 
                    "DD4d864eaa38b-3d22-4a26-b724-aff8e2bb6bde"}], Except[
                    Blank[Association]] -> {}, {0}], "Size", 
                    Missing[]]], StandardForm]], "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Latest: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  DynamicBox[
                   ToBoxes[
                    Lookup[
                    Replace[
                    
                    DataDropClient`Private`datadropclientcache[{
                    "DatabinLatest", 
                    "DD4d864eaa38b-3d22-4a26-b724-aff8e2bb6bde"}], Except[
                    Blank[Association]] -> {}, {0}], "Data", 
                    Missing[]], StandardForm]], "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  Databin["DD4d864eaa38b-3d22-4a26-b724-aff8e2bb6bde"],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.7741869286119475`*^9, {3.7741869617159557`*^9, 3.7741870227077813`*^9}, 
   3.774187637219911*^9},
 CellLabel->
  "Out[659]=",ExpressionUUID->"5c416452-1891-44d0-ab3f-18b7789f2966"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"ClearAll", "[", "readingsDS", "]"}], "\[IndentingNewLine]", 
 RowBox[{"readingsDS", "=", 
  RowBox[{
   RowBox[{
    RowBox[{"Dataset", "[", "readingsDB", "]"}], "[", 
    RowBox[{
     RowBox[{"SortBy", "[", 
      RowBox[{"#", ",", "\"\<Timestamp\>\""}], "]"}], "&"}], "]"}], "[", 
   "Reverse", "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"readingsDS", "//", "Head"}], "\[IndentingNewLine]", 
 RowBox[{"dlsp", "=", 
  RowBox[{"DateListStepPlot", "[", 
   RowBox[{"readingsDS", "[", 
    RowBox[{"All", ",", 
     RowBox[{"{", 
      RowBox[{"\"\<Timestamp\>\"", ",", "\"\<reading\>\""}], "}"}]}], "]"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"dlsp", "//", "Head"}], "\[IndentingNewLine]", 
 RowBox[{"ag", "=", 
  RowBox[{"AngularGauge", "[", 
   RowBox[{
    RowBox[{"readingsDS", "[", 
     RowBox[{"First", ",", "\"\<reading\>\""}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"0", ",", "100"}], "}"}], ",", 
    RowBox[{"ImageSize", "\[Rule]", "Small"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"ag", "//", "Head"}]}], "Input",
 CellChangeTimes->{{3.7741873786372375`*^9, 3.7741873833322387`*^9}, 
   3.7741874748332357`*^9},
 CellLabel->
  "In[660]:=",ExpressionUUID->"1097e129-3d42-42cd-8668-86c670ae09c1"],

Cell[BoxData[
 TemplateBox[{TagBox[
    DynamicModuleBox[{
     TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
      Data`UnorderedAssociation[
       "RowCount" -> 20, "Length" -> 102, "InitialType" -> TypeSystem`Vector[
          TypeSystem`Struct[{"reading", "Timestamp"}, {
            TypeSystem`Atom[Integer], 
            TypeSystem`Atom[DateObject]}], 102], "Shape" -> 
        TypeSystem`PackageScope`HeaderShape[
          Association[{All, "reading"} -> 1, {All, "Timestamp"} -> 1], 
          TypeSystem`PackageScope`Limited[
           TypeSystem`PackageScope`ColumnShape[
            TypeSystem`PackageScope`RowShape[
             Association[
             "reading" -> TypeSystem`PackageScope`AtomShape[34], "Timestamp" -> 
              TypeSystem`PackageScope`AtomShape[75]]]], 20, {}]], 
        "InitialData" -> TypeSystem`PackageScope`CacheHandle[703552754], 
        "Type" -> TypeSystem`Vector[
          TypeSystem`Struct[{"reading", "Timestamp"}, {
            TypeSystem`Atom[Integer], 
            TypeSystem`Atom[DateObject]}], 102], "HandleQ" -> True, 
        "RowTarget" -> 20, "Data" -> 
        TypeSystem`PackageScope`CacheHandle[703552754]], 
      TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
      TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 1, 
      TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
      DynamicModule[{
        TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
           Style[
            Grid[{{
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"reading\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"reading\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1313733086][{All, "reading"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1313733086][
                  GeneralUtilities`Slice[All, "reading"]], "Mouse"], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Timestamp\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Timestamp\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1313733086][{All, "Timestamp"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1313733086][
                  GeneralUtilities`Slice[All, "Timestamp"]], "Mouse"], 
                Background -> GrayLevel[0.95], 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["87"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1313733086][
                  GeneralUtilities`Slice[1, 
                   Key["reading"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                  "\"Mon 5 Aug 2019 14:56:54\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1313733086][
                  GeneralUtilities`Slice[1, 
                   Key["Timestamp"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["84"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1313733086][
                  GeneralUtilities`Slice[2, 
                   Key["reading"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                  "\"Mon 5 Aug 2019 15:56:32\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1313733086][
                  GeneralUtilities`Slice[2, 
                   Key["Timestamp"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["80"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1313733086][
                  GeneralUtilities`Slice[3, 
                   Key["reading"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                  "\"Mon 5 Aug 2019 16:25:35\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1313733086][
                  GeneralUtilities`Slice[3, 
                   Key["Timestamp"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["80"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1313733086][
                  GeneralUtilities`Slice[4, 
                   Key["reading"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                  "\"Mon 5 Aug 2019 16:11:51\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1313733086][
                  GeneralUtilities`Slice[4, 
                   Key["Timestamp"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["76"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1313733086][
                  GeneralUtilities`Slice[5, 
                   Key["reading"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                  "\"Tue 6 Aug 2019 08:56:17\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1313733086][
                  GeneralUtilities`Slice[5, 
                   Key["Timestamp"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["75"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1313733086][
                  GeneralUtilities`Slice[6, 
                   Key["reading"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                  "\"Mon 5 Aug 2019 16:35:10\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1313733086][
                  GeneralUtilities`Slice[6, 
                   Key["Timestamp"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["75"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1313733086][
                  GeneralUtilities`Slice[7, 
                   Key["reading"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                  "\"Mon 5 Aug 2019 16:18:01\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1313733086][
                  GeneralUtilities`Slice[7, 
                   Key["Timestamp"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["75"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1313733086][
                  GeneralUtilities`Slice[8, 
                   Key["reading"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                  "\"Mon 5 Aug 2019 16:11:36\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1313733086][
                  GeneralUtilities`Slice[8, 
                   Key["Timestamp"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["70"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1313733086][
                  GeneralUtilities`Slice[9, 
                   Key["reading"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                  "\"Mon 5 Aug 2019 16:21:38\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1313733086][
                  GeneralUtilities`Slice[9, 
                   Key["Timestamp"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["65"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1313733086][
                  GeneralUtilities`Slice[10, 
                   Key["reading"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                  "\"Wed 7 Aug 2019 09:50:26\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1313733086][
                  GeneralUtilities`Slice[10, 
                   Key["Timestamp"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["65"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1313733086][
                  GeneralUtilities`Slice[11, 
                   Key["reading"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                  "\"Mon 5 Aug 2019 18:32:33\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1313733086][
                  GeneralUtilities`Slice[11, 
                   Key["Timestamp"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["65"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1313733086][
                  GeneralUtilities`Slice[12, 
                   Key["reading"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                  "\"Mon 5 Aug 2019 18:32:15\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1313733086][
                  GeneralUtilities`Slice[12, 
                   Key["Timestamp"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["65"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1313733086][
                  GeneralUtilities`Slice[13, 
                   Key["reading"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                  "\"Mon 5 Aug 2019 16:44:27\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1313733086][
                  GeneralUtilities`Slice[13, 
                   Key["Timestamp"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["65"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1313733086][
                  GeneralUtilities`Slice[14, 
                   Key["reading"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                  "\"Mon 5 Aug 2019 16:11:30\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1313733086][
                  GeneralUtilities`Slice[14, 
                   Key["Timestamp"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["62"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1313733086][
                  GeneralUtilities`Slice[15, 
                   Key["reading"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                  "\"Mon 5 Aug 2019 15:00:15\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1313733086][
                  GeneralUtilities`Slice[15, 
                   Key["Timestamp"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["60"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1313733086][
                  GeneralUtilities`Slice[16, 
                   Key["reading"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                  "\"Mon 5 Aug 2019 16:25:23\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1313733086][
                  GeneralUtilities`Slice[16, 
                   Key["Timestamp"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["57"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1313733086][
                  GeneralUtilities`Slice[17, 
                   Key["reading"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                  "\"Tue 6 Aug 2019 08:33:23\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1313733086][
                  GeneralUtilities`Slice[17, 
                   Key["Timestamp"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["57"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1313733086][
                  GeneralUtilities`Slice[18, 
                   Key["reading"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                  "\"Tue 6 Aug 2019 08:33:18\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1313733086][
                  GeneralUtilities`Slice[18, 
                   Key["Timestamp"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["56"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1313733086][
                  GeneralUtilities`Slice[19, 
                   Key["reading"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                  "\"Mon 5 Aug 2019 15:12:19\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1313733086][
                  GeneralUtilities`Slice[19, 
                   Key["Timestamp"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["55"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1313733086][
                  GeneralUtilities`Slice[20, 
                   Key["reading"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                  "\"Mon 5 Aug 2019 15:02:08\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1313733086][
                  GeneralUtilities`Slice[20, 
                   Key["Timestamp"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Deploy[
                 Mouseover[
                  Row[{
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.5]]], 
                    GrayLevel[0.5], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{0.56, 
                    1.031}, {6.429, 1.031}, {6.429, 60.967}, {0.56, 
                    60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{6.192899999999999, 
                    30.980699999999995`}, {42.4399, 0.7526999999999973}, {
                    42.4399, 8.209699999999994}, {16.432899999999997`, 
                    30.982699999999994`}, {42.4119, 53.6547}, {42.4399, 
                    61.244699999999995`}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{0.56, 
                    1.031}, {6.429, 1.031}, {6.429, 60.967}, {0.56, 
                    60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{6.192899999999999, 
                    30.980699999999995`}, {42.4399, 0.7526999999999973}, {
                    42.4399, 8.209699999999994}, {16.432899999999997`, 
                    30.982699999999994`}, {42.4119, 53.6547}, {42.4399, 
                    61.244699999999995`}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ + 
                    102 (-20), {1, 102 - -20 + 1}])}], 
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.3]]], 
                    GrayLevel[0.3], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5499, 30.980699999999995`}, {
                    36.7969, 0.7526999999999973}, {36.7969, 
                    8.209699999999994}, {10.7899, 30.982699999999994`}, {
                    36.7689, 53.6547}, {36.7969, 61.244699999999995`}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5499, 30.980699999999995`}, {
                    36.7969, 0.7526999999999973}, {36.7969, 
                    8.209699999999994}, {10.7899, 30.982699999999994`}, {
                    36.7689, 53.6547}, {36.7969, 61.244699999999995`}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ - 20, {
                    1, 102 - -20 + 1}])}], 
                    Pane[
                    Row[{"showing ", 1, "\[Dash]", 20, " of ", 
                    Style[
                    102, FontColor -> GrayLevel[0], FontWeight -> "Medium"]}, 
                    BaseStyle -> {
                    FontSize -> 8., FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]}], 150, ContentPadding -> False, 
                    Alignment -> {Center, Center}], 
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.3]]], 
                    GrayLevel[0.3], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5778000000000001, 
                    53.654399999999995`}, {26.5568, 30.982399999999995`}, {
                    0.5498000000000001, 8.209399999999995}, {
                    0.5498000000000001, 0.7523999999999944}, {
                    36.796800000000005`, 30.980399999999992`}, {
                    0.5498000000000001, 61.2454}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5778000000000001, 
                    53.654399999999995`}, {26.5568, 30.982399999999995`}, {
                    0.5498000000000001, 8.209399999999995}, {
                    0.5498000000000001, 0.7523999999999944}, {
                    36.796800000000005`, 30.980399999999992`}, {
                    0.5498000000000001, 61.2454}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ + 20, {
                    1, 102 - 20 + 1}])}], 
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.5]]], 
                    GrayLevel[0.5], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    36.571, 1.031}, {42.440999999999995`, 1.031}, {
                    42.440999999999995`, 60.967}, {36.571, 60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5598000000000001, 
                    53.788500000000006`}, {26.5668, 31.015500000000007`}, {
                    0.5878000000000001, 8.343500000000006}, {
                    0.5598000000000001, 0.7525000000000048}, {36.8068, 
                    31.017500000000005`}, {0.5598000000000001, 
                    61.24450000000001}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    36.571, 1.031}, {42.440999999999995`, 1.031}, {
                    42.440999999999995`, 60.967}, {36.571, 60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5598000000000001, 
                    53.788500000000006`}, {26.5668, 31.015500000000007`}, {
                    0.5878000000000001, 8.343500000000006}, {
                    0.5598000000000001, 0.7525000000000048}, {36.8068, 
                    31.017500000000005`}, {0.5598000000000001, 
                    61.24450000000001}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ + 
                    102 20, {1, 102 - 20 + 1}])}]}, "   "], 
                  Row[{
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.5]]], 
                    GrayLevel[0.5], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{0.56, 
                    1.031}, {6.429, 1.031}, {6.429, 60.967}, {0.56, 
                    60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{6.192899999999999, 
                    30.980699999999995`}, {42.4399, 0.7526999999999973}, {
                    42.4399, 8.209699999999994}, {16.432899999999997`, 
                    30.982699999999994`}, {42.4119, 53.6547}, {42.4399, 
                    61.244699999999995`}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{0.56, 
                    1.031}, {6.429, 1.031}, {6.429, 60.967}, {0.56, 
                    60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{6.192899999999999, 
                    30.980699999999995`}, {42.4399, 0.7526999999999973}, {
                    42.4399, 8.209699999999994}, {16.432899999999997`, 
                    30.982699999999994`}, {42.4119, 53.6547}, {42.4399, 
                    61.244699999999995`}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ + 
                    102 (-20), {1, 102 - -20 + 1}])}], 
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.3]]], 
                    GrayLevel[0.3], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5499, 30.980699999999995`}, {
                    36.7969, 0.7526999999999973}, {36.7969, 
                    8.209699999999994}, {10.7899, 30.982699999999994`}, {
                    36.7689, 53.6547}, {36.7969, 61.244699999999995`}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5499, 30.980699999999995`}, {
                    36.7969, 0.7526999999999973}, {36.7969, 
                    8.209699999999994}, {10.7899, 30.982699999999994`}, {
                    36.7689, 53.6547}, {36.7969, 61.244699999999995`}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ - 20, {
                    1, 102 - -20 + 1}])}], 
                    Pane[
                    Row[{"showing ", 1, "\[Dash]", 20, " of ", 
                    Style[
                    102, FontColor -> GrayLevel[0], FontWeight -> "Medium"]}, 
                    BaseStyle -> {
                    FontSize -> 8., FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]}], 150, ContentPadding -> False, 
                    Alignment -> {Center, Center}], 
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.3]]], 
                    GrayLevel[0.3], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5778000000000001, 
                    53.654399999999995`}, {26.5568, 30.982399999999995`}, {
                    0.5498000000000001, 8.209399999999995}, {
                    0.5498000000000001, 0.7523999999999944}, {
                    36.796800000000005`, 30.980399999999992`}, {
                    0.5498000000000001, 61.2454}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5778000000000001, 
                    53.654399999999995`}, {26.5568, 30.982399999999995`}, {
                    0.5498000000000001, 8.209399999999995}, {
                    0.5498000000000001, 0.7523999999999944}, {
                    36.796800000000005`, 30.980399999999992`}, {
                    0.5498000000000001, 61.2454}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ + 20, {
                    1, 102 - 20 + 1}])}], 
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.5]]], 
                    GrayLevel[0.5], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    36.571, 1.031}, {42.440999999999995`, 1.031}, {
                    42.440999999999995`, 60.967}, {36.571, 60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5598000000000001, 
                    53.788500000000006`}, {26.5668, 31.015500000000007`}, {
                    0.5878000000000001, 8.343500000000006}, {
                    0.5598000000000001, 0.7525000000000048}, {36.8068, 
                    31.017500000000005`}, {0.5598000000000001, 
                    61.24450000000001}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    36.571, 1.031}, {42.440999999999995`, 1.031}, {
                    42.440999999999995`, 60.967}, {36.571, 60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5598000000000001, 
                    53.788500000000006`}, {26.5668, 31.015500000000007`}, {
                    0.5878000000000001, 8.343500000000006}, {
                    0.5598000000000001, 0.7525000000000048}, {36.8068, 
                    31.017500000000005`}, {0.5598000000000001, 
                    61.24450000000001}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ + 
                    102 20, {1, 102 - 20 + 1}])}]}, "   "]]], Background -> 
                GrayLevel[0.98], Alignment -> {Left, Top}, 
                BaseStyle -> {ContextMenu -> {
                    MenuItem["Hide", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1313733086},
                     1, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 10 rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1313733086},
                     10, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 30 rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1313733086},
                     30, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 100 rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1313733086},
                     100, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show all", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1313733086},
                     100000000, {}]], MenuEvaluator -> Automatic]}}], 
               SpanFromLeft}}, BaseStyle -> {ContextMenu -> {
                 MenuItem["Copy position to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Copy data to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], Delimiter, 
                 MenuItem["Paste position in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Paste data in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic]}, FontFamily -> "Verdana", 
               FontSize -> 12}, Alignment -> Left, RowMinHeight -> 1.5, 
             Dividers -> All, FrameStyle -> GrayLevel[0.85], 
             BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
            LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False,
             ShowAutoStyles -> False]], 
         TypeSystem`NestedGrid`PackagePrivate`initialQ = True, 
         TypeSystem`NestedGrid`PackagePrivate`self = $Failed}, 
        Dynamic[
         TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
         TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
            Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
            
            Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
              TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
              TypeSystem`NestedGrid`PackagePrivate`LookupCacheValue[
                TypeSystem`NestedGrid`PackagePrivate`$state$$["Data"]]}, 
             TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = 
              If[TypeSystem`NestedGrid`PackagePrivate`tmpData$ === 
                TypeSystem`NestedGrid`PackagePrivate`$NotCached, 
                TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1313733086][
                TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
               Not[
                FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
               TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
               TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
          TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
          TypeSystem`NestedGrid`PackagePrivate`$pos$$; If[
            FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
            TypeSystem`SparseGrid[
             TypeSystem`H["(data no longer present)"]], 
            If[GeneralUtilities`$DebugMode, 
             Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
               TypeSystem`NestedGrid`PackagePrivate`formatState[
               TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                TypeSystem`NestedGrid`PackagePrivate`$pos$$]}], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
         TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$pos$$}], 
        DynamicModuleValues :> {}], 
      TypeSystem`NestedGrid`PackagePrivate`$posCell$$, 
      TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
        TypeSystem`NestedGrid`PackagePrivate`alignBar[
        TypeSystem`NestedGrid`PackagePrivate`$state$$][
         TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
          TypeSystem`PackageScope`Pathbar[
          TypeSystem`NestedGrid`PackagePrivate`$path$$, 
           TypeSystem`NestedGrid`PackagePrivate`updateState[
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
            TypeSystem`NestedGrid`PackagePrivate`$path$$, 
            TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1313733086]]]], 
        TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
      TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Framed[
        Dynamic[
         Replace[
          MouseAnnotation[Null], {
          TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1313733086][Null] -> 
           "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1313733086][
             Pattern[TypeSystem`NestedGrid`PackagePrivate`path, 
              Blank[]]] :> (
            TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
             TypeSystem`NestedGrid`PackagePrivate`path; 
            TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
             TypeSystem`NestedGrid`PackagePrivate`path, 
              TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
           Spacer[10], Blank[] :> Spacer[10]}], TrackedSymbols :> {}], 
        FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
        Top, ImageSize -> {Automatic, 14}]}, 
     DynamicBox[
      ToBoxes[
       Column[
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, {
          TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
          TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`alignBar[
           TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}, {
         TypeSystem`NestedGrid`PackagePrivate`$topBar$$, 
          TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
          TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`alignBar[
           TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}], Spacings -> 
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, 
          0, {{}, {0, 0.05, 0}}]], StandardForm], 
      ImageSizeCache -> {308., {338., 345.}}, 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     BaseStyle -> {LineBreakWithin -> False}, Deinitialization :> 
     TypeSystem`NestedGrid`PackagePrivate`deleteState[
      TypeSystem`NestedGrid`PackagePrivate`$state$$], 
     DynamicModuleValues :> {}, Initialization :> 
     Block[{$ContextPath = $ContextPath}, 
       Needs["TypeSystem`"]]], Deploy, DefaultBaseStyle -> "Deploy"]},
  "CopyTag",
  DisplayFunction->(#& ),
  InterpretationFunction->("Dataset[<>]"& )]], "Output",
 CellChangeTimes->{3.77418739075324*^9, 3.774187480086234*^9, 
  3.774187658656911*^9},
 CellLabel->
  "Out[661]=",ExpressionUUID->"ee5054bf-dec7-4fff-9e67-b196eec9733c"],

Cell[BoxData["Dataset"], "Output",
 CellChangeTimes->{3.77418739075324*^9, 3.774187480086234*^9, 
  3.7741876589839106`*^9},
 CellLabel->
  "Out[662]=",ExpressionUUID->"13bc2af0-c43f-4d6b-823e-70f666954586"],

Cell[BoxData[
 GraphicsBox[{{{}, {{{}, {}, 
      {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       0.009166666666666668], AbsoluteThickness[1.6], LineBox[CompressedData["
1:eJx91ntIU2EUAPDrEBMVM5G01NGUVDJfpPkI3dnUq1tLy0fYtDVN94ekluEr
KhcWZVBCFgk9zMdaSNiwEBtkZhGKTijnq1EyJkqlsYiiNKRv/tU/51y4XH7w
cc93z/nu9x1RSVVOmYDjuHF2O552fRBfIFyWcBtXAqybZ3EP5cPdN9HHUHO7
wXfuF+Fs0GhUxai1maAs3VyJez8YZQvXUXNJ8GB7lRG3AsY6GpyUmLXpbD5C
Z9ScHxu/xQV3PmSVXNyEOwwE4U/ccfMw0+XhT7moZSKAsvVMtBC3DGpa/cIo
r5tvRlDm+5ciKZ9K3huDWitj9SjcQ3mqXhaLmpPDwzsecai1cuhMn5ZSFoTH
85TnJmwyyt5NrgrKffeijlNuq7xRRllZajtNued7SA3l1z/TalHDQbj01akO
9VAOhMb8rUfN5cHkgV3dqDfyfV9H2eXCTj1qFi9nQP4INRcL74LEL1Gz91Us
NQ1RdptJHcZ9iNWrcRS3HKRq0xhlQ/XILOVWP8UHysrSNQtqLg2ejVR/wp3F
6r08jzsPbDp3O2oWr/+HyK2QsGfEeXfKLcMfPSjPZzd74uZhsP29N2ouke1H
y764I1k++EDULJ5d/2UHZZVRF0w5NEYdgprNx65/G4qaree6QXEeanbenhO/
yMftCpnWYcISth/OFlCO6Ht1hLJUrSvC7QPiuB7CMnZeVlegZvvNgNBkQM3y
WdNqfkrZP2rlOWWbzpJahJqHQOUCbs4Lgi0rabhd2XmwhlsrAcufrbFHUTv+
l/I4ynz/ZBJqFk+qthJOYd8zvg+3K4zWThNOYf3CiWTcPtAsOUlYBg2fe6+o
UCew9e57lbJGs3oLNVsvIkNQG+XeDBNuVs/GcjNu1u/FN1vj6zCzfIkMi4Sl
bLwpEbcPLK1N4dYq2HyLkyjPTQQvouYCYJtzCOFc+HY2Y6ADNQe/c9tXcSc4
+u3VTtRe4FXgJOgiHH5ZgFvr6GdVj1Gzel67bTzc/Z//ARzgftY=
        "]]}}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.009166666666666668],
       AbsoluteThickness[1.6]}, {
      {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       0.009166666666666668], AbsoluteThickness[1.6]}, {}}, {
      {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       0.009166666666666668], AbsoluteThickness[1.6]}, {}}}, {{}, {}}}, {{}, {
     {Opacity[0], PointBox[CompressedData["
1:eJxV1GtIk1EYB/DXISYqZhJpeaEpqWTeSPOG7WzqdLa0vIDNuabpPkhqGTqV
yoVF2YeELBC6mNpaSNiwEBMyswjFNijnZY2SMVEqjUUUpSEd+/Cev4OX8eN5
nvM+z9nZEZbX5lcKOI7T0Gfj22kIkRYHL4u5/58ksm6ZYx4tIrdfxx5n8X3E
z/oLnEc0GlUZb102UVRsrWE+RIZlC9dYfgq5t6t2mFlOJrubXBR8fiZdL9iV
N+dP49vcmItIbvnFLcwRRBD52JNZSmZ7vQLQynZzINreHBvMLCP1Hf4R6HXL
jSi0dHApGn067UAc61dG5ynZj55ulMWz/Bzy4JZXAovnkJ7MGQlaEJkoRVvN
Dhnat9Vdjh64E3MC3VlzvRKtqHCcQfd9D6tHv/qZ0cCbHCGXvrpoeY/mk/C4
v42s/0IydXjv/c3939Wj3S7sMWB9/lDOQ1YfT96FiF5gfvVS6yjaYzZ9jPko
na9lAuMStWkSbawbn0N3+Ms/bJ5/zcben0Gejtd9Ys6l8y/P43wOvacT6wd/
CD1KwN5R5z3R7WMfvdDzeW3ezFIy0vXelzeXTM/Tsh9zNO1HGoT1TsOX3WjV
sD4UHR6nDsP1nIY34SWw39oRUSGLJ5FzoudFzO4k2z4GFtPzOFeMjhp4eQwt
UeuVzNuJKKEPLKP/z7pq3vT8DAWbjNhvfYflCTogZuUZ2qG3pSthv4IUC8yc
Dwm1rWQooX+reY1ZJya2PzviSzf9PlUJaOngVEop1EvUdvBB+r63qRifaJhJ
xbi9+WRaKczfJj4FlpGmz/1XVLDf2hG/q2iNZvWmCvZHaAzpRPdnmZjpvC1V
FmZ6/yW22RO10J/QuAiW0LgpWQv9La1NM+vkdP2yFLTVHLrI8gPJTtcwcAH5
djZrqJs3R34XdK12wzz0/l7tgX59il0EveDIywJm3cZ9q3rUC/P+A/H5v/o=

       "]]}, {
      {Opacity[0]}, {}}, {
      {Opacity[0]}, {}}}, {{}, {{}, {}}}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{3.774005809083*^9, 0},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->FrontEndValueCache[{{Automatic, Automatic}, {
      Charting`DateTicksFunction[
      Automatic, Ticks -> Automatic, DateTicksFormat -> {Automatic}], 
      Charting`ScaledFrameTicks[
       Charting`DateTicksFunction[
       Automatic, Ticks -> Automatic, "TickLabels" -> None, 
        DateTicksFormat -> {Automatic}][
        SlotSequence[1]], {Identity, Identity}]& }}, {{
     Automatic, Automatic}, {{{3.7740024*^9, 
        FormBox[
         TagBox[
          GridBox[{{
             StyleBox["\"14:00\"", 
              Directive[], {}, StripOnInput -> False]}}, 
           GridBoxAlignment -> {"Columns" -> {{Center}}}, DefaultBaseStyle -> 
           "Column", 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"], 
         TraditionalForm], {0.013888888888888888`, 0.}, 
        Directive[]}, {3.7740096*^9, 
        FormBox[
         TagBox[
          GridBox[{{
             StyleBox["\"16:00\"", 
              Directive[], {}, StripOnInput -> False]}}, 
           GridBoxAlignment -> {"Columns" -> {{Center}}}, DefaultBaseStyle -> 
           "Column", 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"], 
         TraditionalForm], {0.013888888888888888`, 0.}, 
        Directive[]}, {3.7740168*^9, 
        FormBox[
         TagBox[
          GridBox[{{
             StyleBox["\"18:00\"", 
              Directive[], {}, StripOnInput -> False]}}, 
           GridBoxAlignment -> {"Columns" -> {{Center}}}, DefaultBaseStyle -> 
           "Column", 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"], 
         TraditionalForm], {0.013888888888888888`, 0.}, 
        Directive[]}, {3.774024*^9, 
        FormBox[
         TagBox[
          GridBox[{{
             StyleBox["\"20:00\"", 
              Directive[], {}, StripOnInput -> False]}}, 
           GridBoxAlignment -> {"Columns" -> {{Center}}}, DefaultBaseStyle -> 
           "Column", 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"], 
         TraditionalForm], {0.013888888888888888`, 0.}, 
        Directive[]}, {3.7740312*^9, 
        FormBox[
         TagBox[
          GridBox[{{
             StyleBox["\"22:00\"", 
              Directive[], {}, StripOnInput -> False]}}, 
           GridBoxAlignment -> {"Columns" -> {{Center}}}, DefaultBaseStyle -> 
           "Column", 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"], 
         TraditionalForm], {0.013888888888888888`, 0.}, 
        Directive[]}}, {{3.7740024*^9, 
        FormBox[
         TagBox[
          GridBox[{{
             StyleBox[
              TemplateBox[{0., 0.}, "Spacer2"], 
              Directive[], {}, StripOnInput -> False]}}, 
           GridBoxAlignment -> {"Columns" -> {{Center}}}, DefaultBaseStyle -> 
           "Column", 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"], 
         TraditionalForm], {0.013888888888888888`, 0.}, 
        Directive[]}, {3.7740096*^9, 
        FormBox[
         TagBox[
          GridBox[{{
             StyleBox[
              TemplateBox[{0., 0.}, "Spacer2"], 
              Directive[], {}, StripOnInput -> False]}}, 
           GridBoxAlignment -> {"Columns" -> {{Center}}}, DefaultBaseStyle -> 
           "Column", 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"], 
         TraditionalForm], {0.013888888888888888`, 0.}, 
        Directive[]}, {3.7740168*^9, 
        FormBox[
         TagBox[
          GridBox[{{
             StyleBox[
              TemplateBox[{0., 0.}, "Spacer2"], 
              Directive[], {}, StripOnInput -> False]}}, 
           GridBoxAlignment -> {"Columns" -> {{Center}}}, DefaultBaseStyle -> 
           "Column", 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"], 
         TraditionalForm], {0.013888888888888888`, 0.}, 
        Directive[]}, {3.774024*^9, 
        FormBox[
         TagBox[
          GridBox[{{
             StyleBox[
              TemplateBox[{0., 0.}, "Spacer2"], 
              Directive[], {}, StripOnInput -> False]}}, 
           GridBoxAlignment -> {"Columns" -> {{Center}}}, DefaultBaseStyle -> 
           "Column", 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"], 
         TraditionalForm], {0.013888888888888888`, 0.}, 
        Directive[]}, {3.7740312*^9, 
        FormBox[
         TagBox[
          GridBox[{{
             StyleBox[
              TemplateBox[{0., 0.}, "Spacer2"], 
              Directive[], {}, StripOnInput -> False]}}, 
           GridBoxAlignment -> {"Columns" -> {{Center}}}, DefaultBaseStyle -> 
           "Column", 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"], 
         TraditionalForm], {0.013888888888888888`, 0.}, 
        Directive[]}}}}],
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageMargins->0.,
  ImageSize->Small,
  ImageSizeRaw->Automatic,
  Method->{
   "NoShowPlotTheme" -> Automatic, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{3.774005809083*^9, 3.7740320229934998`*^9}, {0, 87.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.08090169943749476]}},
  Ticks->{{}, Automatic}]], "Output",
 CellChangeTimes->{3.77418739075324*^9, 3.774187480086234*^9, 
  3.77418765944991*^9},
 CellLabel->
  "Out[663]=",ExpressionUUID->"4f05685b-5820-4a4d-b193-f224284a9a31"],

Cell[BoxData["Graphics"], "Output",
 CellChangeTimes->{3.77418739075324*^9, 3.774187480086234*^9, 
  3.7741876594949107`*^9},
 CellLabel->
  "Out[664]=",ExpressionUUID->"43498fcd-4ad3-40ba-a7f6-817300f4194e"],

Cell[BoxData[
 GraphicsBox[{
   {GrayLevel[1], EdgeForm[None], FilledCurveBox[{Line[CompressedData["
1:eJxd1V1I02EUx/EtrC56o4xCsWykhiCRWWImncywF1wTixokKYbIkmgrbxzJ
oiKvrLQWxAoiltnLCiU1QzxgTaMpvkS1icl05TZ1+yNlGMXK6Py66IHDuTs3
H/g+mpJTBaXzVCpV6dz82X+flx/m6QPmlkn+Oj8/zl8xzBtHbM2PHkxxpeZO
ytJeNye0hZP8lhBfTY1vTFr8jmPXJbsOZYQ5ZG4y/9g6wPnRdm3mYJhn9Lse
e2694XMq8+afeQpX1KzK8TR18tOs22fWNih8MubCzmB5MzfUJUZ2+xR+viKi
Dpus3K49vGxLROGpL9VdbcZ7FOeMGPtnFS4/kmUr7nxBXWWz1+PfKrw6Umt3
6J1kPF9/ZU/N3L3WWuVmZi/FHqiavrxB4SWF7gyLZZCmE1sthXfDXKb2adS6
92SctPSkR0LcH7tA833hEFktv5683B5ia1qvwV7/kZyOHlv30SmOrvxW7Ljm
pVd9ppGEokn2DNTF7MsZo2NNrmdDuRO8PrBXZ/L6qLo1WRu1MsjuRWM3Lho+
U2dHWsOHbj+fWL6mb2Z4nAyjLUX24+N8NjvQqN0WoHST9eBg4BOnlFzSpVQF
Kff1ph1evY87XPGn99+foKjs9tSS5lE4EFzEgeAiDgQXcSC4iAPBRRwILuJA
cBEHgos4EFzEgeAiDgQXcSC4iAPBRRwILuJAcBEHgos4EFzEgeAiDgQXcSC4
iAPBRRwILuJAcBEHgos4EFzEgeAiDgQXcSC4iAPBRRwILuJAcBEHgos4EFzE
geAiDv9cxIHhIg4MF3FguIgDw0UcGC7iwHARB4aLODBcxIHhIg4MF3FguIgD
w0UcGC7iwHARB4YLOgUXdAou6BRc0Cm4oFNwQafggk7BBZ2CCzoFF3QKLugU
XNApuKBTcEGn4IJOwQWdggs6BRd0Ci7oFFzQKbigU3BBp+CCTsEFnYILOgWX
//+P34UFays=
       "]]}]}, GraphicsGroupBox[
    {GrayLevel[0.8], EdgeForm[{GrayLevel[0.6], Thickness[0.01]}], 
     FilledCurveBox[{{Line[CompressedData["
1:eJxd1V1I02EUx/EtrC56o4xCsWykhiCRWWImncywF1wTixokKYbIkmgrbxzJ
oiKvrLQWxAoiltnLCiU1QzxgTaMpvkS1icl05TZ1+yNlGMXK6Py66IHDuTs3
H/g+mpJTBaXzVCpV6dz82X+flx/m6QPmlkn+Oj8/zl8xzBtHbM2PHkxxpeZO
ytJeNye0hZP8lhBfTY1vTFr8jmPXJbsOZYQ5ZG4y/9g6wPnRdm3mYJhn9Lse
e2694XMq8+afeQpX1KzK8TR18tOs22fWNih8MubCzmB5MzfUJUZ2+xR+viKi
Dpus3K49vGxLROGpL9VdbcZ7FOeMGPtnFS4/kmUr7nxBXWWz1+PfKrw6Umt3
6J1kPF9/ZU/N3L3WWuVmZi/FHqiavrxB4SWF7gyLZZCmE1sthXfDXKb2adS6
92SctPSkR0LcH7tA833hEFktv5683B5ia1qvwV7/kZyOHlv30SmOrvxW7Ljm
pVd9ppGEokn2DNTF7MsZo2NNrmdDuRO8PrBXZ/L6qLo1WRu1MsjuRWM3Lho+
U2dHWsOHbj+fWL6mb2Z4nAyjLUX24+N8NjvQqN0WoHST9eBg4BOnlFzSpVQF
Kff1ph1evY87XPGn99+foKjs9tSS5lE4EFzEgeAiDgQXcSC4iAPBRRwILuJA
cBEHgos4EFzEgeAiDgQXcSC4iAPBRRwILuJAcBEHgos4EFzEgeAiDgQXcSC4
iAPBRRwILuJAcBEHgos4EFzEgeAiDgQXcSC4iAPBRRwILuJAcBEHgos4EFzE
geAiDv9cxIHhIg4MF3FguIgDw0UcGC7iwHARB4aLODBcxIHhIg4MF3FguIgD
w0UcGC7iwHARB4YLOgUXdAou6BRc0Cm4oFNwQafggk7BBZ2CCzoFF3QKLugU
XNApuKBTcEGn4IJOwQWdggs6BRd0Ci7oFFzQKbigU3BBp+CCTsEFnYILOgWX
//+P34UFays=
         "]]}, {Line[CompressedData["
1:eJyF1V1I02EUx/EpoxfEAkOSwsqQhGFemCAGdgTT6EbQihQkwbfI3tAi8UIv
mk5XYpmVNyVpUmkvWIlMnR0MUckwNE1xS12r2drc/z+ziErK8Px24U0XD4dz
ca4+8H3Css+m5flrNJrjy+/f3F7hSjVts/Hi3a6lzffnefXefaOsdrJomm8/
sPWlPPSw9edWKjVOcWLTswTjVYX1xvjMtIp3PGJrcys6lc8fGX6SXzDKkVEN
9UmlKq/VR3/lktc8djGgaOGFynme8Pp5vz4eu/I0rF1RuSu5Wh10dfCgY0du
xkYvz8RmVcct3OSgMkPCy1Avm3JyehT1Hu30/oiY3eJla/CpY3ONZsq07NZ2
rPFyfnfl45iJfkoprIpJt6mcEd2zKzv5DRWnlpe4W1UeSHx/6NertxSeXjvc
kqPy5RDH4f7pCYr/Y4ieDFD5liey8tyUhXpHh3vuHFB4dp/d9Ltzhup0xdbv
Rz2s1yVtMpttFHS93958cJ4bNhhiay7ZKWR9ldId6uZG/5o9Tfs/kfZbs+bk
+Bfu3euXG+d00LhOO7RU6OShqEBL64XPtC64IN+yOMd6vSkwz+Ukbfsje3mW
g9syrp1QklzL9y0Ddc8/MoVHjLjK3VR5xnjatPABDgQXcSC4iAPBRRwILuJA
cBEH8rmsOBBcxIHgIg4EF3EguIgDwUUcCC7iQHARB4KLOBBcxIHgIg4EF3Eg
uIgDwUUcCC7iQHARB4KLOJDPZcWB4CIOBBdxILiIA8FFHAgu4kBwEQeCizgQ
XMSB4CIOBBdxILiIg89FHBgu4sBwEQeGizgwXMSB4SIODBdxYLiIA8NFHBgu
4sBwEQeGizgwXMSB4SIODBdxYLis6hYc0C04oFtwQLfggG7BgX0u0im4oFNw
Qafggk7BBZ2CCzoFF3QKLugUXNApuKBTcEGn4IJOwQWdggs6BRd0Ci7oFFzQ
KZ+LdAou6BRc/vef/AWs0Kog
         "]]}}]}], {}, 
   {GrayLevel[0.5], Thickness[0.008], 
    {GrayLevel[0.5], Thickness[0.004], CapForm["Butt"], 
     StyleBox[{{
        LineBox[{{{-0.5000000000000004, -0.8660254037844385}, 
           Scaled[{0.030000000000000072`, 
            0.05569219381653051}, {-0.5000000000000004, \
-0.8660254037844385}]}, {{-1., 1.2246467991473532`*^-16}, 
           Scaled[{0.06, 0.}, {-1., 
            1.2246467991473532`*^-16}]}, {{-0.4999999999999998, 
           0.8660254037844387}, 
           Scaled[{
            0.029999999999999992`, -0.055692193816530566`}, \
{-0.4999999999999998, 0.8660254037844387}]}, {{0.5000000000000003, 
           0.8660254037844385}, 
           Scaled[{-0.03000000000000002, -0.05569219381653053}, {
            0.5000000000000003, 0.8660254037844385}]}, {{1., 0.}, 
           Scaled[{-0.06, 0.}, {1., 0.}]}, {{
           0.5000000000000003, -0.8660254037844385}, 
           Scaled[{-0.030000000000000006`, 0.05569219381653054}, {
            0.5000000000000003, -0.8660254037844385}]}}], 
        LineBox[{{{-0.7071067811865479, -0.7071067811865471}, 
           Scaled[{0.028284271247461915`, 
            0.03031499055704094}, {-0.7071067811865479, \
-0.7071067811865471}]}, {{-0.8660254037844388, -0.4999999999999997}, 
           Scaled[{0.03464101615137756, 
            0.021435935394489788`}, {-0.8660254037844388, \
-0.4999999999999997}]}, {{-0.9659258262890684, -0.25881904510252035`}, 
           Scaled[{0.038637033051562734`, 
            0.011096056659362344`}, {-0.9659258262890684, \
-0.25881904510252035`}]}, {{-0.9659258262890682, 0.258819045102521}, 
           Scaled[{0.03863703305156273, -0.011096056659362374`}, \
{-0.9659258262890682, 0.258819045102521}]}, {{-0.8660254037844385, 
           0.5000000000000003}, 
           Scaled[{0.03464101615137754, -0.02143593539448983}, \
{-0.8660254037844385, 0.5000000000000003}]}, {{-0.7071067811865475, 
           0.7071067811865476}, 
           Scaled[{0.028284271247461898`, -0.030314990557040962`}, \
{-0.7071067811865475, 0.7071067811865476}]}, {{-0.2588190451025204, 
           0.9659258262890684}, 
           Scaled[{0.010352761804100816`, -0.041411047216403325`}, \
{-0.2588190451025204, 0.9659258262890684}]}, {{6.123233995736766*^-17, 1.}, 
           Scaled[{0., -0.04287187078897963}, {6.123233995736766*^-17, 
            1.}]}, {{0.25881904510252096`, 0.9659258262890682}, 
           Scaled[{-0.010352761804100838`, -0.04141104721640332}, {
            0.25881904510252096`, 0.9659258262890682}]}, {{0.7071067811865476,
            0.7071067811865476}, 
           Scaled[{-0.028284271247461905`, -0.030314990557040962`}, {
            0.7071067811865476, 0.7071067811865476}]}, {{0.8660254037844387, 
           0.49999999999999983`}, 
           Scaled[{-0.034641016151377546`, -0.02143593539448981}, {
            0.8660254037844387, 0.49999999999999983`}]}, {{0.9659258262890683,
            0.25881904510252046`}, 
           Scaled[{-0.038637033051562734`, -0.01109605665936235}, {
            0.9659258262890683, 0.25881904510252046`}]}, {{
           0.9659258262890683, -0.25881904510252046`}, 
           Scaled[{-0.038637033051562734`, 0.011096056659362358`}, {
            0.9659258262890683, -0.25881904510252046`}]}, {{
           0.8660254037844385, -0.5000000000000002}, 
           Scaled[{-0.03464101615137754, 0.021435935394489836`}, {
            0.8660254037844385, -0.5000000000000002}]}, {{
           0.7071067811865476, -0.7071067811865476}, 
           Scaled[{-0.028284271247461894`, 0.030314990557040965`}, {
            0.7071067811865476, -0.7071067811865476}]}}]}, 
       {GrayLevel[0.25], 
        StyleBox[{{{
            InsetBox["0", Offset[{1.5000000000000036, 2.5980762113533142}, 
             Scaled[{0.030000000000000072, 0.05569219381653051}, \
{-0.5000000000000004, -0.8660254037844385}]], {-0.5773502691896275, -1.}, 
             Automatic, {1, 0}], 
            InsetBox["20", Offset[{3., 0.}, 
             Scaled[{0.06, 0.}, {-1., 1.2246467991473532*^-16}]], {-1, 0.}, 
             Automatic, {1, 0}], 
            InsetBox["40", Offset[{1.4999999999999996, -2.598076211353317}, 
             Scaled[{0.029999999999999992, -0.055692193816530566}, \
{-0.4999999999999998, 0.8660254037844387}]], {-0.5773502691896255, 1.}, 
             Automatic, {1, 0}], 
            InsetBox["60", Offset[{-1.5000000000000009, -2.5980762113533156}, 
             Scaled[{-0.03000000000000002, -0.05569219381653053}, \
{0.5000000000000003, 0.8660254037844385}]], {0.5773502691896262, 1.}, 
             Automatic, {1, 0}], 
            InsetBox["80", Offset[{-3., 0.}, Scaled[{-0.06, 0.}, {1., 0.}]], {1, 0.},
              Automatic, {1, 0}], 
            InsetBox["100", Offset[{-1.5000000000000004, 2.598076211353316}, 
             Scaled[{-0.030000000000000006, 0.05569219381653054}, \
{0.5000000000000003, -0.8660254037844385}]], {0.577350269189626, -1.}, 
             Automatic, {1, 
             0}]}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}}}, {}},
         StripOnInput->False,
         FontFamily->"Helvetica",
         FontSize->Scaled[0.07]]}},
      StripOnInput->False,
      Antialiasing->True]}}, {}, {}, 
   GeometricTransformationBox[GeometricTransformationBox[
     TagBox[
      TooltipBox[{
        {RGBColor[0.73, 0.24506099999999992`, 0.1971], 
         PolygonBox[{{0., -0.054700000000000006`}, {1, -0.025}, {1, 0.025}, {
           0., 0.054700000000000006`}}]}, 
        {RGBColor[0.73, 0.24506099999999992`, 0.1971], DiskBox[{0, 0}, 0.07]}, 
        {GrayLevel[1], DiskBox[{0, 0}, 0.035]}},
       "87"],
      Annotation[#, 87, "Tooltip"]& ], {{{0.8402223838474815, 
      0.3225311545907705}, {-0.3225311545907705, 0.8402223838474815}}, {0., 
      0.}}], {{{1, 0}, {0, 1}}, Center}], {}},
  AlignmentPoint->Center,
  AspectRatio->Automatic,
  Axes->False,
  AxesLabel->None,
  AxesOrigin->Automatic,
  AxesStyle->{},
  Background->None,
  BaseStyle->{},
  BaselinePosition->Automatic,
  ColorOutput->Automatic,
  ContentSelectable->Automatic,
  CoordinatesToolOptions:>Automatic,
  DisplayFunction->Identity,
  Epilog->{},
  FormatType->TraditionalForm,
  Frame->False,
  FrameLabel->None,
  FrameStyle->{},
  FrameTicks->Automatic,
  FrameTicksStyle->{},
  GridLines->None,
  GridLinesStyle->{},
  ImageMargins->0.,
  ImagePadding->All,
  ImageSize->Small,
  ImageSizeRaw->Automatic,
  LabelStyle->Directive[
    GrayLevel[0.25], FontSize -> Scaled[0.07], FontFamily -> "Helvetica"],
  Method->Automatic,
  PlotLabel->None,
  PlotRange->All,
  PlotRangeClipping->False,
  PlotRangePadding->Automatic,
  PlotRegion->Automatic,
  PreserveImageOptions->Automatic,
  Prolog->{},
  RotateLabel->True,
  Ticks->Automatic,
  TicksStyle->{}]], "Output",
 CellChangeTimes->{3.77418739075324*^9, 3.774187480086234*^9, 
  3.77418765972591*^9},
 CellLabel->
  "Out[665]=",ExpressionUUID->"0b930479-a24d-44b9-ac5c-6d1cdecda4bb"],

Cell[BoxData["Graphics"], "Output",
 CellChangeTimes->{3.77418739075324*^9, 3.774187480086234*^9, 
  3.774187659735911*^9},
 CellLabel->
  "Out[666]=",ExpressionUUID->"cc1bba48-5fdb-476c-b7b2-6572dd227c29"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.7741877768799133`*^9, 
  3.77418779927791*^9}},ExpressionUUID->"77add106-d63a-4f3d-87d5-\
87876f7915f0"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     GraphicsBox[{
       {GrayLevel[1], EdgeForm[None], FilledCurveBox[{Line[CompressedData["
1:eJxd1V1I02EUx/EtrC56o4xCsWykhiCRWWImncywF1wTixokKYbIkmgrbxzJ
oiKvrLQWxAoiltnLCiU1QzxgTaMpvkS1icl05TZ1+yNlGMXK6Py66IHDuTs3
H/g+mpJTBaXzVCpV6dz82X+flx/m6QPmlkn+Oj8/zl8xzBtHbM2PHkxxpeZO
ytJeNye0hZP8lhBfTY1vTFr8jmPXJbsOZYQ5ZG4y/9g6wPnRdm3mYJhn9Lse
e2694XMq8+afeQpX1KzK8TR18tOs22fWNih8MubCzmB5MzfUJUZ2+xR+viKi
Dpus3K49vGxLROGpL9VdbcZ7FOeMGPtnFS4/kmUr7nxBXWWz1+PfKrw6Umt3
6J1kPF9/ZU/N3L3WWuVmZi/FHqiavrxB4SWF7gyLZZCmE1sthXfDXKb2adS6
92SctPSkR0LcH7tA833hEFktv5683B5ia1qvwV7/kZyOHlv30SmOrvxW7Ljm
pVd9ppGEokn2DNTF7MsZo2NNrmdDuRO8PrBXZ/L6qLo1WRu1MsjuRWM3Lho+
U2dHWsOHbj+fWL6mb2Z4nAyjLUX24+N8NjvQqN0WoHST9eBg4BOnlFzSpVQF
Kff1ph1evY87XPGn99+foKjs9tSS5lE4EFzEgeAiDgQXcSC4iAPBRRwILuJA
cBEHgos4EFzEgeAiDgQXcSC4iAPBRRwILuJAcBEHgos4EFzEgeAiDgQXcSC4
iAPBRRwILuJAcBEHgos4EFzEgeAiDgQXcSC4iAPBRRwILuJAcBEHgos4EFzE
geAiDv9cxIHhIg4MF3FguIgDw0UcGC7iwHARB4aLODBcxIHhIg4MF3FguIgD
w0UcGC7iwHARB4YLOgUXdAou6BRc0Cm4oFNwQafggk7BBZ2CCzoFF3QKLugU
XNApuKBTcEGn4IJOwQWdggs6BRd0Ci7oFFzQKbigU3BBp+CCTsEFnYILOgWX
//+P34UFays=
           "]]}]}, GraphicsGroupBox[
        {GrayLevel[0.8], EdgeForm[{GrayLevel[0.6], Thickness[0.01]}], 
         FilledCurveBox[{{Line[CompressedData["
1:eJxd1V1I02EUx/EtrC56o4xCsWykhiCRWWImncywF1wTixokKYbIkmgrbxzJ
oiKvrLQWxAoiltnLCiU1QzxgTaMpvkS1icl05TZ1+yNlGMXK6Py66IHDuTs3
H/g+mpJTBaXzVCpV6dz82X+flx/m6QPmlkn+Oj8/zl8xzBtHbM2PHkxxpeZO
ytJeNye0hZP8lhBfTY1vTFr8jmPXJbsOZYQ5ZG4y/9g6wPnRdm3mYJhn9Lse
e2694XMq8+afeQpX1KzK8TR18tOs22fWNih8MubCzmB5MzfUJUZ2+xR+viKi
Dpus3K49vGxLROGpL9VdbcZ7FOeMGPtnFS4/kmUr7nxBXWWz1+PfKrw6Umt3
6J1kPF9/ZU/N3L3WWuVmZi/FHqiavrxB4SWF7gyLZZCmE1sthXfDXKb2adS6
92SctPSkR0LcH7tA833hEFktv5683B5ia1qvwV7/kZyOHlv30SmOrvxW7Ljm
pVd9ppGEokn2DNTF7MsZo2NNrmdDuRO8PrBXZ/L6qLo1WRu1MsjuRWM3Lho+
U2dHWsOHbj+fWL6mb2Z4nAyjLUX24+N8NjvQqN0WoHST9eBg4BOnlFzSpVQF
Kff1ph1evY87XPGn99+foKjs9tSS5lE4EFzEgeAiDgQXcSC4iAPBRRwILuJA
cBEHgos4EFzEgeAiDgQXcSC4iAPBRRwILuJAcBEHgos4EFzEgeAiDgQXcSC4
iAPBRRwILuJAcBEHgos4EFzEgeAiDgQXcSC4iAPBRRwILuJAcBEHgos4EFzE
geAiDv9cxIHhIg4MF3FguIgDw0UcGC7iwHARB4aLODBcxIHhIg4MF3FguIgD
w0UcGC7iwHARB4YLOgUXdAou6BRc0Cm4oFNwQafggk7BBZ2CCzoFF3QKLugU
XNApuKBTcEGn4IJOwQWdggs6BRd0Ci7oFFzQKbigU3BBp+CCTsEFnYILOgWX
//+P34UFays=
             "]]}, {Line[CompressedData["
1:eJyF1V1I02EUx/EpoxfEAkOSwsqQhGFemCAGdgTT6EbQihQkwbfI3tAi8UIv
mk5XYpmVNyVpUmkvWIlMnR0MUckwNE1xS12r2drc/z+ziErK8Px24U0XD4dz
ca4+8H3Css+m5flrNJrjy+/f3F7hSjVts/Hi3a6lzffnefXefaOsdrJomm8/
sPWlPPSw9edWKjVOcWLTswTjVYX1xvjMtIp3PGJrcys6lc8fGX6SXzDKkVEN
9UmlKq/VR3/lktc8djGgaOGFynme8Pp5vz4eu/I0rF1RuSu5Wh10dfCgY0du
xkYvz8RmVcct3OSgMkPCy1Avm3JyehT1Hu30/oiY3eJla/CpY3ONZsq07NZ2
rPFyfnfl45iJfkoprIpJt6mcEd2zKzv5DRWnlpe4W1UeSHx/6NertxSeXjvc
kqPy5RDH4f7pCYr/Y4ieDFD5liey8tyUhXpHh3vuHFB4dp/d9Ltzhup0xdbv
Rz2s1yVtMpttFHS93958cJ4bNhhiay7ZKWR9ldId6uZG/5o9Tfs/kfZbs+bk
+Bfu3euXG+d00LhOO7RU6OShqEBL64XPtC64IN+yOMd6vSkwz+Ukbfsje3mW
g9syrp1QklzL9y0Ddc8/MoVHjLjK3VR5xnjatPABDgQXcSC4iAPBRRwILuJA
cBEH8rmsOBBcxIHgIg4EF3EguIgDwUUcCC7iQHARB4KLOBBcxIHgIg4EF3Eg
uIgDwUUcCC7iQHARB4KLOJDPZcWB4CIOBBdxILiIA8FFHAgu4kBwEQeCizgQ
XMSB4CIOBBdxILiIg89FHBgu4sBwEQeGizgwXMSB4SIODBdxYLiIA8NFHBgu
4sBwEQeGizgwXMSB4SIODBdxYLis6hYc0C04oFtwQLfggG7BgX0u0im4oFNw
Qafggk7BBZ2CCzoFF3QKLugUXNApuKBTcEGn4IJOwQWdggs6BRd0Ci7oFFzQ
KZ+LdAou6BRc/vef/AWs0Kog
             "]]}}]}], {}, 
       {GrayLevel[0.5], Thickness[0.008], 
        {GrayLevel[0.5], Thickness[0.004], CapForm["Butt"], 
         StyleBox[{{
            LineBox[{{{-0.5000000000000004, -0.8660254037844385}, 
               Scaled[{0.030000000000000072`, 
                0.05569219381653051}, {-0.5000000000000004, \
-0.8660254037844385}]}, {{-1., 1.2246467991473532`*^-16}, 
               Scaled[{0.06, 0.}, {-1., 
                1.2246467991473532`*^-16}]}, {{-0.4999999999999998, 
               0.8660254037844387}, 
               Scaled[{
                0.029999999999999992`, -0.055692193816530566`}, \
{-0.4999999999999998, 0.8660254037844387}]}, {{0.5000000000000003, 
               0.8660254037844385}, 
               Scaled[{-0.03000000000000002, -0.05569219381653053}, {
                0.5000000000000003, 0.8660254037844385}]}, {{1., 0.}, 
               Scaled[{-0.06, 0.}, {1., 0.}]}, {{
               0.5000000000000003, -0.8660254037844385}, 
               Scaled[{-0.030000000000000006`, 0.05569219381653054}, {
                0.5000000000000003, -0.8660254037844385}]}}], 
            LineBox[{{{-0.7071067811865479, -0.7071067811865471}, 
               Scaled[{0.028284271247461915`, 
                0.03031499055704094}, {-0.7071067811865479, \
-0.7071067811865471}]}, {{-0.8660254037844388, -0.4999999999999997}, 
               Scaled[{0.03464101615137756, 
                0.021435935394489788`}, {-0.8660254037844388, \
-0.4999999999999997}]}, {{-0.9659258262890684, -0.25881904510252035`}, 
               Scaled[{0.038637033051562734`, 
                0.011096056659362344`}, {-0.9659258262890684, \
-0.25881904510252035`}]}, {{-0.9659258262890682, 0.258819045102521}, 
               Scaled[{
                0.03863703305156273, -0.011096056659362374`}, \
{-0.9659258262890682, 0.258819045102521}]}, {{-0.8660254037844385, 
               0.5000000000000003}, 
               Scaled[{
                0.03464101615137754, -0.02143593539448983}, \
{-0.8660254037844385, 0.5000000000000003}]}, {{-0.7071067811865475, 
               0.7071067811865476}, 
               Scaled[{
                0.028284271247461898`, -0.030314990557040962`}, \
{-0.7071067811865475, 0.7071067811865476}]}, {{-0.2588190451025204, 
               0.9659258262890684}, 
               Scaled[{
                0.010352761804100816`, -0.041411047216403325`}, \
{-0.2588190451025204, 0.9659258262890684}]}, {{6.123233995736766*^-17, 1.}, 
               Scaled[{0., -0.04287187078897963}, {6.123233995736766*^-17, 
                1.}]}, {{0.25881904510252096`, 0.9659258262890682}, 
               Scaled[{-0.010352761804100838`, -0.04141104721640332}, {
                0.25881904510252096`, 0.9659258262890682}]}, {{
               0.7071067811865476, 0.7071067811865476}, 
               Scaled[{-0.028284271247461905`, -0.030314990557040962`}, {
                0.7071067811865476, 0.7071067811865476}]}, {{
               0.8660254037844387, 0.49999999999999983`}, 
               Scaled[{-0.034641016151377546`, -0.02143593539448981}, {
                0.8660254037844387, 0.49999999999999983`}]}, {{
               0.9659258262890683, 0.25881904510252046`}, 
               Scaled[{-0.038637033051562734`, -0.01109605665936235}, {
                0.9659258262890683, 0.25881904510252046`}]}, {{
               0.9659258262890683, -0.25881904510252046`}, 
               Scaled[{-0.038637033051562734`, 0.011096056659362358`}, {
                0.9659258262890683, -0.25881904510252046`}]}, {{
               0.8660254037844385, -0.5000000000000002}, 
               Scaled[{-0.03464101615137754, 0.021435935394489836`}, {
                0.8660254037844385, -0.5000000000000002}]}, {{
               0.7071067811865476, -0.7071067811865476}, 
               Scaled[{-0.028284271247461894`, 0.030314990557040965`}, {
                0.7071067811865476, -0.7071067811865476}]}}]}, 
           {GrayLevel[0.25], 
            
            StyleBox[{{{
                InsetBox["0", Offset[{1.5000000000000036, 2.5980762113533142},
                  Scaled[{0.030000000000000072, 0.05569219381653051}, \
{-0.5000000000000004, -0.8660254037844385}]], {-0.5773502691896275, -1.}, 
                 Automatic, {1, 0}], 
                InsetBox["20", Offset[{3., 0.}, 
                 Scaled[{0.06, 0.}, {-1., 1.2246467991473532*^-16}]], {-1, 0.},
                  Automatic, {1, 0}], 
                InsetBox["40", Offset[{1.4999999999999996, -2.598076211353317},
                  Scaled[{0.029999999999999992, -0.055692193816530566}, \
{-0.4999999999999998, 0.8660254037844387}]], {-0.5773502691896255, 1.}, 
                 Automatic, {1, 0}], 
                InsetBox["60", Offset[{-1.5000000000000009, -2.5980762113533156},
                  Scaled[{-0.03000000000000002, -0.05569219381653053}, \
{0.5000000000000003, 0.8660254037844385}]], {0.5773502691896262, 1.}, 
                 Automatic, {1, 0}], 
                InsetBox["80", Offset[{-3., 0.}, 
                 Scaled[{-0.06, 0.}, {1., 0.}]], {1, 0.}, Automatic, {1, 0}], 
                InsetBox["100", Offset[{-1.5000000000000004, 2.598076211353316},
                  Scaled[{-0.030000000000000006, 0.05569219381653054}, \
{0.5000000000000003, -0.8660254037844385}]], {0.577350269189626, -1.}, 
                 Automatic, {1, 
                 0}]}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}}}, {}},
             StripOnInput->False,
             FontFamily->"Helvetica",
             FontSize->Scaled[0.07]]}},
          StripOnInput->False,
          Antialiasing->True]}}, {}, {}, 
       GeometricTransformationBox[GeometricTransformationBox[
         TagBox[
          TooltipBox[{
            {RGBColor[0.73, 0.24506099999999992`, 0.1971], 
             PolygonBox[{{0., -0.054700000000000006`}, {1, -0.025}, {
               1, 0.025}, {0., 0.054700000000000006`}}]}, 
            {RGBColor[0.73, 0.24506099999999992`, 0.1971], 
             DiskBox[{0, 0}, 0.07]}, 
            {GrayLevel[1], DiskBox[{0, 0}, 0.035]}},
           "87"],
          Annotation[#, 87, "Tooltip"]& ], {{{0.8402223838474815, 
          0.3225311545907705}, {-0.3225311545907705, 0.8402223838474815}}, {
          0., 0.}}], {{{1, 0}, {0, 1}}, Center}], {}},
      AlignmentPoint->Center,
      AspectRatio->Automatic,
      Axes->False,
      AxesLabel->None,
      AxesOrigin->Automatic,
      AxesStyle->{},
      Background->None,
      BaseStyle->{},
      BaselinePosition->Automatic,
      ColorOutput->Automatic,
      ContentSelectable->Automatic,
      CoordinatesToolOptions:>Automatic,
      DisplayFunction->Identity,
      Epilog->{},
      FormatType->TraditionalForm,
      Frame->False,
      FrameLabel->None,
      FrameStyle->{},
      FrameTicks->Automatic,
      FrameTicksStyle->{},
      GridLines->None,
      GridLinesStyle->{},
      ImageMargins->0.,
      ImagePadding->All,
      ImageSize->Small,
      ImageSizeRaw->Automatic,
      LabelStyle->Directive[
        GrayLevel[0.25], FontSize -> Scaled[0.07], FontFamily -> "Helvetica"],
      Method->Automatic,
      PlotLabel->None,
      PlotRange->All,
      PlotRangeClipping->False,
      PlotRangePadding->Automatic,
      PlotRegion->Automatic,
      PreserveImageOptions->Automatic,
      Prolog->{},
      RotateLabel->True,
      Ticks->Automatic,
      TicksStyle->{}]},
    {
     GraphicsBox[{{{}, {{{}, {}, 
          {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
           0.009166666666666668], AbsoluteThickness[1.6], 
           LineBox[CompressedData["
1:eJx91ntIU2EUAPDrEBMVM5G01NGUVDJfpPkI3dnUq1tLy0fYtDVN94ekluEr
KhcWZVBCFgk9zMdaSNiwEBtkZhGKTijnq1EyJkqlsYiiNKRv/tU/51y4XH7w
cc93z/nu9x1RSVVOmYDjuHF2O552fRBfIFyWcBtXAqybZ3EP5cPdN9HHUHO7
wXfuF+Fs0GhUxai1maAs3VyJez8YZQvXUXNJ8GB7lRG3AsY6GpyUmLXpbD5C
Z9ScHxu/xQV3PmSVXNyEOwwE4U/ccfMw0+XhT7moZSKAsvVMtBC3DGpa/cIo
r5tvRlDm+5ciKZ9K3huDWitj9SjcQ3mqXhaLmpPDwzsecai1cuhMn5ZSFoTH
85TnJmwyyt5NrgrKffeijlNuq7xRRllZajtNued7SA3l1z/TalHDQbj01akO
9VAOhMb8rUfN5cHkgV3dqDfyfV9H2eXCTj1qFi9nQP4INRcL74LEL1Gz91Us
NQ1RdptJHcZ9iNWrcRS3HKRq0xhlQ/XILOVWP8UHysrSNQtqLg2ejVR/wp3F
6r08jzsPbDp3O2oWr/+HyK2QsGfEeXfKLcMfPSjPZzd74uZhsP29N2ouke1H
y764I1k++EDULJ5d/2UHZZVRF0w5NEYdgprNx65/G4qaree6QXEeanbenhO/
yMftCpnWYcISth/OFlCO6Ht1hLJUrSvC7QPiuB7CMnZeVlegZvvNgNBkQM3y
WdNqfkrZP2rlOWWbzpJahJqHQOUCbs4Lgi0rabhd2XmwhlsrAcufrbFHUTv+
l/I4ynz/ZBJqFk+qthJOYd8zvg+3K4zWThNOYf3CiWTcPtAsOUlYBg2fe6+o
UCew9e57lbJGs3oLNVsvIkNQG+XeDBNuVs/GcjNu1u/FN1vj6zCzfIkMi4Sl
bLwpEbcPLK1N4dYq2HyLkyjPTQQvouYCYJtzCOFc+HY2Y6ADNQe/c9tXcSc4
+u3VTtRe4FXgJOgiHH5ZgFvr6GdVj1Gzel67bTzc/Z//ARzgftY=
            "]]}}, 
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6]}, {
          {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
           0.009166666666666668], AbsoluteThickness[1.6]}, {}}, {
          {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
           0.009166666666666668], AbsoluteThickness[
           1.6]}, {}}}, {{}, {}}}, {{}, {
         {Opacity[0], PointBox[CompressedData["
1:eJxV1GtIk1EYB/DXISYqZhJpeaEpqWTeSPOG7WzqdLa0vIDNuabpPkhqGTqV
yoVF2YeELBC6mNpaSNiwEBMyswjFNijnZY2SMVEqjUUUpSEd+/Cev4OX8eN5
nvM+z9nZEZbX5lcKOI7T0Gfj22kIkRYHL4u5/58ksm6ZYx4tIrdfxx5n8X3E
z/oLnEc0GlUZb102UVRsrWE+RIZlC9dYfgq5t6t2mFlOJrubXBR8fiZdL9iV
N+dP49vcmItIbvnFLcwRRBD52JNZSmZ7vQLQynZzINreHBvMLCP1Hf4R6HXL
jSi0dHApGn067UAc61dG5ynZj55ulMWz/Bzy4JZXAovnkJ7MGQlaEJkoRVvN
Dhnat9Vdjh64E3MC3VlzvRKtqHCcQfd9D6tHv/qZ0cCbHCGXvrpoeY/mk/C4
v42s/0IydXjv/c3939Wj3S7sMWB9/lDOQ1YfT96FiF5gfvVS6yjaYzZ9jPko
na9lAuMStWkSbawbn0N3+Ms/bJ5/zcben0Gejtd9Ys6l8y/P43wOvacT6wd/
CD1KwN5R5z3R7WMfvdDzeW3ezFIy0vXelzeXTM/Tsh9zNO1HGoT1TsOX3WjV
sD4UHR6nDsP1nIY34SWw39oRUSGLJ5FzoudFzO4k2z4GFtPzOFeMjhp4eQwt
UeuVzNuJKKEPLKP/z7pq3vT8DAWbjNhvfYflCTogZuUZ2qG3pSthv4IUC8yc
Dwm1rWQooX+reY1ZJya2PzviSzf9PlUJaOngVEop1EvUdvBB+r63qRifaJhJ
xbi9+WRaKczfJj4FlpGmz/1XVLDf2hG/q2iNZvWmCvZHaAzpRPdnmZjpvC1V
FmZ6/yW22RO10J/QuAiW0LgpWQv9La1NM+vkdP2yFLTVHLrI8gPJTtcwcAH5
djZrqJs3R34XdK12wzz0/l7tgX59il0EveDIywJm3cZ9q3rUC/P+A/H5v/o=

           "]]}, {
          {Opacity[0]}, {}}, {
          {Opacity[0]}, {}}}, {{}, {{}, {}}}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{False, False},
      AxesLabel->{None, None},
      AxesOrigin->{3.774005809083*^9, 0},
      DisplayFunction->Identity,
      Frame->{{True, True}, {True, True}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->FrontEndValueCache[{{Automatic, Automatic}, {
          Charting`DateTicksFunction[
          Automatic, Ticks -> Automatic, DateTicksFormat -> {Automatic}], 
          Charting`ScaledFrameTicks[
           Charting`DateTicksFunction[
           Automatic, Ticks -> Automatic, "TickLabels" -> None, 
            DateTicksFormat -> {Automatic}][
            SlotSequence[1]], {Identity, Identity}]& }}, {{
         Automatic, Automatic}, {{{3.7740024*^9, 
            FormBox[
             TagBox[
              GridBox[{{
                 StyleBox["\"14:00\"", 
                  Directive[], {}, StripOnInput -> False]}}, 
               GridBoxAlignment -> {"Columns" -> {{Center}}}, 
               DefaultBaseStyle -> "Column", 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
              "Column"], TraditionalForm], {0.013888888888888888`, 0.}, 
            Directive[]}, {3.7740096*^9, 
            FormBox[
             TagBox[
              GridBox[{{
                 StyleBox["\"16:00\"", 
                  Directive[], {}, StripOnInput -> False]}}, 
               GridBoxAlignment -> {"Columns" -> {{Center}}}, 
               DefaultBaseStyle -> "Column", 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
              "Column"], TraditionalForm], {0.013888888888888888`, 0.}, 
            Directive[]}, {3.7740168*^9, 
            FormBox[
             TagBox[
              GridBox[{{
                 StyleBox["\"18:00\"", 
                  Directive[], {}, StripOnInput -> False]}}, 
               GridBoxAlignment -> {"Columns" -> {{Center}}}, 
               DefaultBaseStyle -> "Column", 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
              "Column"], TraditionalForm], {0.013888888888888888`, 0.}, 
            Directive[]}, {3.774024*^9, 
            FormBox[
             TagBox[
              GridBox[{{
                 StyleBox["\"20:00\"", 
                  Directive[], {}, StripOnInput -> False]}}, 
               GridBoxAlignment -> {"Columns" -> {{Center}}}, 
               DefaultBaseStyle -> "Column", 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
              "Column"], TraditionalForm], {0.013888888888888888`, 0.}, 
            Directive[]}, {3.7740312*^9, 
            FormBox[
             TagBox[
              GridBox[{{
                 StyleBox["\"22:00\"", 
                  Directive[], {}, StripOnInput -> False]}}, 
               GridBoxAlignment -> {"Columns" -> {{Center}}}, 
               DefaultBaseStyle -> "Column", 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
              "Column"], TraditionalForm], {0.013888888888888888`, 0.}, 
            Directive[]}}, {{3.7740024*^9, 
            FormBox[
             TagBox[
              GridBox[{{
                 StyleBox[
                  TemplateBox[{0., 0.}, "Spacer2"], 
                  Directive[], {}, StripOnInput -> False]}}, 
               GridBoxAlignment -> {"Columns" -> {{Center}}}, 
               DefaultBaseStyle -> "Column", 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
              "Column"], TraditionalForm], {0.013888888888888888`, 0.}, 
            Directive[]}, {3.7740096*^9, 
            FormBox[
             TagBox[
              GridBox[{{
                 StyleBox[
                  TemplateBox[{0., 0.}, "Spacer2"], 
                  Directive[], {}, StripOnInput -> False]}}, 
               GridBoxAlignment -> {"Columns" -> {{Center}}}, 
               DefaultBaseStyle -> "Column", 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
              "Column"], TraditionalForm], {0.013888888888888888`, 0.}, 
            Directive[]}, {3.7740168*^9, 
            FormBox[
             TagBox[
              GridBox[{{
                 StyleBox[
                  TemplateBox[{0., 0.}, "Spacer2"], 
                  Directive[], {}, StripOnInput -> False]}}, 
               GridBoxAlignment -> {"Columns" -> {{Center}}}, 
               DefaultBaseStyle -> "Column", 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
              "Column"], TraditionalForm], {0.013888888888888888`, 0.}, 
            Directive[]}, {3.774024*^9, 
            FormBox[
             TagBox[
              GridBox[{{
                 StyleBox[
                  TemplateBox[{0., 0.}, "Spacer2"], 
                  Directive[], {}, StripOnInput -> False]}}, 
               GridBoxAlignment -> {"Columns" -> {{Center}}}, 
               DefaultBaseStyle -> "Column", 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
              "Column"], TraditionalForm], {0.013888888888888888`, 0.}, 
            Directive[]}, {3.7740312*^9, 
            FormBox[
             TagBox[
              GridBox[{{
                 StyleBox[
                  TemplateBox[{0., 0.}, "Spacer2"], 
                  Directive[], {}, StripOnInput -> False]}}, 
               GridBoxAlignment -> {"Columns" -> {{Center}}}, 
               DefaultBaseStyle -> "Column", 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
              "Column"], TraditionalForm], {0.013888888888888888`, 0.}, 
            Directive[]}}}}],
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      Method->{
       "NoShowPlotTheme" -> Automatic, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& )}},
      PlotRange->{{3.774005809083*^9, 3.7740320229934998`*^9}, {0, 87.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.02], 
         Scaled[0.08090169943749476]}},
      Ticks->{{}, Automatic}]}
   },
   DefaultBaseStyle->"Column",
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Column"]], "Output",
 CellChangeTimes->{3.77418778580891*^9},
 CellLabel->
  "Out[668]=",ExpressionUUID->"6d3fa00d-2261-4c6e-95e9-3f255549260f"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Mocking up...", "Subsubsection",
 CellChangeTimes->{{3.774188048060123*^9, 
  3.7741880516810837`*^9}},ExpressionUUID->"5ed54710-577f-4046-9914-\
8467bd4666dc"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Grid", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{"ag", ",", "readingsDS", ",", "dlsp"}], "}"}], "}"}], ",", 
   RowBox[{"Frame", "\[Rule]", "All"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7741878318799644`*^9, 3.7741878400110016`*^9}},
 CellLabel->
  "In[670]:=",ExpressionUUID->"e37ca69b-521f-4da7-a8c7-c330df07eb74"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     GraphicsBox[{
       {GrayLevel[1], EdgeForm[None], FilledCurveBox[{Line[CompressedData["
1:eJxd1V1I02EUx/EtrC56o4xCsWykhiCRWWImncywF1wTixokKYbIkmgrbxzJ
oiKvrLQWxAoiltnLCiU1QzxgTaMpvkS1icl05TZ1+yNlGMXK6Py66IHDuTs3
H/g+mpJTBaXzVCpV6dz82X+flx/m6QPmlkn+Oj8/zl8xzBtHbM2PHkxxpeZO
ytJeNye0hZP8lhBfTY1vTFr8jmPXJbsOZYQ5ZG4y/9g6wPnRdm3mYJhn9Lse
e2694XMq8+afeQpX1KzK8TR18tOs22fWNih8MubCzmB5MzfUJUZ2+xR+viKi
Dpus3K49vGxLROGpL9VdbcZ7FOeMGPtnFS4/kmUr7nxBXWWz1+PfKrw6Umt3
6J1kPF9/ZU/N3L3WWuVmZi/FHqiavrxB4SWF7gyLZZCmE1sthXfDXKb2adS6
92SctPSkR0LcH7tA833hEFktv5683B5ia1qvwV7/kZyOHlv30SmOrvxW7Ljm
pVd9ppGEokn2DNTF7MsZo2NNrmdDuRO8PrBXZ/L6qLo1WRu1MsjuRWM3Lho+
U2dHWsOHbj+fWL6mb2Z4nAyjLUX24+N8NjvQqN0WoHST9eBg4BOnlFzSpVQF
Kff1ph1evY87XPGn99+foKjs9tSS5lE4EFzEgeAiDgQXcSC4iAPBRRwILuJA
cBEHgos4EFzEgeAiDgQXcSC4iAPBRRwILuJAcBEHgos4EFzEgeAiDgQXcSC4
iAPBRRwILuJAcBEHgos4EFzEgeAiDgQXcSC4iAPBRRwILuJAcBEHgos4EFzE
geAiDv9cxIHhIg4MF3FguIgDw0UcGC7iwHARB4aLODBcxIHhIg4MF3FguIgD
w0UcGC7iwHARB4YLOgUXdAou6BRc0Cm4oFNwQafggk7BBZ2CCzoFF3QKLugU
XNApuKBTcEGn4IJOwQWdggs6BRd0Ci7oFFzQKbigU3BBp+CCTsEFnYILOgWX
//+P34UFays=
           "]]}]}, GraphicsGroupBox[
        {GrayLevel[0.8], EdgeForm[{GrayLevel[0.6], Thickness[0.01]}], 
         FilledCurveBox[{{Line[CompressedData["
1:eJxd1V1I02EUx/EtrC56o4xCsWykhiCRWWImncywF1wTixokKYbIkmgrbxzJ
oiKvrLQWxAoiltnLCiU1QzxgTaMpvkS1icl05TZ1+yNlGMXK6Py66IHDuTs3
H/g+mpJTBaXzVCpV6dz82X+flx/m6QPmlkn+Oj8/zl8xzBtHbM2PHkxxpeZO
ytJeNye0hZP8lhBfTY1vTFr8jmPXJbsOZYQ5ZG4y/9g6wPnRdm3mYJhn9Lse
e2694XMq8+afeQpX1KzK8TR18tOs22fWNih8MubCzmB5MzfUJUZ2+xR+viKi
Dpus3K49vGxLROGpL9VdbcZ7FOeMGPtnFS4/kmUr7nxBXWWz1+PfKrw6Umt3
6J1kPF9/ZU/N3L3WWuVmZi/FHqiavrxB4SWF7gyLZZCmE1sthXfDXKb2adS6
92SctPSkR0LcH7tA833hEFktv5683B5ia1qvwV7/kZyOHlv30SmOrvxW7Ljm
pVd9ppGEokn2DNTF7MsZo2NNrmdDuRO8PrBXZ/L6qLo1WRu1MsjuRWM3Lho+
U2dHWsOHbj+fWL6mb2Z4nAyjLUX24+N8NjvQqN0WoHST9eBg4BOnlFzSpVQF
Kff1ph1evY87XPGn99+foKjs9tSS5lE4EFzEgeAiDgQXcSC4iAPBRRwILuJA
cBEHgos4EFzEgeAiDgQXcSC4iAPBRRwILuJAcBEHgos4EFzEgeAiDgQXcSC4
iAPBRRwILuJAcBEHgos4EFzEgeAiDgQXcSC4iAPBRRwILuJAcBEHgos4EFzE
geAiDv9cxIHhIg4MF3FguIgDw0UcGC7iwHARB4aLODBcxIHhIg4MF3FguIgD
w0UcGC7iwHARB4YLOgUXdAou6BRc0Cm4oFNwQafggk7BBZ2CCzoFF3QKLugU
XNApuKBTcEGn4IJOwQWdggs6BRd0Ci7oFFzQKbigU3BBp+CCTsEFnYILOgWX
//+P34UFays=
             "]]}, {Line[CompressedData["
1:eJyF1V1I02EUx/EpoxfEAkOSwsqQhGFemCAGdgTT6EbQihQkwbfI3tAi8UIv
mk5XYpmVNyVpUmkvWIlMnR0MUckwNE1xS12r2drc/z+ziErK8Px24U0XD4dz
ca4+8H3Css+m5flrNJrjy+/f3F7hSjVts/Hi3a6lzffnefXefaOsdrJomm8/
sPWlPPSw9edWKjVOcWLTswTjVYX1xvjMtIp3PGJrcys6lc8fGX6SXzDKkVEN
9UmlKq/VR3/lktc8djGgaOGFynme8Pp5vz4eu/I0rF1RuSu5Wh10dfCgY0du
xkYvz8RmVcct3OSgMkPCy1Avm3JyehT1Hu30/oiY3eJla/CpY3ONZsq07NZ2
rPFyfnfl45iJfkoprIpJt6mcEd2zKzv5DRWnlpe4W1UeSHx/6NertxSeXjvc
kqPy5RDH4f7pCYr/Y4ieDFD5liey8tyUhXpHh3vuHFB4dp/d9Ltzhup0xdbv
Rz2s1yVtMpttFHS93958cJ4bNhhiay7ZKWR9ldId6uZG/5o9Tfs/kfZbs+bk
+Bfu3euXG+d00LhOO7RU6OShqEBL64XPtC64IN+yOMd6vSkwz+Ukbfsje3mW
g9syrp1QklzL9y0Ddc8/MoVHjLjK3VR5xnjatPABDgQXcSC4iAPBRRwILuJA
cBEH8rmsOBBcxIHgIg4EF3EguIgDwUUcCC7iQHARB4KLOBBcxIHgIg4EF3Eg
uIgDwUUcCC7iQHARB4KLOJDPZcWB4CIOBBdxILiIA8FFHAgu4kBwEQeCizgQ
XMSB4CIOBBdxILiIg89FHBgu4sBwEQeGizgwXMSB4SIODBdxYLiIA8NFHBgu
4sBwEQeGizgwXMSB4SIODBdxYLis6hYc0C04oFtwQLfggG7BgX0u0im4oFNw
Qafggk7BBZ2CCzoFF3QKLugUXNApuKBTcEGn4IJOwQWdggs6BRd0Ci7oFFzQ
KZ+LdAou6BRc/vef/AWs0Kog
             "]]}}]}], {}, 
       {GrayLevel[0.5], Thickness[0.008], 
        {GrayLevel[0.5], Thickness[0.004], CapForm["Butt"], 
         StyleBox[{{
            LineBox[{{{-0.5000000000000004, -0.8660254037844385}, 
               Scaled[{0.030000000000000072`, 
                0.05569219381653051}, {-0.5000000000000004, \
-0.8660254037844385}]}, {{-1., 1.2246467991473532`*^-16}, 
               Scaled[{0.06, 0.}, {-1., 
                1.2246467991473532`*^-16}]}, {{-0.4999999999999998, 
               0.8660254037844387}, 
               Scaled[{
                0.029999999999999992`, -0.055692193816530566`}, \
{-0.4999999999999998, 0.8660254037844387}]}, {{0.5000000000000003, 
               0.8660254037844385}, 
               Scaled[{-0.03000000000000002, -0.05569219381653053}, {
                0.5000000000000003, 0.8660254037844385}]}, {{1., 0.}, 
               Scaled[{-0.06, 0.}, {1., 0.}]}, {{
               0.5000000000000003, -0.8660254037844385}, 
               Scaled[{-0.030000000000000006`, 0.05569219381653054}, {
                0.5000000000000003, -0.8660254037844385}]}}], 
            LineBox[{{{-0.7071067811865479, -0.7071067811865471}, 
               Scaled[{0.028284271247461915`, 
                0.03031499055704094}, {-0.7071067811865479, \
-0.7071067811865471}]}, {{-0.8660254037844388, -0.4999999999999997}, 
               Scaled[{0.03464101615137756, 
                0.021435935394489788`}, {-0.8660254037844388, \
-0.4999999999999997}]}, {{-0.9659258262890684, -0.25881904510252035`}, 
               Scaled[{0.038637033051562734`, 
                0.011096056659362344`}, {-0.9659258262890684, \
-0.25881904510252035`}]}, {{-0.9659258262890682, 0.258819045102521}, 
               Scaled[{
                0.03863703305156273, -0.011096056659362374`}, \
{-0.9659258262890682, 0.258819045102521}]}, {{-0.8660254037844385, 
               0.5000000000000003}, 
               Scaled[{
                0.03464101615137754, -0.02143593539448983}, \
{-0.8660254037844385, 0.5000000000000003}]}, {{-0.7071067811865475, 
               0.7071067811865476}, 
               Scaled[{
                0.028284271247461898`, -0.030314990557040962`}, \
{-0.7071067811865475, 0.7071067811865476}]}, {{-0.2588190451025204, 
               0.9659258262890684}, 
               Scaled[{
                0.010352761804100816`, -0.041411047216403325`}, \
{-0.2588190451025204, 0.9659258262890684}]}, {{6.123233995736766*^-17, 1.}, 
               Scaled[{0., -0.04287187078897963}, {6.123233995736766*^-17, 
                1.}]}, {{0.25881904510252096`, 0.9659258262890682}, 
               Scaled[{-0.010352761804100838`, -0.04141104721640332}, {
                0.25881904510252096`, 0.9659258262890682}]}, {{
               0.7071067811865476, 0.7071067811865476}, 
               Scaled[{-0.028284271247461905`, -0.030314990557040962`}, {
                0.7071067811865476, 0.7071067811865476}]}, {{
               0.8660254037844387, 0.49999999999999983`}, 
               Scaled[{-0.034641016151377546`, -0.02143593539448981}, {
                0.8660254037844387, 0.49999999999999983`}]}, {{
               0.9659258262890683, 0.25881904510252046`}, 
               Scaled[{-0.038637033051562734`, -0.01109605665936235}, {
                0.9659258262890683, 0.25881904510252046`}]}, {{
               0.9659258262890683, -0.25881904510252046`}, 
               Scaled[{-0.038637033051562734`, 0.011096056659362358`}, {
                0.9659258262890683, -0.25881904510252046`}]}, {{
               0.8660254037844385, -0.5000000000000002}, 
               Scaled[{-0.03464101615137754, 0.021435935394489836`}, {
                0.8660254037844385, -0.5000000000000002}]}, {{
               0.7071067811865476, -0.7071067811865476}, 
               Scaled[{-0.028284271247461894`, 0.030314990557040965`}, {
                0.7071067811865476, -0.7071067811865476}]}}]}, 
           {GrayLevel[0.25], 
            
            StyleBox[{{{
                InsetBox["0", Offset[{1.5000000000000036, 2.5980762113533142},
                  Scaled[{0.030000000000000072, 0.05569219381653051}, \
{-0.5000000000000004, -0.8660254037844385}]], {-0.5773502691896275, -1.}, 
                 Automatic, {1, 0}], 
                InsetBox["20", Offset[{3., 0.}, 
                 Scaled[{0.06, 0.}, {-1., 1.2246467991473532*^-16}]], {-1, 0.},
                  Automatic, {1, 0}], 
                InsetBox["40", Offset[{1.4999999999999996, -2.598076211353317},
                  Scaled[{0.029999999999999992, -0.055692193816530566}, \
{-0.4999999999999998, 0.8660254037844387}]], {-0.5773502691896255, 1.}, 
                 Automatic, {1, 0}], 
                InsetBox["60", Offset[{-1.5000000000000009, -2.5980762113533156},
                  Scaled[{-0.03000000000000002, -0.05569219381653053}, \
{0.5000000000000003, 0.8660254037844385}]], {0.5773502691896262, 1.}, 
                 Automatic, {1, 0}], 
                InsetBox["80", Offset[{-3., 0.}, 
                 Scaled[{-0.06, 0.}, {1., 0.}]], {1, 0.}, Automatic, {1, 0}], 
                InsetBox["100", Offset[{-1.5000000000000004, 2.598076211353316},
                  Scaled[{-0.030000000000000006, 0.05569219381653054}, \
{0.5000000000000003, -0.8660254037844385}]], {0.577350269189626, -1.}, 
                 Automatic, {1, 
                 0}]}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}}}, {}},
             StripOnInput->False,
             FontFamily->"Helvetica",
             FontSize->Scaled[0.07]]}},
          StripOnInput->False,
          Antialiasing->True]}}, {}, {}, 
       GeometricTransformationBox[GeometricTransformationBox[
         TagBox[
          TooltipBox[{
            {RGBColor[0.73, 0.24506099999999992`, 0.1971], 
             PolygonBox[{{0., -0.054700000000000006`}, {1, -0.025}, {
               1, 0.025}, {0., 0.054700000000000006`}}]}, 
            {RGBColor[0.73, 0.24506099999999992`, 0.1971], 
             DiskBox[{0, 0}, 0.07]}, 
            {GrayLevel[1], DiskBox[{0, 0}, 0.035]}},
           "87"],
          Annotation[#, 87, "Tooltip"]& ], {{{0.8402223838474815, 
          0.3225311545907705}, {-0.3225311545907705, 0.8402223838474815}}, {
          0., 0.}}], {{{1, 0}, {0, 1}}, Center}], {}},
      AlignmentPoint->Center,
      AspectRatio->Automatic,
      Axes->False,
      AxesLabel->None,
      AxesOrigin->Automatic,
      AxesStyle->{},
      Background->None,
      BaseStyle->{},
      BaselinePosition->Automatic,
      ColorOutput->Automatic,
      ContentSelectable->Automatic,
      CoordinatesToolOptions:>Automatic,
      DisplayFunction->Identity,
      Epilog->{},
      FormatType->TraditionalForm,
      Frame->False,
      FrameLabel->None,
      FrameStyle->{},
      FrameTicks->Automatic,
      FrameTicksStyle->{},
      GridLines->None,
      GridLinesStyle->{},
      ImageMargins->0.,
      ImagePadding->All,
      ImageSize->Small,
      ImageSizeRaw->Automatic,
      LabelStyle->Directive[
        GrayLevel[0.25], FontSize -> Scaled[0.07], FontFamily -> "Helvetica"],
      Method->Automatic,
      PlotLabel->None,
      PlotRange->All,
      PlotRangeClipping->False,
      PlotRangePadding->Automatic,
      PlotRegion->Automatic,
      PreserveImageOptions->Automatic,
      Prolog->{},
      RotateLabel->True,
      Ticks->Automatic,
      TicksStyle->{}], 
     TemplateBox[{TagBox[
        DynamicModuleBox[{
         TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
          Data`UnorderedAssociation[
           "RowCount" -> 20, "Length" -> 102, "InitialType" -> 
            TypeSystem`Vector[
              TypeSystem`Struct[{"reading", "Timestamp"}, {
                TypeSystem`Atom[Integer], 
                TypeSystem`Atom[DateObject]}], 102], "Shape" -> 
            TypeSystem`PackageScope`HeaderShape[
              Association[{All, "reading"} -> 1, {All, "Timestamp"} -> 1], 
              TypeSystem`PackageScope`Limited[
               TypeSystem`PackageScope`ColumnShape[
                TypeSystem`PackageScope`RowShape[
                 Association[
                 "reading" -> TypeSystem`PackageScope`AtomShape[34], 
                  "Timestamp" -> TypeSystem`PackageScope`AtomShape[75]]]], 
               20, {}]], "InitialData" -> 
            TypeSystem`PackageScope`CacheHandle[1708382749], "Type" -> 
            TypeSystem`Vector[
              TypeSystem`Struct[{"reading", "Timestamp"}, {
                TypeSystem`Atom[Integer], 
                TypeSystem`Atom[DateObject]}], 102], "HandleQ" -> True, 
            "RowTarget" -> 20, "Data" -> 
            TypeSystem`PackageScope`CacheHandle[1708382749]], 
          TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
          TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 1, 
          TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
          DynamicModule[{
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
               Style[
                Grid[{{
                   Item[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"reading\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"reading\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1444115123][{All, "reading"}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1444115123][
                    GeneralUtilities`Slice[All, "reading"]], "Mouse"], 
                    Background -> GrayLevel[0.95], 
                    Alignment -> {Left, Baseline}], 
                   Item[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Timestamp\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Timestamp\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1444115123][{All, "Timestamp"}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1444115123][
                    GeneralUtilities`Slice[All, "Timestamp"]], "Mouse"], 
                    Background -> GrayLevel[0.95], 
                    Alignment -> {Left, Baseline}]}, {
                   Pane[
                    Annotation[
                    RawBoxes["87"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1444115123][
                    GeneralUtilities`Slice[1, 
                    Key["reading"]]], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                   Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    "\"Mon 5 Aug 2019 14:56:54\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1444115123][
                    GeneralUtilities`Slice[1, 
                    Key["Timestamp"]]], "Mouse"], 
                    ImageSize -> {{75, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}]}, {
                   Pane[
                    Annotation[
                    RawBoxes["84"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1444115123][
                    GeneralUtilities`Slice[2, 
                    Key["reading"]]], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                   Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    "\"Mon 5 Aug 2019 15:56:32\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1444115123][
                    GeneralUtilities`Slice[2, 
                    Key["Timestamp"]]], "Mouse"], 
                    ImageSize -> {{75, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}]}, {
                   Pane[
                    Annotation[
                    RawBoxes["80"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1444115123][
                    GeneralUtilities`Slice[3, 
                    Key["reading"]]], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                   Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    "\"Mon 5 Aug 2019 16:25:35\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1444115123][
                    GeneralUtilities`Slice[3, 
                    Key["Timestamp"]]], "Mouse"], 
                    ImageSize -> {{75, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}]}, {
                   Pane[
                    Annotation[
                    RawBoxes["80"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1444115123][
                    GeneralUtilities`Slice[4, 
                    Key["reading"]]], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                   Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    "\"Mon 5 Aug 2019 16:11:51\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1444115123][
                    GeneralUtilities`Slice[4, 
                    Key["Timestamp"]]], "Mouse"], 
                    ImageSize -> {{75, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}]}, {
                   Pane[
                    Annotation[
                    RawBoxes["76"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1444115123][
                    GeneralUtilities`Slice[5, 
                    Key["reading"]]], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                   Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    "\"Tue 6 Aug 2019 08:56:17\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1444115123][
                    GeneralUtilities`Slice[5, 
                    Key["Timestamp"]]], "Mouse"], 
                    ImageSize -> {{75, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}]}, {
                   Pane[
                    Annotation[
                    RawBoxes["75"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1444115123][
                    GeneralUtilities`Slice[6, 
                    Key["reading"]]], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                   Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    "\"Mon 5 Aug 2019 16:35:10\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1444115123][
                    GeneralUtilities`Slice[6, 
                    Key["Timestamp"]]], "Mouse"], 
                    ImageSize -> {{75, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}]}, {
                   Pane[
                    Annotation[
                    RawBoxes["75"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1444115123][
                    GeneralUtilities`Slice[7, 
                    Key["reading"]]], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                   Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    "\"Mon 5 Aug 2019 16:18:01\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1444115123][
                    GeneralUtilities`Slice[7, 
                    Key["Timestamp"]]], "Mouse"], 
                    ImageSize -> {{75, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}]}, {
                   Pane[
                    Annotation[
                    RawBoxes["75"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1444115123][
                    GeneralUtilities`Slice[8, 
                    Key["reading"]]], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                   Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    "\"Mon 5 Aug 2019 16:11:36\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1444115123][
                    GeneralUtilities`Slice[8, 
                    Key["Timestamp"]]], "Mouse"], 
                    ImageSize -> {{75, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}]}, {
                   Pane[
                    Annotation[
                    RawBoxes["70"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1444115123][
                    GeneralUtilities`Slice[9, 
                    Key["reading"]]], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                   Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    "\"Mon 5 Aug 2019 16:21:38\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1444115123][
                    GeneralUtilities`Slice[9, 
                    Key["Timestamp"]]], "Mouse"], 
                    ImageSize -> {{75, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}]}, {
                   Pane[
                    Annotation[
                    RawBoxes["65"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1444115123][
                    GeneralUtilities`Slice[10, 
                    Key["reading"]]], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                   Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    "\"Wed 7 Aug 2019 09:50:26\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1444115123][
                    GeneralUtilities`Slice[10, 
                    Key["Timestamp"]]], "Mouse"], 
                    ImageSize -> {{75, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}]}, {
                   Pane[
                    Annotation[
                    RawBoxes["65"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1444115123][
                    GeneralUtilities`Slice[11, 
                    Key["reading"]]], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                   Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    "\"Mon 5 Aug 2019 18:32:33\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1444115123][
                    GeneralUtilities`Slice[11, 
                    Key["Timestamp"]]], "Mouse"], 
                    ImageSize -> {{75, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}]}, {
                   Pane[
                    Annotation[
                    RawBoxes["65"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1444115123][
                    GeneralUtilities`Slice[12, 
                    Key["reading"]]], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                   Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    "\"Mon 5 Aug 2019 18:32:15\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1444115123][
                    GeneralUtilities`Slice[12, 
                    Key["Timestamp"]]], "Mouse"], 
                    ImageSize -> {{75, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}]}, {
                   Pane[
                    Annotation[
                    RawBoxes["65"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1444115123][
                    GeneralUtilities`Slice[13, 
                    Key["reading"]]], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                   Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    "\"Mon 5 Aug 2019 16:44:27\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1444115123][
                    GeneralUtilities`Slice[13, 
                    Key["Timestamp"]]], "Mouse"], 
                    ImageSize -> {{75, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}]}, {
                   Pane[
                    Annotation[
                    RawBoxes["65"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1444115123][
                    GeneralUtilities`Slice[14, 
                    Key["reading"]]], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                   Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    "\"Mon 5 Aug 2019 16:11:30\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1444115123][
                    GeneralUtilities`Slice[14, 
                    Key["Timestamp"]]], "Mouse"], 
                    ImageSize -> {{75, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}]}, {
                   Pane[
                    Annotation[
                    RawBoxes["62"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1444115123][
                    GeneralUtilities`Slice[15, 
                    Key["reading"]]], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                   Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    "\"Mon 5 Aug 2019 15:00:15\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1444115123][
                    GeneralUtilities`Slice[15, 
                    Key["Timestamp"]]], "Mouse"], 
                    ImageSize -> {{75, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}]}, {
                   Pane[
                    Annotation[
                    RawBoxes["60"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1444115123][
                    GeneralUtilities`Slice[16, 
                    Key["reading"]]], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                   Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    "\"Mon 5 Aug 2019 16:25:23\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1444115123][
                    GeneralUtilities`Slice[16, 
                    Key["Timestamp"]]], "Mouse"], 
                    ImageSize -> {{75, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}]}, {
                   Pane[
                    Annotation[
                    RawBoxes["57"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1444115123][
                    GeneralUtilities`Slice[17, 
                    Key["reading"]]], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                   Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    "\"Tue 6 Aug 2019 08:33:23\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1444115123][
                    GeneralUtilities`Slice[17, 
                    Key["Timestamp"]]], "Mouse"], 
                    ImageSize -> {{75, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}]}, {
                   Pane[
                    Annotation[
                    RawBoxes["57"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1444115123][
                    GeneralUtilities`Slice[18, 
                    Key["reading"]]], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                   Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    "\"Tue 6 Aug 2019 08:33:18\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1444115123][
                    GeneralUtilities`Slice[18, 
                    Key["Timestamp"]]], "Mouse"], 
                    ImageSize -> {{75, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}]}, {
                   Pane[
                    Annotation[
                    RawBoxes["56"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1444115123][
                    GeneralUtilities`Slice[19, 
                    Key["reading"]]], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                   Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    "\"Mon 5 Aug 2019 15:12:19\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1444115123][
                    GeneralUtilities`Slice[19, 
                    Key["Timestamp"]]], "Mouse"], 
                    ImageSize -> {{75, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}]}, {
                   Pane[
                    Annotation[
                    RawBoxes["55"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1444115123][
                    GeneralUtilities`Slice[20, 
                    Key["reading"]]], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                   Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    "\"Mon 5 Aug 2019 15:02:08\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1444115123][
                    GeneralUtilities`Slice[20, 
                    Key["Timestamp"]]], "Mouse"], 
                    ImageSize -> {{75, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}]}, {
                   Item[
                    Deploy[
                    Mouseover[
                    Row[{
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.5]]], 
                    GrayLevel[0.5], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{0.56, 
                    1.031}, {6.429, 1.031}, {6.429, 60.967}, {0.56, 
                    60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{6.192899999999999, 
                    30.980699999999995`}, {42.4399, 0.7526999999999973}, {
                    42.4399, 8.209699999999994}, {16.432899999999997`, 
                    30.982699999999994`}, {42.4119, 53.6547}, {42.4399, 
                    61.244699999999995`}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{0.56, 
                    1.031}, {6.429, 1.031}, {6.429, 60.967}, {0.56, 
                    60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{6.192899999999999, 
                    30.980699999999995`}, {42.4399, 0.7526999999999973}, {
                    42.4399, 8.209699999999994}, {16.432899999999997`, 
                    30.982699999999994`}, {42.4119, 53.6547}, {42.4399, 
                    61.244699999999995`}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ + 
                    102 (-20), {1, 102 - -20 + 1}])}], 
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.3]]], 
                    GrayLevel[0.3], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5499, 30.980699999999995`}, {
                    36.7969, 0.7526999999999973}, {36.7969, 
                    8.209699999999994}, {10.7899, 30.982699999999994`}, {
                    36.7689, 53.6547}, {36.7969, 61.244699999999995`}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5499, 30.980699999999995`}, {
                    36.7969, 0.7526999999999973}, {36.7969, 
                    8.209699999999994}, {10.7899, 30.982699999999994`}, {
                    36.7689, 53.6547}, {36.7969, 61.244699999999995`}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ - 20, {
                    1, 102 - -20 + 1}])}], 
                    Pane[
                    Row[{"showing ", 1, "\[Dash]", 20, " of ", 
                    Style[102, FontColor -> GrayLevel[0], FontWeight -> 
                    "Medium"]}, 
                    BaseStyle -> {
                    FontSize -> 8., FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]}], 150, ContentPadding -> False, 
                    Alignment -> {Center, Center}], 
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.3]]], 
                    GrayLevel[0.3], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5778000000000001, 
                    53.654399999999995`}, {26.5568, 30.982399999999995`}, {
                    0.5498000000000001, 8.209399999999995}, {
                    0.5498000000000001, 0.7523999999999944}, {
                    36.796800000000005`, 30.980399999999992`}, {
                    0.5498000000000001, 61.2454}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5778000000000001, 
                    53.654399999999995`}, {26.5568, 30.982399999999995`}, {
                    0.5498000000000001, 8.209399999999995}, {
                    0.5498000000000001, 0.7523999999999944}, {
                    36.796800000000005`, 30.980399999999992`}, {
                    0.5498000000000001, 61.2454}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ + 20, {
                    1, 102 - 20 + 1}])}], 
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.5]]], 
                    GrayLevel[0.5], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    36.571, 1.031}, {42.440999999999995`, 1.031}, {
                    42.440999999999995`, 60.967}, {36.571, 60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5598000000000001, 
                    53.788500000000006`}, {26.5668, 31.015500000000007`}, {
                    0.5878000000000001, 8.343500000000006}, {
                    0.5598000000000001, 0.7525000000000048}, {36.8068, 
                    31.017500000000005`}, {0.5598000000000001, 
                    61.24450000000001}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    36.571, 1.031}, {42.440999999999995`, 1.031}, {
                    42.440999999999995`, 60.967}, {36.571, 60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5598000000000001, 
                    53.788500000000006`}, {26.5668, 31.015500000000007`}, {
                    0.5878000000000001, 8.343500000000006}, {
                    0.5598000000000001, 0.7525000000000048}, {36.8068, 
                    31.017500000000005`}, {0.5598000000000001, 
                    61.24450000000001}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ + 
                    102 20, {1, 102 - 20 + 1}])}]}, "   "], 
                    Row[{
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.5]]], 
                    GrayLevel[0.5], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{0.56, 
                    1.031}, {6.429, 1.031}, {6.429, 60.967}, {0.56, 
                    60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{6.192899999999999, 
                    30.980699999999995`}, {42.4399, 0.7526999999999973}, {
                    42.4399, 8.209699999999994}, {16.432899999999997`, 
                    30.982699999999994`}, {42.4119, 53.6547}, {42.4399, 
                    61.244699999999995`}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{0.56, 
                    1.031}, {6.429, 1.031}, {6.429, 60.967}, {0.56, 
                    60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{6.192899999999999, 
                    30.980699999999995`}, {42.4399, 0.7526999999999973}, {
                    42.4399, 8.209699999999994}, {16.432899999999997`, 
                    30.982699999999994`}, {42.4119, 53.6547}, {42.4399, 
                    61.244699999999995`}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ + 
                    102 (-20), {1, 102 - -20 + 1}])}], 
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.3]]], 
                    GrayLevel[0.3], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5499, 30.980699999999995`}, {
                    36.7969, 0.7526999999999973}, {36.7969, 
                    8.209699999999994}, {10.7899, 30.982699999999994`}, {
                    36.7689, 53.6547}, {36.7969, 61.244699999999995`}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5499, 30.980699999999995`}, {
                    36.7969, 0.7526999999999973}, {36.7969, 
                    8.209699999999994}, {10.7899, 30.982699999999994`}, {
                    36.7689, 53.6547}, {36.7969, 61.244699999999995`}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ - 20, {
                    1, 102 - -20 + 1}])}], 
                    Pane[
                    Row[{"showing ", 1, "\[Dash]", 20, " of ", 
                    Style[
                    102, FontColor -> GrayLevel[0], FontWeight -> "Medium"]}, 
                    BaseStyle -> {
                    FontSize -> 8., FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]}], 150, ContentPadding -> False, 
                    Alignment -> {Center, Center}], 
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.3]]], 
                    GrayLevel[0.3], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5778000000000001, 
                    53.654399999999995`}, {26.5568, 30.982399999999995`}, {
                    0.5498000000000001, 8.209399999999995}, {
                    0.5498000000000001, 0.7523999999999944}, {
                    36.796800000000005`, 30.980399999999992`}, {
                    0.5498000000000001, 61.2454}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5778000000000001, 
                    53.654399999999995`}, {26.5568, 30.982399999999995`}, {
                    0.5498000000000001, 8.209399999999995}, {
                    0.5498000000000001, 0.7523999999999944}, {
                    36.796800000000005`, 30.980399999999992`}, {
                    0.5498000000000001, 61.2454}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ + 20, {
                    1, 102 - 20 + 1}])}], 
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.5]]], 
                    GrayLevel[0.5], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    36.571, 1.031}, {42.440999999999995`, 1.031}, {
                    42.440999999999995`, 60.967}, {36.571, 60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5598000000000001, 
                    53.788500000000006`}, {26.5668, 31.015500000000007`}, {
                    0.5878000000000001, 8.343500000000006}, {
                    0.5598000000000001, 0.7525000000000048}, {36.8068, 
                    31.017500000000005`}, {0.5598000000000001, 
                    61.24450000000001}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    36.571, 1.031}, {42.440999999999995`, 1.031}, {
                    42.440999999999995`, 60.967}, {36.571, 60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5598000000000001, 
                    53.788500000000006`}, {26.5668, 31.015500000000007`}, {
                    0.5878000000000001, 8.343500000000006}, {
                    0.5598000000000001, 0.7525000000000048}, {36.8068, 
                    31.017500000000005`}, {0.5598000000000001, 
                    61.24450000000001}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ + 
                    102 20, {1, 102 - 20 + 1}])}]}, "   "]]], Background -> 
                    GrayLevel[0.98], Alignment -> {Left, Top}, 
                    BaseStyle -> {ContextMenu -> {
                    MenuItem["Hide", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1444115123},
                     1, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 10 rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1444115123},
                     10, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 30 rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1444115123},
                     30, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 100 rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1444115123},
                     100, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show all", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1444115123},
                     100000000, {}]], MenuEvaluator -> Automatic]}}], 
                   SpanFromLeft}}, BaseStyle -> {ContextMenu -> {
                    MenuItem["Copy position to clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Copy data to clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Delimiter, 
                    MenuItem["Paste position in new cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Paste data in new cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic]}, FontFamily -> "Verdana", 
                   FontSize -> 12}, Alignment -> Left, RowMinHeight -> 1.5, 
                 Dividers -> All, FrameStyle -> GrayLevel[0.85], 
                 BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
                LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
                False, ShowAutoStyles -> False]], 
             TypeSystem`NestedGrid`PackagePrivate`initialQ = True, 
             TypeSystem`NestedGrid`PackagePrivate`self = $Failed}, 
            Dynamic[
             TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
             TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
                Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
                
                Module[{
                 TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
                  TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
                  TypeSystem`NestedGrid`PackagePrivate`LookupCacheValue[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$["Data"]]}, 
                 TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = 
                  If[TypeSystem`NestedGrid`PackagePrivate`tmpData$ === 
                    TypeSystem`NestedGrid`PackagePrivate`$NotCached, 
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                    TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1444115123][
                    TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
                   Not[
                    FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
                   TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
                   TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
              TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
              TypeSystem`NestedGrid`PackagePrivate`$pos$$; If[
                FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
                TypeSystem`SparseGrid[
                 TypeSystem`H["(data no longer present)"]], 
                If[GeneralUtilities`$DebugMode, 
                 Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
                   TypeSystem`NestedGrid`PackagePrivate`formatState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$]}], 
                 TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
             TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$pos$$}],
             DynamicModuleValues :> {}], 
          TypeSystem`NestedGrid`PackagePrivate`$posCell$$, 
          TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
            TypeSystem`NestedGrid`PackagePrivate`alignBar[
            TypeSystem`NestedGrid`PackagePrivate`$state$$][
             TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
              TypeSystem`PackageScope`Pathbar[
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
               TypeSystem`NestedGrid`PackagePrivate`updateState[
               TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1444115123]]]], 
            TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}],
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Framed[
            Dynamic[
             Replace[
              MouseAnnotation[Null], {
              TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1444115123][
                Null] -> "", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1444115123][
                 Pattern[TypeSystem`NestedGrid`PackagePrivate`path, 
                  Blank[]]] :> (
                TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
                 TypeSystem`NestedGrid`PackagePrivate`path; 
                TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
                 TypeSystem`NestedGrid`PackagePrivate`path, 
                  TypeSystem`NestedGrid`PackagePrivate`makePathElements]), 
               Null :> Spacer[10], Blank[] :> Spacer[10]}], 
             TrackedSymbols :> {}], FrameStyle -> None, ImageMargins -> 0, 
            FrameMargins -> 0, Alignment -> Top, 
            ImageSize -> {Automatic, 14}]}, 
         DynamicBox[
          ToBoxes[
           Column[
            If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, {
              TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
               TypeSystem`NestedGrid`PackagePrivate`$state$$, 
               TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
              TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
               TypeSystem`NestedGrid`PackagePrivate`alignBar[
               TypeSystem`NestedGrid`PackagePrivate`$state$$][
               TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}, {
             TypeSystem`NestedGrid`PackagePrivate`$topBar$$, 
              TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
               TypeSystem`NestedGrid`PackagePrivate`$state$$, 
               TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
              TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
               TypeSystem`NestedGrid`PackagePrivate`alignBar[
               TypeSystem`NestedGrid`PackagePrivate`$state$$][
               TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}], 
            Spacings -> 
            If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, 
              0, {{}, {0, 0.05, 0}}]], StandardForm], 
          ImageSizeCache -> {254., {279., 285.}}, 
          TrackedSymbols :> {
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
            TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
         BaseStyle -> {LineBreakWithin -> False}, Deinitialization :> 
         TypeSystem`NestedGrid`PackagePrivate`deleteState[
          TypeSystem`NestedGrid`PackagePrivate`$state$$], 
         DynamicModuleValues :> {}, Initialization :> 
         Block[{$ContextPath = $ContextPath}, 
           Needs["TypeSystem`"]]], Deploy, DefaultBaseStyle -> "Deploy"]},
      "CopyTag",
      DisplayFunction->(#& ),
      InterpretationFunction->("Dataset[<>]"& )], 
     GraphicsBox[{{{}, {{{}, {}, 
          {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
           0.009166666666666668], AbsoluteThickness[1.6], 
           LineBox[CompressedData["
1:eJx91ntIU2EUAPDrEBMVM5G01NGUVDJfpPkI3dnUq1tLy0fYtDVN94ekluEr
KhcWZVBCFgk9zMdaSNiwEBtkZhGKTijnq1EyJkqlsYiiNKRv/tU/51y4XH7w
cc93z/nu9x1RSVVOmYDjuHF2O552fRBfIFyWcBtXAqybZ3EP5cPdN9HHUHO7
wXfuF+Fs0GhUxai1maAs3VyJez8YZQvXUXNJ8GB7lRG3AsY6GpyUmLXpbD5C
Z9ScHxu/xQV3PmSVXNyEOwwE4U/ccfMw0+XhT7moZSKAsvVMtBC3DGpa/cIo
r5tvRlDm+5ciKZ9K3huDWitj9SjcQ3mqXhaLmpPDwzsecai1cuhMn5ZSFoTH
85TnJmwyyt5NrgrKffeijlNuq7xRRllZajtNued7SA3l1z/TalHDQbj01akO
9VAOhMb8rUfN5cHkgV3dqDfyfV9H2eXCTj1qFi9nQP4INRcL74LEL1Gz91Us
NQ1RdptJHcZ9iNWrcRS3HKRq0xhlQ/XILOVWP8UHysrSNQtqLg2ejVR/wp3F
6r08jzsPbDp3O2oWr/+HyK2QsGfEeXfKLcMfPSjPZzd74uZhsP29N2ouke1H
y764I1k++EDULJ5d/2UHZZVRF0w5NEYdgprNx65/G4qaree6QXEeanbenhO/
yMftCpnWYcISth/OFlCO6Ht1hLJUrSvC7QPiuB7CMnZeVlegZvvNgNBkQM3y
WdNqfkrZP2rlOWWbzpJahJqHQOUCbs4Lgi0rabhd2XmwhlsrAcufrbFHUTv+
l/I4ynz/ZBJqFk+qthJOYd8zvg+3K4zWThNOYf3CiWTcPtAsOUlYBg2fe6+o
UCew9e57lbJGs3oLNVsvIkNQG+XeDBNuVs/GcjNu1u/FN1vj6zCzfIkMi4Sl
bLwpEbcPLK1N4dYq2HyLkyjPTQQvouYCYJtzCOFc+HY2Y6ADNQe/c9tXcSc4
+u3VTtRe4FXgJOgiHH5ZgFvr6GdVj1Gzel67bTzc/Z//ARzgftY=
            "]]}}, 
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6]}, {
          {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
           0.009166666666666668], AbsoluteThickness[1.6]}, {}}, {
          {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
           0.009166666666666668], AbsoluteThickness[
           1.6]}, {}}}, {{}, {}}}, {{}, {
         {Opacity[0], PointBox[CompressedData["
1:eJxV1GtIk1EYB/DXISYqZhJpeaEpqWTeSPOG7WzqdLa0vIDNuabpPkhqGTqV
yoVF2YeELBC6mNpaSNiwEBMyswjFNijnZY2SMVEqjUUUpSEd+/Cev4OX8eN5
nvM+z9nZEZbX5lcKOI7T0Gfj22kIkRYHL4u5/58ksm6ZYx4tIrdfxx5n8X3E
z/oLnEc0GlUZb102UVRsrWE+RIZlC9dYfgq5t6t2mFlOJrubXBR8fiZdL9iV
N+dP49vcmItIbvnFLcwRRBD52JNZSmZ7vQLQynZzINreHBvMLCP1Hf4R6HXL
jSi0dHApGn067UAc61dG5ynZj55ulMWz/Bzy4JZXAovnkJ7MGQlaEJkoRVvN
Dhnat9Vdjh64E3MC3VlzvRKtqHCcQfd9D6tHv/qZ0cCbHCGXvrpoeY/mk/C4
v42s/0IydXjv/c3939Wj3S7sMWB9/lDOQ1YfT96FiF5gfvVS6yjaYzZ9jPko
na9lAuMStWkSbawbn0N3+Ms/bJ5/zcben0Gejtd9Ys6l8y/P43wOvacT6wd/
CD1KwN5R5z3R7WMfvdDzeW3ezFIy0vXelzeXTM/Tsh9zNO1HGoT1TsOX3WjV
sD4UHR6nDsP1nIY34SWw39oRUSGLJ5FzoudFzO4k2z4GFtPzOFeMjhp4eQwt
UeuVzNuJKKEPLKP/z7pq3vT8DAWbjNhvfYflCTogZuUZ2qG3pSthv4IUC8yc
Dwm1rWQooX+reY1ZJya2PzviSzf9PlUJaOngVEop1EvUdvBB+r63qRifaJhJ
xbi9+WRaKczfJj4FlpGmz/1XVLDf2hG/q2iNZvWmCvZHaAzpRPdnmZjpvC1V
FmZ6/yW22RO10J/QuAiW0LgpWQv9La1NM+vkdP2yFLTVHLrI8gPJTtcwcAH5
djZrqJs3R34XdK12wzz0/l7tgX59il0EveDIywJm3cZ9q3rUC/P+A/H5v/o=

           "]]}, {
          {Opacity[0]}, {}}, {
          {Opacity[0]}, {}}}, {{}, {{}, {}}}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{False, False},
      AxesLabel->{None, None},
      AxesOrigin->{3.774005809083*^9, 0},
      DisplayFunction->Identity,
      Frame->{{True, True}, {True, True}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->FrontEndValueCache[{{Automatic, Automatic}, {
          Charting`DateTicksFunction[
          Automatic, Ticks -> Automatic, DateTicksFormat -> {Automatic}], 
          Charting`ScaledFrameTicks[
           Charting`DateTicksFunction[
           Automatic, Ticks -> Automatic, "TickLabels" -> None, 
            DateTicksFormat -> {Automatic}][
            SlotSequence[1]], {Identity, Identity}]& }}, {{
         Automatic, Automatic}, {{{3.7740024*^9, 
            FormBox[
             TagBox[
              GridBox[{{
                 StyleBox["\"14:00\"", 
                  Directive[], {}, StripOnInput -> False]}}, 
               GridBoxAlignment -> {"Columns" -> {{Center}}}, 
               DefaultBaseStyle -> "Column", 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
              "Column"], TraditionalForm], {0.013888888888888888`, 0.}, 
            Directive[]}, {3.7740096*^9, 
            FormBox[
             TagBox[
              GridBox[{{
                 StyleBox["\"16:00\"", 
                  Directive[], {}, StripOnInput -> False]}}, 
               GridBoxAlignment -> {"Columns" -> {{Center}}}, 
               DefaultBaseStyle -> "Column", 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
              "Column"], TraditionalForm], {0.013888888888888888`, 0.}, 
            Directive[]}, {3.7740168*^9, 
            FormBox[
             TagBox[
              GridBox[{{
                 StyleBox["\"18:00\"", 
                  Directive[], {}, StripOnInput -> False]}}, 
               GridBoxAlignment -> {"Columns" -> {{Center}}}, 
               DefaultBaseStyle -> "Column", 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
              "Column"], TraditionalForm], {0.013888888888888888`, 0.}, 
            Directive[]}, {3.774024*^9, 
            FormBox[
             TagBox[
              GridBox[{{
                 StyleBox["\"20:00\"", 
                  Directive[], {}, StripOnInput -> False]}}, 
               GridBoxAlignment -> {"Columns" -> {{Center}}}, 
               DefaultBaseStyle -> "Column", 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
              "Column"], TraditionalForm], {0.013888888888888888`, 0.}, 
            Directive[]}, {3.7740312*^9, 
            FormBox[
             TagBox[
              GridBox[{{
                 StyleBox["\"22:00\"", 
                  Directive[], {}, StripOnInput -> False]}}, 
               GridBoxAlignment -> {"Columns" -> {{Center}}}, 
               DefaultBaseStyle -> "Column", 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
              "Column"], TraditionalForm], {0.013888888888888888`, 0.}, 
            Directive[]}}, {{3.7740024*^9, 
            FormBox[
             TagBox[
              GridBox[{{
                 StyleBox[
                  TemplateBox[{0., 0.}, "Spacer2"], 
                  Directive[], {}, StripOnInput -> False]}}, 
               GridBoxAlignment -> {"Columns" -> {{Center}}}, 
               DefaultBaseStyle -> "Column", 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
              "Column"], TraditionalForm], {0.013888888888888888`, 0.}, 
            Directive[]}, {3.7740096*^9, 
            FormBox[
             TagBox[
              GridBox[{{
                 StyleBox[
                  TemplateBox[{0., 0.}, "Spacer2"], 
                  Directive[], {}, StripOnInput -> False]}}, 
               GridBoxAlignment -> {"Columns" -> {{Center}}}, 
               DefaultBaseStyle -> "Column", 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
              "Column"], TraditionalForm], {0.013888888888888888`, 0.}, 
            Directive[]}, {3.7740168*^9, 
            FormBox[
             TagBox[
              GridBox[{{
                 StyleBox[
                  TemplateBox[{0., 0.}, "Spacer2"], 
                  Directive[], {}, StripOnInput -> False]}}, 
               GridBoxAlignment -> {"Columns" -> {{Center}}}, 
               DefaultBaseStyle -> "Column", 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
              "Column"], TraditionalForm], {0.013888888888888888`, 0.}, 
            Directive[]}, {3.774024*^9, 
            FormBox[
             TagBox[
              GridBox[{{
                 StyleBox[
                  TemplateBox[{0., 0.}, "Spacer2"], 
                  Directive[], {}, StripOnInput -> False]}}, 
               GridBoxAlignment -> {"Columns" -> {{Center}}}, 
               DefaultBaseStyle -> "Column", 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
              "Column"], TraditionalForm], {0.013888888888888888`, 0.}, 
            Directive[]}, {3.7740312*^9, 
            FormBox[
             TagBox[
              GridBox[{{
                 StyleBox[
                  TemplateBox[{0., 0.}, "Spacer2"], 
                  Directive[], {}, StripOnInput -> False]}}, 
               GridBoxAlignment -> {"Columns" -> {{Center}}}, 
               DefaultBaseStyle -> "Column", 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
              "Column"], TraditionalForm], {0.013888888888888888`, 0.}, 
            Directive[]}}}}],
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      Method->{
       "NoShowPlotTheme" -> Automatic, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& )}},
      PlotRange->{{3.774005809083*^9, 3.7740320229934998`*^9}, {0, 87.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.02], 
         Scaled[0.08090169943749476]}},
      Ticks->{{}, Automatic}]}
   },
   AutoDelete->False,
   GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{3.7741878418149643`*^9},
 CellLabel->
  "Out[670]=",ExpressionUUID->"dd4b958a-a266-4a87-8d7d-5127b201eb83"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Grid", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Column", "[", 
       RowBox[{"{", 
        RowBox[{"ag", ",", "dlsp"}], "}"}], "]"}], ",", "readingsDS"}], "}"}],
     "}"}], ",", 
   RowBox[{"Frame", "\[Rule]", "All"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7741877958849115`*^9, 3.7741878012009106`*^9}},
 CellLabel->
  "In[669]:=",ExpressionUUID->"05f6cc10-7ffe-43ba-924e-6711533c37d1"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TagBox[GridBox[{
        {
         GraphicsBox[{
           {GrayLevel[1], EdgeForm[None], FilledCurveBox[{Line[CompressedData["
1:eJxd1V1I02EUx/EtrC56o4xCsWykhiCRWWImncywF1wTixokKYbIkmgrbxzJ
oiKvrLQWxAoiltnLCiU1QzxgTaMpvkS1icl05TZ1+yNlGMXK6Py66IHDuTs3
H/g+mpJTBaXzVCpV6dz82X+flx/m6QPmlkn+Oj8/zl8xzBtHbM2PHkxxpeZO
ytJeNye0hZP8lhBfTY1vTFr8jmPXJbsOZYQ5ZG4y/9g6wPnRdm3mYJhn9Lse
e2694XMq8+afeQpX1KzK8TR18tOs22fWNih8MubCzmB5MzfUJUZ2+xR+viKi
Dpus3K49vGxLROGpL9VdbcZ7FOeMGPtnFS4/kmUr7nxBXWWz1+PfKrw6Umt3
6J1kPF9/ZU/N3L3WWuVmZi/FHqiavrxB4SWF7gyLZZCmE1sthXfDXKb2adS6
92SctPSkR0LcH7tA833hEFktv5683B5ia1qvwV7/kZyOHlv30SmOrvxW7Ljm
pVd9ppGEokn2DNTF7MsZo2NNrmdDuRO8PrBXZ/L6qLo1WRu1MsjuRWM3Lho+
U2dHWsOHbj+fWL6mb2Z4nAyjLUX24+N8NjvQqN0WoHST9eBg4BOnlFzSpVQF
Kff1ph1evY87XPGn99+foKjs9tSS5lE4EFzEgeAiDgQXcSC4iAPBRRwILuJA
cBEHgos4EFzEgeAiDgQXcSC4iAPBRRwILuJAcBEHgos4EFzEgeAiDgQXcSC4
iAPBRRwILuJAcBEHgos4EFzEgeAiDgQXcSC4iAPBRRwILuJAcBEHgos4EFzE
geAiDv9cxIHhIg4MF3FguIgDw0UcGC7iwHARB4aLODBcxIHhIg4MF3FguIgD
w0UcGC7iwHARB4YLOgUXdAou6BRc0Cm4oFNwQafggk7BBZ2CCzoFF3QKLugU
XNApuKBTcEGn4IJOwQWdggs6BRd0Ci7oFFzQKbigU3BBp+CCTsEFnYILOgWX
//+P34UFays=
               "]]}]}, GraphicsGroupBox[
            {GrayLevel[0.8], EdgeForm[{GrayLevel[0.6], Thickness[0.01]}], 
             FilledCurveBox[{{Line[CompressedData["
1:eJxd1V1I02EUx/EtrC56o4xCsWykhiCRWWImncywF1wTixokKYbIkmgrbxzJ
oiKvrLQWxAoiltnLCiU1QzxgTaMpvkS1icl05TZ1+yNlGMXK6Py66IHDuTs3
H/g+mpJTBaXzVCpV6dz82X+flx/m6QPmlkn+Oj8/zl8xzBtHbM2PHkxxpeZO
ytJeNye0hZP8lhBfTY1vTFr8jmPXJbsOZYQ5ZG4y/9g6wPnRdm3mYJhn9Lse
e2694XMq8+afeQpX1KzK8TR18tOs22fWNih8MubCzmB5MzfUJUZ2+xR+viKi
Dpus3K49vGxLROGpL9VdbcZ7FOeMGPtnFS4/kmUr7nxBXWWz1+PfKrw6Umt3
6J1kPF9/ZU/N3L3WWuVmZi/FHqiavrxB4SWF7gyLZZCmE1sthXfDXKb2adS6
92SctPSkR0LcH7tA833hEFktv5683B5ia1qvwV7/kZyOHlv30SmOrvxW7Ljm
pVd9ppGEokn2DNTF7MsZo2NNrmdDuRO8PrBXZ/L6qLo1WRu1MsjuRWM3Lho+
U2dHWsOHbj+fWL6mb2Z4nAyjLUX24+N8NjvQqN0WoHST9eBg4BOnlFzSpVQF
Kff1ph1evY87XPGn99+foKjs9tSS5lE4EFzEgeAiDgQXcSC4iAPBRRwILuJA
cBEHgos4EFzEgeAiDgQXcSC4iAPBRRwILuJAcBEHgos4EFzEgeAiDgQXcSC4
iAPBRRwILuJAcBEHgos4EFzEgeAiDgQXcSC4iAPBRRwILuJAcBEHgos4EFzE
geAiDv9cxIHhIg4MF3FguIgDw0UcGC7iwHARB4aLODBcxIHhIg4MF3FguIgD
w0UcGC7iwHARB4YLOgUXdAou6BRc0Cm4oFNwQafggk7BBZ2CCzoFF3QKLugU
XNApuKBTcEGn4IJOwQWdggs6BRd0Ci7oFFzQKbigU3BBp+CCTsEFnYILOgWX
//+P34UFays=
                 "]]}, {Line[CompressedData["
1:eJyF1V1I02EUx/EpoxfEAkOSwsqQhGFemCAGdgTT6EbQihQkwbfI3tAi8UIv
mk5XYpmVNyVpUmkvWIlMnR0MUckwNE1xS12r2drc/z+ziErK8Px24U0XD4dz
ca4+8H3Css+m5flrNJrjy+/f3F7hSjVts/Hi3a6lzffnefXefaOsdrJomm8/
sPWlPPSw9edWKjVOcWLTswTjVYX1xvjMtIp3PGJrcys6lc8fGX6SXzDKkVEN
9UmlKq/VR3/lktc8djGgaOGFynme8Pp5vz4eu/I0rF1RuSu5Wh10dfCgY0du
xkYvz8RmVcct3OSgMkPCy1Avm3JyehT1Hu30/oiY3eJla/CpY3ONZsq07NZ2
rPFyfnfl45iJfkoprIpJt6mcEd2zKzv5DRWnlpe4W1UeSHx/6NertxSeXjvc
kqPy5RDH4f7pCYr/Y4ieDFD5liey8tyUhXpHh3vuHFB4dp/d9Ltzhup0xdbv
Rz2s1yVtMpttFHS93958cJ4bNhhiay7ZKWR9ldId6uZG/5o9Tfs/kfZbs+bk
+Bfu3euXG+d00LhOO7RU6OShqEBL64XPtC64IN+yOMd6vSkwz+Ukbfsje3mW
g9syrp1QklzL9y0Ddc8/MoVHjLjK3VR5xnjatPABDgQXcSC4iAPBRRwILuJA
cBEH8rmsOBBcxIHgIg4EF3EguIgDwUUcCC7iQHARB4KLOBBcxIHgIg4EF3Eg
uIgDwUUcCC7iQHARB4KLOJDPZcWB4CIOBBdxILiIA8FFHAgu4kBwEQeCizgQ
XMSB4CIOBBdxILiIg89FHBgu4sBwEQeGizgwXMSB4SIODBdxYLiIA8NFHBgu
4sBwEQeGizgwXMSB4SIODBdxYLis6hYc0C04oFtwQLfggG7BgX0u0im4oFNw
Qafggk7BBZ2CCzoFF3QKLugUXNApuKBTcEGn4IJOwQWdggs6BRd0Ci7oFFzQ
KZ+LdAou6BRc/vef/AWs0Kog
                 "]]}}]}], {}, 
           {GrayLevel[0.5], Thickness[0.008], 
            {GrayLevel[0.5], Thickness[0.004], CapForm["Butt"], 
             
             StyleBox[{{
                LineBox[{{{-0.5000000000000004, -0.8660254037844385}, 
                   Scaled[{0.030000000000000072`, 
                    0.05569219381653051}, {-0.5000000000000004, \
-0.8660254037844385}]}, {{-1., 1.2246467991473532`*^-16}, 
                   Scaled[{0.06, 0.}, {-1., 
                    1.2246467991473532`*^-16}]}, {{-0.4999999999999998, 
                   0.8660254037844387}, 
                   Scaled[{
                    0.029999999999999992`, -0.055692193816530566`}, \
{-0.4999999999999998, 0.8660254037844387}]}, {{0.5000000000000003, 
                   0.8660254037844385}, 
                   Scaled[{-0.03000000000000002, -0.05569219381653053}, {
                    0.5000000000000003, 0.8660254037844385}]}, {{1., 0.}, 
                   Scaled[{-0.06, 0.}, {1., 0.}]}, {{
                   0.5000000000000003, -0.8660254037844385}, 
                   Scaled[{-0.030000000000000006`, 0.05569219381653054}, {
                    0.5000000000000003, -0.8660254037844385}]}}], 
                LineBox[{{{-0.7071067811865479, -0.7071067811865471}, 
                   Scaled[{0.028284271247461915`, 
                    0.03031499055704094}, {-0.7071067811865479, \
-0.7071067811865471}]}, {{-0.8660254037844388, -0.4999999999999997}, 
                   Scaled[{0.03464101615137756, 
                    0.021435935394489788`}, {-0.8660254037844388, \
-0.4999999999999997}]}, {{-0.9659258262890684, -0.25881904510252035`}, 
                   Scaled[{0.038637033051562734`, 
                    0.011096056659362344`}, {-0.9659258262890684, \
-0.25881904510252035`}]}, {{-0.9659258262890682, 0.258819045102521}, 
                   Scaled[{
                    0.03863703305156273, -0.011096056659362374`}, \
{-0.9659258262890682, 0.258819045102521}]}, {{-0.8660254037844385, 
                   0.5000000000000003}, 
                   Scaled[{
                    0.03464101615137754, -0.02143593539448983}, \
{-0.8660254037844385, 0.5000000000000003}]}, {{-0.7071067811865475, 
                   0.7071067811865476}, 
                   Scaled[{
                    0.028284271247461898`, -0.030314990557040962`}, \
{-0.7071067811865475, 0.7071067811865476}]}, {{-0.2588190451025204, 
                   0.9659258262890684}, 
                   Scaled[{
                    0.010352761804100816`, -0.041411047216403325`}, \
{-0.2588190451025204, 0.9659258262890684}]}, {{6.123233995736766*^-17, 1.}, 
                   Scaled[{0., -0.04287187078897963}, {6.123233995736766*^-17,
                     1.}]}, {{0.25881904510252096`, 0.9659258262890682}, 
                   Scaled[{-0.010352761804100838`, -0.04141104721640332}, {
                    0.25881904510252096`, 0.9659258262890682}]}, {{
                   0.7071067811865476, 0.7071067811865476}, 
                   Scaled[{-0.028284271247461905`, -0.030314990557040962`}, {
                    0.7071067811865476, 0.7071067811865476}]}, {{
                   0.8660254037844387, 0.49999999999999983`}, 
                   Scaled[{-0.034641016151377546`, -0.02143593539448981}, {
                    0.8660254037844387, 0.49999999999999983`}]}, {{
                   0.9659258262890683, 0.25881904510252046`}, 
                   Scaled[{-0.038637033051562734`, -0.01109605665936235}, {
                    0.9659258262890683, 0.25881904510252046`}]}, {{
                   0.9659258262890683, -0.25881904510252046`}, 
                   Scaled[{-0.038637033051562734`, 0.011096056659362358`}, {
                    0.9659258262890683, -0.25881904510252046`}]}, {{
                   0.8660254037844385, -0.5000000000000002}, 
                   Scaled[{-0.03464101615137754, 0.021435935394489836`}, {
                    0.8660254037844385, -0.5000000000000002}]}, {{
                   0.7071067811865476, -0.7071067811865476}, 
                   Scaled[{-0.028284271247461894`, 0.030314990557040965`}, {
                    0.7071067811865476, -0.7071067811865476}]}}]}, 
               {GrayLevel[0.25], 
                
                StyleBox[{{{
                    InsetBox["0", Offset[{1.5000000000000036, 2.5980762113533142},
                     Scaled[{0.030000000000000072, 0.05569219381653051}, \
{-0.5000000000000004, -0.8660254037844385}]], {-0.5773502691896275, -1.}, 
                    Automatic, {1, 0}], 
                    InsetBox["20", Offset[{3., 0.}, 
                    Scaled[{0.06, 0.}, {-1., 1.2246467991473532*^-16}]], {-1, 0.},
                     Automatic, {1, 0}], 
                    InsetBox["40", Offset[{1.4999999999999996, -2.598076211353317},
                     Scaled[{0.029999999999999992, -0.055692193816530566}, \
{-0.4999999999999998, 0.8660254037844387}]], {-0.5773502691896255, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox["60", Offset[{-1.5000000000000009, -2.5980762113533156},
                     Scaled[{-0.03000000000000002, -0.05569219381653053}, \
{0.5000000000000003, 0.8660254037844385}]], {0.5773502691896262, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox["80", Offset[{-3., 0.}, 
                    Scaled[{-0.06, 0.}, {1., 0.}]], {1, 0.}, Automatic, {1, 
                    0}], InsetBox["100", Offset[{-1.5000000000000004, 2.598076211353316},
                     Scaled[{-0.030000000000000006, 0.05569219381653054}, \
{0.5000000000000003, -0.8660254037844385}]], {0.577350269189626, -1.}, 
                    Automatic, {1, 
                    0}]}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}}}, {}},
                 StripOnInput->False,
                 FontFamily->"Helvetica",
                 FontSize->Scaled[0.07]]}},
              StripOnInput->False,
              Antialiasing->True]}}, {}, {}, 
           GeometricTransformationBox[GeometricTransformationBox[
             TagBox[
              TooltipBox[{
                {RGBColor[0.73, 0.24506099999999992`, 0.1971], 
                 PolygonBox[{{0., -0.054700000000000006`}, {1, -0.025}, {
                   1, 0.025}, {0., 0.054700000000000006`}}]}, 
                {RGBColor[0.73, 0.24506099999999992`, 0.1971], 
                 DiskBox[{0, 0}, 0.07]}, 
                {GrayLevel[1], DiskBox[{0, 0}, 0.035]}},
               "87"],
              Annotation[#, 87, "Tooltip"]& ], {{{0.8402223838474815, 
              0.3225311545907705}, {-0.3225311545907705, 
              0.8402223838474815}}, {0., 0.}}], {{{1, 0}, {0, 1}}, 
             Center}], {}},
          AlignmentPoint->Center,
          AspectRatio->Automatic,
          Axes->False,
          AxesLabel->None,
          AxesOrigin->Automatic,
          AxesStyle->{},
          Background->None,
          BaseStyle->{},
          BaselinePosition->Automatic,
          ColorOutput->Automatic,
          ContentSelectable->Automatic,
          CoordinatesToolOptions:>Automatic,
          DisplayFunction->Identity,
          Epilog->{},
          FormatType->TraditionalForm,
          Frame->False,
          FrameLabel->None,
          FrameStyle->{},
          FrameTicks->Automatic,
          FrameTicksStyle->{},
          GridLines->None,
          GridLinesStyle->{},
          ImageMargins->0.,
          ImagePadding->All,
          ImageSize->Small,
          ImageSizeRaw->Automatic,
          LabelStyle->Directive[
            GrayLevel[0.25], FontSize -> Scaled[0.07], FontFamily -> 
            "Helvetica"],
          Method->Automatic,
          PlotLabel->None,
          PlotRange->All,
          PlotRangeClipping->False,
          PlotRangePadding->Automatic,
          PlotRegion->Automatic,
          PreserveImageOptions->Automatic,
          Prolog->{},
          RotateLabel->True,
          Ticks->Automatic,
          TicksStyle->{}]},
        {
         GraphicsBox[{{{}, {{{}, {}, 
              {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
               0.009166666666666668], AbsoluteThickness[1.6], 
               LineBox[CompressedData["
1:eJx91ntIU2EUAPDrEBMVM5G01NGUVDJfpPkI3dnUq1tLy0fYtDVN94ekluEr
KhcWZVBCFgk9zMdaSNiwEBtkZhGKTijnq1EyJkqlsYiiNKRv/tU/51y4XH7w
cc93z/nu9x1RSVVOmYDjuHF2O552fRBfIFyWcBtXAqybZ3EP5cPdN9HHUHO7
wXfuF+Fs0GhUxai1maAs3VyJez8YZQvXUXNJ8GB7lRG3AsY6GpyUmLXpbD5C
Z9ScHxu/xQV3PmSVXNyEOwwE4U/ccfMw0+XhT7moZSKAsvVMtBC3DGpa/cIo
r5tvRlDm+5ciKZ9K3huDWitj9SjcQ3mqXhaLmpPDwzsecai1cuhMn5ZSFoTH
85TnJmwyyt5NrgrKffeijlNuq7xRRllZajtNued7SA3l1z/TalHDQbj01akO
9VAOhMb8rUfN5cHkgV3dqDfyfV9H2eXCTj1qFi9nQP4INRcL74LEL1Gz91Us
NQ1RdptJHcZ9iNWrcRS3HKRq0xhlQ/XILOVWP8UHysrSNQtqLg2ejVR/wp3F
6r08jzsPbDp3O2oWr/+HyK2QsGfEeXfKLcMfPSjPZzd74uZhsP29N2ouke1H
y764I1k++EDULJ5d/2UHZZVRF0w5NEYdgprNx65/G4qaree6QXEeanbenhO/
yMftCpnWYcISth/OFlCO6Ht1hLJUrSvC7QPiuB7CMnZeVlegZvvNgNBkQM3y
WdNqfkrZP2rlOWWbzpJahJqHQOUCbs4Lgi0rabhd2XmwhlsrAcufrbFHUTv+
l/I4ynz/ZBJqFk+qthJOYd8zvg+3K4zWThNOYf3CiWTcPtAsOUlYBg2fe6+o
UCew9e57lbJGs3oLNVsvIkNQG+XeDBNuVs/GcjNu1u/FN1vj6zCzfIkMi4Sl
bLwpEbcPLK1N4dYq2HyLkyjPTQQvouYCYJtzCOFc+HY2Y6ADNQe/c9tXcSc4
+u3VTtRe4FXgJOgiHH5ZgFvr6GdVj1Gzel67bTzc/Z//ARzgftY=
                "]]}}, 
             {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
              0.009166666666666668], AbsoluteThickness[1.6]}, {
              {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
               0.009166666666666668], AbsoluteThickness[1.6]}, {}}, {
              {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
               0.009166666666666668], AbsoluteThickness[
               1.6]}, {}}}, {{}, {}}}, {{}, {
             {Opacity[0], PointBox[CompressedData["
1:eJxV1GtIk1EYB/DXISYqZhJpeaEpqWTeSPOG7WzqdLa0vIDNuabpPkhqGTqV
yoVF2YeELBC6mNpaSNiwEBMyswjFNijnZY2SMVEqjUUUpSEd+/Cev4OX8eN5
nvM+z9nZEZbX5lcKOI7T0Gfj22kIkRYHL4u5/58ksm6ZYx4tIrdfxx5n8X3E
z/oLnEc0GlUZb102UVRsrWE+RIZlC9dYfgq5t6t2mFlOJrubXBR8fiZdL9iV
N+dP49vcmItIbvnFLcwRRBD52JNZSmZ7vQLQynZzINreHBvMLCP1Hf4R6HXL
jSi0dHApGn067UAc61dG5ynZj55ulMWz/Bzy4JZXAovnkJ7MGQlaEJkoRVvN
Dhnat9Vdjh64E3MC3VlzvRKtqHCcQfd9D6tHv/qZ0cCbHCGXvrpoeY/mk/C4
v42s/0IydXjv/c3939Wj3S7sMWB9/lDOQ1YfT96FiF5gfvVS6yjaYzZ9jPko
na9lAuMStWkSbawbn0N3+Ms/bJ5/zcben0Gejtd9Ys6l8y/P43wOvacT6wd/
CD1KwN5R5z3R7WMfvdDzeW3ezFIy0vXelzeXTM/Tsh9zNO1HGoT1TsOX3WjV
sD4UHR6nDsP1nIY34SWw39oRUSGLJ5FzoudFzO4k2z4GFtPzOFeMjhp4eQwt
UeuVzNuJKKEPLKP/z7pq3vT8DAWbjNhvfYflCTogZuUZ2qG3pSthv4IUC8yc
Dwm1rWQooX+reY1ZJya2PzviSzf9PlUJaOngVEop1EvUdvBB+r63qRifaJhJ
xbi9+WRaKczfJj4FlpGmz/1XVLDf2hG/q2iNZvWmCvZHaAzpRPdnmZjpvC1V
FmZ6/yW22RO10J/QuAiW0LgpWQv9La1NM+vkdP2yFLTVHLrI8gPJTtcwcAH5
djZrqJs3R34XdK12wzz0/l7tgX59il0EveDIywJm3cZ9q3rUC/P+A/H5v/o=

               "]]}, {
              {Opacity[0]}, {}}, {
              {Opacity[0]}, {}}}, {{}, {{}, {}}}}},
          AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
          Axes->{False, False},
          AxesLabel->{None, None},
          AxesOrigin->{3.774005809083*^9, 0},
          DisplayFunction->Identity,
          Frame->{{True, True}, {True, True}},
          FrameLabel->{{None, None}, {None, None}},
          FrameTicks->FrontEndValueCache[{{Automatic, Automatic}, {
              Charting`DateTicksFunction[
              Automatic, Ticks -> Automatic, DateTicksFormat -> {Automatic}], 
              Charting`ScaledFrameTicks[
               Charting`DateTicksFunction[
               Automatic, Ticks -> Automatic, "TickLabels" -> None, 
                DateTicksFormat -> {Automatic}][
                SlotSequence[1]], {Identity, Identity}]& }}, {{
             Automatic, Automatic}, {{{3.7740024*^9, 
                FormBox[
                 TagBox[
                  GridBox[{{
                    StyleBox["\"14:00\"", 
                    Directive[], {}, StripOnInput -> False]}}, 
                   GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                   DefaultBaseStyle -> "Column", 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                  "Column"], TraditionalForm], {0.013888888888888888`, 0.}, 
                Directive[]}, {3.7740096*^9, 
                FormBox[
                 TagBox[
                  GridBox[{{
                    StyleBox["\"16:00\"", 
                    Directive[], {}, StripOnInput -> False]}}, 
                   GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                   DefaultBaseStyle -> "Column", 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                  "Column"], TraditionalForm], {0.013888888888888888`, 0.}, 
                Directive[]}, {3.7740168*^9, 
                FormBox[
                 TagBox[
                  GridBox[{{
                    StyleBox["\"18:00\"", 
                    Directive[], {}, StripOnInput -> False]}}, 
                   GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                   DefaultBaseStyle -> "Column", 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                  "Column"], TraditionalForm], {0.013888888888888888`, 0.}, 
                Directive[]}, {3.774024*^9, 
                FormBox[
                 TagBox[
                  GridBox[{{
                    StyleBox["\"20:00\"", 
                    Directive[], {}, StripOnInput -> False]}}, 
                   GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                   DefaultBaseStyle -> "Column", 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                  "Column"], TraditionalForm], {0.013888888888888888`, 0.}, 
                Directive[]}, {3.7740312*^9, 
                FormBox[
                 TagBox[
                  GridBox[{{
                    StyleBox["\"22:00\"", 
                    Directive[], {}, StripOnInput -> False]}}, 
                   GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                   DefaultBaseStyle -> "Column", 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                  "Column"], TraditionalForm], {0.013888888888888888`, 0.}, 
                Directive[]}}, {{3.7740024*^9, 
                FormBox[
                 TagBox[
                  GridBox[{{
                    StyleBox[
                    TemplateBox[{0., 0.}, "Spacer2"], 
                    Directive[], {}, StripOnInput -> False]}}, 
                   GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                   DefaultBaseStyle -> "Column", 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                  "Column"], TraditionalForm], {0.013888888888888888`, 0.}, 
                Directive[]}, {3.7740096*^9, 
                FormBox[
                 TagBox[
                  GridBox[{{
                    StyleBox[
                    TemplateBox[{0., 0.}, "Spacer2"], 
                    Directive[], {}, StripOnInput -> False]}}, 
                   GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                   DefaultBaseStyle -> "Column", 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                  "Column"], TraditionalForm], {0.013888888888888888`, 0.}, 
                Directive[]}, {3.7740168*^9, 
                FormBox[
                 TagBox[
                  GridBox[{{
                    StyleBox[
                    TemplateBox[{0., 0.}, "Spacer2"], 
                    Directive[], {}, StripOnInput -> False]}}, 
                   GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                   DefaultBaseStyle -> "Column", 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                  "Column"], TraditionalForm], {0.013888888888888888`, 0.}, 
                Directive[]}, {3.774024*^9, 
                FormBox[
                 TagBox[
                  GridBox[{{
                    StyleBox[
                    TemplateBox[{0., 0.}, "Spacer2"], 
                    Directive[], {}, StripOnInput -> False]}}, 
                   GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                   DefaultBaseStyle -> "Column", 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                  "Column"], TraditionalForm], {0.013888888888888888`, 0.}, 
                Directive[]}, {3.7740312*^9, 
                FormBox[
                 TagBox[
                  GridBox[{{
                    StyleBox[
                    TemplateBox[{0., 0.}, "Spacer2"], 
                    Directive[], {}, StripOnInput -> False]}}, 
                   GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                   DefaultBaseStyle -> "Column", 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                  "Column"], TraditionalForm], {0.013888888888888888`, 0.}, 
                Directive[]}}}}],
          GridLines->{None, None},
          GridLinesStyle->Directive[
            GrayLevel[0.5, 0.4]],
          
          Method->{
           "NoShowPlotTheme" -> Automatic, "OptimizePlotMarkers" -> True, 
            "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                (Identity[#]& )[
                 Part[#, 1]], 
                (Identity[#]& )[
                 Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                (Identity[#]& )[
                 Part[#, 1]], 
                (Identity[#]& )[
                 Part[#, 2]]}& )}},
          PlotRange->{{3.774005809083*^9, 3.7740320229934998`*^9}, {0, 87.}},
          PlotRangeClipping->True,
          PlotRangePadding->{{
             Scaled[0.02], 
             Scaled[0.02]}, {
             Scaled[0.02], 
             Scaled[0.08090169943749476]}},
          Ticks->{{}, Automatic}]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"], 
     TemplateBox[{TagBox[
        DynamicModuleBox[{
         TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
          Data`UnorderedAssociation[
           "RowCount" -> 20, "Length" -> 102, "InitialType" -> 
            TypeSystem`Vector[
              TypeSystem`Struct[{"reading", "Timestamp"}, {
                TypeSystem`Atom[Integer], 
                TypeSystem`Atom[DateObject]}], 102], "Shape" -> 
            TypeSystem`PackageScope`HeaderShape[
              Association[{All, "reading"} -> 1, {All, "Timestamp"} -> 1], 
              TypeSystem`PackageScope`Limited[
               TypeSystem`PackageScope`ColumnShape[
                TypeSystem`PackageScope`RowShape[
                 Association[
                 "reading" -> TypeSystem`PackageScope`AtomShape[34], 
                  "Timestamp" -> TypeSystem`PackageScope`AtomShape[75]]]], 
               20, {}]], "InitialData" -> 
            TypeSystem`PackageScope`CacheHandle[1102638669], "Type" -> 
            TypeSystem`Vector[
              TypeSystem`Struct[{"reading", "Timestamp"}, {
                TypeSystem`Atom[Integer], 
                TypeSystem`Atom[DateObject]}], 102], "HandleQ" -> True, 
            "RowTarget" -> 20, "Data" -> 
            TypeSystem`PackageScope`CacheHandle[1102638669]], 
          TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
          TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 1, 
          TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
          DynamicModule[{
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
               Style[
                Grid[{{
                   Item[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"reading\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"reading\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1667506318][{All, "reading"}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1667506318][
                    GeneralUtilities`Slice[All, "reading"]], "Mouse"], 
                    Background -> GrayLevel[0.95], 
                    Alignment -> {Left, Baseline}], 
                   Item[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Timestamp\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Timestamp\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1667506318][{All, "Timestamp"}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1667506318][
                    GeneralUtilities`Slice[All, "Timestamp"]], "Mouse"], 
                    Background -> GrayLevel[0.95], 
                    Alignment -> {Left, Baseline}]}, {
                   Pane[
                    Annotation[
                    RawBoxes["87"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1667506318][
                    GeneralUtilities`Slice[1, 
                    Key["reading"]]], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                   Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    "\"Mon 5 Aug 2019 14:56:54\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1667506318][
                    GeneralUtilities`Slice[1, 
                    Key["Timestamp"]]], "Mouse"], 
                    ImageSize -> {{75, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}]}, {
                   Pane[
                    Annotation[
                    RawBoxes["84"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1667506318][
                    GeneralUtilities`Slice[2, 
                    Key["reading"]]], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                   Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    "\"Mon 5 Aug 2019 15:56:32\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1667506318][
                    GeneralUtilities`Slice[2, 
                    Key["Timestamp"]]], "Mouse"], 
                    ImageSize -> {{75, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}]}, {
                   Pane[
                    Annotation[
                    RawBoxes["80"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1667506318][
                    GeneralUtilities`Slice[3, 
                    Key["reading"]]], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                   Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    "\"Mon 5 Aug 2019 16:25:35\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1667506318][
                    GeneralUtilities`Slice[3, 
                    Key["Timestamp"]]], "Mouse"], 
                    ImageSize -> {{75, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}]}, {
                   Pane[
                    Annotation[
                    RawBoxes["80"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1667506318][
                    GeneralUtilities`Slice[4, 
                    Key["reading"]]], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                   Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    "\"Mon 5 Aug 2019 16:11:51\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1667506318][
                    GeneralUtilities`Slice[4, 
                    Key["Timestamp"]]], "Mouse"], 
                    ImageSize -> {{75, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}]}, {
                   Pane[
                    Annotation[
                    RawBoxes["76"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1667506318][
                    GeneralUtilities`Slice[5, 
                    Key["reading"]]], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                   Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    "\"Tue 6 Aug 2019 08:56:17\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1667506318][
                    GeneralUtilities`Slice[5, 
                    Key["Timestamp"]]], "Mouse"], 
                    ImageSize -> {{75, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}]}, {
                   Pane[
                    Annotation[
                    RawBoxes["75"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1667506318][
                    GeneralUtilities`Slice[6, 
                    Key["reading"]]], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                   Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    "\"Mon 5 Aug 2019 16:35:10\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1667506318][
                    GeneralUtilities`Slice[6, 
                    Key["Timestamp"]]], "Mouse"], 
                    ImageSize -> {{75, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}]}, {
                   Pane[
                    Annotation[
                    RawBoxes["75"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1667506318][
                    GeneralUtilities`Slice[7, 
                    Key["reading"]]], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                   Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    "\"Mon 5 Aug 2019 16:18:01\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1667506318][
                    GeneralUtilities`Slice[7, 
                    Key["Timestamp"]]], "Mouse"], 
                    ImageSize -> {{75, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}]}, {
                   Pane[
                    Annotation[
                    RawBoxes["75"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1667506318][
                    GeneralUtilities`Slice[8, 
                    Key["reading"]]], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                   Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    "\"Mon 5 Aug 2019 16:11:36\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1667506318][
                    GeneralUtilities`Slice[8, 
                    Key["Timestamp"]]], "Mouse"], 
                    ImageSize -> {{75, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}]}, {
                   Pane[
                    Annotation[
                    RawBoxes["70"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1667506318][
                    GeneralUtilities`Slice[9, 
                    Key["reading"]]], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                   Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    "\"Mon 5 Aug 2019 16:21:38\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1667506318][
                    GeneralUtilities`Slice[9, 
                    Key["Timestamp"]]], "Mouse"], 
                    ImageSize -> {{75, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}]}, {
                   Pane[
                    Annotation[
                    RawBoxes["65"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1667506318][
                    GeneralUtilities`Slice[10, 
                    Key["reading"]]], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                   Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    "\"Wed 7 Aug 2019 09:50:26\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1667506318][
                    GeneralUtilities`Slice[10, 
                    Key["Timestamp"]]], "Mouse"], 
                    ImageSize -> {{75, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}]}, {
                   Pane[
                    Annotation[
                    RawBoxes["65"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1667506318][
                    GeneralUtilities`Slice[11, 
                    Key["reading"]]], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                   Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    "\"Mon 5 Aug 2019 18:32:33\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1667506318][
                    GeneralUtilities`Slice[11, 
                    Key["Timestamp"]]], "Mouse"], 
                    ImageSize -> {{75, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}]}, {
                   Pane[
                    Annotation[
                    RawBoxes["65"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1667506318][
                    GeneralUtilities`Slice[12, 
                    Key["reading"]]], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                   Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    "\"Mon 5 Aug 2019 18:32:15\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1667506318][
                    GeneralUtilities`Slice[12, 
                    Key["Timestamp"]]], "Mouse"], 
                    ImageSize -> {{75, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}]}, {
                   Pane[
                    Annotation[
                    RawBoxes["65"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1667506318][
                    GeneralUtilities`Slice[13, 
                    Key["reading"]]], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                   Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    "\"Mon 5 Aug 2019 16:44:27\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1667506318][
                    GeneralUtilities`Slice[13, 
                    Key["Timestamp"]]], "Mouse"], 
                    ImageSize -> {{75, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}]}, {
                   Pane[
                    Annotation[
                    RawBoxes["65"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1667506318][
                    GeneralUtilities`Slice[14, 
                    Key["reading"]]], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                   Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    "\"Mon 5 Aug 2019 16:11:30\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1667506318][
                    GeneralUtilities`Slice[14, 
                    Key["Timestamp"]]], "Mouse"], 
                    ImageSize -> {{75, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}]}, {
                   Pane[
                    Annotation[
                    RawBoxes["62"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1667506318][
                    GeneralUtilities`Slice[15, 
                    Key["reading"]]], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                   Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    "\"Mon 5 Aug 2019 15:00:15\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1667506318][
                    GeneralUtilities`Slice[15, 
                    Key["Timestamp"]]], "Mouse"], 
                    ImageSize -> {{75, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}]}, {
                   Pane[
                    Annotation[
                    RawBoxes["60"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1667506318][
                    GeneralUtilities`Slice[16, 
                    Key["reading"]]], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                   Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    "\"Mon 5 Aug 2019 16:25:23\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1667506318][
                    GeneralUtilities`Slice[16, 
                    Key["Timestamp"]]], "Mouse"], 
                    ImageSize -> {{75, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}]}, {
                   Pane[
                    Annotation[
                    RawBoxes["57"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1667506318][
                    GeneralUtilities`Slice[17, 
                    Key["reading"]]], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                   Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    "\"Tue 6 Aug 2019 08:33:23\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1667506318][
                    GeneralUtilities`Slice[17, 
                    Key["Timestamp"]]], "Mouse"], 
                    ImageSize -> {{75, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}]}, {
                   Pane[
                    Annotation[
                    RawBoxes["57"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1667506318][
                    GeneralUtilities`Slice[18, 
                    Key["reading"]]], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                   Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    "\"Tue 6 Aug 2019 08:33:18\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1667506318][
                    GeneralUtilities`Slice[18, 
                    Key["Timestamp"]]], "Mouse"], 
                    ImageSize -> {{75, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}]}, {
                   Pane[
                    Annotation[
                    RawBoxes["56"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1667506318][
                    GeneralUtilities`Slice[19, 
                    Key["reading"]]], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                   Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    "\"Mon 5 Aug 2019 15:12:19\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1667506318][
                    GeneralUtilities`Slice[19, 
                    Key["Timestamp"]]], "Mouse"], 
                    ImageSize -> {{75, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}]}, {
                   Pane[
                    Annotation[
                    RawBoxes["55"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1667506318][
                    GeneralUtilities`Slice[20, 
                    Key["reading"]]], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                   Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    "\"Mon 5 Aug 2019 15:02:08\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1667506318][
                    GeneralUtilities`Slice[20, 
                    Key["Timestamp"]]], "Mouse"], 
                    ImageSize -> {{75, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}]}, {
                   Item[
                    Deploy[
                    Mouseover[
                    Row[{
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.5]]], 
                    GrayLevel[0.5], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{0.56, 
                    1.031}, {6.429, 1.031}, {6.429, 60.967}, {0.56, 
                    60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{6.192899999999999, 
                    30.980699999999995`}, {42.4399, 0.7526999999999973}, {
                    42.4399, 8.209699999999994}, {16.432899999999997`, 
                    30.982699999999994`}, {42.4119, 53.6547}, {42.4399, 
                    61.244699999999995`}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{0.56, 
                    1.031}, {6.429, 1.031}, {6.429, 60.967}, {0.56, 
                    60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{6.192899999999999, 
                    30.980699999999995`}, {42.4399, 0.7526999999999973}, {
                    42.4399, 8.209699999999994}, {16.432899999999997`, 
                    30.982699999999994`}, {42.4119, 53.6547}, {42.4399, 
                    61.244699999999995`}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ + 
                    102 (-20), {1, 102 - -20 + 1}])}], 
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.3]]], 
                    GrayLevel[0.3], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5499, 30.980699999999995`}, {
                    36.7969, 0.7526999999999973}, {36.7969, 
                    8.209699999999994}, {10.7899, 30.982699999999994`}, {
                    36.7689, 53.6547}, {36.7969, 61.244699999999995`}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5499, 30.980699999999995`}, {
                    36.7969, 0.7526999999999973}, {36.7969, 
                    8.209699999999994}, {10.7899, 30.982699999999994`}, {
                    36.7689, 53.6547}, {36.7969, 61.244699999999995`}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ - 20, {
                    1, 102 - -20 + 1}])}], 
                    Pane[
                    Row[{"showing ", 1, "\[Dash]", 20, " of ", 
                    Style[
                    102, FontColor -> GrayLevel[0], FontWeight -> "Medium"]}, 
                    BaseStyle -> {
                    FontSize -> 8., FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]}], 150, ContentPadding -> False, 
                    Alignment -> {Center, Center}], 
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.3]]], 
                    GrayLevel[0.3], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5778000000000001, 
                    53.654399999999995`}, {26.5568, 30.982399999999995`}, {
                    0.5498000000000001, 8.209399999999995}, {
                    0.5498000000000001, 0.7523999999999944}, {
                    36.796800000000005`, 30.980399999999992`}, {
                    0.5498000000000001, 61.2454}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5778000000000001, 
                    53.654399999999995`}, {26.5568, 30.982399999999995`}, {
                    0.5498000000000001, 8.209399999999995}, {
                    0.5498000000000001, 0.7523999999999944}, {
                    36.796800000000005`, 30.980399999999992`}, {
                    0.5498000000000001, 61.2454}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ + 20, {
                    1, 102 - 20 + 1}])}], 
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.5]]], 
                    GrayLevel[0.5], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    36.571, 1.031}, {42.440999999999995`, 1.031}, {
                    42.440999999999995`, 60.967}, {36.571, 60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5598000000000001, 
                    53.788500000000006`}, {26.5668, 31.015500000000007`}, {
                    0.5878000000000001, 8.343500000000006}, {
                    0.5598000000000001, 0.7525000000000048}, {36.8068, 
                    31.017500000000005`}, {0.5598000000000001, 
                    61.24450000000001}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    36.571, 1.031}, {42.440999999999995`, 1.031}, {
                    42.440999999999995`, 60.967}, {36.571, 60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5598000000000001, 
                    53.788500000000006`}, {26.5668, 31.015500000000007`}, {
                    0.5878000000000001, 8.343500000000006}, {
                    0.5598000000000001, 0.7525000000000048}, {36.8068, 
                    31.017500000000005`}, {0.5598000000000001, 
                    61.24450000000001}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ + 
                    102 20, {1, 102 - 20 + 1}])}]}, "   "], 
                    Row[{
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.5]]], 
                    GrayLevel[0.5], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{0.56, 
                    1.031}, {6.429, 1.031}, {6.429, 60.967}, {0.56, 
                    60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{6.192899999999999, 
                    30.980699999999995`}, {42.4399, 0.7526999999999973}, {
                    42.4399, 8.209699999999994}, {16.432899999999997`, 
                    30.982699999999994`}, {42.4119, 53.6547}, {42.4399, 
                    61.244699999999995`}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{0.56, 
                    1.031}, {6.429, 1.031}, {6.429, 60.967}, {0.56, 
                    60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{6.192899999999999, 
                    30.980699999999995`}, {42.4399, 0.7526999999999973}, {
                    42.4399, 8.209699999999994}, {16.432899999999997`, 
                    30.982699999999994`}, {42.4119, 53.6547}, {42.4399, 
                    61.244699999999995`}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ + 
                    102 (-20), {1, 102 - -20 + 1}])}], 
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.3]]], 
                    GrayLevel[0.3], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5499, 30.980699999999995`}, {
                    36.7969, 0.7526999999999973}, {36.7969, 
                    8.209699999999994}, {10.7899, 30.982699999999994`}, {
                    36.7689, 53.6547}, {36.7969, 61.244699999999995`}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5499, 30.980699999999995`}, {
                    36.7969, 0.7526999999999973}, {36.7969, 
                    8.209699999999994}, {10.7899, 30.982699999999994`}, {
                    36.7689, 53.6547}, {36.7969, 61.244699999999995`}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ - 20, {
                    1, 102 - -20 + 1}])}], 
                    Pane[
                    Row[{"showing ", 1, "\[Dash]", 20, " of ", 
                    Style[
                    102, FontColor -> GrayLevel[0], FontWeight -> "Medium"]}, 
                    BaseStyle -> {
                    FontSize -> 8., FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]}], 150, ContentPadding -> False, 
                    Alignment -> {Center, Center}], 
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.3]]], 
                    GrayLevel[0.3], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5778000000000001, 
                    53.654399999999995`}, {26.5568, 30.982399999999995`}, {
                    0.5498000000000001, 8.209399999999995}, {
                    0.5498000000000001, 0.7523999999999944}, {
                    36.796800000000005`, 30.980399999999992`}, {
                    0.5498000000000001, 61.2454}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5778000000000001, 
                    53.654399999999995`}, {26.5568, 30.982399999999995`}, {
                    0.5498000000000001, 8.209399999999995}, {
                    0.5498000000000001, 0.7523999999999944}, {
                    36.796800000000005`, 30.980399999999992`}, {
                    0.5498000000000001, 61.2454}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ + 20, {
                    1, 102 - 20 + 1}])}], 
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.5]]], 
                    GrayLevel[0.5], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    36.571, 1.031}, {42.440999999999995`, 1.031}, {
                    42.440999999999995`, 60.967}, {36.571, 60.967}}}], 
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5598000000000001, 
                    53.788500000000006`}, {26.5668, 31.015500000000007`}, {
                    0.5878000000000001, 8.343500000000006}, {
                    0.5598000000000001, 0.7525000000000048}, {36.8068, 
                    31.017500000000005`}, {0.5598000000000001, 
                    61.24450000000001}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    36.571, 1.031}, {42.440999999999995`, 1.031}, {
                    42.440999999999995`, 60.967}, {36.571, 60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5598000000000001, 
                    53.788500000000006`}, {26.5668, 31.015500000000007`}, {
                    0.5878000000000001, 8.343500000000006}, {
                    0.5598000000000001, 0.7525000000000048}, {36.8068, 
                    31.017500000000005`}, {0.5598000000000001, 
                    61.24450000000001}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ + 
                    102 20, {1, 102 - 20 + 1}])}]}, "   "]]], Background -> 
                    GrayLevel[0.98], Alignment -> {Left, Top}, 
                    BaseStyle -> {ContextMenu -> {
                    MenuItem["Hide", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1667506318},
                     1, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 10 rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1667506318},
                     10, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 30 rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1667506318},
                     30, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 100 rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1667506318},
                     100, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show all", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1667506318},
                     100000000, {}]], MenuEvaluator -> Automatic]}}], 
                   SpanFromLeft}}, BaseStyle -> {ContextMenu -> {
                    MenuItem["Copy position to clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Copy data to clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Delimiter, 
                    MenuItem["Paste position in new cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Paste data in new cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic]}, FontFamily -> "Verdana", 
                   FontSize -> 12}, Alignment -> Left, RowMinHeight -> 1.5, 
                 Dividers -> All, FrameStyle -> GrayLevel[0.85], 
                 BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
                LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
                False, ShowAutoStyles -> False]], 
             TypeSystem`NestedGrid`PackagePrivate`initialQ = True, 
             TypeSystem`NestedGrid`PackagePrivate`self = $Failed}, 
            Dynamic[
             TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
             TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
                Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
                
                Module[{
                 TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
                  TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
                  TypeSystem`NestedGrid`PackagePrivate`LookupCacheValue[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$["Data"]]}, 
                 TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = 
                  If[TypeSystem`NestedGrid`PackagePrivate`tmpData$ === 
                    TypeSystem`NestedGrid`PackagePrivate`$NotCached, 
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                    TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1667506318][
                    TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
                   Not[
                    FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
                   TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
                   TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
              TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
              TypeSystem`NestedGrid`PackagePrivate`$pos$$; If[
                FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
                TypeSystem`SparseGrid[
                 TypeSystem`H["(data no longer present)"]], 
                If[GeneralUtilities`$DebugMode, 
                 Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
                   TypeSystem`NestedGrid`PackagePrivate`formatState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$]}], 
                 TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
             TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$pos$$}],
             DynamicModuleValues :> {}], 
          TypeSystem`NestedGrid`PackagePrivate`$posCell$$, 
          TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
            TypeSystem`NestedGrid`PackagePrivate`alignBar[
            TypeSystem`NestedGrid`PackagePrivate`$state$$][
             TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
              TypeSystem`PackageScope`Pathbar[
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
               TypeSystem`NestedGrid`PackagePrivate`updateState[
               TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1667506318]]]], 
            TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}],
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Framed[
            Dynamic[
             Replace[
              MouseAnnotation[Null], {
              TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1667506318][
                Null] -> "", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1667506318][
                 Pattern[TypeSystem`NestedGrid`PackagePrivate`path, 
                  Blank[]]] :> (
                TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
                 TypeSystem`NestedGrid`PackagePrivate`path; 
                TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
                 TypeSystem`NestedGrid`PackagePrivate`path, 
                  TypeSystem`NestedGrid`PackagePrivate`makePathElements]), 
               Null :> Spacer[10], Blank[] :> Spacer[10]}], 
             TrackedSymbols :> {}], FrameStyle -> None, ImageMargins -> 0, 
            FrameMargins -> 0, Alignment -> Top, 
            ImageSize -> {Automatic, 14}]}, 
         DynamicBox[
          ToBoxes[
           Column[
            If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, {
              TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
               TypeSystem`NestedGrid`PackagePrivate`$state$$, 
               TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
              TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
               TypeSystem`NestedGrid`PackagePrivate`alignBar[
               TypeSystem`NestedGrid`PackagePrivate`$state$$][
               TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}, {
             TypeSystem`NestedGrid`PackagePrivate`$topBar$$, 
              TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
               TypeSystem`NestedGrid`PackagePrivate`$state$$, 
               TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
              TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
               TypeSystem`NestedGrid`PackagePrivate`alignBar[
               TypeSystem`NestedGrid`PackagePrivate`$state$$][
               TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}], 
            Spacings -> 
            If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, 
              0, {{}, {0, 0.05, 0}}]], StandardForm], 
          ImageSizeCache -> {254., {279., 285.}}, 
          TrackedSymbols :> {
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
            TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
         BaseStyle -> {LineBreakWithin -> False}, Deinitialization :> 
         TypeSystem`NestedGrid`PackagePrivate`deleteState[
          TypeSystem`NestedGrid`PackagePrivate`$state$$], 
         DynamicModuleValues :> {}, Initialization :> 
         Block[{$ContextPath = $ContextPath}, 
           Needs["TypeSystem`"]]], Deploy, DefaultBaseStyle -> "Deploy"]},
      "CopyTag",
      DisplayFunction->(#& ),
      InterpretationFunction->("Dataset[<>]"& )]}
   },
   AutoDelete->False,
   GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{3.77418771234791*^9, 3.7741878026849103`*^9},
 CellLabel->
  "Out[669]=",ExpressionUUID->"19ced1f9-7b1d-4702-a56c-1308ec5580d9"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"readingsDB", "=", 
  RowBox[{"DatabinAdd", "[", 
   RowBox[{"readingsDB", ",", 
    RowBox[{"<|", 
     RowBox[{"\"\<reading\>\"", "\[Rule]", 
      RowBox[{"RandomInteger", "[", 
       RowBox[{"{", 
        RowBox[{"0", ",", "100"}], "}"}], "]"}]}], "|>"}]}], "]"}]}]], "Input",
 CellLabel->
  "In[671]:=",ExpressionUUID->"7ef3cd4f-2f4b-4397-89cd-046ec2eb8143"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"readingsDS", "[", 
   RowBox[{
    RowBox[{";;", "3"}], ",", "Framed"}], "]"}], "//", 
  "Normal"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"readingsDS", "[", 
   RowBox[{
    RowBox[{";;", "3"}], ",", 
    RowBox[{"Query", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\"\<reading\>\"", "/*", "Framed"}], ",", 
       RowBox[{"\"\<Timestamp\>\"", "/*", "Framed"}]}], "}"}], "]"}]}], "]"}],
   "//", "Normal"}], "\[IndentingNewLine]", 
 RowBox[{"readingsDS", "[", 
  RowBox[{
   RowBox[{";;", "3"}], ",", 
   RowBox[{"Query", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\"\<reading\>\"", "/*", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Style", "[", 
          RowBox[{"#", ",", 
           RowBox[{"FontFamily", "\[Rule]", "\"\<Arial\>\""}], ",", 
           RowBox[{"FontSize", "\[Rule]", "8"}], ",", "Bold"}], "]"}], "&"}], 
        ")"}]}], ",", 
      RowBox[{"\"\<Timestamp\>\"", "/*", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Style", "[", 
          RowBox[{
           RowBox[{"DateString", "[", "#", "]"}], ",", 
           RowBox[{"FontFamily", "\[Rule]", "\"\<Arial\>\""}], ",", 
           RowBox[{"FontSize", "\[Rule]", "8"}], ",", "Bold"}], "]"}], "&"}], 
        ")"}]}]}], "}"}], "]"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"readingsDS", "[", 
   RowBox[{
    RowBox[{";;", "3"}], ",", 
    RowBox[{"Query", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\"\<reading\>\"", "/*", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Style", "[", 
           RowBox[{"#", ",", 
            RowBox[{"FontFamily", "\[Rule]", "\"\<Arial\>\""}], ",", 
            RowBox[{"FontSize", "\[Rule]", "8"}], ",", "Bold"}], "]"}], "&"}],
          ")"}]}], ",", 
       RowBox[{"\"\<Timestamp\>\"", "/*", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Style", "[", 
           RowBox[{
            RowBox[{"DateString", "[", "#", "]"}], ",", 
            RowBox[{"FontFamily", "\[Rule]", "\"\<Arial\>\""}], ",", 
            RowBox[{"FontSize", "\[Rule]", "8"}], ",", "Bold"}], "]"}], "&"}],
          ")"}]}]}], "}"}], "]"}]}], "]"}], "//", "Normal"}]}], "Input",
 CellLabel->
  "In[672]:=",ExpressionUUID->"2c2c08bb-5101-43a7-93fa-fc1dbed34be3"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   FrameBox[
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{"\<\"reading\"\>", "\[Rule]", "87"}], ",", 
      RowBox[{"\<\"Timestamp\"\>", "\[Rule]", 
       TemplateBox[{RowBox[{"\"Mon 5 Aug 2019 14:56:54\"", 
           StyleBox[
            RowBox[{"\"GMT\"", "\[InvisibleSpace]", 
              StyleBox[
               RowBox[{"-", "4.`"}], NumberMarks -> False, StripOnInput -> 
               False]}], FontColor -> GrayLevel[0.5]]}],
         RowBox[{"DateObject", "[", 
           RowBox[{
             RowBox[{"{", 
               
               RowBox[{
                "2019", ",", "8", ",", "5", ",", "14", ",", "56", ",", 
                 "54.776000022888184`"}], "}"}], ",", "\"Instant\"", ",", 
             "\"Gregorian\"", ",", 
             RowBox[{"-", "4.`"}]}], "]"}]},
        "DateObject",
        Editable->False]}]}], "\[RightAssociation]"}],
    StripOnInput->False], ",", 
   FrameBox[
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{"\<\"reading\"\>", "\[Rule]", "84"}], ",", 
      RowBox[{"\<\"Timestamp\"\>", "\[Rule]", 
       TemplateBox[{RowBox[{"\"Mon 5 Aug 2019 15:56:32\"", 
           StyleBox[
            RowBox[{"\"GMT\"", "\[InvisibleSpace]", 
              StyleBox[
               RowBox[{"-", "4.`"}], NumberMarks -> False, StripOnInput -> 
               False]}], FontColor -> GrayLevel[0.5]]}],
         RowBox[{"DateObject", "[", 
           RowBox[{
             RowBox[{"{", 
               
               RowBox[{
                "2019", ",", "8", ",", "5", ",", "15", ",", "56", ",", 
                 "32.551000118255615`"}], "}"}], ",", "\"Instant\"", ",", 
             "\"Gregorian\"", ",", 
             RowBox[{"-", "4.`"}]}], "]"}]},
        "DateObject",
        Editable->False]}]}], "\[RightAssociation]"}],
    StripOnInput->False], ",", 
   FrameBox[
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{"\<\"reading\"\>", "\[Rule]", "80"}], ",", 
      RowBox[{"\<\"Timestamp\"\>", "\[Rule]", 
       TemplateBox[{RowBox[{"\"Mon 5 Aug 2019 16:25:35\"", 
           StyleBox[
            RowBox[{"\"GMT\"", "\[InvisibleSpace]", 
              StyleBox[
               RowBox[{"-", "4.`"}], NumberMarks -> False, StripOnInput -> 
               False]}], FontColor -> GrayLevel[0.5]]}],
         RowBox[{"DateObject", "[", 
           RowBox[{
             RowBox[{"{", 
               
               RowBox[{
                "2019", ",", "8", ",", "5", ",", "16", ",", "25", ",", 
                 "35.40500020980835`"}], "}"}], ",", "\"Instant\"", ",", 
             "\"Gregorian\"", ",", 
             RowBox[{"-", "4.`"}]}], "]"}]},
        "DateObject",
        Editable->False]}]}], "\[RightAssociation]"}],
    StripOnInput->False]}], "}"}]], "Output",
 CellChangeTimes->{3.7741881210900393`*^9},
 CellLabel->
  "Out[672]=",ExpressionUUID->"73418c24-ac22-41e8-af5f-4c5fe358127c"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     FrameBox["87",
      StripOnInput->False], ",", 
     FrameBox[
      TemplateBox[{RowBox[{"\"Mon 5 Aug 2019 14:56:54\"", 
          StyleBox[
           RowBox[{"\"GMT\"", "\[InvisibleSpace]", 
             StyleBox[
              RowBox[{"-", "4.`"}], NumberMarks -> False, StripOnInput -> 
              False]}], FontColor -> GrayLevel[0.5]]}],
        RowBox[{"DateObject", "[", 
          RowBox[{
            RowBox[{"{", 
              
              RowBox[{"2019", ",", "8", ",", "5", ",", "14", ",", "56", ",", 
                "54.776000022888184`"}], "}"}], ",", "\"Instant\"", ",", 
            "\"Gregorian\"", ",", 
            RowBox[{"-", "4.`"}]}], "]"}]},
       "DateObject",
       Editable->False],
      StripOnInput->False]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FrameBox["84",
      StripOnInput->False], ",", 
     FrameBox[
      TemplateBox[{RowBox[{"\"Mon 5 Aug 2019 15:56:32\"", 
          StyleBox[
           RowBox[{"\"GMT\"", "\[InvisibleSpace]", 
             StyleBox[
              RowBox[{"-", "4.`"}], NumberMarks -> False, StripOnInput -> 
              False]}], FontColor -> GrayLevel[0.5]]}],
        RowBox[{"DateObject", "[", 
          RowBox[{
            RowBox[{"{", 
              
              RowBox[{"2019", ",", "8", ",", "5", ",", "15", ",", "56", ",", 
                "32.551000118255615`"}], "}"}], ",", "\"Instant\"", ",", 
            "\"Gregorian\"", ",", 
            RowBox[{"-", "4.`"}]}], "]"}]},
       "DateObject",
       Editable->False],
      StripOnInput->False]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FrameBox["80",
      StripOnInput->False], ",", 
     FrameBox[
      TemplateBox[{RowBox[{"\"Mon 5 Aug 2019 16:25:35\"", 
          StyleBox[
           RowBox[{"\"GMT\"", "\[InvisibleSpace]", 
             StyleBox[
              RowBox[{"-", "4.`"}], NumberMarks -> False, StripOnInput -> 
              False]}], FontColor -> GrayLevel[0.5]]}],
        RowBox[{"DateObject", "[", 
          RowBox[{
            RowBox[{"{", 
              
              RowBox[{"2019", ",", "8", ",", "5", ",", "16", ",", "25", ",", 
                "35.40500020980835`"}], "}"}], ",", "\"Instant\"", ",", 
            "\"Gregorian\"", ",", 
            RowBox[{"-", "4.`"}]}], "]"}]},
       "DateObject",
       Editable->False],
      StripOnInput->False]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.77418812111304*^9},
 CellLabel->
  "Out[673]=",ExpressionUUID->"939ada98-232f-4a5d-8d8b-73262c32d9f6"],

Cell[BoxData[
 TemplateBox[{TagBox[
    DynamicModuleBox[{
     TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
      Data`UnorderedAssociation[
       "RowCount" -> 3, "Length" -> 3, "InitialType" -> TypeSystem`Vector[
          TypeSystem`Vector[TypeSystem`AnyType, 2], 3], "Shape" -> 
        TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`MatrixShape[3, 2], 3, {All}], "InitialData" -> 
        TypeSystem`PackageScope`CacheHandle[1016633027], "Type" -> 
        TypeSystem`Vector[
          TypeSystem`Vector[TypeSystem`AnyType, 2], 3], "HandleQ" -> True, 
        "RowTarget" -> 20, "Data" -> 
        TypeSystem`PackageScope`CacheHandle[1016633027]], 
      TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
      TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 1, 
      TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
      DynamicModule[{
        TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
           Style[
            Grid[{{
               Pane[
                Annotation[
                 Style[87, FontFamily -> "Arial", FontSize -> 8, Bold], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1100770280][
                  GeneralUtilities`Slice[1, 1]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 Style[
                 "Mon 5 Aug 2019 14:56:54", FontFamily -> "Arial", FontSize -> 
                  8, Bold], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1100770280][
                  GeneralUtilities`Slice[1, 2]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 Style[84, FontFamily -> "Arial", FontSize -> 8, Bold], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1100770280][
                  GeneralUtilities`Slice[2, 1]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 Style[
                 "Mon 5 Aug 2019 15:56:32", FontFamily -> "Arial", FontSize -> 
                  8, Bold], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1100770280][
                  GeneralUtilities`Slice[2, 2]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 Style[80, FontFamily -> "Arial", FontSize -> 8, Bold], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1100770280][
                  GeneralUtilities`Slice[3, 1]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 Style[
                 "Mon 5 Aug 2019 16:25:35", FontFamily -> "Arial", FontSize -> 
                  8, Bold], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1100770280][
                  GeneralUtilities`Slice[3, 2]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}}, BaseStyle -> {ContextMenu -> {
                 MenuItem["Copy position to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Copy data to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], Delimiter, 
                 MenuItem["Paste position in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Paste data in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic]}, FontFamily -> "Verdana", 
               FontSize -> 12}, Alignment -> Left, RowMinHeight -> 1.5, 
             Dividers -> All, FrameStyle -> GrayLevel[0.85], 
             BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
            LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False,
             ShowAutoStyles -> False]], 
         TypeSystem`NestedGrid`PackagePrivate`initialQ = True, 
         TypeSystem`NestedGrid`PackagePrivate`self = $Failed}, 
        Dynamic[
         TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
         TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
            Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
            
            Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
              TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
              TypeSystem`NestedGrid`PackagePrivate`LookupCacheValue[
                TypeSystem`NestedGrid`PackagePrivate`$state$$["Data"]]}, 
             TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = 
              If[TypeSystem`NestedGrid`PackagePrivate`tmpData$ === 
                TypeSystem`NestedGrid`PackagePrivate`$NotCached, 
                TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1100770280][
                TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
               Not[
                FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
               TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
               TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
          TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
          TypeSystem`NestedGrid`PackagePrivate`$pos$$; If[
            FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
            TypeSystem`SparseGrid[
             TypeSystem`H["(data no longer present)"]], 
            If[GeneralUtilities`$DebugMode, 
             Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
               TypeSystem`NestedGrid`PackagePrivate`formatState[
               TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                TypeSystem`NestedGrid`PackagePrivate`$pos$$]}], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
         TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$pos$$}], 
        DynamicModuleValues :> {}], 
      TypeSystem`NestedGrid`PackagePrivate`$posCell$$, 
      TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
        TypeSystem`NestedGrid`PackagePrivate`alignBar[
        TypeSystem`NestedGrid`PackagePrivate`$state$$][
         TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
          TypeSystem`PackageScope`Pathbar[
          TypeSystem`NestedGrid`PackagePrivate`$path$$, 
           TypeSystem`NestedGrid`PackagePrivate`updateState[
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
            TypeSystem`NestedGrid`PackagePrivate`$path$$, 
            TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1100770280]]]], 
        TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
      TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Framed[
        Dynamic[
         Replace[
          MouseAnnotation[Null], {
          TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1100770280][Null] -> 
           "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1100770280][
             Pattern[TypeSystem`NestedGrid`PackagePrivate`path, 
              Blank[]]] :> (
            TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
             TypeSystem`NestedGrid`PackagePrivate`path; 
            TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
             TypeSystem`NestedGrid`PackagePrivate`path, 
              TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
           Spacer[10], Blank[] :> Spacer[10]}], TrackedSymbols :> {}], 
        FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
        Top, ImageSize -> {Automatic, 14}]}, 
     DynamicBox[
      ToBoxes[
       Column[
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, {
          TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
          TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`alignBar[
           TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}, {
         TypeSystem`NestedGrid`PackagePrivate`$topBar$$, 
          TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
          TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`alignBar[
           TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}], Spacings -> 
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, 
          0, {{}, {0, 0.05, 0}}]], StandardForm], 
      ImageSizeCache -> {170., {41., 47.}}, 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     BaseStyle -> {LineBreakWithin -> False}, Deinitialization :> 
     TypeSystem`NestedGrid`PackagePrivate`deleteState[
      TypeSystem`NestedGrid`PackagePrivate`$state$$], 
     DynamicModuleValues :> {}, Initialization :> 
     Block[{$ContextPath = $ContextPath}, 
       Needs["TypeSystem`"]]], Deploy, DefaultBaseStyle -> "Deploy"]},
  "CopyTag",
  DisplayFunction->(#& ),
  InterpretationFunction->("Dataset[<>]"& )]], "Output",
 CellChangeTimes->{3.77418812123205*^9},
 CellLabel->
  "Out[674]=",ExpressionUUID->"dee30ace-b33a-48f0-b8b8-db0e7dd2f78d"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     StyleBox["87",
      StripOnInput->False,
      FontFamily->"Arial",
      FontSize->8,
      FontWeight->Bold], ",", 
     StyleBox["\<\"Mon 5 Aug 2019 14:56:54\"\>",
      StripOnInput->False,
      FontFamily->"Arial",
      FontSize->8,
      FontWeight->Bold]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     StyleBox["84",
      StripOnInput->False,
      FontFamily->"Arial",
      FontSize->8,
      FontWeight->Bold], ",", 
     StyleBox["\<\"Mon 5 Aug 2019 15:56:32\"\>",
      StripOnInput->False,
      FontFamily->"Arial",
      FontSize->8,
      FontWeight->Bold]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     StyleBox["80",
      StripOnInput->False,
      FontFamily->"Arial",
      FontSize->8,
      FontWeight->Bold], ",", 
     StyleBox["\<\"Mon 5 Aug 2019 16:25:35\"\>",
      StripOnInput->False,
      FontFamily->"Arial",
      FontSize->8,
      FontWeight->Bold]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.7741881212870398`*^9},
 CellLabel->
  "Out[675]=",ExpressionUUID->"64318e6a-66c9-49a6-b31a-7daee42e648a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"readingsDS", "[", 
   RowBox[{"First", ",", "Keys", ",", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Style", "[", 
       RowBox[{"#", ",", 
        RowBox[{"FontFamily", "\[Rule]", "\"\<Alegreya SC\>\""}], ",", 
        RowBox[{"FontSize", "\[Rule]", "14"}], ",", "Bold"}], "]"}], "&"}], 
     ")"}]}], "]"}], "//", "Normal"}], "\[IndentingNewLine]", 
 RowBox[{"Normal", "[", 
  RowBox[{"readingsDS", "[", 
   RowBox[{"First", ",", "Keys", ",", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Style", "[", 
       RowBox[{"#", ",", 
        RowBox[{"FontFamily", "\[Rule]", "\"\<Alegreya SC\>\""}], ",", 
        RowBox[{"FontSize", "\[Rule]", "14"}], ",", "Bold"}], "]"}], "&"}], 
     ")"}]}], "]"}], "]"}]}], "Input",
 CellChangeTimes->{3.7741881753673525`*^9},
 CellLabel->
  "In[676]:=",ExpressionUUID->"54bc293a-55ff-44b1-ba0c-32b0be8c84d4"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   StyleBox["\<\"reading\"\>",
    StripOnInput->False,
    FontFamily->"Alegreya SC",
    FontSize->14,
    FontWeight->Bold], ",", 
   StyleBox["\<\"Timestamp\"\>",
    StripOnInput->False,
    FontFamily->"Alegreya SC",
    FontSize->14,
    FontWeight->Bold]}], "}"}]], "Output",
 CellChangeTimes->{3.7741881769133186`*^9},
 CellLabel->
  "Out[676]=",ExpressionUUID->"8fb89fe7-0475-43b1-83d3-d9744b4b629d"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   StyleBox["\<\"reading\"\>",
    StripOnInput->False,
    FontFamily->"Alegreya SC",
    FontSize->14,
    FontWeight->Bold], ",", 
   StyleBox["\<\"Timestamp\"\>",
    StripOnInput->False,
    FontFamily->"Alegreya SC",
    FontSize->14,
    FontWeight->Bold]}], "}"}]], "Output",
 CellChangeTimes->{3.7741881769223194`*^9},
 CellLabel->
  "Out[677]=",ExpressionUUID->"54aeff55-7041-44b7-93a2-d6772c169560"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Join", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"Normal", "[", 
     RowBox[{"readingsDS", "[", 
      RowBox[{"First", ",", "Keys", ",", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Style", "[", 
          RowBox[{"#", ",", 
           RowBox[{"FontFamily", "\[Rule]", "\"\<Alegreya SC\>\""}], ",", 
           RowBox[{"FontSize", "\[Rule]", "14"}], ",", "Bold"}], "]"}], "&"}],
         ")"}]}], "]"}], "]"}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"Normal", "[", 
    RowBox[{"readingsDS", "[", 
     RowBox[{
      RowBox[{";;", "3"}], ",", 
      RowBox[{"Query", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"\"\<reading\>\"", "/*", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"Style", "[", 
             RowBox[{"#", ",", 
              RowBox[{"FontFamily", "\[Rule]", "\"\<Arial\>\""}], ",", 
              RowBox[{"FontSize", "\[Rule]", "8"}], ",", "Bold"}], "]"}], 
            "&"}], ")"}]}], ",", 
         RowBox[{"\"\<Timestamp\>\"", "/*", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"Style", "[", 
             RowBox[{
              RowBox[{"DateString", "[", "#", "]"}], ",", 
              RowBox[{"FontFamily", "\[Rule]", "\"\<Arial\>\""}], ",", 
              RowBox[{"FontSize", "\[Rule]", "8"}], ",", "Bold"}], "]"}], 
            "&"}], ")"}]}]}], "}"}], "]"}]}], "]"}], "]"}]}], 
  "\[IndentingNewLine]", "]"}]], "Input",
 CellLabel->
  "In[678]:=",ExpressionUUID->"4a73e747-24c1-41bf-abf4-c8836e6f2529"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     StyleBox["\<\"reading\"\>",
      StripOnInput->False,
      FontFamily->"Alegreya SC",
      FontSize->14,
      FontWeight->Bold], ",", 
     StyleBox["\<\"Timestamp\"\>",
      StripOnInput->False,
      FontFamily->"Alegreya SC",
      FontSize->14,
      FontWeight->Bold]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     StyleBox["87",
      StripOnInput->False,
      FontFamily->"Arial",
      FontSize->8,
      FontWeight->Bold], ",", 
     StyleBox["\<\"Mon 5 Aug 2019 14:56:54\"\>",
      StripOnInput->False,
      FontFamily->"Arial",
      FontSize->8,
      FontWeight->Bold]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     StyleBox["84",
      StripOnInput->False,
      FontFamily->"Arial",
      FontSize->8,
      FontWeight->Bold], ",", 
     StyleBox["\<\"Mon 5 Aug 2019 15:56:32\"\>",
      StripOnInput->False,
      FontFamily->"Arial",
      FontSize->8,
      FontWeight->Bold]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     StyleBox["80",
      StripOnInput->False,
      FontFamily->"Arial",
      FontSize->8,
      FontWeight->Bold], ",", 
     StyleBox["\<\"Mon 5 Aug 2019 16:25:35\"\>",
      StripOnInput->False,
      FontFamily->"Arial",
      FontSize->8,
      FontWeight->Bold]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.774188200921318*^9},
 CellLabel->
  "Out[678]=",ExpressionUUID->"0f00bc76-cba7-45de-ae4a-25cc1d1bd2e4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"readingsDS", "[", 
  RowBox[{
   RowBox[{";;", "3"}], ",", 
   RowBox[{"Query", "[", 
    RowBox[{"{", 
     RowBox[{"\"\<reading\>\"", ",", 
      RowBox[{"\"\<Timestamp\>\"", "/*", "DateString"}]}], "}"}], "]"}]}], 
  "]"}]], "Input",
 CellLabel->
  "In[679]:=",ExpressionUUID->"aaab5a3c-19f0-4a4d-886e-fe36f31c895d"],

Cell[BoxData[
 TemplateBox[{TagBox[
    DynamicModuleBox[{
     TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
      Data`UnorderedAssociation[
       "RowCount" -> 3, "Length" -> 3, "InitialType" -> TypeSystem`Vector[
          TypeSystem`Tuple[{
            TypeSystem`Atom[Integer], 
            TypeSystem`Atom[String]}], 3], "Shape" -> 
        TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`ColumnShape[
           TypeSystem`PackageScope`RowShape[{
             TypeSystem`PackageScope`AtomShape[34], 
             TypeSystem`PackageScope`AtomShape[220.80000000000004`]}]], 
          3, {}], "InitialData" -> 
        TypeSystem`PackageScope`CacheHandle[942246707], "Type" -> 
        TypeSystem`Vector[
          TypeSystem`Tuple[{
            TypeSystem`Atom[Integer], 
            TypeSystem`Atom[String]}], 3], "HandleQ" -> True, "RowTarget" -> 
        20, "Data" -> TypeSystem`PackageScope`CacheHandle[942246707]], 
      TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
      TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 1, 
      TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
      DynamicModule[{
        TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
           Style[
            Grid[{{
               Pane[
                Annotation[
                 RawBoxes["87"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1741028738][
                  GeneralUtilities`Slice[1, 1]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Mon 5 Aug 2019 14:56:54", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1741028738][
                  GeneralUtilities`Slice[1, 2]], "Mouse"], 
                ImageSize -> {{220.80000000000004`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["84"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1741028738][
                  GeneralUtilities`Slice[2, 1]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Mon 5 Aug 2019 15:56:32", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1741028738][
                  GeneralUtilities`Slice[2, 2]], "Mouse"], 
                ImageSize -> {{220.80000000000004`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["80"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1741028738][
                  GeneralUtilities`Slice[3, 1]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Mon 5 Aug 2019 16:25:35", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1741028738][
                  GeneralUtilities`Slice[3, 2]], "Mouse"], 
                ImageSize -> {{220.80000000000004`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}}, BaseStyle -> {ContextMenu -> {
                 MenuItem["Copy position to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Copy data to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], Delimiter, 
                 MenuItem["Paste position in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Paste data in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic]}, FontFamily -> "Verdana", 
               FontSize -> 12}, Alignment -> Left, RowMinHeight -> 1.5, 
             Dividers -> All, FrameStyle -> GrayLevel[0.85], 
             BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
            LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False,
             ShowAutoStyles -> False]], 
         TypeSystem`NestedGrid`PackagePrivate`initialQ = True, 
         TypeSystem`NestedGrid`PackagePrivate`self = $Failed}, 
        Dynamic[
         TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
         TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
            Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
            
            Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
              TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
              TypeSystem`NestedGrid`PackagePrivate`LookupCacheValue[
                TypeSystem`NestedGrid`PackagePrivate`$state$$["Data"]]}, 
             TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = 
              If[TypeSystem`NestedGrid`PackagePrivate`tmpData$ === 
                TypeSystem`NestedGrid`PackagePrivate`$NotCached, 
                TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1741028738][
                TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
               Not[
                FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
               TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
               TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
          TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
          TypeSystem`NestedGrid`PackagePrivate`$pos$$; If[
            FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
            TypeSystem`SparseGrid[
             TypeSystem`H["(data no longer present)"]], 
            If[GeneralUtilities`$DebugMode, 
             Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
               TypeSystem`NestedGrid`PackagePrivate`formatState[
               TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                TypeSystem`NestedGrid`PackagePrivate`$pos$$]}], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
         TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$pos$$}], 
        DynamicModuleValues :> {}], 
      TypeSystem`NestedGrid`PackagePrivate`$posCell$$, 
      TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
        TypeSystem`NestedGrid`PackagePrivate`alignBar[
        TypeSystem`NestedGrid`PackagePrivate`$state$$][
         TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
          TypeSystem`PackageScope`Pathbar[
          TypeSystem`NestedGrid`PackagePrivate`$path$$, 
           TypeSystem`NestedGrid`PackagePrivate`updateState[
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
            TypeSystem`NestedGrid`PackagePrivate`$path$$, 
            TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1741028738]]]], 
        TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
      TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Framed[
        Dynamic[
         Replace[
          MouseAnnotation[Null], {
          TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1741028738][Null] -> 
           "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1741028738][
             Pattern[TypeSystem`NestedGrid`PackagePrivate`path, 
              Blank[]]] :> (
            TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
             TypeSystem`NestedGrid`PackagePrivate`path; 
            TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
             TypeSystem`NestedGrid`PackagePrivate`path, 
              TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
           Spacer[10], Blank[] :> Spacer[10]}], TrackedSymbols :> {}], 
        FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
        Top, ImageSize -> {Automatic, 14}]}, 
     DynamicBox[
      ToBoxes[
       Column[
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, {
          TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
          TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`alignBar[
           TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}, {
         TypeSystem`NestedGrid`PackagePrivate`$topBar$$, 
          TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
          TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`alignBar[
           TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}], Spacings -> 
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, 
          0, {{}, {0, 0.05, 0}}]], StandardForm], 
      ImageSizeCache -> {275., {42., 48.}}, 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     BaseStyle -> {LineBreakWithin -> False}, Deinitialization :> 
     TypeSystem`NestedGrid`PackagePrivate`deleteState[
      TypeSystem`NestedGrid`PackagePrivate`$state$$], 
     DynamicModuleValues :> {}, Initialization :> 
     Block[{$ContextPath = $ContextPath}, 
       Needs["TypeSystem`"]]], Deploy, DefaultBaseStyle -> "Deploy"]},
  "CopyTag",
  DisplayFunction->(#& ),
  InterpretationFunction->("Dataset[<>]"& )]], "Output",
 CellChangeTimes->{3.7741882024013186`*^9},
 CellLabel->
  "Out[679]=",ExpressionUUID->"479e088b-9264-40ad-a2de-82984f4a3add"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", 
   RowBox[{"rows", ",", "grd"}], "]"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"grd", "[", 
    RowBox[{"data_", ",", "rows_"}], "]"}], ":=", 
   RowBox[{"Grid", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Join", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"Normal", "[", 
         RowBox[{"data", "[", 
          RowBox[{"First", ",", "Keys", ",", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"Style", "[", 
              RowBox[{"#", ",", 
               RowBox[{"FontFamily", "\[Rule]", "\"\<Alegreya SC\>\""}], ",", 
               RowBox[{"FontSize", "\[Rule]", "14"}], ",", "Bold"}], "]"}], 
             "&"}], ")"}]}], "]"}], "]"}], "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{"Normal", "[", 
        RowBox[{"data", "[", 
         RowBox[{
          RowBox[{";;", "rows"}], ",", 
          RowBox[{"Query", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"\"\<reading\>\"", "/*", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"Style", "[", 
                 RowBox[{"#", ",", 
                  RowBox[{"FontFamily", "\[Rule]", "\"\<Arial\>\""}], ",", 
                  RowBox[{"FontSize", "\[Rule]", "8"}], ",", "Bold"}], "]"}], 
                "&"}], ")"}]}], ",", 
             RowBox[{"\"\<Timestamp\>\"", "/*", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"Style", "[", 
                 RowBox[{
                  RowBox[{"DateString", "[", "#", "]"}], ",", 
                  RowBox[{"FontFamily", "\[Rule]", "\"\<Arial\>\""}], ",", 
                  RowBox[{"FontSize", "\[Rule]", "8"}], ",", "Bold"}], "]"}], 
                "&"}], ")"}]}]}], "}"}], "]"}]}], "]"}], "]"}]}], 
      "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"Background", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"None", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"1", "\[Rule]", "LightBlue"}], ",", 
          RowBox[{"Flatten", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"1", "\[Rule]", "LightBlue"}], ",", 
             RowBox[{
              RowBox[{
               RowBox[{"#", "->", 
                RowBox[{"Lighter", "[", "LightGray", "]"}]}], "&"}], "/@", 
              RowBox[{"Range", "[", 
               RowBox[{"3", ",", 
                RowBox[{"rows", "+", "2"}], ",", "2"}], "]"}]}]}], "}"}], 
           "]"}]}], "}"}]}], "}"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"Frame", "\[Rule]", "All"}], ",", "\[IndentingNewLine]", 
     RowBox[{"FrameStyle", "\[Rule]", 
      RowBox[{"Directive", "[", "LightGray", "]"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Spacings", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "1", ",", "1"}], "}"}], ",", 
        RowBox[{"Table", "[", 
         RowBox[{".5", ",", 
          RowBox[{"{", 
           RowBox[{"(", 
            RowBox[{"rows", "+", "2"}], ")"}], "}"}]}], "]"}]}], "}"}]}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"grd", "[", 
  RowBox[{"readingsDS", ",", "5"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"%", "//", "Head"}]}], "Input",
 CellChangeTimes->{{3.774008239264717*^9, 3.7740082802521915`*^9}, {
   3.7740083184171634`*^9, 3.774008368679165*^9}, 3.774008415123388*^9, 
   3.7740085858797913`*^9, {3.774008621419853*^9, 3.774008645500801*^9}, {
   3.7740087751488447`*^9, 3.774008830889803*^9}, {3.7740094466334505`*^9, 
   3.774009475273549*^9}, {3.7740102587578063`*^9, 3.7740102679527693`*^9}, {
   3.7740114743088655`*^9, 3.7740114769638724`*^9}, {3.7740217834337263`*^9, 
   3.7740217960137005`*^9}, {3.7740255769913874`*^9, 3.774025623144609*^9}, {
   3.7740257174747725`*^9, 3.774025738829547*^9}, 3.774188244535323*^9},
 CellLabel->
  "In[684]:=",ExpressionUUID->"55aa9a47-fc2d-4a11-962b-6bfd575ebd0b"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     StyleBox["\<\"reading\"\>",
      StripOnInput->False,
      FontFamily->"Alegreya SC",
      FontSize->14,
      FontWeight->Bold], 
     StyleBox["\<\"Timestamp\"\>",
      StripOnInput->False,
      FontFamily->"Alegreya SC",
      FontSize->14,
      FontWeight->Bold]},
    {
     StyleBox["87",
      StripOnInput->False,
      FontFamily->"Arial",
      FontSize->8,
      FontWeight->Bold], 
     StyleBox["\<\"Mon 5 Aug 2019 14:56:54\"\>",
      StripOnInput->False,
      FontFamily->"Arial",
      FontSize->8,
      FontWeight->Bold]},
    {
     StyleBox["84",
      StripOnInput->False,
      FontFamily->"Arial",
      FontSize->8,
      FontWeight->Bold], 
     StyleBox["\<\"Mon 5 Aug 2019 15:56:32\"\>",
      StripOnInput->False,
      FontFamily->"Arial",
      FontSize->8,
      FontWeight->Bold]},
    {
     StyleBox["80",
      StripOnInput->False,
      FontFamily->"Arial",
      FontSize->8,
      FontWeight->Bold], 
     StyleBox["\<\"Mon 5 Aug 2019 16:25:35\"\>",
      StripOnInput->False,
      FontFamily->"Arial",
      FontSize->8,
      FontWeight->Bold]},
    {
     StyleBox["80",
      StripOnInput->False,
      FontFamily->"Arial",
      FontSize->8,
      FontWeight->Bold], 
     StyleBox["\<\"Mon 5 Aug 2019 16:11:51\"\>",
      StripOnInput->False,
      FontFamily->"Arial",
      FontSize->8,
      FontWeight->Bold]},
    {
     StyleBox["76",
      StripOnInput->False,
      FontFamily->"Arial",
      FontSize->8,
      FontWeight->Bold], 
     StyleBox["\<\"Tue 6 Aug 2019 08:56:17\"\>",
      StripOnInput->False,
      FontFamily->"Arial",
      FontSize->8,
      FontWeight->Bold]}
   },
   AutoDelete->False,
   FrameStyle->Directive[
     GrayLevel[0.85]],
   GridBoxBackground->{
    "Columns" -> {{None}}, 
     "Rows" -> {
      1 -> RGBColor[0.87, 0.94, 1], {
       1 -> RGBColor[0.87, 0.94, 1], 3 -> RGBColor[0.9, 0.9, 0.9], 5 -> 
        RGBColor[0.9, 0.9, 0.9], 7 -> RGBColor[0.9, 0.9, 0.9]}}, 
     "RowsIndexed" -> {
      1 -> RGBColor[0.87, 0.94, 1], 3 -> RGBColor[0.9, 0.9, 0.9], 5 -> 
       RGBColor[0.9, 0.9, 0.9], 7 -> RGBColor[0.9, 0.9, 0.9]}},
   GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{
    "Columns" -> {1, 1, 1}, "Rows" -> {0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5}}],
  "Grid"]], "Output",
 CellChangeTimes->{{3.774188229228318*^9, 3.7741882453443565`*^9}},
 CellLabel->
  "Out[686]=",ExpressionUUID->"74ea5497-2fe8-43da-93bf-34d068cb6667"],

Cell[BoxData["Grid"], "Output",
 CellChangeTimes->{{3.774188229228318*^9, 3.7741882453503537`*^9}},
 CellLabel->
  "Out[687]=",ExpressionUUID->"2411946d-5840-454f-a306-fe248a045f21"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Framed", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"grd", "[", 
    RowBox[{"readingsDS", ",", "5"}], "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"ImageSize", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"wPX", "[", "200", "]"}], ",", 
      RowBox[{"hPX", "[", 
       RowBox[{"200", ",", "16", ",", "9"}], "]"}]}], "}"}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"FrameMargins", "\[Rule]", "2"}], ",", 
   RowBox[{"FrameStyle", "\[Rule]", "Red"}], ",", 
   RowBox[{"Alignment", "\[Rule]", "Center"}]}], "\[IndentingNewLine]", 
  "]"}]], "Input",
 CellChangeTimes->{3.774188278157321*^9},
 CellLabel->
  "In[689]:=",ExpressionUUID->"429d0a26-f02e-461b-9984-580f4da81f17"],

Cell[BoxData[
 FrameBox[
  TagBox[GridBox[{
     {
      StyleBox["\<\"reading\"\>",
       StripOnInput->False,
       FontFamily->"Alegreya SC",
       FontSize->14,
       FontWeight->Bold], 
      StyleBox["\<\"Timestamp\"\>",
       StripOnInput->False,
       FontFamily->"Alegreya SC",
       FontSize->14,
       FontWeight->Bold]},
     {
      StyleBox["87",
       StripOnInput->False,
       FontFamily->"Arial",
       FontSize->8,
       FontWeight->Bold], 
      StyleBox["\<\"Mon 5 Aug 2019 14:56:54\"\>",
       StripOnInput->False,
       FontFamily->"Arial",
       FontSize->8,
       FontWeight->Bold]},
     {
      StyleBox["84",
       StripOnInput->False,
       FontFamily->"Arial",
       FontSize->8,
       FontWeight->Bold], 
      StyleBox["\<\"Mon 5 Aug 2019 15:56:32\"\>",
       StripOnInput->False,
       FontFamily->"Arial",
       FontSize->8,
       FontWeight->Bold]},
     {
      StyleBox["80",
       StripOnInput->False,
       FontFamily->"Arial",
       FontSize->8,
       FontWeight->Bold], 
      StyleBox["\<\"Mon 5 Aug 2019 16:25:35\"\>",
       StripOnInput->False,
       FontFamily->"Arial",
       FontSize->8,
       FontWeight->Bold]},
     {
      StyleBox["80",
       StripOnInput->False,
       FontFamily->"Arial",
       FontSize->8,
       FontWeight->Bold], 
      StyleBox["\<\"Mon 5 Aug 2019 16:11:51\"\>",
       StripOnInput->False,
       FontFamily->"Arial",
       FontSize->8,
       FontWeight->Bold]},
     {
      StyleBox["76",
       StripOnInput->False,
       FontFamily->"Arial",
       FontSize->8,
       FontWeight->Bold], 
      StyleBox["\<\"Tue 6 Aug 2019 08:56:17\"\>",
       StripOnInput->False,
       FontFamily->"Arial",
       FontSize->8,
       FontWeight->Bold]}
    },
    AutoDelete->False,
    FrameStyle->Directive[
      GrayLevel[0.85]],
    GridBoxBackground->{
     "Columns" -> {{None}}, 
      "Rows" -> {
       1 -> RGBColor[0.87, 0.94, 1], {
        1 -> RGBColor[0.87, 0.94, 1], 3 -> RGBColor[0.9, 0.9, 0.9], 5 -> 
         RGBColor[0.9, 0.9, 0.9], 7 -> RGBColor[0.9, 0.9, 0.9]}}, 
      "RowsIndexed" -> {
       1 -> RGBColor[0.87, 0.94, 1], 3 -> RGBColor[0.9, 0.9, 0.9], 5 -> 
        RGBColor[0.9, 0.9, 0.9], 7 -> RGBColor[0.9, 0.9, 0.9]}},
    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
    GridBoxSpacings->{
     "Columns" -> {1, 1, 1}, "Rows" -> {0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5}}],
   "Grid"],
  Alignment->Center,
  FrameMargins->2,
  FrameStyle->RGBColor[1, 0, 0],
  ImageSize->{200, 112.5},
  StripOnInput->False]], "Output",
 CellChangeTimes->{{3.774188264757325*^9, 3.774188280977318*^9}},
 CellLabel->
  "Out[689]=",ExpressionUUID->"091fa4c7-688d-4691-8f55-55069d2f7644"]
}, Open  ]],

Cell["Make the gauge ", "Text",
 CellChangeTimes->{{3.773489047171769*^9, 3.7734890682607613`*^9}, {
   3.7735025234328227`*^9, 3.7735025312738194`*^9}, 
   3.774009551102806*^9},ExpressionUUID->"ef11ce72-9815-4f83-bf1e-\
dcc5741f630b"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"ClearAll", "[", "colors", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"colors", "=", 
   RowBox[{"{", 
    RowBox[{
    "Red", ",", "LightRed", ",", "Yellow", ",", "LightGreen", ",", "Green"}], 
    "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Normal", "[", 
  RowBox[{"AssociationThread", "[", 
   RowBox[{
    RowBox[{"Transpose", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Range", "[", 
        RowBox[{"0", ",", "90", ",", "10"}], "]"}], ",", 
       RowBox[{"Range", "[", 
        RowBox[{"10", ",", "100", ",", "10"}], "]"}]}], "}"}], "]"}], ",", 
    RowBox[{"Flatten", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "Red", ",", "LightRed", ",", "Yellow", ",", "LightYellow", ",", 
         "Green"}], "}"}], ",", 
       RowBox[{"Reverse", "[", 
        RowBox[{"{", 
         RowBox[{
         "Red", ",", "LightRed", ",", "Yellow", ",", "LightYellow", ",", 
          "Green"}], "}"}], "]"}]}], "}"}], "]"}]}], "]"}], "]"}]}], "Input",
 CellChangeTimes->{{3.7740095986077814`*^9, 3.774009615440837*^9}},
 CellLabel->
  "In[690]:=",ExpressionUUID->"dd3d2102-3cf3-45ae-89b4-09ac6e71ed3b"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"0", ",", "10"}], "}"}], "\[Rule]", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        DefaultBaseStyle->"ColorSwatchGraphics",
        Frame->True,
        FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       StyleBox[
        RowBox[{"RGBColor", "[", 
          RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> False]],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[1, 0, 0],
     Editable->False,
     Selectable->False]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"10", ",", "20"}], "}"}], "\[Rule]", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[1, 0.85, 0.85], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        DefaultBaseStyle->"ColorSwatchGraphics",
        Frame->True,
        FrameStyle->RGBColor[
         0.6666666666666666, 0.5666666666666667, 0.5666666666666667],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       StyleBox[
        RowBox[{"RGBColor", "[", 
          RowBox[{"1", ",", "0.85`", ",", "0.85`"}], "]"}], NumberMarks -> 
        False]],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = 
          RGBColor[1, 0.85, 0.85]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[1, 0.85, 0.85],
     Editable->False,
     Selectable->False]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"20", ",", "30"}], "}"}], "\[Rule]", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[1, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        DefaultBaseStyle->"ColorSwatchGraphics",
        Frame->True,
        FrameStyle->RGBColor[0.6666666666666666, 0.6666666666666666, 0.],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       StyleBox[
        RowBox[{"RGBColor", "[", 
          RowBox[{"1", ",", "1", ",", "0"}], "]"}], NumberMarks -> False]],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 1, 0]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[1, 1, 0],
     Editable->False,
     Selectable->False]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"30", ",", "40"}], "}"}], "\[Rule]", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[1, 1, 0.85], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        DefaultBaseStyle->"ColorSwatchGraphics",
        Frame->True,
        FrameStyle->RGBColor[
         0.6666666666666666, 0.6666666666666666, 0.5666666666666667],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       StyleBox[
        RowBox[{"RGBColor", "[", 
          RowBox[{"1", ",", "1", ",", "0.85`"}], "]"}], NumberMarks -> False]],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 1, 0.85]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[1, 1, 0.85],
     Editable->False,
     Selectable->False]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"40", ",", "50"}], "}"}], "\[Rule]", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        DefaultBaseStyle->"ColorSwatchGraphics",
        Frame->True,
        FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       StyleBox[
        RowBox[{"RGBColor", "[", 
          RowBox[{"0", ",", "1", ",", "0"}], "]"}], NumberMarks -> False]],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[0, 1, 0],
     Editable->False,
     Selectable->False]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"50", ",", "60"}], "}"}], "\[Rule]", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        DefaultBaseStyle->"ColorSwatchGraphics",
        Frame->True,
        FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       StyleBox[
        RowBox[{"RGBColor", "[", 
          RowBox[{"0", ",", "1", ",", "0"}], "]"}], NumberMarks -> False]],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[0, 1, 0],
     Editable->False,
     Selectable->False]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"60", ",", "70"}], "}"}], "\[Rule]", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[1, 1, 0.85], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        DefaultBaseStyle->"ColorSwatchGraphics",
        Frame->True,
        FrameStyle->RGBColor[
         0.6666666666666666, 0.6666666666666666, 0.5666666666666667],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       StyleBox[
        RowBox[{"RGBColor", "[", 
          RowBox[{"1", ",", "1", ",", "0.85`"}], "]"}], NumberMarks -> False]],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 1, 0.85]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[1, 1, 0.85],
     Editable->False,
     Selectable->False]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"70", ",", "80"}], "}"}], "\[Rule]", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[1, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        DefaultBaseStyle->"ColorSwatchGraphics",
        Frame->True,
        FrameStyle->RGBColor[0.6666666666666666, 0.6666666666666666, 0.],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       StyleBox[
        RowBox[{"RGBColor", "[", 
          RowBox[{"1", ",", "1", ",", "0"}], "]"}], NumberMarks -> False]],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 1, 0]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[1, 1, 0],
     Editable->False,
     Selectable->False]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"80", ",", "90"}], "}"}], "\[Rule]", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[1, 0.85, 0.85], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        DefaultBaseStyle->"ColorSwatchGraphics",
        Frame->True,
        FrameStyle->RGBColor[
         0.6666666666666666, 0.5666666666666667, 0.5666666666666667],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       StyleBox[
        RowBox[{"RGBColor", "[", 
          RowBox[{"1", ",", "0.85`", ",", "0.85`"}], "]"}], NumberMarks -> 
        False]],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = 
          RGBColor[1, 0.85, 0.85]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[1, 0.85, 0.85],
     Editable->False,
     Selectable->False]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"90", ",", "100"}], "}"}], "\[Rule]", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        DefaultBaseStyle->"ColorSwatchGraphics",
        Frame->True,
        FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       StyleBox[
        RowBox[{"RGBColor", "[", 
          RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> False]],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[1, 0, 0],
     Editable->False,
     Selectable->False]}]}], "}"}]], "Output",
 CellChangeTimes->{3.7741883209926558`*^9},
 CellLabel->
  "Out[692]=",ExpressionUUID->"52f4358a-4b1b-4c27-a1c5-9740b2e3ee8f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"ClearAll", "[", "ag", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ag", "[", "fr_", "]"}], ":=", 
  RowBox[{"AngularGauge", "[", "\[IndentingNewLine]", 
   RowBox[{"fr", ",", "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "100"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"ImageSize", "\[Rule]", "125"}], ",", "\[IndentingNewLine]", 
    RowBox[{"TicksStyle", "\[Rule]", "Black"}], ",", "\[IndentingNewLine]", 
    RowBox[{"GaugeLabels", "\[Rule]", "Automatic"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"GaugeFaceElementFunction", "\[Rule]", "\"\<GlassSector\>\""}], 
    ",", "\[IndentingNewLine]", 
    RowBox[{"GaugeFaceStyle", "\[Rule]", "LightBlue"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"ScaleRanges", "\[Rule]", 
     RowBox[{"Normal", "[", 
      RowBox[{"AssociationThread", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Transpose", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Range", "[", 
            RowBox[{"0", ",", "90", ",", "10"}], "]"}], ",", 
           RowBox[{"Range", "[", 
            RowBox[{"10", ",", "100", ",", "10"}], "]"}]}], "}"}], "]"}], ",",
         "\[IndentingNewLine]", 
        RowBox[{"Flatten", "[", 
         RowBox[{"{", 
          RowBox[{"colors", ",", 
           RowBox[{"Reverse", "[", "colors", "]"}]}], "}"}], "]"}]}], "]"}], 
      "\[IndentingNewLine]", "]"}]}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"ag", "[", 
  RowBox[{"readingsDS", "[", 
   RowBox[{"First", ",", "\"\<reading\>\""}], "]"}], "]"}]}], "Input",
 CellChangeTimes->{{3.7740096585378723`*^9, 3.774009661067855*^9}, {
   3.7740097740113263`*^9, 3.774009775601292*^9}, {3.7740099091634855`*^9, 
   3.7740099658705435`*^9}, {3.7740100153565664`*^9, 
   3.7740100159645395`*^9}, {3.7740102279638166`*^9, 3.774010243635769*^9}, 
   3.774021858208909*^9, {3.774022989057035*^9, 3.77402300242262*^9}, {
   3.7740247853076143`*^9, 3.774024807673622*^9}},
 CellLabel->
  "In[693]:=",ExpressionUUID->"2eb8ab95-3257-46d8-922c-334c89da5974"],

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[0.87, 0.94, 1], EdgeForm[None], 
    GraphicsGroupBox[{GraphicsComplexBox[CompressedData["
1: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
ubZJl1n2mWhS39RpdWAy7B0zynDRnyx0iimIzq9WgP/JeVFHhudgfnvbS+nt
EmFpL++Vx2fnYvFUR+/+2vFw99urGU+7KXFmUGItb71oMNymbKIyVuL+FlGd
G7QLB6eLc/Z1zFfi4fidQ84kB8G6MQ8NC/qpMGbIglvN6iN0OTlkaO1NKhxh
a/WpO7jD15a7g4ZdVGH2m9r614NfQfPRPQuWPVDhlSEprc7l3IK2cv27E11j
41b8/V7W9H0cLffbakX3w8vyvBb96XlYIOuxjKH1oJ+s93VTWi8qZT/3/Gk/
WKs379d8Cu0Xz55iezxrR/bAaXpsrxPRZC88vo7tubke2RO/vGR7395E9sar
t9kfTmryByresL/ehZC/MPgH+7NbS/In1tvG/r5iT/6W+lUCVkq8YP2VQvRX
StFfJYj+SiX6qxjRX6lEfxUh+qs80V8Fi/4qT/RXKPqrPNFfuYn+Kl/0V7ai
v8oX/dV50V/li/7qieiv8kV/5Sz6q3zRX70T/VWe6K8CRX+VJ/qrUNFf5Yn+
Kkr0VyrRX8WJ/kol+qtE0V8pRX+VJPorpeivUkR/lSv6qzTRX2WL/ipD9FdZ
or/KFP1VhuivskV/lSb6qxzRX6WI/kop+qsk0V8pRX+VKPorleiv4kV/pRL9
VbTor/JEfxUm+qs80V8Fif4qT/RXvqK/yhf9lYvor/JFf2Ut+qt80V99Ef1V
vuivrEV/lS/6KxfRX+WJ/spX9Fd5or8KEv1VnuivwkR/pRL9VbTor1Siv4oX
/ZVS9FeJor9Siv4qSfRXOaK/ShH9Vbbor9JEf5Up+qsM0V9liP4qS/RXaaK/
yhb9VYror3JFf5Uk+iul6K8SRX+lFP1VnOivVKK/ihL9lUr0V6Giv8oT/VWg
6K/yRH/1TvRXeaK/chb9Vb7or56I/ipf9FfnRX+VL/orW9Ff5Yv+yk30V/mi
v0LRX+WJ/ipY9Fd5or+KEP1VnuivYkR/pRL9VYLor1Siv1KI/kop+qtk0V/l
iv4qVfRXOaK/Shf9VbborzJEf5Up+qss0V+li/4qR/RXqaK/yhX9VbLor5Si
v1KI/kol+qsE0V+pRH8VK/qrPNFfRYr+Kk/0VyGiv8oT/ZW/6K/yRH/lKfqr
fNFfOYj+Kl/0V3dEf5Uv+qs7or/KF/2Vg+iv8kR/5Sn6qzzRX/mL/ipP9Fch
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
91uyY2MaZGU/XNXqVjmevFZieTwqCW4dNDih278Cx+z9vUVTOwEUwxbNH/yy
AnX7LQwaGBkJMzfmfrWpV4mdUo0GXxwVBEZ+f3r0nVqJ8wft+qnZ1QOOKcav
O7m5Erees5i7J/spnJPrd/p0jc/k+4N60ffxpNyvbSLdD7sM5+cN603Pw3JZ
T9huWg/OzeH1drxK68WVZ3g/5zfSflBnNe8325P2i5bhbA/rnmQPvHmD7dWy
DtkLh/Zge64cRvbElbps704Pyd6Yeo/9saeY/IHTB7G/lqSTvzCoDfvzqTf5
E11t2d977Mnfcj5eDjaVeMHntyvl/PYyOb89S85vL5fz29Pk/PYKOb89Sc5v
r5Tz2xPk/PZKOb89Us5vr5Lz2wPl/PYqOb/dVc5vr5Lz203l/PYqOb/dVs5v
r5Lz233k/PYqOb89VM5vr5Lz22Pl/PYqOb9dIee3V8r57SlyfnuFnN+eIee3
V8j57Tlyfvv/18K94yQQhgEATLx/YWtHaUlhQaGRGGKIIQZBRERcWJZ97/95
BAunnjtM728/+ts7f3vub2/97YW/vfa3X/ztlb+98reX/vba31742xt/e+5v
b/3tJ39752/P/O29v33vbx/87Vt/e/K3r/3tyd++9LeHv33ubw9/+9TfHv72
sb/9199+9XDD///2sb89/O1Tf3v42+f+9uRvX/rbk7997W8f/O1bf3vvb9/7
2zt/e+Zvb/3tJ39742/P/e21v73wt1f+9tLffvG3V/72wt9e+9tzf3vrbz/6
2zt/+4+/vfe3f/nbB3/7h7998Lev/e3J3/7qbw9/+7O/Pfzt9/728Lff+tvD
337tbw9/+52/PfztT/728Le/+NvD3/7mb0/+9nd/e/K3f/rbB3/7t7+997dn
/vbO337yt7f+9rO/vfG3F/722t9e+ttLf3vlb7/42xt/+9nf3vrbc397528/
+tt7f/vB3z7423f+9uRv3/jbk7995W8Pf/vC3x7+9pm/PfztE397+NtH/vbw
t4/87eFvn/jbw98+87eHv33hb0/+9pW/PfnbN/72wd++87f3/vaDv73ztx/9
7a2/Pfe3N/72s7+98rdf/O2lv730txf+9trffva3N/72k7+99bdn/vbu8Q+2
z5K4
       "], {
        {Hue[0.67, 0.6, 0.6], EdgeForm[None], 
         GraphicsGroupBox[PolygonBox[CompressedData["
1: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
4COnRYw1bu7aaeZu5hpn8Dsb3zDf7h7m4h2cYE7eYd67eyPuKeULeMcZEZNL
ecT6xqe7hg9McQ+ah05dEHF+KQ1Dy86MmFbKB9D9GRHTS+k0Ojw7YlYpzUV7
z4qYWcoTNvTsVM9u4toMc7cy15mebW2us7xbS89O8Vlo/xyfCcYXznYODUVL
z4lYZIzWLnauvXuoLSzlG/jCgoj5pTyknfG8Uj66nu9qkrnQ+iXmbOsZeud6
l7bG7LS975S7PK+Ub+Aj50YsNd7etXPNva1rnLGOd+DsiX426PyFfkZoHLp2
S8TNpXwB77g4Ynkpj9jFeJlr+MAl7oEL77jInLxX6P4VEZeX8gF0/6qIK0vp
NDp8XcS1pTQX7b0m4upS7+Senr3Ms/u4dpW59zLXFZ7d11zXeDe86lLvyFlo
/wqfCcYXrncODUVLb4u41Ritvd25g91zq++oq++Mu7qplId0Nb7Rd7Gz7+oi
c6H1d5jzAM/Qe4N3OcCYnfANvkG+vbtLaTLafFfEncZHuHaXubu7xhm8i7yj
vJu8k3zL6Px9pb7p6/xzr16FdlXyBbzjoYgHS3lET+MHXMMHHnYPmodOvRPx
dikNQ8sei3i0lA+g+09EPF5Kp9HhZyKeLqW5aO9TEU+W8oTenn3Es31de8Lc
fcz1mGf7m+sp73acZx/2WWj/sz4TjC885xwaipa+GvGKMVr7mnPD3EPt5VK+
gS+8FPFiKQ8ZYvxCqW+Y7+zviL/Mhda/bs5BnqH3ee8yyJidRvtOucu3SvkG
PvJmxBvGo11709yjXHvduw3zri/52fxf5/2M0Dh07ceIH0r5Ajr/YcQHpTxi
nPH7ruEFH7kHLrzjPXOiI2jZpxGflPIBdP/ziM9K6TQ6/HXEV6U0F+39MuKL
Uho0ybMfe3aKa5+be7K5PvXsNHN96d0mevYjn4X2f+MzwfjCSufQULT054if
jNHaX5yb456ffEezfGfc1felPGSW8Xe+i9N8V++ZC63/1ZwzPUPvt95lpjE7
4Rv4yJ8Rf5T6RvlWf4/4zXiRa7+be4FrnMHvbXyjfJv3m4t38C9z9nAPNb55
fAHv4P/0579SHkEO/K9r+EBSqQfNQ6fWCbx2JQ1Dy/LAWSUfQPfLwEUlnUaH
GwSuX0lz0d5a4KqSJ8DBbFpplh5qcMANJ1ycgebDCVe9SrvBwSw7chbav0ql
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
           "]]]}, {}, {}, {}, {}},
       VertexColors->{
         Hue[0.576923076923077, 0.12254777070063695`, 0.615686274509804, 1.], 
         Hue[0.576923076923077, 0.12254777070063695`, 0.615686274509804, 1.], 
         Hue[0.576923076923077, 0.12254777070063695`, 0.615686274509804, 1.], 
         Hue[0.576923076923077, 0.12254777070063695`, 0.615686274509804, 1.], 
         Hue[0.576923076923077, 0.12254777070063695`, 0.615686274509804, 1.], 
         Hue[0.576923076923077, 0.12254777070063695`, 0.615686274509804, 1.], 
         Hue[0.576923076923077, 0.12254777070063695`, 0.615686274509804, 1.], 
         Hue[0.576923076923077, 0.12254777070063695`, 0.615686274509804, 1.], 
         Hue[0.576923076923077, 0.12254777070063695`, 0.615686274509804, 1.], 
         Hue[0.576923076923077, 0.12254777070063695`, 0.615686274509804, 1.], 
         Hue[0.576923076923077, 0.12254777070063695`, 0.615686274509804, 1.], 
         Hue[0.576923076923077, 0.12254777070063695`, 0.615686274509804, 1.], 
         Hue[0.576923076923077, 0.12254777070063695`, 0.615686274509804, 1.], 
         Hue[0.576923076923077, 0.12254777070063695`, 0.615686274509804, 1.], 
         Hue[0.576923076923077, 0.12254777070063695`, 0.615686274509804, 1.], 
         Hue[0.576923076923077, 0.12254777070063695`, 0.615686274509804, 1.], 
         Hue[0.576923076923077, 0.12254777070063695`, 0.615686274509804, 1.], 
         Hue[0.576923076923077, 0.12254777070063695`, 0.615686274509804, 1.], 
         Hue[0.576923076923077, 0.12254777070063695`, 0.615686274509804, 1.], 
         Hue[0.576923076923077, 0.12254777070063695`, 0.615686274509804, 1.], 
         Hue[0.576923076923077, 0.12254777070063695`, 0.615686274509804, 1.], 
         Hue[0.576923076923077, 0.12254777070063695`, 0.615686274509804, 1.], 
         Hue[0.576923076923077, 0.12254777070063695`, 0.615686274509804, 1.], 
         Hue[0.576923076923077, 0.12254777070063695`, 0.615686274509804, 1.], 
         Hue[0.576923076923077, 0.12254777070063695`, 0.615686274509804, 1.], 
         Hue[0.576923076923077, 0.12254777070063695`, 0.615686274509804, 1.], 
         Hue[0.576923076923077, 0.12254777070063695`, 0.615686274509804, 1.], 
         Hue[0.576923076923077, 0.12254777070063695`, 0.615686274509804, 1.], 
         Hue[0.576923076923077, 0.12254777070063695`, 0.615686274509804, 1.], 
         Hue[0.576923076923077, 0.12254777070063695`, 0.615686274509804, 1.], 
         Hue[0.576923076923077, 0.12254777070063695`, 0.615686274509804, 1.], 
         Hue[0.576923076923077, 0.12254777070063695`, 0.615686274509804, 1.], 
         Hue[0.576923076923077, 0.12254777070063695`, 0.615686274509804, 1.], 
         Hue[0.576923076923077, 0.12254777070063695`, 0.615686274509804, 1.], 
         Hue[0.576923076923077, 0.12254777070063695`, 0.615686274509804, 1.], 
         Hue[0.576923076923077, 0.12254777070063695`, 0.615686274509804, 1.], 
         Hue[0.576923076923077, 0.12254777070063695`, 0.615686274509804, 1.], 
         Hue[0.576923076923077, 0.12254777070063695`, 0.615686274509804, 1.], 
         Hue[0.576923076923077, 0.12254777070063695`, 0.615686274509804, 1.], 
         Hue[0.576923076923077, 0.12254777070063695`, 0.615686274509804, 1.], 
         Hue[0.576923076923077, 0.12254777070063695`, 0.615686274509804, 1.], 
         Hue[0.576923076923077, 0.12254777070063695`, 0.615686274509804, 1.], 
         Hue[0.576923076923077, 0.12254777070063695`, 0.615686274509804, 1.], 
         Hue[0.576923076923077, 0.12254777070063695`, 0.615686274509804, 1.], 
         Hue[0.576923076923077, 0.12254777070063695`, 0.615686274509804, 1.], 
         Hue[0.576923076923077, 0.12254777070063695`, 0.615686274509804, 1.], 
         Hue[0.576923076923077, 0.12254777070063695`, 0.615686274509804, 1.], 
         Hue[0.576923076923077, 0.12254777070063695`, 0.615686274509804, 1.], 
         Hue[0.576923076923077, 0.12254777070063695`, 0.615686274509804, 1.], 
         Hue[0.576923076923077, 0.12254777070063695`, 0.615686274509804, 1.], 
         Hue[0.576923076923077, 0.12254777070063695`, 0.615686274509804, 1.], 
         Hue[0.576923076923077, 0.12254777070063695`, 0.615686274509804, 1.], 
         Hue[0.576923076923077, 0.12254777070063695`, 0.615686274509804, 1.], 
         Hue[0.576923076923077, 0.12254777070063695`, 0.615686274509804, 1.], 
         Hue[0.576923076923077, 0.12254777070063695`, 0.615686274509804, 1.], 
         Hue[0.576923076923077, 0.12254777070063695`, 0.615686274509804, 1.], 
         Hue[0.576923076923077, 0.12254777070063695`, 0.615686274509804, 1.], 
         Hue[0.576923076923077, 0.12254777070063695`, 0.615686274509804, 1.], 
         Hue[0.576923076923077, 0.12254777070063695`, 0.615686274509804, 1.], 
         Hue[0.576923076923077, 0.12254777070063695`, 0.615686274509804, 1.], 
         Hue[0.576923076923077, 0.12254777070063695`, 0.615686274509804, 1.], 
         Hue[0.576923076923077, 0.12254777070063695`, 0.615686274509804, 1.], 
         Hue[0.576923076923077, 0.12254777070063695`, 0.615686274509804, 1.], 
         Hue[0.576923076923077, 0.12254777070063695`, 0.615686274509804, 1.], 
         Hue[0.576923076923077, 0.12254777070063695`, 0.615686274509804, 1.], 
         Hue[0.576923076923077, 0.12254777070063695`, 0.615686274509804, 1.], 
         Hue[0.576923076923077, 0.12254777070063695`, 0.615686274509804, 1.], 
         Hue[0.576923076923077, 0.12254777070063695`, 0.615686274509804, 1.], 
         Hue[0.576923076923077, 0.12254777070063695`, 0.615686274509804, 1.], 
         Hue[0.576923076923077, 0.12254777070063695`, 0.615686274509804, 1.], 
         Hue[0.576923076923077, 0.12254777070063695`, 0.615686274509804, 1.], 
         Hue[0.576923076923077, 0.12254777070063695`, 0.615686274509804, 1.], 
         Hue[0.576923076923077, 0.12254777070063695`, 0.615686274509804, 1.], 
         Hue[0.576923076923077, 0.12254777070063695`, 0.615686274509804, 1.], 
         Hue[0.576923076923077, 0.12254777070063695`, 0.615686274509804, 1.], 
         Hue[0.576923076923077, 0.12254777070063695`, 0.615686274509804, 1.], 
         Hue[0.576923076923077, 0.12254777070063695`, 0.615686274509804, 1.], 
         Hue[0.576923076923077, 0.12254777070063695`, 0.615686274509804, 1.], 
         Hue[0.576923076923077, 0.12254777070063695`, 0.615686274509804, 1.], 
         Hue[0.576923076923077, 0.12254777070063695`, 0.615686274509804, 1.], 
         Hue[0.576923076923077, 0.12254777070063695`, 0.615686274509804, 1.], 
         Hue[0.576923076923077, 0.12254777070063695`, 0.615686274509804, 1.], 
         Hue[0.576923076923077, 0.12254777070063695`, 0.615686274509804, 1.], 
         Hue[0.576923076923077, 0.12254777070063695`, 0.615686274509804, 1.], 
         Hue[0.576923076923077, 0.12254777070063695`, 0.615686274509804, 1.], 
         Hue[0.576923076923077, 0.12254777070063695`, 0.615686274509804, 1.], 
         Hue[0.576923076923077, 0.12254777070063695`, 0.615686274509804, 1.], 
         Hue[0.576923076923077, 0.12254777070063695`, 0.615686274509804, 1.], 
         Hue[0.576923076923077, 0.12254777070063695`, 0.615686274509804, 1.], 
         Hue[0.576923076923077, 0.12254777070063695`, 0.615686274509804, 1.], 
         Hue[0.576923076923077, 0.12254777070063695`, 0.615686274509804, 1.], 
         Hue[0.576923076923077, 0.12254777070063695`, 0.615686274509804, 1.], 
         Hue[0.576923076923077, 0.12254777070063695`, 0.615686274509804, 1.], 
         Hue[0.576923076923077, 0.12254777070063695`, 0.615686274509804, 1.], 
         Hue[0.576923076923077, 0.12254777070063695`, 0.615686274509804, 1.], 
         Hue[0.576923076923077, 0.12254777070063695`, 0.615686274509804, 1.], 
         Hue[0.576923076923077, 0.12254777070063695`, 0.615686274509804, 1.], 
         Hue[0.576923076923077, 0.12254777070063695`, 0.615686274509804, 1.], 
         Hue[0.576923076923077, 0.12254777070063695`, 0.615686274509804, 1.], 
         Hue[0.576923076923077, 0.12254777070063695`, 0.615686274509804, 1.], 
         Hue[0.576923076923077, 0.06186206896551724, 0.9549019607843137, 1.], 
         Hue[0.576923076923077, 0.06186206896551724, 0.9549019607843137, 1.], 
         Hue[0.576923076923077, 0.06186206896551724, 0.9549019607843137, 1.], 
         Hue[0.576923076923077, 0.06186206896551724, 0.9549019607843137, 1.], 
         Hue[0.576923076923077, 0.06186206896551724, 0.9549019607843137, 1.], 
         Hue[0.576923076923077, 0.06186206896551724, 0.9549019607843137, 1.], 
         Hue[0.576923076923077, 0.06186206896551724, 0.9549019607843137, 1.], 
         Hue[0.576923076923077, 0.06186206896551724, 0.9549019607843137, 1.], 
         Hue[0.576923076923077, 0.06186206896551724, 0.9549019607843137, 1.], 
         Hue[0.576923076923077, 0.06186206896551724, 0.9549019607843137, 1.], 
         Hue[0.576923076923077, 0.06186206896551724, 0.9549019607843137, 1.], 
         Hue[0.576923076923077, 0.06186206896551724, 0.9549019607843137, 1.], 
         Hue[0.576923076923077, 0.06186206896551724, 0.9549019607843137, 1.], 
         Hue[0.576923076923077, 0.06186206896551724, 0.9549019607843137, 1.], 
         Hue[0.576923076923077, 0.06186206896551724, 0.9549019607843137, 1.], 
         Hue[0.576923076923077, 0.06186206896551724, 0.9549019607843137, 1.], 
         Hue[0.576923076923077, 0.06186206896551724, 0.9549019607843137, 1.], 
         Hue[0.576923076923077, 0.06186206896551724, 0.9549019607843137, 1.], 
         Hue[0.576923076923077, 0.06186206896551724, 0.9549019607843137, 1.], 
         Hue[0.576923076923077, 0.06186206896551724, 0.9549019607843137, 1.], 
         Hue[0.576923076923077, 0.06186206896551724, 0.9549019607843137, 1.], 
         Hue[0.576923076923077, 0.06186206896551724, 0.9549019607843137, 1.], 
         Hue[0.576923076923077, 0.06186206896551724, 0.9549019607843137, 1.], 
         Hue[0.576923076923077, 0.06186206896551724, 0.9549019607843137, 1.], 
         Hue[0.576923076923077, 0.06186206896551724, 0.9549019607843137, 1.], 
         Hue[0.576923076923077, 0.06186206896551724, 0.9549019607843137, 1.], 
         Hue[0.576923076923077, 0.06186206896551724, 0.9549019607843137, 1.], 
         Hue[0.576923076923077, 0.06186206896551724, 0.9549019607843137, 1.], 
         Hue[0.576923076923077, 0.06186206896551724, 0.9549019607843137, 1.], 
         Hue[0.576923076923077, 0.06186206896551724, 0.9549019607843137, 1.], 
         Hue[0.576923076923077, 0.06186206896551724, 0.9549019607843137, 1.], 
         Hue[0.576923076923077, 0.06186206896551724, 0.9549019607843137, 1.], 
         Hue[0.576923076923077, 0.06186206896551724, 0.9549019607843137, 1.], 
         Hue[0.576923076923077, 0.06186206896551724, 0.9549019607843137, 1.], 
         Hue[0.576923076923077, 0.06186206896551724, 0.9549019607843137, 1.], 
         Hue[0.576923076923077, 0.06186206896551724, 0.9549019607843137, 1.], 
         Hue[0.576923076923077, 0.06186206896551724, 0.9549019607843137, 1.], 
         Hue[0.576923076923077, 0.06186206896551724, 0.9549019607843137, 1.], 
         Hue[0.576923076923077, 0.06186206896551724, 0.9549019607843137, 1.], 
         Hue[0.576923076923077, 0.06186206896551724, 0.9549019607843137, 1.], 
         Hue[0.576923076923077, 0.06186206896551724, 0.9549019607843137, 1.], 
         Hue[0.576923076923077, 0.06186206896551724, 0.9549019607843137, 1.], 
         Hue[0.576923076923077, 0.06186206896551724, 0.9549019607843137, 1.], 
         Hue[0.576923076923077, 0.06186206896551724, 0.9549019607843137, 1.], 
         Hue[0.576923076923077, 0.06186206896551724, 0.9549019607843137, 1.], 
         Hue[0.576923076923077, 0.06186206896551724, 0.9549019607843137, 1.], 
         Hue[0.576923076923077, 0.06186206896551724, 0.9549019607843137, 1.], 
         Hue[0.576923076923077, 0.06186206896551724, 0.9549019607843137, 1.], 
         Hue[0.576923076923077, 0.06186206896551724, 0.9549019607843137, 1.], 
         Hue[0.576923076923077, 0.06186206896551724, 0.9549019607843137, 1.], 
         Hue[0.576923076923077, 0.06186206896551724, 0.9549019607843137, 1.], 
         Hue[0.576923076923077, 0.06186206896551724, 0.9549019607843137, 1.], 
         Hue[0.576923076923077, 0.06186206896551724, 0.9549019607843137, 1.], 
         Hue[0.576923076923077, 0.06186206896551724, 0.9549019607843137, 1.], 
         Hue[0.576923076923077, 0.06186206896551724, 0.9549019607843137, 1.], 
         Hue[0.576923076923077, 0.06186206896551724, 0.9549019607843137, 1.], 
         Hue[0.576923076923077, 0.06186206896551724, 0.9549019607843137, 1.], 
         Hue[0.576923076923077, 0.06186206896551724, 0.9549019607843137, 1.], 
         Hue[0.576923076923077, 0.06186206896551724, 0.9549019607843137, 1.], 
         Hue[0.576923076923077, 0.06186206896551724, 0.9549019607843137, 1.], 
         Hue[0.576923076923077, 0.06186206896551724, 0.9549019607843137, 1.], 
         Hue[0.576923076923077, 0.06186206896551724, 0.9549019607843137, 1.], 
         Hue[0.576923076923077, 0.06186206896551724, 0.9549019607843137, 1.], 
         Hue[0.576923076923077, 0.06186206896551724, 0.9549019607843137, 1.], 
         Hue[0.576923076923077, 0.06186206896551724, 0.9549019607843137, 1.], 
         Hue[0.576923076923077, 0.06186206896551724, 0.9549019607843137, 1.], 
         Hue[0.576923076923077, 0.06186206896551724, 0.9549019607843137, 1.], 
         Hue[0.576923076923077, 0.06186206896551724, 0.9549019607843137, 1.], 
         Hue[0.576923076923077, 0.06186206896551724, 0.9549019607843137, 1.], 
         Hue[0.576923076923077, 0.06186206896551724, 0.9549019607843137, 1.], 
         Hue[0.576923076923077, 0.06186206896551724, 0.9549019607843137, 1.], 
         Hue[0.576923076923077, 0.06186206896551724, 0.9549019607843137, 1.], 
         Hue[0.576923076923077, 0.06186206896551724, 0.9549019607843137, 1.], 
         Hue[0.576923076923077, 0.06186206896551724, 0.9549019607843137, 1.], 
         Hue[0.576923076923077, 0.06186206896551724, 0.9549019607843137, 1.], 
         Hue[0.576923076923077, 0.06186206896551724, 0.9549019607843137, 1.], 
         Hue[0.576923076923077, 0.06186206896551724, 0.9549019607843137, 1.], 
         Hue[0.576923076923077, 0.06186206896551724, 0.9549019607843137, 1.], 
         Hue[0.576923076923077, 0.06186206896551724, 0.9549019607843137, 1.], 
         Hue[0.576923076923077, 0.06186206896551724, 0.9549019607843137, 1.], 
         Hue[0.576923076923077, 0.06186206896551724, 0.9549019607843137, 1.], 
         Hue[0.576923076923077, 0.06186206896551724, 0.9549019607843137, 1.], 
         Hue[0.576923076923077, 0.06186206896551724, 0.9549019607843137, 1.], 
         Hue[0.576923076923077, 0.06186206896551724, 0.9549019607843137, 1.], 
         Hue[0.576923076923077, 0.06186206896551724, 0.9549019607843137, 1.], 
         Hue[0.576923076923077, 0.06186206896551724, 0.9549019607843137, 1.], 
         Hue[0.576923076923077, 0.06186206896551724, 0.9549019607843137, 1.], 
         Hue[0.576923076923077, 0.06186206896551724, 0.9549019607843137, 1.], 
         Hue[0.576923076923077, 0.06186206896551724, 0.9549019607843137, 1.], 
         Hue[0.576923076923077, 0.06186206896551724, 0.9549019607843137, 1.], 
         Hue[0.576923076923077, 0.06186206896551724, 0.9549019607843137, 1.], 
         Hue[0.576923076923077, 0.06186206896551724, 0.9549019607843137, 1.], 
         Hue[0.576923076923077, 0.06186206896551724, 0.9549019607843137, 1.], 
         Hue[0.576923076923077, 0.06186206896551724, 0.9549019607843137, 1.], 
         Hue[0.576923076923077, 0.06186206896551724, 0.9549019607843137, 1.], 
         Hue[0.576923076923077, 0.06186206896551724, 0.9549019607843137, 1.], 
         Hue[0.576923076923077, 0.06186206896551724, 0.9549019607843137, 1.], 
         Hue[0.576923076923077, 0.06186206896551724, 0.9549019607843137, 1.], 
         Hue[0.576923076923077, 0.06186206896551724, 0.9549019607843137, 1.], 
         Hue[0.576923076923077, 0.06186206896551724, 0.9549019607843137, 1.], 
         Hue[0.576923076923077, 0.0030588235294117683`, 1., 1.], 
         Hue[0.576923076923077, 0.0030588235294117683`, 1., 1.], 
         Hue[0.576923076923077, 0.0030588235294117683`, 1., 1.], 
         Hue[0.576923076923077, 0.0030588235294117683`, 1., 1.], 
         Hue[0.576923076923077, 0.0030588235294117683`, 1., 1.], 
         Hue[0.576923076923077, 0.0030588235294117683`, 1., 1.], 
         Hue[0.576923076923077, 0.0030588235294117683`, 1., 1.], 
         Hue[0.576923076923077, 0.0030588235294117683`, 1., 1.], 
         Hue[0.576923076923077, 0.0030588235294117683`, 1., 1.], 
         Hue[0.576923076923077, 0.0030588235294117683`, 1., 1.], 
         Hue[0.576923076923077, 0.0030588235294117683`, 1., 1.], 
         Hue[0.576923076923077, 0.0030588235294117683`, 1., 1.], 
         Hue[0.576923076923077, 0.0030588235294117683`, 1., 1.], 
         Hue[0.576923076923077, 0.0030588235294117683`, 1., 1.], 
         Hue[0.576923076923077, 0.0030588235294117683`, 1., 1.], 
         Hue[0.576923076923077, 0.0030588235294117683`, 1., 1.], 
         Hue[0.576923076923077, 0.0030588235294117683`, 1., 1.], 
         Hue[0.576923076923077, 0.0030588235294117683`, 1., 1.], 
         Hue[0.576923076923077, 0.0030588235294117683`, 1., 1.], 
         Hue[0.576923076923077, 0.0030588235294117683`, 1., 1.], 
         Hue[0.576923076923077, 0.0030588235294117683`, 1., 1.], 
         Hue[0.576923076923077, 0.0030588235294117683`, 1., 1.], 
         Hue[0.576923076923077, 0.0030588235294117683`, 1., 1.], 
         Hue[0.576923076923077, 0.0030588235294117683`, 1., 1.], 
         Hue[0.576923076923077, 0.0030588235294117683`, 1., 1.], 
         Hue[0.576923076923077, 0.0030588235294117683`, 1., 1.], 
         Hue[0.576923076923077, 0.0030588235294117683`, 1., 1.], 
         Hue[0.576923076923077, 0.0030588235294117683`, 1., 1.], 
         Hue[0.576923076923077, 0.0030588235294117683`, 1., 1.], 
         Hue[0.576923076923077, 0.0030588235294117683`, 1., 1.], 
         Hue[0.576923076923077, 0.0030588235294117683`, 1., 1.], 
         Hue[0.576923076923077, 0.0030588235294117683`, 1., 1.], 
         Hue[0.576923076923077, 0.0030588235294117683`, 1., 1.], 
         Hue[0.576923076923077, 0.0030588235294117683`, 1., 1.], 
         Hue[0.576923076923077, 0.0030588235294117683`, 1., 1.], 
         Hue[0.576923076923077, 0.0030588235294117683`, 1., 1.], 
         Hue[0.576923076923077, 0.0030588235294117683`, 1., 1.], 
         Hue[0.576923076923077, 0.0030588235294117683`, 1., 1.], 
         Hue[0.576923076923077, 0.0030588235294117683`, 1., 1.], 
         Hue[0.576923076923077, 0.0030588235294117683`, 1., 1.], 
         Hue[0.576923076923077, 0.0030588235294117683`, 1., 1.], 
         Hue[0.576923076923077, 0.0030588235294117683`, 1., 1.], 
         Hue[0.576923076923077, 0.0030588235294117683`, 1., 1.], 
         Hue[0.576923076923077, 0.0030588235294117683`, 1., 1.], 
         Hue[0.576923076923077, 0.0030588235294117683`, 1., 1.], 
         Hue[0.576923076923077, 0.0030588235294117683`, 1., 1.], 
         Hue[0.576923076923077, 0.0030588235294117683`, 1., 1.], 
         Hue[0.576923076923077, 0.0030588235294117683`, 1., 1.], 
         Hue[0.576923076923077, 0.0030588235294117683`, 1., 1.], 
         Hue[0.576923076923077, 0.0030588235294117683`, 1., 1.], 
         Hue[0.576923076923077, 0.0030588235294117683`, 1., 1.], 
         Hue[0.576923076923077, 0.0030588235294117683`, 1., 1.], 
         Hue[0.576923076923077, 0.0030588235294117683`, 1., 1.], 
         Hue[0.576923076923077, 0.0030588235294117683`, 1., 1.], 
         Hue[0.576923076923077, 0.0030588235294117683`, 1., 1.], 
         Hue[0.576923076923077, 0.0030588235294117683`, 1., 1.], 
         Hue[0.576923076923077, 0.0030588235294117683`, 1., 1.], 
         Hue[0.576923076923077, 0.0030588235294117683`, 1., 1.], 
         Hue[0.576923076923077, 0.0030588235294117683`, 1., 1.], 
         Hue[0.576923076923077, 0.0030588235294117683`, 1., 1.], 
         Hue[0.576923076923077, 0.0030588235294117683`, 1., 1.], 
         Hue[0.576923076923077, 0.0030588235294117683`, 1., 1.], 
         Hue[0.576923076923077, 0.0030588235294117683`, 1., 1.], 
         Hue[0.576923076923077, 0.0030588235294117683`, 1., 1.], 
         Hue[0.576923076923077, 0.0030588235294117683`, 1., 1.], 
         Hue[0.576923076923077, 0.0030588235294117683`, 1., 1.], 
         Hue[0.576923076923077, 0.0030588235294117683`, 1., 1.], 
         Hue[0.576923076923077, 0.0030588235294117683`, 1., 1.], 
         Hue[0.576923076923077, 0.0030588235294117683`, 1., 1.], 
         Hue[0.576923076923077, 0.0030588235294117683`, 1., 1.], 
         Hue[0.576923076923077, 0.0030588235294117683`, 1., 1.], 
         Hue[0.576923076923077, 0.0030588235294117683`, 1., 1.], 
         Hue[0.576923076923077, 0.0030588235294117683`, 1., 1.], 
         Hue[0.576923076923077, 0.0030588235294117683`, 1., 1.], 
         Hue[0.576923076923077, 0.0030588235294117683`, 1., 1.], 
         Hue[0.576923076923077, 0.0030588235294117683`, 1., 1.], 
         Hue[0.576923076923077, 0.0030588235294117683`, 1., 1.], 
         Hue[0.576923076923077, 0.0030588235294117683`, 1., 1.], 
         Hue[0.576923076923077, 0.0030588235294117683`, 1., 1.], 
         Hue[0.576923076923077, 0.0030588235294117683`, 1., 1.], 
         Hue[0.576923076923077, 0.0030588235294117683`, 1., 1.], 
         Hue[0.576923076923077, 0.0030588235294117683`, 1., 1.], 
         Hue[0.576923076923077, 0.0030588235294117683`, 1., 1.], 
         Hue[0.576923076923077, 0.0030588235294117683`, 1., 1.], 
         Hue[0.576923076923077, 0.0030588235294117683`, 1., 1.], 
         Hue[0.576923076923077, 0.0030588235294117683`, 1., 1.], 
         Hue[0.576923076923077, 0.0030588235294117683`, 1., 1.], 
         Hue[0.576923076923077, 0.0030588235294117683`, 1., 1.], 
         Hue[0.576923076923077, 0.0030588235294117683`, 1., 1.], 
         Hue[0.576923076923077, 0.0030588235294117683`, 1., 1.], 
         Hue[0.576923076923077, 0.0030588235294117683`, 1., 1.], 
         Hue[0.576923076923077, 0.0030588235294117683`, 1., 1.], 
         Hue[0.576923076923077, 0.0030588235294117683`, 1., 1.], 
         Hue[0.576923076923077, 0.0030588235294117683`, 1., 1.], 
         Hue[0.576923076923077, 0.0030588235294117683`, 1., 1.], 
         Hue[0.576923076923077, 0.0030588235294117683`, 1., 1.], 
         Hue[0.576923076923077, 0.0030588235294117683`, 1., 1.], 
         Hue[0.576923076923077, 0.0030588235294117683`, 1., 1.], 
         Hue[0.576923076923077, 0.0030588235294117683`, 1., 1.], 
         Hue[0.576923076923077, 0.0030588235294117683`, 1., 1.], 
         Hue[0.576923076923077, 0.04715686274509805, 1., 1.], 
         Hue[0.576923076923077, 0.04715686274509805, 1., 1.], 
         Hue[0.576923076923077, 0.04715686274509805, 1., 1.], 
         Hue[0.576923076923077, 0.04715686274509805, 1., 1.], 
         Hue[0.576923076923077, 0.04715686274509805, 1., 1.], 
         Hue[0.576923076923077, 0.04715686274509805, 1., 1.], 
         Hue[0.576923076923077, 0.04715686274509805, 1., 1.], 
         Hue[0.576923076923077, 0.04715686274509805, 1., 1.], 
         Hue[0.576923076923077, 0.04715686274509805, 1., 1.], 
         Hue[0.576923076923077, 0.04715686274509805, 1., 1.], 
         Hue[0.576923076923077, 0.04715686274509805, 1., 1.], 
         Hue[0.576923076923077, 0.04715686274509805, 1., 1.], 
         Hue[0.576923076923077, 0.04715686274509805, 1., 1.], 
         Hue[0.576923076923077, 0.04715686274509805, 1., 1.], 
         Hue[0.576923076923077, 0.04715686274509805, 1., 1.], 
         Hue[0.576923076923077, 0.04715686274509805, 1., 1.], 
         Hue[0.576923076923077, 0.04715686274509805, 1., 1.], 
         Hue[0.576923076923077, 0.04715686274509805, 1., 1.], 
         Hue[0.576923076923077, 0.04715686274509805, 1., 1.], 
         Hue[0.576923076923077, 0.04715686274509805, 1., 1.], 
         Hue[0.576923076923077, 0.04715686274509805, 1., 1.], 
         Hue[0.576923076923077, 0.04715686274509805, 1., 1.], 
         Hue[0.576923076923077, 0.04715686274509805, 1., 1.], 
         Hue[0.576923076923077, 0.04715686274509805, 1., 1.], 
         Hue[0.576923076923077, 0.04715686274509805, 1., 1.], 
         Hue[0.576923076923077, 0.04715686274509805, 1., 1.], 
         Hue[0.576923076923077, 0.04715686274509805, 1., 1.], 
         Hue[0.576923076923077, 0.04715686274509805, 1., 1.], 
         Hue[0.576923076923077, 0.04715686274509805, 1., 1.], 
         Hue[0.576923076923077, 0.04715686274509805, 1., 1.], 
         Hue[0.576923076923077, 0.04715686274509805, 1., 1.], 
         Hue[0.576923076923077, 0.04715686274509805, 1., 1.], 
         Hue[0.576923076923077, 0.04715686274509805, 1., 1.], 
         Hue[0.576923076923077, 0.04715686274509805, 1., 1.], 
         Hue[0.576923076923077, 0.04715686274509805, 1., 1.], 
         Hue[0.576923076923077, 0.04715686274509805, 1., 1.], 
         Hue[0.576923076923077, 0.04715686274509805, 1., 1.], 
         Hue[0.576923076923077, 0.04715686274509805, 1., 1.], 
         Hue[0.576923076923077, 0.04715686274509805, 1., 1.], 
         Hue[0.576923076923077, 0.04715686274509805, 1., 1.], 
         Hue[0.576923076923077, 0.04715686274509805, 1., 1.], 
         Hue[0.576923076923077, 0.04715686274509805, 1., 1.], 
         Hue[0.576923076923077, 0.04715686274509805, 1., 1.], 
         Hue[0.576923076923077, 0.04715686274509805, 1., 1.], 
         Hue[0.576923076923077, 0.04715686274509805, 1., 1.], 
         Hue[0.576923076923077, 0.04715686274509805, 1., 1.], 
         Hue[0.576923076923077, 0.04715686274509805, 1., 1.], 
         Hue[0.576923076923077, 0.04715686274509805, 1., 1.], 
         Hue[0.576923076923077, 0.04715686274509805, 1., 1.], 
         Hue[0.576923076923077, 0.04715686274509805, 1., 1.], 
         Hue[0.576923076923077, 0.04715686274509805, 1., 1.], 
         Hue[0.576923076923077, 0.04715686274509805, 1., 1.], 
         Hue[0.576923076923077, 0.04715686274509805, 1., 1.], 
         Hue[0.576923076923077, 0.04715686274509805, 1., 1.], 
         Hue[0.576923076923077, 0.04715686274509805, 1., 1.], 
         Hue[0.576923076923077, 0.04715686274509805, 1., 1.], 
         Hue[0.576923076923077, 0.04715686274509805, 1., 1.], 
         Hue[0.576923076923077, 0.04715686274509805, 1., 1.], 
         Hue[0.576923076923077, 0.04715686274509805, 1., 1.], 
         Hue[0.576923076923077, 0.04715686274509805, 1., 1.], 
         Hue[0.576923076923077, 0.04715686274509805, 1., 1.], 
         Hue[0.576923076923077, 0.04715686274509805, 1., 1.], 
         Hue[0.576923076923077, 0.04715686274509805, 1., 1.], 
         Hue[0.576923076923077, 0.04715686274509805, 1., 1.], 
         Hue[0.576923076923077, 0.04715686274509805, 1., 1.], 
         Hue[0.576923076923077, 0.04715686274509805, 1., 1.], 
         Hue[0.576923076923077, 0.04715686274509805, 1., 1.], 
         Hue[0.576923076923077, 0.04715686274509805, 1., 1.], 
         Hue[0.576923076923077, 0.04715686274509805, 1., 1.], 
         Hue[0.576923076923077, 0.04715686274509805, 1., 1.], 
         Hue[0.576923076923077, 0.04715686274509805, 1., 1.], 
         Hue[0.576923076923077, 0.04715686274509805, 1., 1.], 
         Hue[0.576923076923077, 0.04715686274509805, 1., 1.], 
         Hue[0.576923076923077, 0.04715686274509805, 1., 1.], 
         Hue[0.576923076923077, 0.04715686274509805, 1., 1.], 
         Hue[0.576923076923077, 0.04715686274509805, 1., 1.], 
         Hue[0.576923076923077, 0.04715686274509805, 1., 1.], 
         Hue[0.576923076923077, 0.04715686274509805, 1., 1.], 
         Hue[0.576923076923077, 0.04715686274509805, 1., 1.], 
         Hue[0.576923076923077, 0.04715686274509805, 1., 1.], 
         Hue[0.576923076923077, 0.04715686274509805, 1., 1.], 
         Hue[0.576923076923077, 0.04715686274509805, 1., 1.], 
         Hue[0.576923076923077, 0.04715686274509805, 1., 1.], 
         Hue[0.576923076923077, 0.04715686274509805, 1., 1.], 
         Hue[0.576923076923077, 0.04715686274509805, 1., 1.], 
         Hue[0.576923076923077, 0.04715686274509805, 1., 1.], 
         Hue[0.576923076923077, 0.04715686274509805, 1., 1.], 
         Hue[0.576923076923077, 0.04715686274509805, 1., 1.], 
         Hue[0.576923076923077, 0.04715686274509805, 1., 1.], 
         Hue[0.576923076923077, 0.04715686274509805, 1., 1.], 
         Hue[0.576923076923077, 0.04715686274509805, 1., 1.], 
         Hue[0.576923076923077, 0.04715686274509805, 1., 1.], 
         Hue[0.576923076923077, 0.04715686274509805, 1., 1.], 
         Hue[0.576923076923077, 0.04715686274509805, 1., 1.], 
         Hue[0.576923076923077, 0.04715686274509805, 1., 1.], 
         Hue[0.576923076923077, 0.04715686274509805, 1., 1.], 
         Hue[0.576923076923077, 0.04715686274509805, 1., 1.], 
         Hue[0.576923076923077, 0.04715686274509805, 1., 1.], 
         Hue[0.576923076923077, 0.04715686274509805, 1., 1.], 
         Hue[0.576923076923077, 0.04715686274509805, 1., 1.], 
         Hue[0.576923076923077, 0.08919282511210762, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.08919282511210762, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.08919282511210762, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.08919282511210762, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.08919282511210762, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.08919282511210762, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.08919282511210762, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.08919282511210762, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.08919282511210762, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.08919282511210762, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.08919282511210762, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.08919282511210762, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.08919282511210762, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.08919282511210762, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.08919282511210762, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.08919282511210762, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.08919282511210762, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.08919282511210762, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.08919282511210762, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.08919282511210762, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.08919282511210762, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.08919282511210762, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.08919282511210762, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.08919282511210762, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.08919282511210762, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.08919282511210762, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.08919282511210762, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.08919282511210762, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.08919282511210762, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.08919282511210762, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.08919282511210762, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.08919282511210762, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.08919282511210762, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.08919282511210762, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.08919282511210762, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.08919282511210762, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.08919282511210762, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.08919282511210762, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.08919282511210762, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.08919282511210762, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.08919282511210762, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.08919282511210762, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.08919282511210762, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.08919282511210762, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.08919282511210762, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.08919282511210762, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.08919282511210762, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.08919282511210762, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.08919282511210762, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.08919282511210762, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.08919282511210762, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.08919282511210762, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.08919282511210762, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.08919282511210762, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.08919282511210762, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.08919282511210762, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.08919282511210762, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.08919282511210762, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.08919282511210762, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.08919282511210762, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.08919282511210762, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.08919282511210762, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.08919282511210762, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.08919282511210762, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.08919282511210762, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.08919282511210762, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.08919282511210762, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.08919282511210762, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.08919282511210762, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.08919282511210762, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.08919282511210762, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.08919282511210762, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.08919282511210762, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.08919282511210762, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.08919282511210762, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.08919282511210762, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.08919282511210762, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.08919282511210762, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.08919282511210762, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.08919282511210762, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.08919282511210762, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.08919282511210762, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.08919282511210762, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.08919282511210762, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.08919282511210762, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.08919282511210762, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.08919282511210762, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.08919282511210762, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.08919282511210762, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.08919282511210762, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.08919282511210762, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.08919282511210762, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.08919282511210762, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.08919282511210762, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.08919282511210762, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.08919282511210762, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.08919282511210762, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.08919282511210762, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.08919282511210762, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.08919282511210762, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.12269519598095138`, 0.7666666666666666, 1.], 
         Hue[0.576923076923077, 0.12269519598095138`, 0.7666666666666666, 1.], 
         Hue[0.576923076923077, 0.12269519598095138`, 0.7666666666666666, 1.], 
         Hue[0.576923076923077, 0.12269519598095138`, 0.7666666666666666, 1.], 
         Hue[0.576923076923077, 0.12269519598095138`, 0.7666666666666666, 1.], 
         Hue[0.576923076923077, 0.12269519598095138`, 0.7666666666666666, 1.], 
         Hue[0.576923076923077, 0.12269519598095138`, 0.7666666666666666, 1.], 
         Hue[0.576923076923077, 0.12269519598095138`, 0.7666666666666666, 1.], 
         Hue[0.576923076923077, 0.12269519598095138`, 0.7666666666666666, 1.], 
         Hue[0.576923076923077, 0.12269519598095138`, 0.7666666666666666, 1.], 
         Hue[0.576923076923077, 0.12269519598095138`, 0.7666666666666666, 1.], 
         Hue[0.576923076923077, 0.12269519598095138`, 0.7666666666666666, 1.], 
         Hue[0.576923076923077, 0.12269519598095138`, 0.7666666666666666, 1.], 
         Hue[0.576923076923077, 0.12269519598095138`, 0.7666666666666666, 1.], 
         Hue[0.576923076923077, 0.12269519598095138`, 0.7666666666666666, 1.], 
         Hue[0.576923076923077, 0.12269519598095138`, 0.7666666666666666, 1.], 
         Hue[0.576923076923077, 0.12269519598095138`, 0.7666666666666666, 1.], 
         Hue[0.576923076923077, 0.12269519598095138`, 0.7666666666666666, 1.], 
         Hue[0.576923076923077, 0.12269519598095138`, 0.7666666666666666, 1.], 
         Hue[0.576923076923077, 0.12269519598095138`, 0.7666666666666666, 1.], 
         Hue[0.576923076923077, 0.12269519598095138`, 0.7666666666666666, 1.], 
         Hue[0.576923076923077, 0.12269519598095138`, 0.7666666666666666, 1.], 
         Hue[0.576923076923077, 0.12269519598095138`, 0.7666666666666666, 1.], 
         Hue[0.576923076923077, 0.12269519598095138`, 0.7666666666666666, 1.], 
         Hue[0.576923076923077, 0.12269519598095138`, 0.7666666666666666, 1.], 
         Hue[0.576923076923077, 0.12269519598095138`, 0.7666666666666666, 1.], 
         Hue[0.576923076923077, 0.12269519598095138`, 0.7666666666666666, 1.], 
         Hue[0.576923076923077, 0.12269519598095138`, 0.7666666666666666, 1.], 
         Hue[0.576923076923077, 0.12269519598095138`, 0.7666666666666666, 1.], 
         Hue[0.576923076923077, 0.12269519598095138`, 0.7666666666666666, 1.], 
         Hue[0.576923076923077, 0.12269519598095138`, 0.7666666666666666, 1.], 
         Hue[0.576923076923077, 0.12269519598095138`, 0.7666666666666666, 1.], 
         Hue[0.576923076923077, 0.12269519598095138`, 0.7666666666666666, 1.], 
         Hue[0.576923076923077, 0.12269519598095138`, 0.7666666666666666, 1.], 
         Hue[0.576923076923077, 0.12269519598095138`, 0.7666666666666666, 1.], 
         Hue[0.576923076923077, 0.12269519598095138`, 0.7666666666666666, 1.], 
         Hue[0.576923076923077, 0.12269519598095138`, 0.7666666666666666, 1.], 
         Hue[0.576923076923077, 0.12269519598095138`, 0.7666666666666666, 1.], 
         Hue[0.576923076923077, 0.12269519598095138`, 0.7666666666666666, 1.], 
         Hue[0.576923076923077, 0.12269519598095138`, 0.7666666666666666, 1.], 
         Hue[0.576923076923077, 0.12269519598095138`, 0.7666666666666666, 1.], 
         Hue[0.576923076923077, 0.12269519598095138`, 0.7666666666666666, 1.], 
         Hue[0.576923076923077, 0.12269519598095138`, 0.7666666666666666, 1.], 
         Hue[0.576923076923077, 0.12269519598095138`, 0.7666666666666666, 1.], 
         Hue[0.576923076923077, 0.12269519598095138`, 0.7666666666666666, 1.], 
         Hue[0.576923076923077, 0.12269519598095138`, 0.7666666666666666, 1.], 
         Hue[0.576923076923077, 0.12269519598095138`, 0.7666666666666666, 1.], 
         Hue[0.576923076923077, 0.12269519598095138`, 0.7666666666666666, 1.], 
         Hue[0.576923076923077, 0.12269519598095138`, 0.7666666666666666, 1.], 
         Hue[0.576923076923077, 0.12269519598095138`, 0.7666666666666666, 1.], 
         Hue[0.576923076923077, 0.12269519598095138`, 0.7666666666666666, 1.], 
         Hue[0.576923076923077, 0.12269519598095138`, 0.7666666666666666, 1.], 
         Hue[0.576923076923077, 0.12269519598095138`, 0.7666666666666666, 1.], 
         Hue[0.576923076923077, 0.12269519598095138`, 0.7666666666666666, 1.], 
         Hue[0.576923076923077, 0.12269519598095138`, 0.7666666666666666, 1.], 
         Hue[0.576923076923077, 0.12269519598095138`, 0.7666666666666666, 1.], 
         Hue[0.576923076923077, 0.12269519598095138`, 0.7666666666666666, 1.], 
         Hue[0.576923076923077, 0.12269519598095138`, 0.7666666666666666, 1.], 
         Hue[0.576923076923077, 0.12269519598095138`, 0.7666666666666666, 1.], 
         Hue[0.576923076923077, 0.12269519598095138`, 0.7666666666666666, 1.], 
         Hue[0.576923076923077, 0.12269519598095138`, 0.7666666666666666, 1.], 
         Hue[0.576923076923077, 0.12269519598095138`, 0.7666666666666666, 1.], 
         Hue[0.576923076923077, 0.12269519598095138`, 0.7666666666666666, 1.], 
         Hue[0.576923076923077, 0.12269519598095138`, 0.7666666666666666, 1.], 
         Hue[0.576923076923077, 0.12269519598095138`, 0.7666666666666666, 1.], 
         Hue[0.576923076923077, 0.12269519598095138`, 0.7666666666666666, 1.], 
         Hue[0.576923076923077, 0.12269519598095138`, 0.7666666666666666, 1.], 
         Hue[0.576923076923077, 0.12269519598095138`, 0.7666666666666666, 1.], 
         Hue[0.576923076923077, 0.12269519598095138`, 0.7666666666666666, 1.], 
         Hue[0.576923076923077, 0.12269519598095138`, 0.7666666666666666, 1.], 
         Hue[0.576923076923077, 0.12269519598095138`, 0.7666666666666666, 1.], 
         Hue[0.576923076923077, 0.12269519598095138`, 0.7666666666666666, 1.], 
         Hue[0.576923076923077, 0.12269519598095138`, 0.7666666666666666, 1.], 
         Hue[0.576923076923077, 0.12269519598095138`, 0.7666666666666666, 1.], 
         Hue[0.576923076923077, 0.12269519598095138`, 0.7666666666666666, 1.], 
         Hue[0.576923076923077, 0.12269519598095138`, 0.7666666666666666, 1.], 
         Hue[0.576923076923077, 0.12269519598095138`, 0.7666666666666666, 1.], 
         Hue[0.576923076923077, 0.12269519598095138`, 0.7666666666666666, 1.], 
         Hue[0.576923076923077, 0.12269519598095138`, 0.7666666666666666, 1.], 
         Hue[0.576923076923077, 0.12269519598095138`, 0.7666666666666666, 1.], 
         Hue[0.576923076923077, 0.12269519598095138`, 0.7666666666666666, 1.], 
         Hue[0.576923076923077, 0.12269519598095138`, 0.7666666666666666, 1.], 
         Hue[0.576923076923077, 0.12269519598095138`, 0.7666666666666666, 1.], 
         Hue[0.576923076923077, 0.12269519598095138`, 0.7666666666666666, 1.], 
         Hue[0.576923076923077, 0.12269519598095138`, 0.7666666666666666, 1.], 
         Hue[0.576923076923077, 0.12269519598095138`, 0.7666666666666666, 1.], 
         Hue[0.576923076923077, 0.12269519598095138`, 0.7666666666666666, 1.], 
         Hue[0.576923076923077, 0.12269519598095138`, 0.7666666666666666, 1.], 
         Hue[0.576923076923077, 0.12269519598095138`, 0.7666666666666666, 1.], 
         Hue[0.576923076923077, 0.12269519598095138`, 0.7666666666666666, 1.], 
         Hue[0.576923076923077, 0.12269519598095138`, 0.7666666666666666, 1.], 
         Hue[0.576923076923077, 0.12269519598095138`, 0.7666666666666666, 1.], 
         Hue[0.576923076923077, 0.12269519598095138`, 0.7666666666666666, 1.], 
         Hue[0.576923076923077, 0.12269519598095138`, 0.7666666666666666, 1.], 
         Hue[0.576923076923077, 0.12269519598095138`, 0.7666666666666666, 1.], 
         Hue[0.576923076923077, 0.12269519598095138`, 0.7666666666666666, 1.], 
         Hue[0.576923076923077, 0.12269519598095138`, 0.7666666666666666, 1.], 
         Hue[0.576923076923077, 0.12269519598095138`, 0.7666666666666666, 1.], 
         Hue[0.576923076923077, 0.12269519598095138`, 0.7666666666666666, 1.], 
         Hue[0.576923076923077, 0.12269519598095138`, 0.7666666666666666, 1.], 
         Hue[0.576923076923077, 0.11712871287128714`, 0.792156862745098, 1.], 
         Hue[0.576923076923077, 0.11712871287128714`, 0.792156862745098, 1.], 
         Hue[0.576923076923077, 0.11712871287128714`, 0.792156862745098, 1.], 
         Hue[0.576923076923077, 0.11712871287128714`, 0.792156862745098, 1.], 
         Hue[0.576923076923077, 0.11712871287128714`, 0.792156862745098, 1.], 
         Hue[0.576923076923077, 0.11712871287128714`, 0.792156862745098, 1.], 
         Hue[0.576923076923077, 0.11712871287128714`, 0.792156862745098, 1.], 
         Hue[0.576923076923077, 0.11712871287128714`, 0.792156862745098, 1.], 
         Hue[0.576923076923077, 0.11712871287128714`, 0.792156862745098, 1.], 
         Hue[0.576923076923077, 0.11712871287128714`, 0.792156862745098, 1.], 
         Hue[0.576923076923077, 0.11712871287128714`, 0.792156862745098, 1.], 
         Hue[0.576923076923077, 0.11712871287128714`, 0.792156862745098, 1.], 
         Hue[0.576923076923077, 0.11712871287128714`, 0.792156862745098, 1.], 
         Hue[0.576923076923077, 0.11712871287128714`, 0.792156862745098, 1.], 
         Hue[0.576923076923077, 0.11712871287128714`, 0.792156862745098, 1.], 
         Hue[0.576923076923077, 0.11712871287128714`, 0.792156862745098, 1.], 
         Hue[0.576923076923077, 0.11712871287128714`, 0.792156862745098, 1.], 
         Hue[0.576923076923077, 0.11712871287128714`, 0.792156862745098, 1.], 
         Hue[0.576923076923077, 0.11712871287128714`, 0.792156862745098, 1.], 
         Hue[0.576923076923077, 0.11712871287128714`, 0.792156862745098, 1.], 
         Hue[0.576923076923077, 0.11712871287128714`, 0.792156862745098, 1.], 
         Hue[0.576923076923077, 0.11712871287128714`, 0.792156862745098, 1.], 
         Hue[0.576923076923077, 0.11712871287128714`, 0.792156862745098, 1.], 
         Hue[0.576923076923077, 0.11712871287128714`, 0.792156862745098, 1.], 
         Hue[0.576923076923077, 0.11712871287128714`, 0.792156862745098, 1.], 
         Hue[0.576923076923077, 0.11712871287128714`, 0.792156862745098, 1.], 
         Hue[0.576923076923077, 0.11712871287128714`, 0.792156862745098, 1.], 
         Hue[0.576923076923077, 0.11712871287128714`, 0.792156862745098, 1.], 
         Hue[0.576923076923077, 0.11712871287128714`, 0.792156862745098, 1.], 
         Hue[0.576923076923077, 0.11712871287128714`, 0.792156862745098, 1.], 
         Hue[0.576923076923077, 0.11712871287128714`, 0.792156862745098, 1.], 
         Hue[0.576923076923077, 0.11712871287128714`, 0.792156862745098, 1.], 
         Hue[0.576923076923077, 0.11712871287128714`, 0.792156862745098, 1.], 
         Hue[0.576923076923077, 0.11712871287128714`, 0.792156862745098, 1.], 
         Hue[0.576923076923077, 0.11712871287128714`, 0.792156862745098, 1.], 
         Hue[0.576923076923077, 0.11712871287128714`, 0.792156862745098, 1.], 
         Hue[0.576923076923077, 0.11712871287128714`, 0.792156862745098, 1.], 
         Hue[0.576923076923077, 0.11712871287128714`, 0.792156862745098, 1.], 
         Hue[0.576923076923077, 0.11712871287128714`, 0.792156862745098, 1.], 
         Hue[0.576923076923077, 0.11712871287128714`, 0.792156862745098, 1.], 
         Hue[0.576923076923077, 0.11712871287128714`, 0.792156862745098, 1.], 
         Hue[0.576923076923077, 0.11712871287128714`, 0.792156862745098, 1.], 
         Hue[0.576923076923077, 0.11712871287128714`, 0.792156862745098, 1.], 
         Hue[0.576923076923077, 0.11712871287128714`, 0.792156862745098, 1.], 
         Hue[0.576923076923077, 0.11712871287128714`, 0.792156862745098, 1.], 
         Hue[0.576923076923077, 0.11712871287128714`, 0.792156862745098, 1.], 
         Hue[0.576923076923077, 0.11712871287128714`, 0.792156862745098, 1.], 
         Hue[0.576923076923077, 0.11712871287128714`, 0.792156862745098, 1.], 
         Hue[0.576923076923077, 0.11712871287128714`, 0.792156862745098, 1.], 
         Hue[0.576923076923077, 0.11712871287128714`, 0.792156862745098, 1.], 
         Hue[0.576923076923077, 0.11712871287128714`, 0.792156862745098, 1.], 
         Hue[0.576923076923077, 0.11712871287128714`, 0.792156862745098, 1.], 
         Hue[0.576923076923077, 0.11712871287128714`, 0.792156862745098, 1.], 
         Hue[0.576923076923077, 0.11712871287128714`, 0.792156862745098, 1.], 
         Hue[0.576923076923077, 0.11712871287128714`, 0.792156862745098, 1.], 
         Hue[0.576923076923077, 0.11712871287128714`, 0.792156862745098, 1.], 
         Hue[0.576923076923077, 0.11712871287128714`, 0.792156862745098, 1.], 
         Hue[0.576923076923077, 0.11712871287128714`, 0.792156862745098, 1.], 
         Hue[0.576923076923077, 0.11712871287128714`, 0.792156862745098, 1.], 
         Hue[0.576923076923077, 0.11712871287128714`, 0.792156862745098, 1.], 
         Hue[0.576923076923077, 0.11712871287128714`, 0.792156862745098, 1.], 
         Hue[0.576923076923077, 0.11712871287128714`, 0.792156862745098, 1.], 
         Hue[0.576923076923077, 0.11712871287128714`, 0.792156862745098, 1.], 
         Hue[0.576923076923077, 0.11712871287128714`, 0.792156862745098, 1.], 
         Hue[0.576923076923077, 0.11712871287128714`, 0.792156862745098, 1.], 
         Hue[0.576923076923077, 0.11712871287128714`, 0.792156862745098, 1.], 
         Hue[0.576923076923077, 0.11712871287128714`, 0.792156862745098, 1.], 
         Hue[0.576923076923077, 0.11712871287128714`, 0.792156862745098, 1.], 
         Hue[0.576923076923077, 0.11712871287128714`, 0.792156862745098, 1.], 
         Hue[0.576923076923077, 0.11712871287128714`, 0.792156862745098, 1.], 
         Hue[0.576923076923077, 0.11712871287128714`, 0.792156862745098, 1.], 
         Hue[0.576923076923077, 0.11712871287128714`, 0.792156862745098, 1.], 
         Hue[0.576923076923077, 0.11712871287128714`, 0.792156862745098, 1.], 
         Hue[0.576923076923077, 0.11712871287128714`, 0.792156862745098, 1.], 
         Hue[0.576923076923077, 0.11712871287128714`, 0.792156862745098, 1.], 
         Hue[0.576923076923077, 0.11712871287128714`, 0.792156862745098, 1.], 
         Hue[0.576923076923077, 0.11712871287128714`, 0.792156862745098, 1.], 
         Hue[0.576923076923077, 0.11712871287128714`, 0.792156862745098, 1.], 
         Hue[0.576923076923077, 0.11712871287128714`, 0.792156862745098, 1.], 
         Hue[0.576923076923077, 0.11712871287128714`, 0.792156862745098, 1.], 
         Hue[0.576923076923077, 0.11712871287128714`, 0.792156862745098, 1.], 
         Hue[0.576923076923077, 0.11712871287128714`, 0.792156862745098, 1.], 
         Hue[0.576923076923077, 0.11712871287128714`, 0.792156862745098, 1.], 
         Hue[0.576923076923077, 0.11712871287128714`, 0.792156862745098, 1.], 
         Hue[0.576923076923077, 0.11712871287128714`, 0.792156862745098, 1.], 
         Hue[0.576923076923077, 0.11712871287128714`, 0.792156862745098, 1.], 
         Hue[0.576923076923077, 0.11712871287128714`, 0.792156862745098, 1.], 
         Hue[0.576923076923077, 0.11712871287128714`, 0.792156862745098, 1.], 
         Hue[0.576923076923077, 0.11712871287128714`, 0.792156862745098, 1.], 
         Hue[0.576923076923077, 0.11712871287128714`, 0.792156862745098, 1.], 
         Hue[0.576923076923077, 0.11712871287128714`, 0.792156862745098, 1.], 
         Hue[0.576923076923077, 0.11712871287128714`, 0.792156862745098, 1.], 
         Hue[0.576923076923077, 0.11712871287128714`, 0.792156862745098, 1.], 
         Hue[0.576923076923077, 0.11712871287128714`, 0.792156862745098, 1.], 
         Hue[0.576923076923077, 0.11712871287128714`, 0.792156862745098, 1.], 
         Hue[0.576923076923077, 0.11712871287128714`, 0.792156862745098, 1.], 
         Hue[0.576923076923077, 0.11712871287128714`, 0.792156862745098, 1.], 
         Hue[0.576923076923077, 0.11712871287128714`, 0.792156862745098, 1.], 
         Hue[0.576923076923077, 0.11712871287128714`, 0.792156862745098, 1.], 
         Hue[0.576923076923077, 0.11712871287128714`, 0.792156862745098, 1.], 
         Hue[0.576923076923077, 0.1107232142857143, 0.8196078431372549, 1.], 
         Hue[0.576923076923077, 0.1107232142857143, 0.8196078431372549, 1.], 
         Hue[0.576923076923077, 0.1107232142857143, 0.8196078431372549, 1.], 
         Hue[0.576923076923077, 0.1107232142857143, 0.8196078431372549, 1.], 
         Hue[0.576923076923077, 0.1107232142857143, 0.8196078431372549, 1.], 
         Hue[0.576923076923077, 0.1107232142857143, 0.8196078431372549, 1.], 
         Hue[0.576923076923077, 0.1107232142857143, 0.8196078431372549, 1.], 
         Hue[0.576923076923077, 0.1107232142857143, 0.8196078431372549, 1.], 
         Hue[0.576923076923077, 0.1107232142857143, 0.8196078431372549, 1.], 
         Hue[0.576923076923077, 0.1107232142857143, 0.8196078431372549, 1.], 
         Hue[0.576923076923077, 0.1107232142857143, 0.8196078431372549, 1.], 
         Hue[0.576923076923077, 0.1107232142857143, 0.8196078431372549, 1.], 
         Hue[0.576923076923077, 0.1107232142857143, 0.8196078431372549, 1.], 
         Hue[0.576923076923077, 0.1107232142857143, 0.8196078431372549, 1.], 
         Hue[0.576923076923077, 0.1107232142857143, 0.8196078431372549, 1.], 
         Hue[0.576923076923077, 0.1107232142857143, 0.8196078431372549, 1.], 
         Hue[0.576923076923077, 0.1107232142857143, 0.8196078431372549, 1.], 
         Hue[0.576923076923077, 0.1107232142857143, 0.8196078431372549, 1.], 
         Hue[0.576923076923077, 0.1107232142857143, 0.8196078431372549, 1.], 
         Hue[0.576923076923077, 0.1107232142857143, 0.8196078431372549, 1.], 
         Hue[0.576923076923077, 0.1107232142857143, 0.8196078431372549, 1.], 
         Hue[0.576923076923077, 0.1107232142857143, 0.8196078431372549, 1.], 
         Hue[0.576923076923077, 0.1107232142857143, 0.8196078431372549, 1.], 
         Hue[0.576923076923077, 0.1107232142857143, 0.8196078431372549, 1.], 
         Hue[0.576923076923077, 0.1107232142857143, 0.8196078431372549, 1.], 
         Hue[0.576923076923077, 0.1107232142857143, 0.8196078431372549, 1.], 
         Hue[0.576923076923077, 0.1107232142857143, 0.8196078431372549, 1.], 
         Hue[0.576923076923077, 0.1107232142857143, 0.8196078431372549, 1.], 
         Hue[0.576923076923077, 0.1107232142857143, 0.8196078431372549, 1.], 
         Hue[0.576923076923077, 0.1107232142857143, 0.8196078431372549, 1.], 
         Hue[0.576923076923077, 0.1107232142857143, 0.8196078431372549, 1.], 
         Hue[0.576923076923077, 0.1107232142857143, 0.8196078431372549, 1.], 
         Hue[0.576923076923077, 0.1107232142857143, 0.8196078431372549, 1.], 
         Hue[0.576923076923077, 0.1107232142857143, 0.8196078431372549, 1.], 
         Hue[0.576923076923077, 0.1107232142857143, 0.8196078431372549, 1.], 
         Hue[0.576923076923077, 0.1107232142857143, 0.8196078431372549, 1.], 
         Hue[0.576923076923077, 0.1107232142857143, 0.8196078431372549, 1.], 
         Hue[0.576923076923077, 0.1107232142857143, 0.8196078431372549, 1.], 
         Hue[0.576923076923077, 0.1107232142857143, 0.8196078431372549, 1.], 
         Hue[0.576923076923077, 0.1107232142857143, 0.8196078431372549, 1.], 
         Hue[0.576923076923077, 0.1107232142857143, 0.8196078431372549, 1.], 
         Hue[0.576923076923077, 0.1107232142857143, 0.8196078431372549, 1.], 
         Hue[0.576923076923077, 0.1107232142857143, 0.8196078431372549, 1.], 
         Hue[0.576923076923077, 0.1107232142857143, 0.8196078431372549, 1.], 
         Hue[0.576923076923077, 0.1107232142857143, 0.8196078431372549, 1.], 
         Hue[0.576923076923077, 0.1107232142857143, 0.8196078431372549, 1.], 
         Hue[0.576923076923077, 0.1107232142857143, 0.8196078431372549, 1.], 
         Hue[0.576923076923077, 0.1107232142857143, 0.8196078431372549, 1.], 
         Hue[0.576923076923077, 0.1107232142857143, 0.8196078431372549, 1.], 
         Hue[0.576923076923077, 0.1107232142857143, 0.8196078431372549, 1.], 
         Hue[0.576923076923077, 0.1107232142857143, 0.8196078431372549, 1.], 
         Hue[0.576923076923077, 0.1107232142857143, 0.8196078431372549, 1.], 
         Hue[0.576923076923077, 0.1107232142857143, 0.8196078431372549, 1.], 
         Hue[0.576923076923077, 0.1107232142857143, 0.8196078431372549, 1.], 
         Hue[0.576923076923077, 0.1107232142857143, 0.8196078431372549, 1.], 
         Hue[0.576923076923077, 0.1107232142857143, 0.8196078431372549, 1.], 
         Hue[0.576923076923077, 0.1107232142857143, 0.8196078431372549, 1.], 
         Hue[0.576923076923077, 0.1107232142857143, 0.8196078431372549, 1.], 
         Hue[0.576923076923077, 0.1107232142857143, 0.8196078431372549, 1.], 
         Hue[0.576923076923077, 0.1107232142857143, 0.8196078431372549, 1.], 
         Hue[0.576923076923077, 0.1107232142857143, 0.8196078431372549, 1.], 
         Hue[0.576923076923077, 0.1107232142857143, 0.8196078431372549, 1.], 
         Hue[0.576923076923077, 0.1107232142857143, 0.8196078431372549, 1.], 
         Hue[0.576923076923077, 0.1107232142857143, 0.8196078431372549, 1.], 
         Hue[0.576923076923077, 0.1107232142857143, 0.8196078431372549, 1.], 
         Hue[0.576923076923077, 0.1107232142857143, 0.8196078431372549, 1.], 
         Hue[0.576923076923077, 0.1107232142857143, 0.8196078431372549, 1.], 
         Hue[0.576923076923077, 0.1107232142857143, 0.8196078431372549, 1.], 
         Hue[0.576923076923077, 0.1107232142857143, 0.8196078431372549, 1.], 
         Hue[0.576923076923077, 0.1107232142857143, 0.8196078431372549, 1.], 
         Hue[0.576923076923077, 0.1107232142857143, 0.8196078431372549, 1.], 
         Hue[0.576923076923077, 0.1107232142857143, 0.8196078431372549, 1.], 
         Hue[0.576923076923077, 0.1107232142857143, 0.8196078431372549, 1.], 
         Hue[0.576923076923077, 0.1107232142857143, 0.8196078431372549, 1.], 
         Hue[0.576923076923077, 0.1107232142857143, 0.8196078431372549, 1.], 
         Hue[0.576923076923077, 0.1107232142857143, 0.8196078431372549, 1.], 
         Hue[0.576923076923077, 0.1107232142857143, 0.8196078431372549, 1.], 
         Hue[0.576923076923077, 0.1107232142857143, 0.8196078431372549, 1.], 
         Hue[0.576923076923077, 0.1107232142857143, 0.8196078431372549, 1.], 
         Hue[0.576923076923077, 0.1107232142857143, 0.8196078431372549, 1.], 
         Hue[0.576923076923077, 0.1107232142857143, 0.8196078431372549, 1.], 
         Hue[0.576923076923077, 0.1107232142857143, 0.8196078431372549, 1.], 
         Hue[0.576923076923077, 0.1107232142857143, 0.8196078431372549, 1.], 
         Hue[0.576923076923077, 0.1107232142857143, 0.8196078431372549, 1.], 
         Hue[0.576923076923077, 0.1107232142857143, 0.8196078431372549, 1.], 
         Hue[0.576923076923077, 0.1107232142857143, 0.8196078431372549, 1.], 
         Hue[0.576923076923077, 0.1107232142857143, 0.8196078431372549, 1.], 
         Hue[0.576923076923077, 0.1107232142857143, 0.8196078431372549, 1.], 
         Hue[0.576923076923077, 0.1107232142857143, 0.8196078431372549, 1.], 
         Hue[0.576923076923077, 0.1107232142857143, 0.8196078431372549, 1.], 
         Hue[0.576923076923077, 0.1107232142857143, 0.8196078431372549, 1.], 
         Hue[0.576923076923077, 0.1107232142857143, 0.8196078431372549, 1.], 
         Hue[0.576923076923077, 0.1107232142857143, 0.8196078431372549, 1.], 
         Hue[0.576923076923077, 0.1107232142857143, 0.8196078431372549, 1.], 
         Hue[0.576923076923077, 0.1107232142857143, 0.8196078431372549, 1.], 
         Hue[0.576923076923077, 0.1107232142857143, 0.8196078431372549, 1.], 
         Hue[0.576923076923077, 0.1107232142857143, 0.8196078431372549, 1.], 
         Hue[0.576923076923077, 0.1107232142857143, 0.8196078431372549, 1.], 
         Hue[0.576923076923077, 0.1107232142857143, 0.8196078431372549, 1.], 
         Hue[0.576923076923077, 0.1107232142857143, 0.8196078431372549, 1.], 
         Hue[0.576923076923077, 0.1058139534883721, 0.8431372549019608, 1.], 
         Hue[0.576923076923077, 0.1058139534883721, 0.8431372549019608, 1.], 
         Hue[0.576923076923077, 0.1058139534883721, 0.8431372549019608, 1.], 
         Hue[0.576923076923077, 0.1058139534883721, 0.8431372549019608, 1.], 
         Hue[0.576923076923077, 0.1058139534883721, 0.8431372549019608, 1.], 
         Hue[0.576923076923077, 0.1058139534883721, 0.8431372549019608, 1.], 
         Hue[0.576923076923077, 0.1058139534883721, 0.8431372549019608, 1.], 
         Hue[0.576923076923077, 0.1058139534883721, 0.8431372549019608, 1.], 
         Hue[0.576923076923077, 0.1058139534883721, 0.8431372549019608, 1.], 
         Hue[0.576923076923077, 0.1058139534883721, 0.8431372549019608, 1.], 
         Hue[0.576923076923077, 0.1058139534883721, 0.8431372549019608, 1.], 
         Hue[0.576923076923077, 0.1058139534883721, 0.8431372549019608, 1.], 
         Hue[0.576923076923077, 0.1058139534883721, 0.8431372549019608, 1.], 
         Hue[0.576923076923077, 0.1058139534883721, 0.8431372549019608, 1.], 
         Hue[0.576923076923077, 0.1058139534883721, 0.8431372549019608, 1.], 
         Hue[0.576923076923077, 0.1058139534883721, 0.8431372549019608, 1.], 
         Hue[0.576923076923077, 0.1058139534883721, 0.8431372549019608, 1.], 
         Hue[0.576923076923077, 0.1058139534883721, 0.8431372549019608, 1.], 
         Hue[0.576923076923077, 0.1058139534883721, 0.8431372549019608, 1.], 
         Hue[0.576923076923077, 0.1058139534883721, 0.8431372549019608, 1.], 
         Hue[0.576923076923077, 0.1058139534883721, 0.8431372549019608, 1.], 
         Hue[0.576923076923077, 0.1058139534883721, 0.8431372549019608, 1.], 
         Hue[0.576923076923077, 0.1058139534883721, 0.8431372549019608, 1.], 
         Hue[0.576923076923077, 0.1058139534883721, 0.8431372549019608, 1.], 
         Hue[0.576923076923077, 0.1058139534883721, 0.8431372549019608, 1.], 
         Hue[0.576923076923077, 0.1058139534883721, 0.8431372549019608, 1.], 
         Hue[0.576923076923077, 0.1058139534883721, 0.8431372549019608, 1.], 
         Hue[0.576923076923077, 0.1058139534883721, 0.8431372549019608, 1.], 
         Hue[0.576923076923077, 0.1058139534883721, 0.8431372549019608, 1.], 
         Hue[0.576923076923077, 0.1058139534883721, 0.8431372549019608, 1.], 
         Hue[0.576923076923077, 0.1058139534883721, 0.8431372549019608, 1.], 
         Hue[0.576923076923077, 0.1058139534883721, 0.8431372549019608, 1.], 
         Hue[0.576923076923077, 0.1058139534883721, 0.8431372549019608, 1.], 
         Hue[0.576923076923077, 0.1058139534883721, 0.8431372549019608, 1.], 
         Hue[0.576923076923077, 0.1058139534883721, 0.8431372549019608, 1.], 
         Hue[0.576923076923077, 0.1058139534883721, 0.8431372549019608, 1.], 
         Hue[0.576923076923077, 0.1058139534883721, 0.8431372549019608, 1.], 
         Hue[0.576923076923077, 0.1058139534883721, 0.8431372549019608, 1.], 
         Hue[0.576923076923077, 0.1058139534883721, 0.8431372549019608, 1.], 
         Hue[0.576923076923077, 0.1058139534883721, 0.8431372549019608, 1.], 
         Hue[0.576923076923077, 0.1058139534883721, 0.8431372549019608, 1.], 
         Hue[0.576923076923077, 0.1058139534883721, 0.8431372549019608, 1.], 
         Hue[0.576923076923077, 0.1058139534883721, 0.8431372549019608, 1.], 
         Hue[0.576923076923077, 0.1058139534883721, 0.8431372549019608, 1.], 
         Hue[0.576923076923077, 0.1058139534883721, 0.8431372549019608, 1.], 
         Hue[0.576923076923077, 0.1058139534883721, 0.8431372549019608, 1.], 
         Hue[0.576923076923077, 0.1058139534883721, 0.8431372549019608, 1.], 
         Hue[0.576923076923077, 0.1058139534883721, 0.8431372549019608, 1.], 
         Hue[0.576923076923077, 0.1058139534883721, 0.8431372549019608, 1.], 
         Hue[0.576923076923077, 0.1058139534883721, 0.8431372549019608, 1.], 
         Hue[0.576923076923077, 0.1058139534883721, 0.8431372549019608, 1.], 
         Hue[0.576923076923077, 0.1058139534883721, 0.8431372549019608, 1.], 
         Hue[0.576923076923077, 0.1058139534883721, 0.8431372549019608, 1.], 
         Hue[0.576923076923077, 0.1058139534883721, 0.8431372549019608, 1.], 
         Hue[0.576923076923077, 0.1058139534883721, 0.8431372549019608, 1.], 
         Hue[0.576923076923077, 0.1058139534883721, 0.8431372549019608, 1.], 
         Hue[0.576923076923077, 0.1058139534883721, 0.8431372549019608, 1.], 
         Hue[0.576923076923077, 0.1058139534883721, 0.8431372549019608, 1.], 
         Hue[0.576923076923077, 0.1058139534883721, 0.8431372549019608, 1.], 
         Hue[0.576923076923077, 0.1058139534883721, 0.8431372549019608, 1.], 
         Hue[0.576923076923077, 0.1058139534883721, 0.8431372549019608, 1.], 
         Hue[0.576923076923077, 0.1058139534883721, 0.8431372549019608, 1.], 
         Hue[0.576923076923077, 0.1058139534883721, 0.8431372549019608, 1.], 
         Hue[0.576923076923077, 0.1058139534883721, 0.8431372549019608, 1.], 
         Hue[0.576923076923077, 0.1058139534883721, 0.8431372549019608, 1.], 
         Hue[0.576923076923077, 0.1058139534883721, 0.8431372549019608, 1.], 
         Hue[0.576923076923077, 0.1058139534883721, 0.8431372549019608, 1.], 
         Hue[0.576923076923077, 0.1058139534883721, 0.8431372549019608, 1.], 
         Hue[0.576923076923077, 0.1058139534883721, 0.8431372549019608, 1.], 
         Hue[0.576923076923077, 0.1058139534883721, 0.8431372549019608, 1.], 
         Hue[0.576923076923077, 0.1058139534883721, 0.8431372549019608, 1.], 
         Hue[0.576923076923077, 0.1058139534883721, 0.8431372549019608, 1.], 
         Hue[0.576923076923077, 0.1058139534883721, 0.8431372549019608, 1.], 
         Hue[0.576923076923077, 0.1058139534883721, 0.8431372549019608, 1.], 
         Hue[0.576923076923077, 0.1058139534883721, 0.8431372549019608, 1.], 
         Hue[0.576923076923077, 0.1058139534883721, 0.8431372549019608, 1.], 
         Hue[0.576923076923077, 0.1058139534883721, 0.8431372549019608, 1.], 
         Hue[0.576923076923077, 0.1058139534883721, 0.8431372549019608, 1.], 
         Hue[0.576923076923077, 0.1058139534883721, 0.8431372549019608, 1.], 
         Hue[0.576923076923077, 0.1058139534883721, 0.8431372549019608, 1.], 
         Hue[0.576923076923077, 0.1058139534883721, 0.8431372549019608, 1.], 
         Hue[0.576923076923077, 0.1058139534883721, 0.8431372549019608, 1.], 
         Hue[0.576923076923077, 0.1058139534883721, 0.8431372549019608, 1.], 
         Hue[0.576923076923077, 0.1058139534883721, 0.8431372549019608, 1.], 
         Hue[0.576923076923077, 0.1058139534883721, 0.8431372549019608, 1.], 
         Hue[0.576923076923077, 0.1058139534883721, 0.8431372549019608, 1.], 
         Hue[0.576923076923077, 0.1058139534883721, 0.8431372549019608, 1.], 
         Hue[0.576923076923077, 0.1058139534883721, 0.8431372549019608, 1.], 
         Hue[0.576923076923077, 0.1058139534883721, 0.8431372549019608, 1.], 
         Hue[0.576923076923077, 0.1058139534883721, 0.8431372549019608, 1.], 
         Hue[0.576923076923077, 0.1058139534883721, 0.8431372549019608, 1.], 
         Hue[0.576923076923077, 0.1058139534883721, 0.8431372549019608, 1.], 
         Hue[0.576923076923077, 0.1058139534883721, 0.8431372549019608, 1.], 
         Hue[0.576923076923077, 0.1058139534883721, 0.8431372549019608, 1.], 
         Hue[0.576923076923077, 0.1058139534883721, 0.8431372549019608, 1.], 
         Hue[0.576923076923077, 0.1058139534883721, 0.8431372549019608, 1.], 
         Hue[0.576923076923077, 0.1058139534883721, 0.8431372549019608, 1.], 
         Hue[0.576923076923077, 0.1058139534883721, 0.8431372549019608, 1.], 
         Hue[0.576923076923077, 0.1058139534883721, 0.8431372549019608, 1.], 
         Hue[0.576923076923077, 0.1058139534883721, 0.8431372549019608, 1.], 
         Hue[0.576923076923077, 0.10085666023166023`, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.10085666023166023`, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.10085666023166023`, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.10085666023166023`, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.10085666023166023`, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.10085666023166023`, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.10085666023166023`, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.10085666023166023`, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.10085666023166023`, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.10085666023166023`, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.10085666023166023`, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.10085666023166023`, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.10085666023166023`, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.10085666023166023`, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.10085666023166023`, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.10085666023166023`, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.10085666023166023`, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.10085666023166023`, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.10085666023166023`, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.10085666023166023`, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.10085666023166023`, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.10085666023166023`, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.10085666023166023`, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.10085666023166023`, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.10085666023166023`, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.10085666023166023`, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.10085666023166023`, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.10085666023166023`, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.10085666023166023`, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.10085666023166023`, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.10085666023166023`, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.10085666023166023`, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.10085666023166023`, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.10085666023166023`, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.10085666023166023`, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.10085666023166023`, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.10085666023166023`, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.10085666023166023`, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.10085666023166023`, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.10085666023166023`, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.10085666023166023`, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.10085666023166023`, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.10085666023166023`, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.10085666023166023`, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.10085666023166023`, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.10085666023166023`, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.10085666023166023`, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.10085666023166023`, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.10085666023166023`, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.10085666023166023`, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.10085666023166023`, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.10085666023166023`, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.10085666023166023`, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.10085666023166023`, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.10085666023166023`, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.10085666023166023`, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.10085666023166023`, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.10085666023166023`, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.10085666023166023`, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.10085666023166023`, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.10085666023166023`, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.10085666023166023`, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.10085666023166023`, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.10085666023166023`, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.10085666023166023`, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.10085666023166023`, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.10085666023166023`, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.10085666023166023`, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.10085666023166023`, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.10085666023166023`, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.10085666023166023`, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.10085666023166023`, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.10085666023166023`, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.10085666023166023`, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.10085666023166023`, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.10085666023166023`, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.10085666023166023`, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.10085666023166023`, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.10085666023166023`, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.10085666023166023`, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.10085666023166023`, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.10085666023166023`, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.10085666023166023`, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.10085666023166023`, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.10085666023166023`, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.10085666023166023`, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.10085666023166023`, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.10085666023166023`, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.10085666023166023`, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.10085666023166023`, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.10085666023166023`, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.10085666023166023`, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.10085666023166023`, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.10085666023166023`, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.10085666023166023`, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.10085666023166023`, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.10085666023166023`, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.10085666023166023`, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.10085666023166023`, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.10085666023166023`, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.09593886462882097, 0.8980392156862745, 1.], 
         Hue[0.576923076923077, 0.09593886462882097, 0.8980392156862745, 1.], 
         Hue[0.576923076923077, 0.09593886462882097, 0.8980392156862745, 1.], 
         Hue[0.576923076923077, 0.09593886462882097, 0.8980392156862745, 1.], 
         Hue[0.576923076923077, 0.09593886462882097, 0.8980392156862745, 1.], 
         Hue[0.576923076923077, 0.09593886462882097, 0.8980392156862745, 1.], 
         Hue[0.576923076923077, 0.09593886462882097, 0.8980392156862745, 1.], 
         Hue[0.576923076923077, 0.09593886462882097, 0.8980392156862745, 1.], 
         Hue[0.576923076923077, 0.09593886462882097, 0.8980392156862745, 1.], 
         Hue[0.576923076923077, 0.09593886462882097, 0.8980392156862745, 1.], 
         Hue[0.576923076923077, 0.09593886462882097, 0.8980392156862745, 1.], 
         Hue[0.576923076923077, 0.09593886462882097, 0.8980392156862745, 1.], 
         Hue[0.576923076923077, 0.09593886462882097, 0.8980392156862745, 1.], 
         Hue[0.576923076923077, 0.09593886462882097, 0.8980392156862745, 1.], 
         Hue[0.576923076923077, 0.09593886462882097, 0.8980392156862745, 1.], 
         Hue[0.576923076923077, 0.09593886462882097, 0.8980392156862745, 1.], 
         Hue[0.576923076923077, 0.09593886462882097, 0.8980392156862745, 1.], 
         Hue[0.576923076923077, 0.09593886462882097, 0.8980392156862745, 1.], 
         Hue[0.576923076923077, 0.09593886462882097, 0.8980392156862745, 1.], 
         Hue[0.576923076923077, 0.09593886462882097, 0.8980392156862745, 1.], 
         Hue[0.576923076923077, 0.09593886462882097, 0.8980392156862745, 1.], 
         Hue[0.576923076923077, 0.09593886462882097, 0.8980392156862745, 1.], 
         Hue[0.576923076923077, 0.09593886462882097, 0.8980392156862745, 1.], 
         Hue[0.576923076923077, 0.09593886462882097, 0.8980392156862745, 1.], 
         Hue[0.576923076923077, 0.09593886462882097, 0.8980392156862745, 1.], 
         Hue[0.576923076923077, 0.09593886462882097, 0.8980392156862745, 1.], 
         Hue[0.576923076923077, 0.09593886462882097, 0.8980392156862745, 1.], 
         Hue[0.576923076923077, 0.09593886462882097, 0.8980392156862745, 1.], 
         Hue[0.576923076923077, 0.09593886462882097, 0.8980392156862745, 1.], 
         Hue[0.576923076923077, 0.09593886462882097, 0.8980392156862745, 1.], 
         Hue[0.576923076923077, 0.09593886462882097, 0.8980392156862745, 1.], 
         Hue[0.576923076923077, 0.09593886462882097, 0.8980392156862745, 1.], 
         Hue[0.576923076923077, 0.09593886462882097, 0.8980392156862745, 1.], 
         Hue[0.576923076923077, 0.09593886462882097, 0.8980392156862745, 1.], 
         Hue[0.576923076923077, 0.09593886462882097, 0.8980392156862745, 1.], 
         Hue[0.576923076923077, 0.09593886462882097, 0.8980392156862745, 1.], 
         Hue[0.576923076923077, 0.09593886462882097, 0.8980392156862745, 1.], 
         Hue[0.576923076923077, 0.09593886462882097, 0.8980392156862745, 1.], 
         Hue[0.576923076923077, 0.09593886462882097, 0.8980392156862745, 1.], 
         Hue[0.576923076923077, 0.09593886462882097, 0.8980392156862745, 1.], 
         Hue[0.576923076923077, 0.09593886462882097, 0.8980392156862745, 1.], 
         Hue[0.576923076923077, 0.09593886462882097, 0.8980392156862745, 1.], 
         Hue[0.576923076923077, 0.09593886462882097, 0.8980392156862745, 1.], 
         Hue[0.576923076923077, 0.09593886462882097, 0.8980392156862745, 1.], 
         Hue[0.576923076923077, 0.09593886462882097, 0.8980392156862745, 1.], 
         Hue[0.576923076923077, 0.09593886462882097, 0.8980392156862745, 1.], 
         Hue[0.576923076923077, 0.09593886462882097, 0.8980392156862745, 1.], 
         Hue[0.576923076923077, 0.09593886462882097, 0.8980392156862745, 1.], 
         Hue[0.576923076923077, 0.09593886462882097, 0.8980392156862745, 1.], 
         Hue[0.576923076923077, 0.09593886462882097, 0.8980392156862745, 1.], 
         Hue[0.576923076923077, 0.09593886462882097, 0.8980392156862745, 1.], 
         Hue[0.576923076923077, 0.09593886462882097, 0.8980392156862745, 1.], 
         Hue[0.576923076923077, 0.09593886462882097, 0.8980392156862745, 1.], 
         Hue[0.576923076923077, 0.09593886462882097, 0.8980392156862745, 1.], 
         Hue[0.576923076923077, 0.09593886462882097, 0.8980392156862745, 1.], 
         Hue[0.576923076923077, 0.09593886462882097, 0.8980392156862745, 1.], 
         Hue[0.576923076923077, 0.09593886462882097, 0.8980392156862745, 1.], 
         Hue[0.576923076923077, 0.09593886462882097, 0.8980392156862745, 1.], 
         Hue[0.576923076923077, 0.09593886462882097, 0.8980392156862745, 1.], 
         Hue[0.576923076923077, 0.09593886462882097, 0.8980392156862745, 1.], 
         Hue[0.576923076923077, 0.09593886462882097, 0.8980392156862745, 1.], 
         Hue[0.576923076923077, 0.09593886462882097, 0.8980392156862745, 1.], 
         Hue[0.576923076923077, 0.09593886462882097, 0.8980392156862745, 1.], 
         Hue[0.576923076923077, 0.09593886462882097, 0.8980392156862745, 1.], 
         Hue[0.576923076923077, 0.09593886462882097, 0.8980392156862745, 1.], 
         Hue[0.576923076923077, 0.09593886462882097, 0.8980392156862745, 1.], 
         Hue[0.576923076923077, 0.09593886462882097, 0.8980392156862745, 1.], 
         Hue[0.576923076923077, 0.09593886462882097, 0.8980392156862745, 1.], 
         Hue[0.576923076923077, 0.09593886462882097, 0.8980392156862745, 1.], 
         Hue[0.576923076923077, 0.09593886462882097, 0.8980392156862745, 1.], 
         Hue[0.576923076923077, 0.09593886462882097, 0.8980392156862745, 1.], 
         Hue[0.576923076923077, 0.09593886462882097, 0.8980392156862745, 1.], 
         Hue[0.576923076923077, 0.09593886462882097, 0.8980392156862745, 1.], 
         Hue[0.576923076923077, 0.09593886462882097, 0.8980392156862745, 1.], 
         Hue[0.576923076923077, 0.09593886462882097, 0.8980392156862745, 1.], 
         Hue[0.576923076923077, 0.09593886462882097, 0.8980392156862745, 1.], 
         Hue[0.576923076923077, 0.09593886462882097, 0.8980392156862745, 1.], 
         Hue[0.576923076923077, 0.09593886462882097, 0.8980392156862745, 1.], 
         Hue[0.576923076923077, 0.09593886462882097, 0.8980392156862745, 1.], 
         Hue[0.576923076923077, 0.09593886462882097, 0.8980392156862745, 1.], 
         Hue[0.576923076923077, 0.09593886462882097, 0.8980392156862745, 1.], 
         Hue[0.576923076923077, 0.09593886462882097, 0.8980392156862745, 1.], 
         Hue[0.576923076923077, 0.09593886462882097, 0.8980392156862745, 1.], 
         Hue[0.576923076923077, 0.09593886462882097, 0.8980392156862745, 1.], 
         Hue[0.576923076923077, 0.09593886462882097, 0.8980392156862745, 1.], 
         Hue[0.576923076923077, 0.09593886462882097, 0.8980392156862745, 1.], 
         Hue[0.576923076923077, 0.09593886462882097, 0.8980392156862745, 1.], 
         Hue[0.576923076923077, 0.09593886462882097, 0.8980392156862745, 1.], 
         Hue[0.576923076923077, 0.09593886462882097, 0.8980392156862745, 1.], 
         Hue[0.576923076923077, 0.09593886462882097, 0.8980392156862745, 1.], 
         Hue[0.576923076923077, 0.09593886462882097, 0.8980392156862745, 1.], 
         Hue[0.576923076923077, 0.09593886462882097, 0.8980392156862745, 1.], 
         Hue[0.576923076923077, 0.09593886462882097, 0.8980392156862745, 1.], 
         Hue[0.576923076923077, 0.09593886462882097, 0.8980392156862745, 1.], 
         Hue[0.576923076923077, 0.09593886462882097, 0.8980392156862745, 1.], 
         Hue[0.576923076923077, 0.09593886462882097, 0.8980392156862745, 1.], 
         Hue[0.576923076923077, 0.09593886462882097, 0.8980392156862745, 1.], 
         Hue[0.576923076923077, 0.09593886462882097, 0.8980392156862745, 1.], 
         Hue[0.576923076923077, 0.09593886462882097, 0.8980392156862745, 1.], 
         Hue[0.576923076923077, 0.09593886462882097, 0.8980392156862745, 1.], 
         Hue[0.576923076923077, 0.09160732089445948, 0.9294117647058823, 1.], 
         Hue[0.576923076923077, 0.09160732089445948, 0.9294117647058823, 1.], 
         Hue[0.576923076923077, 0.09160732089445948, 0.9294117647058823, 1.], 
         Hue[0.576923076923077, 0.09160732089445948, 0.9294117647058823, 1.], 
         Hue[0.576923076923077, 0.09160732089445948, 0.9294117647058823, 1.], 
         Hue[0.576923076923077, 0.09160732089445948, 0.9294117647058823, 1.], 
         Hue[0.576923076923077, 0.09160732089445948, 0.9294117647058823, 1.], 
         Hue[0.576923076923077, 0.09160732089445948, 0.9294117647058823, 1.], 
         Hue[0.576923076923077, 0.09160732089445948, 0.9294117647058823, 1.], 
         Hue[0.576923076923077, 0.09160732089445948, 0.9294117647058823, 1.], 
         Hue[0.576923076923077, 0.09160732089445948, 0.9294117647058823, 1.], 
         Hue[0.576923076923077, 0.09160732089445948, 0.9294117647058823, 1.], 
         Hue[0.576923076923077, 0.09160732089445948, 0.9294117647058823, 1.], 
         Hue[0.576923076923077, 0.09160732089445948, 0.9294117647058823, 1.], 
         Hue[0.576923076923077, 0.09160732089445948, 0.9294117647058823, 1.], 
         Hue[0.576923076923077, 0.09160732089445948, 0.9294117647058823, 1.], 
         Hue[0.576923076923077, 0.09160732089445948, 0.9294117647058823, 1.], 
         Hue[0.576923076923077, 0.09160732089445948, 0.9294117647058823, 1.], 
         Hue[0.576923076923077, 0.09160732089445948, 0.9294117647058823, 1.], 
         Hue[0.576923076923077, 0.09160732089445948, 0.9294117647058823, 1.], 
         Hue[0.576923076923077, 0.09160732089445948, 0.9294117647058823, 1.], 
         Hue[0.576923076923077, 0.09160732089445948, 0.9294117647058823, 1.], 
         Hue[0.576923076923077, 0.09160732089445948, 0.9294117647058823, 1.], 
         Hue[0.576923076923077, 0.09160732089445948, 0.9294117647058823, 1.], 
         Hue[0.576923076923077, 0.09160732089445948, 0.9294117647058823, 1.], 
         Hue[0.576923076923077, 0.09160732089445948, 0.9294117647058823, 1.], 
         Hue[0.576923076923077, 0.09160732089445948, 0.9294117647058823, 1.], 
         Hue[0.576923076923077, 0.09160732089445948, 0.9294117647058823, 1.], 
         Hue[0.576923076923077, 0.09160732089445948, 0.9294117647058823, 1.], 
         Hue[0.576923076923077, 0.09160732089445948, 0.9294117647058823, 1.], 
         Hue[0.576923076923077, 0.09160732089445948, 0.9294117647058823, 1.], 
         Hue[0.576923076923077, 0.09160732089445948, 0.9294117647058823, 1.], 
         Hue[0.576923076923077, 0.09160732089445948, 0.9294117647058823, 1.], 
         Hue[0.576923076923077, 0.09160732089445948, 0.9294117647058823, 1.], 
         Hue[0.576923076923077, 0.09160732089445948, 0.9294117647058823, 1.], 
         Hue[0.576923076923077, 0.09160732089445948, 0.9294117647058823, 1.], 
         Hue[0.576923076923077, 0.09160732089445948, 0.9294117647058823, 1.], 
         Hue[0.576923076923077, 0.09160732089445948, 0.9294117647058823, 1.], 
         Hue[0.576923076923077, 0.09160732089445948, 0.9294117647058823, 1.], 
         Hue[0.576923076923077, 0.09160732089445948, 0.9294117647058823, 1.], 
         Hue[0.576923076923077, 0.09160732089445948, 0.9294117647058823, 1.], 
         Hue[0.576923076923077, 0.09160732089445948, 0.9294117647058823, 1.], 
         Hue[0.576923076923077, 0.09160732089445948, 0.9294117647058823, 1.], 
         Hue[0.576923076923077, 0.09160732089445948, 0.9294117647058823, 1.], 
         Hue[0.576923076923077, 0.09160732089445948, 0.9294117647058823, 1.], 
         Hue[0.576923076923077, 0.09160732089445948, 0.9294117647058823, 1.], 
         Hue[0.576923076923077, 0.09160732089445948, 0.9294117647058823, 1.], 
         Hue[0.576923076923077, 0.09160732089445948, 0.9294117647058823, 1.], 
         Hue[0.576923076923077, 0.09160732089445948, 0.9294117647058823, 1.], 
         Hue[0.576923076923077, 0.09160732089445948, 0.9294117647058823, 1.], 
         Hue[0.576923076923077, 0.09160732089445948, 0.9294117647058823, 1.], 
         Hue[0.576923076923077, 0.09160732089445948, 0.9294117647058823, 1.], 
         Hue[0.576923076923077, 0.09160732089445948, 0.9294117647058823, 1.], 
         Hue[0.576923076923077, 0.09160732089445948, 0.9294117647058823, 1.], 
         Hue[0.576923076923077, 0.09160732089445948, 0.9294117647058823, 1.], 
         Hue[0.576923076923077, 0.09160732089445948, 0.9294117647058823, 1.], 
         Hue[0.576923076923077, 0.09160732089445948, 0.9294117647058823, 1.], 
         Hue[0.576923076923077, 0.09160732089445948, 0.9294117647058823, 1.], 
         Hue[0.576923076923077, 0.09160732089445948, 0.9294117647058823, 1.], 
         Hue[0.576923076923077, 0.09160732089445948, 0.9294117647058823, 1.], 
         Hue[0.576923076923077, 0.09160732089445948, 0.9294117647058823, 1.], 
         Hue[0.576923076923077, 0.09160732089445948, 0.9294117647058823, 1.], 
         Hue[0.576923076923077, 0.09160732089445948, 0.9294117647058823, 1.], 
         Hue[0.576923076923077, 0.09160732089445948, 0.9294117647058823, 1.], 
         Hue[0.576923076923077, 0.09160732089445948, 0.9294117647058823, 1.], 
         Hue[0.576923076923077, 0.09160732089445948, 0.9294117647058823, 1.], 
         Hue[0.576923076923077, 0.09160732089445948, 0.9294117647058823, 1.], 
         Hue[0.576923076923077, 0.09160732089445948, 0.9294117647058823, 1.], 
         Hue[0.576923076923077, 0.09160732089445948, 0.9294117647058823, 1.], 
         Hue[0.576923076923077, 0.09160732089445948, 0.9294117647058823, 1.], 
         Hue[0.576923076923077, 0.09160732089445948, 0.9294117647058823, 1.], 
         Hue[0.576923076923077, 0.09160732089445948, 0.9294117647058823, 1.], 
         Hue[0.576923076923077, 0.09160732089445948, 0.9294117647058823, 1.], 
         Hue[0.576923076923077, 0.09160732089445948, 0.9294117647058823, 1.], 
         Hue[0.576923076923077, 0.09160732089445948, 0.9294117647058823, 1.], 
         Hue[0.576923076923077, 0.09160732089445948, 0.9294117647058823, 1.], 
         Hue[0.576923076923077, 0.09160732089445948, 0.9294117647058823, 1.], 
         Hue[0.576923076923077, 0.09160732089445948, 0.9294117647058823, 1.], 
         Hue[0.576923076923077, 0.09160732089445948, 0.9294117647058823, 1.], 
         Hue[0.576923076923077, 0.09160732089445948, 0.9294117647058823, 1.], 
         Hue[0.576923076923077, 0.09160732089445948, 0.9294117647058823, 1.], 
         Hue[0.576923076923077, 0.09160732089445948, 0.9294117647058823, 1.], 
         Hue[0.576923076923077, 0.09160732089445948, 0.9294117647058823, 1.], 
         Hue[0.576923076923077, 0.09160732089445948, 0.9294117647058823, 1.], 
         Hue[0.576923076923077, 0.09160732089445948, 0.9294117647058823, 1.], 
         Hue[0.576923076923077, 0.09160732089445948, 0.9294117647058823, 1.], 
         Hue[0.576923076923077, 0.09160732089445948, 0.9294117647058823, 1.], 
         Hue[0.576923076923077, 0.09160732089445948, 0.9294117647058823, 1.], 
         Hue[0.576923076923077, 0.09160732089445948, 0.9294117647058823, 1.], 
         Hue[0.576923076923077, 0.09160732089445948, 0.9294117647058823, 1.], 
         Hue[0.576923076923077, 0.09160732089445948, 0.9294117647058823, 1.], 
         Hue[0.576923076923077, 0.09160732089445948, 0.9294117647058823, 1.], 
         Hue[0.576923076923077, 0.09160732089445948, 0.9294117647058823, 1.], 
         Hue[0.576923076923077, 0.09160732089445948, 0.9294117647058823, 1.], 
         Hue[0.576923076923077, 0.09160732089445948, 0.9294117647058823, 1.], 
         Hue[0.576923076923077, 0.09160732089445948, 0.9294117647058823, 1.], 
         Hue[0.576923076923077, 0.09160732089445948, 0.9294117647058823, 1.], 
         Hue[0.576923076923077, 0.09160732089445948, 0.9294117647058823, 1.], 
         Hue[0.576923076923077, 0.09160732089445948, 0.9294117647058823, 1.], 
         Hue[0.576923076923077, 0.09160732089445948, 0.9294117647058823, 1.], 
         Hue[0.576923076923077, 0.08720164609053499, 0.9529411764705882, 1.], 
         Hue[0.576923076923077, 0.08720164609053499, 0.9529411764705882, 1.], 
         Hue[0.576923076923077, 0.08720164609053499, 0.9529411764705882, 1.], 
         Hue[0.576923076923077, 0.08720164609053499, 0.9529411764705882, 1.], 
         Hue[0.576923076923077, 0.08720164609053499, 0.9529411764705882, 1.], 
         Hue[0.576923076923077, 0.08720164609053499, 0.9529411764705882, 1.], 
         Hue[0.576923076923077, 0.08720164609053499, 0.9529411764705882, 1.], 
         Hue[0.576923076923077, 0.08720164609053499, 0.9529411764705882, 1.], 
         Hue[0.576923076923077, 0.08720164609053499, 0.9529411764705882, 1.], 
         Hue[0.576923076923077, 0.08720164609053499, 0.9529411764705882, 1.], 
         Hue[0.576923076923077, 0.08720164609053499, 0.9529411764705882, 1.], 
         Hue[0.576923076923077, 0.08720164609053499, 0.9529411764705882, 1.], 
         Hue[0.576923076923077, 0.08720164609053499, 0.9529411764705882, 1.], 
         Hue[0.576923076923077, 0.08720164609053499, 0.9529411764705882, 1.], 
         Hue[0.576923076923077, 0.08720164609053499, 0.9529411764705882, 1.], 
         Hue[0.576923076923077, 0.08720164609053499, 0.9529411764705882, 1.], 
         Hue[0.576923076923077, 0.08720164609053499, 0.9529411764705882, 1.], 
         Hue[0.576923076923077, 0.08720164609053499, 0.9529411764705882, 1.], 
         Hue[0.576923076923077, 0.08720164609053499, 0.9529411764705882, 1.], 
         Hue[0.576923076923077, 0.08720164609053499, 0.9529411764705882, 1.], 
         Hue[0.576923076923077, 0.08720164609053499, 0.9529411764705882, 1.], 
         Hue[0.576923076923077, 0.08720164609053499, 0.9529411764705882, 1.], 
         Hue[0.576923076923077, 0.08720164609053499, 0.9529411764705882, 1.], 
         Hue[0.576923076923077, 0.08720164609053499, 0.9529411764705882, 1.], 
         Hue[0.576923076923077, 0.08720164609053499, 0.9529411764705882, 1.], 
         Hue[0.576923076923077, 0.08720164609053499, 0.9529411764705882, 1.], 
         Hue[0.576923076923077, 0.08720164609053499, 0.9529411764705882, 1.], 
         Hue[0.576923076923077, 0.08720164609053499, 0.9529411764705882, 1.], 
         Hue[0.576923076923077, 0.08720164609053499, 0.9529411764705882, 1.], 
         Hue[0.576923076923077, 0.08720164609053499, 0.9529411764705882, 1.], 
         Hue[0.576923076923077, 0.08720164609053499, 0.9529411764705882, 1.], 
         Hue[0.576923076923077, 0.08720164609053499, 0.9529411764705882, 1.], 
         Hue[0.576923076923077, 0.08720164609053499, 0.9529411764705882, 1.], 
         Hue[0.576923076923077, 0.08720164609053499, 0.9529411764705882, 1.], 
         Hue[0.576923076923077, 0.08720164609053499, 0.9529411764705882, 1.], 
         Hue[0.576923076923077, 0.08720164609053499, 0.9529411764705882, 1.], 
         Hue[0.576923076923077, 0.08720164609053499, 0.9529411764705882, 1.], 
         Hue[0.576923076923077, 0.08720164609053499, 0.9529411764705882, 1.], 
         Hue[0.576923076923077, 0.08720164609053499, 0.9529411764705882, 1.], 
         Hue[0.576923076923077, 0.08720164609053499, 0.9529411764705882, 1.], 
         Hue[0.576923076923077, 0.08720164609053499, 0.9529411764705882, 1.], 
         Hue[0.576923076923077, 0.08720164609053499, 0.9529411764705882, 1.], 
         Hue[0.576923076923077, 0.08720164609053499, 0.9529411764705882, 1.], 
         Hue[0.576923076923077, 0.08720164609053499, 0.9529411764705882, 1.], 
         Hue[0.576923076923077, 0.08720164609053499, 0.9529411764705882, 1.], 
         Hue[0.576923076923077, 0.08720164609053499, 0.9529411764705882, 1.], 
         Hue[0.576923076923077, 0.08720164609053499, 0.9529411764705882, 1.], 
         Hue[0.576923076923077, 0.08720164609053499, 0.9529411764705882, 1.], 
         Hue[0.576923076923077, 0.08720164609053499, 0.9529411764705882, 1.], 
         Hue[0.576923076923077, 0.08720164609053499, 0.9529411764705882, 1.], 
         Hue[0.576923076923077, 0.08720164609053499, 0.9529411764705882, 1.], 
         Hue[0.576923076923077, 0.08720164609053499, 0.9529411764705882, 1.], 
         Hue[0.576923076923077, 0.08720164609053499, 0.9529411764705882, 1.], 
         Hue[0.576923076923077, 0.08720164609053499, 0.9529411764705882, 1.], 
         Hue[0.576923076923077, 0.08720164609053499, 0.9529411764705882, 1.], 
         Hue[0.576923076923077, 0.08720164609053499, 0.9529411764705882, 1.], 
         Hue[0.576923076923077, 0.08720164609053499, 0.9529411764705882, 1.], 
         Hue[0.576923076923077, 0.08720164609053499, 0.9529411764705882, 1.], 
         Hue[0.576923076923077, 0.08720164609053499, 0.9529411764705882, 1.], 
         Hue[0.576923076923077, 0.08720164609053499, 0.9529411764705882, 1.], 
         Hue[0.576923076923077, 0.08720164609053499, 0.9529411764705882, 1.], 
         Hue[0.576923076923077, 0.08720164609053499, 0.9529411764705882, 1.], 
         Hue[0.576923076923077, 0.08720164609053499, 0.9529411764705882, 1.], 
         Hue[0.576923076923077, 0.08720164609053499, 0.9529411764705882, 1.], 
         Hue[0.576923076923077, 0.08720164609053499, 0.9529411764705882, 1.], 
         Hue[0.576923076923077, 0.08720164609053499, 0.9529411764705882, 1.], 
         Hue[0.576923076923077, 0.08720164609053499, 0.9529411764705882, 1.], 
         Hue[0.576923076923077, 0.08720164609053499, 0.9529411764705882, 1.], 
         Hue[0.576923076923077, 0.08720164609053499, 0.9529411764705882, 1.], 
         Hue[0.576923076923077, 0.08720164609053499, 0.9529411764705882, 1.], 
         Hue[0.576923076923077, 0.08720164609053499, 0.9529411764705882, 1.], 
         Hue[0.576923076923077, 0.08720164609053499, 0.9529411764705882, 1.], 
         Hue[0.576923076923077, 0.08720164609053499, 0.9529411764705882, 1.], 
         Hue[0.576923076923077, 0.08720164609053499, 0.9529411764705882, 1.], 
         Hue[0.576923076923077, 0.08720164609053499, 0.9529411764705882, 1.], 
         Hue[0.576923076923077, 0.08720164609053499, 0.9529411764705882, 1.], 
         Hue[0.576923076923077, 0.08720164609053499, 0.9529411764705882, 1.], 
         Hue[0.576923076923077, 0.08720164609053499, 0.9529411764705882, 1.], 
         Hue[0.576923076923077, 0.08720164609053499, 0.9529411764705882, 1.], 
         Hue[0.576923076923077, 0.08720164609053499, 0.9529411764705882, 1.], 
         Hue[0.576923076923077, 0.08720164609053499, 0.9529411764705882, 1.], 
         Hue[0.576923076923077, 0.08720164609053499, 0.9529411764705882, 1.], 
         Hue[0.576923076923077, 0.08720164609053499, 0.9529411764705882, 1.], 
         Hue[0.576923076923077, 0.08720164609053499, 0.9529411764705882, 1.], 
         Hue[0.576923076923077, 0.08720164609053499, 0.9529411764705882, 1.], 
         Hue[0.576923076923077, 0.08720164609053499, 0.9529411764705882, 1.], 
         Hue[0.576923076923077, 0.08720164609053499, 0.9529411764705882, 1.], 
         Hue[0.576923076923077, 0.08720164609053499, 0.9529411764705882, 1.], 
         Hue[0.576923076923077, 0.08720164609053499, 0.9529411764705882, 1.], 
         Hue[0.576923076923077, 0.08720164609053499, 0.9529411764705882, 1.], 
         Hue[0.576923076923077, 0.08720164609053499, 0.9529411764705882, 1.], 
         Hue[0.576923076923077, 0.08720164609053499, 0.9529411764705882, 1.], 
         Hue[0.576923076923077, 0.08720164609053499, 0.9529411764705882, 1.], 
         Hue[0.576923076923077, 0.08720164609053499, 0.9529411764705882, 1.], 
         Hue[0.576923076923077, 0.08720164609053499, 0.9529411764705882, 1.], 
         Hue[0.576923076923077, 0.08720164609053499, 0.9529411764705882, 1.], 
         Hue[0.576923076923077, 0.08720164609053499, 0.9529411764705882, 1.], 
         Hue[0.576923076923077, 0.08720164609053499, 0.9529411764705882, 1.], 
         Hue[0.576923076923077, 0.08720164609053499, 0.9529411764705882, 1.], 
         Hue[0.576923076923077, 0.08720164609053499, 0.9529411764705882, 1.], 
         Hue[0.576923076923077, 0.08329795371964048, 0.9823529411764707, 1.], 
         Hue[0.576923076923077, 0.08329795371964048, 0.9823529411764707, 1.], 
         Hue[0.576923076923077, 0.08329795371964048, 0.9823529411764707, 1.], 
         Hue[0.576923076923077, 0.08329795371964048, 0.9823529411764707, 1.], 
         Hue[0.576923076923077, 0.08329795371964048, 0.9823529411764707, 1.], 
         Hue[0.576923076923077, 0.08329795371964048, 0.9823529411764707, 1.], 
         Hue[0.576923076923077, 0.08329795371964048, 0.9823529411764707, 1.], 
         Hue[0.576923076923077, 0.08329795371964048, 0.9823529411764707, 1.], 
         Hue[0.576923076923077, 0.08329795371964048, 0.9823529411764707, 1.], 
         Hue[0.576923076923077, 0.08329795371964048, 0.9823529411764707, 1.], 
         Hue[0.576923076923077, 0.08329795371964048, 0.9823529411764707, 1.], 
         Hue[0.576923076923077, 0.08329795371964048, 0.9823529411764707, 1.], 
         Hue[0.576923076923077, 0.08329795371964048, 0.9823529411764707, 1.], 
         Hue[0.576923076923077, 0.08329795371964048, 0.9823529411764707, 1.], 
         Hue[0.576923076923077, 0.08329795371964048, 0.9823529411764707, 1.], 
         Hue[0.576923076923077, 0.08329795371964048, 0.9823529411764707, 1.], 
         Hue[0.576923076923077, 0.08329795371964048, 0.9823529411764707, 1.], 
         Hue[0.576923076923077, 0.08329795371964048, 0.9823529411764707, 1.], 
         Hue[0.576923076923077, 0.08329795371964048, 0.9823529411764707, 1.], 
         Hue[0.576923076923077, 0.08329795371964048, 0.9823529411764707, 1.], 
         Hue[0.576923076923077, 0.08329795371964048, 0.9823529411764707, 1.], 
         Hue[0.576923076923077, 0.08329795371964048, 0.9823529411764707, 1.], 
         Hue[0.576923076923077, 0.08329795371964048, 0.9823529411764707, 1.], 
         Hue[0.576923076923077, 0.08329795371964048, 0.9823529411764707, 1.], 
         Hue[0.576923076923077, 0.08329795371964048, 0.9823529411764707, 1.], 
         Hue[0.576923076923077, 0.08329795371964048, 0.9823529411764707, 1.], 
         Hue[0.576923076923077, 0.08329795371964048, 0.9823529411764707, 1.], 
         Hue[0.576923076923077, 0.08329795371964048, 0.9823529411764707, 1.], 
         Hue[0.576923076923077, 0.08329795371964048, 0.9823529411764707, 1.], 
         Hue[0.576923076923077, 0.08329795371964048, 0.9823529411764707, 1.], 
         Hue[0.576923076923077, 0.08329795371964048, 0.9823529411764707, 1.], 
         Hue[0.576923076923077, 0.08329795371964048, 0.9823529411764707, 1.], 
         Hue[0.576923076923077, 0.08329795371964048, 0.9823529411764707, 1.], 
         Hue[0.576923076923077, 0.08329795371964048, 0.9823529411764707, 1.], 
         Hue[0.576923076923077, 0.08329795371964048, 0.9823529411764707, 1.], 
         Hue[0.576923076923077, 0.08329795371964048, 0.9823529411764707, 1.], 
         Hue[0.576923076923077, 0.08329795371964048, 0.9823529411764707, 1.], 
         Hue[0.576923076923077, 0.08329795371964048, 0.9823529411764707, 1.], 
         Hue[0.576923076923077, 0.08329795371964048, 0.9823529411764707, 1.], 
         Hue[0.576923076923077, 0.08329795371964048, 0.9823529411764707, 1.], 
         Hue[0.576923076923077, 0.08329795371964048, 0.9823529411764707, 1.], 
         Hue[0.576923076923077, 0.08329795371964048, 0.9823529411764707, 1.], 
         Hue[0.576923076923077, 0.08329795371964048, 0.9823529411764707, 1.], 
         Hue[0.576923076923077, 0.08329795371964048, 0.9823529411764707, 1.], 
         Hue[0.576923076923077, 0.08329795371964048, 0.9823529411764707, 1.], 
         Hue[0.576923076923077, 0.08329795371964048, 0.9823529411764707, 1.], 
         Hue[0.576923076923077, 0.08329795371964048, 0.9823529411764707, 1.], 
         Hue[0.576923076923077, 0.08329795371964048, 0.9823529411764707, 1.], 
         Hue[0.576923076923077, 0.08329795371964048, 0.9823529411764707, 1.], 
         Hue[0.576923076923077, 0.08329795371964048, 0.9823529411764707, 1.], 
         Hue[0.576923076923077, 0.08329795371964048, 0.9823529411764707, 1.], 
         Hue[0.576923076923077, 0.08329795371964048, 0.9823529411764707, 1.], 
         Hue[0.576923076923077, 0.08329795371964048, 0.9823529411764707, 1.], 
         Hue[0.576923076923077, 0.08329795371964048, 0.9823529411764707, 1.], 
         Hue[0.576923076923077, 0.08329795371964048, 0.9823529411764707, 1.], 
         Hue[0.576923076923077, 0.08329795371964048, 0.9823529411764707, 1.], 
         Hue[0.576923076923077, 0.08329795371964048, 0.9823529411764707, 1.], 
         Hue[0.576923076923077, 0.08329795371964048, 0.9823529411764707, 1.], 
         Hue[0.576923076923077, 0.08329795371964048, 0.9823529411764707, 1.], 
         Hue[0.576923076923077, 0.08329795371964048, 0.9823529411764707, 1.], 
         Hue[0.576923076923077, 0.08329795371964048, 0.9823529411764707, 1.], 
         Hue[0.576923076923077, 0.08329795371964048, 0.9823529411764707, 1.], 
         Hue[0.576923076923077, 0.08329795371964048, 0.9823529411764707, 1.], 
         Hue[0.576923076923077, 0.08329795371964048, 0.9823529411764707, 1.], 
         Hue[0.576923076923077, 0.08329795371964048, 0.9823529411764707, 1.], 
         Hue[0.576923076923077, 0.08329795371964048, 0.9823529411764707, 1.], 
         Hue[0.576923076923077, 0.08329795371964048, 0.9823529411764707, 1.], 
         Hue[0.576923076923077, 0.08329795371964048, 0.9823529411764707, 1.], 
         Hue[0.576923076923077, 0.08329795371964048, 0.9823529411764707, 1.], 
         Hue[0.576923076923077, 0.08329795371964048, 0.9823529411764707, 1.], 
         Hue[0.576923076923077, 0.08329795371964048, 0.9823529411764707, 1.], 
         Hue[0.576923076923077, 0.08329795371964048, 0.9823529411764707, 1.], 
         Hue[0.576923076923077, 0.08329795371964048, 0.9823529411764707, 1.], 
         Hue[0.576923076923077, 0.08329795371964048, 0.9823529411764707, 1.], 
         Hue[0.576923076923077, 0.08329795371964048, 0.9823529411764707, 1.], 
         Hue[0.576923076923077, 0.08329795371964048, 0.9823529411764707, 1.], 
         Hue[0.576923076923077, 0.08329795371964048, 0.9823529411764707, 1.], 
         Hue[0.576923076923077, 0.08329795371964048, 0.9823529411764707, 1.], 
         Hue[0.576923076923077, 0.08329795371964048, 0.9823529411764707, 1.], 
         Hue[0.576923076923077, 0.08329795371964048, 0.9823529411764707, 1.], 
         Hue[0.576923076923077, 0.08329795371964048, 0.9823529411764707, 1.], 
         Hue[0.576923076923077, 0.08329795371964048, 0.9823529411764707, 1.], 
         Hue[0.576923076923077, 0.08329795371964048, 0.9823529411764707, 1.], 
         Hue[0.576923076923077, 0.08329795371964048, 0.9823529411764707, 1.], 
         Hue[0.576923076923077, 0.08329795371964048, 0.9823529411764707, 1.], 
         Hue[0.576923076923077, 0.08329795371964048, 0.9823529411764707, 1.], 
         Hue[0.576923076923077, 0.08329795371964048, 0.9823529411764707, 1.], 
         Hue[0.576923076923077, 0.08329795371964048, 0.9823529411764707, 1.], 
         Hue[0.576923076923077, 0.08329795371964048, 0.9823529411764707, 1.], 
         Hue[0.576923076923077, 0.08329795371964048, 0.9823529411764707, 1.], 
         Hue[0.576923076923077, 0.08329795371964048, 0.9823529411764707, 1.], 
         Hue[0.576923076923077, 0.08329795371964048, 0.9823529411764707, 1.], 
         Hue[0.576923076923077, 0.08329795371964048, 0.9823529411764707, 1.], 
         Hue[0.576923076923077, 0.08329795371964048, 0.9823529411764707, 1.], 
         Hue[0.576923076923077, 0.08329795371964048, 0.9823529411764707, 1.], 
         Hue[0.576923076923077, 0.08329795371964048, 0.9823529411764707, 1.], 
         Hue[0.576923076923077, 0.08329795371964048, 0.9823529411764707, 1.], 
         Hue[0.576923076923077, 0.08329795371964048, 0.9823529411764707, 1.], 
         Hue[0.576923076923077, 0.08329795371964048, 0.9823529411764707, 1.], 
         Hue[0.576923076923077, 0.08329795371964048, 0.9823529411764707, 1.], 
         Hue[0.576923076923077, 0.07901960784313726, 1., 1.], 
         Hue[0.576923076923077, 0.07901960784313726, 1., 1.], 
         Hue[0.576923076923077, 0.07901960784313726, 1., 1.], 
         Hue[0.576923076923077, 0.07901960784313726, 1., 1.], 
         Hue[0.576923076923077, 0.07901960784313726, 1., 1.], 
         Hue[0.576923076923077, 0.07901960784313726, 1., 1.], 
         Hue[0.576923076923077, 0.07901960784313726, 1., 1.], 
         Hue[0.576923076923077, 0.07901960784313726, 1., 1.], 
         Hue[0.576923076923077, 0.07901960784313726, 1., 1.], 
         Hue[0.576923076923077, 0.07901960784313726, 1., 1.], 
         Hue[0.576923076923077, 0.07901960784313726, 1., 1.], 
         Hue[0.576923076923077, 0.07901960784313726, 1., 1.], 
         Hue[0.576923076923077, 0.07901960784313726, 1., 1.], 
         Hue[0.576923076923077, 0.07901960784313726, 1., 1.], 
         Hue[0.576923076923077, 0.07901960784313726, 1., 1.], 
         Hue[0.576923076923077, 0.07901960784313726, 1., 1.], 
         Hue[0.576923076923077, 0.07901960784313726, 1., 1.], 
         Hue[0.576923076923077, 0.07901960784313726, 1., 1.], 
         Hue[0.576923076923077, 0.07901960784313726, 1., 1.], 
         Hue[0.576923076923077, 0.07901960784313726, 1., 1.], 
         Hue[0.576923076923077, 0.07901960784313726, 1., 1.], 
         Hue[0.576923076923077, 0.07901960784313726, 1., 1.], 
         Hue[0.576923076923077, 0.07901960784313726, 1., 1.], 
         Hue[0.576923076923077, 0.07901960784313726, 1., 1.], 
         Hue[0.576923076923077, 0.07901960784313726, 1., 1.], 
         Hue[0.576923076923077, 0.07901960784313726, 1., 1.], 
         Hue[0.576923076923077, 0.07901960784313726, 1., 1.], 
         Hue[0.576923076923077, 0.07901960784313726, 1., 1.], 
         Hue[0.576923076923077, 0.07901960784313726, 1., 1.], 
         Hue[0.576923076923077, 0.07901960784313726, 1., 1.], 
         Hue[0.576923076923077, 0.07901960784313726, 1., 1.], 
         Hue[0.576923076923077, 0.07901960784313726, 1., 1.], 
         Hue[0.576923076923077, 0.07901960784313726, 1., 1.], 
         Hue[0.576923076923077, 0.07901960784313726, 1., 1.], 
         Hue[0.576923076923077, 0.07901960784313726, 1., 1.], 
         Hue[0.576923076923077, 0.07901960784313726, 1., 1.], 
         Hue[0.576923076923077, 0.07901960784313726, 1., 1.], 
         Hue[0.576923076923077, 0.07901960784313726, 1., 1.], 
         Hue[0.576923076923077, 0.07901960784313726, 1., 1.], 
         Hue[0.576923076923077, 0.07901960784313726, 1., 1.], 
         Hue[0.576923076923077, 0.07901960784313726, 1., 1.], 
         Hue[0.576923076923077, 0.07901960784313726, 1., 1.], 
         Hue[0.576923076923077, 0.07901960784313726, 1., 1.], 
         Hue[0.576923076923077, 0.07901960784313726, 1., 1.], 
         Hue[0.576923076923077, 0.07901960784313726, 1., 1.], 
         Hue[0.576923076923077, 0.07901960784313726, 1., 1.], 
         Hue[0.576923076923077, 0.07901960784313726, 1., 1.], 
         Hue[0.576923076923077, 0.07901960784313726, 1., 1.], 
         Hue[0.576923076923077, 0.07901960784313726, 1., 1.], 
         Hue[0.576923076923077, 0.07901960784313726, 1., 1.], 
         Hue[0.576923076923077, 0.07901960784313726, 1., 1.], 
         Hue[0.576923076923077, 0.07901960784313726, 1., 1.], 
         Hue[0.576923076923077, 0.07901960784313726, 1., 1.], 
         Hue[0.576923076923077, 0.07901960784313726, 1., 1.], 
         Hue[0.576923076923077, 0.07901960784313726, 1., 1.], 
         Hue[0.576923076923077, 0.07901960784313726, 1., 1.], 
         Hue[0.576923076923077, 0.07901960784313726, 1., 1.], 
         Hue[0.576923076923077, 0.07901960784313726, 1., 1.], 
         Hue[0.576923076923077, 0.07901960784313726, 1., 1.], 
         Hue[0.576923076923077, 0.07901960784313726, 1., 1.], 
         Hue[0.576923076923077, 0.07901960784313726, 1., 1.], 
         Hue[0.576923076923077, 0.07901960784313726, 1., 1.], 
         Hue[0.576923076923077, 0.07901960784313726, 1., 1.], 
         Hue[0.576923076923077, 0.07901960784313726, 1., 1.], 
         Hue[0.576923076923077, 0.07901960784313726, 1., 1.], 
         Hue[0.576923076923077, 0.07901960784313726, 1., 1.], 
         Hue[0.576923076923077, 0.07901960784313726, 1., 1.], 
         Hue[0.576923076923077, 0.07901960784313726, 1., 1.], 
         Hue[0.576923076923077, 0.07901960784313726, 1., 1.], 
         Hue[0.576923076923077, 0.07901960784313726, 1., 1.], 
         Hue[0.576923076923077, 0.07901960784313726, 1., 1.], 
         Hue[0.576923076923077, 0.07901960784313726, 1., 1.], 
         Hue[0.576923076923077, 0.07901960784313726, 1., 1.], 
         Hue[0.576923076923077, 0.07901960784313726, 1., 1.], 
         Hue[0.576923076923077, 0.07901960784313726, 1., 1.], 
         Hue[0.576923076923077, 0.07901960784313726, 1., 1.], 
         Hue[0.576923076923077, 0.07901960784313726, 1., 1.], 
         Hue[0.576923076923077, 0.07901960784313726, 1., 1.], 
         Hue[0.576923076923077, 0.07901960784313726, 1., 1.], 
         Hue[0.576923076923077, 0.07901960784313726, 1., 1.], 
         Hue[0.576923076923077, 0.07901960784313726, 1., 1.], 
         Hue[0.576923076923077, 0.07901960784313726, 1., 1.], 
         Hue[0.576923076923077, 0.07901960784313726, 1., 1.], 
         Hue[0.576923076923077, 0.07901960784313726, 1., 1.], 
         Hue[0.576923076923077, 0.07901960784313726, 1., 1.], 
         Hue[0.576923076923077, 0.07901960784313726, 1., 1.], 
         Hue[0.576923076923077, 0.07901960784313726, 1., 1.], 
         Hue[0.576923076923077, 0.07901960784313726, 1., 1.], 
         Hue[0.576923076923077, 0.07901960784313726, 1., 1.], 
         Hue[0.576923076923077, 0.07901960784313726, 1., 1.], 
         Hue[0.576923076923077, 0.07901960784313726, 1., 1.], 
         Hue[0.576923076923077, 0.07901960784313726, 1., 1.], 
         Hue[0.576923076923077, 0.07901960784313726, 1., 1.], 
         Hue[0.576923076923077, 0.07901960784313726, 1., 1.], 
         Hue[0.576923076923077, 0.07901960784313726, 1., 1.], 
         Hue[0.576923076923077, 0.07901960784313726, 1., 1.], 
         Hue[0.576923076923077, 0.07901960784313726, 1., 1.], 
         Hue[0.576923076923077, 0.07901960784313726, 1., 1.], 
         Hue[0.576923076923077, 0.07901960784313726, 1., 1.], 
         Hue[0.576923076923077, 0.07901960784313726, 1., 1.], 
         Hue[0.576923076923077, 0.07392156862745096, 1., 1.], 
         Hue[0.576923076923077, 0.07392156862745096, 1., 1.], 
         Hue[0.576923076923077, 0.07392156862745096, 1., 1.], 
         Hue[0.576923076923077, 0.07392156862745096, 1., 1.], 
         Hue[0.576923076923077, 0.07392156862745096, 1., 1.], 
         Hue[0.576923076923077, 0.07392156862745096, 1., 1.], 
         Hue[0.576923076923077, 0.07392156862745096, 1., 1.], 
         Hue[0.576923076923077, 0.07392156862745096, 1., 1.], 
         Hue[0.576923076923077, 0.07392156862745096, 1., 1.], 
         Hue[0.576923076923077, 0.07392156862745096, 1., 1.], 
         Hue[0.576923076923077, 0.07392156862745096, 1., 1.], 
         Hue[0.576923076923077, 0.07392156862745096, 1., 1.], 
         Hue[0.576923076923077, 0.07392156862745096, 1., 1.], 
         Hue[0.576923076923077, 0.07392156862745096, 1., 1.], 
         Hue[0.576923076923077, 0.07392156862745096, 1., 1.], 
         Hue[0.576923076923077, 0.07392156862745096, 1., 1.], 
         Hue[0.576923076923077, 0.07392156862745096, 1., 1.], 
         Hue[0.576923076923077, 0.07392156862745096, 1., 1.], 
         Hue[0.576923076923077, 0.07392156862745096, 1., 1.], 
         Hue[0.576923076923077, 0.07392156862745096, 1., 1.], 
         Hue[0.576923076923077, 0.07392156862745096, 1., 1.], 
         Hue[0.576923076923077, 0.07392156862745096, 1., 1.], 
         Hue[0.576923076923077, 0.07392156862745096, 1., 1.], 
         Hue[0.576923076923077, 0.07392156862745096, 1., 1.], 
         Hue[0.576923076923077, 0.07392156862745096, 1., 1.], 
         Hue[0.576923076923077, 0.07392156862745096, 1., 1.], 
         Hue[0.576923076923077, 0.07392156862745096, 1., 1.], 
         Hue[0.576923076923077, 0.07392156862745096, 1., 1.], 
         Hue[0.576923076923077, 0.07392156862745096, 1., 1.], 
         Hue[0.576923076923077, 0.07392156862745096, 1., 1.], 
         Hue[0.576923076923077, 0.07392156862745096, 1., 1.], 
         Hue[0.576923076923077, 0.07392156862745096, 1., 1.], 
         Hue[0.576923076923077, 0.07392156862745096, 1., 1.], 
         Hue[0.576923076923077, 0.07392156862745096, 1., 1.], 
         Hue[0.576923076923077, 0.07392156862745096, 1., 1.], 
         Hue[0.576923076923077, 0.07392156862745096, 1., 1.], 
         Hue[0.576923076923077, 0.07392156862745096, 1., 1.], 
         Hue[0.576923076923077, 0.07392156862745096, 1., 1.], 
         Hue[0.576923076923077, 0.07392156862745096, 1., 1.], 
         Hue[0.576923076923077, 0.07392156862745096, 1., 1.], 
         Hue[0.576923076923077, 0.07392156862745096, 1., 1.], 
         Hue[0.576923076923077, 0.07392156862745096, 1., 1.], 
         Hue[0.576923076923077, 0.07392156862745096, 1., 1.], 
         Hue[0.576923076923077, 0.07392156862745096, 1., 1.], 
         Hue[0.576923076923077, 0.07392156862745096, 1., 1.], 
         Hue[0.576923076923077, 0.07392156862745096, 1., 1.], 
         Hue[0.576923076923077, 0.07392156862745096, 1., 1.], 
         Hue[0.576923076923077, 0.07392156862745096, 1., 1.], 
         Hue[0.576923076923077, 0.07392156862745096, 1., 1.], 
         Hue[0.576923076923077, 0.07392156862745096, 1., 1.], 
         Hue[0.576923076923077, 0.07392156862745096, 1., 1.], 
         Hue[0.576923076923077, 0.07392156862745096, 1., 1.], 
         Hue[0.576923076923077, 0.07392156862745096, 1., 1.], 
         Hue[0.576923076923077, 0.07392156862745096, 1., 1.], 
         Hue[0.576923076923077, 0.07392156862745096, 1., 1.], 
         Hue[0.576923076923077, 0.07392156862745096, 1., 1.], 
         Hue[0.576923076923077, 0.07392156862745096, 1., 1.], 
         Hue[0.576923076923077, 0.07392156862745096, 1., 1.], 
         Hue[0.576923076923077, 0.07392156862745096, 1., 1.], 
         Hue[0.576923076923077, 0.07392156862745096, 1., 1.], 
         Hue[0.576923076923077, 0.07392156862745096, 1., 1.], 
         Hue[0.576923076923077, 0.07392156862745096, 1., 1.], 
         Hue[0.576923076923077, 0.07392156862745096, 1., 1.], 
         Hue[0.576923076923077, 0.07392156862745096, 1., 1.], 
         Hue[0.576923076923077, 0.07392156862745096, 1., 1.], 
         Hue[0.576923076923077, 0.07392156862745096, 1., 1.], 
         Hue[0.576923076923077, 0.07392156862745096, 1., 1.], 
         Hue[0.576923076923077, 0.07392156862745096, 1., 1.], 
         Hue[0.576923076923077, 0.07392156862745096, 1., 1.], 
         Hue[0.576923076923077, 0.07392156862745096, 1., 1.], 
         Hue[0.576923076923077, 0.07392156862745096, 1., 1.], 
         Hue[0.576923076923077, 0.07392156862745096, 1., 1.], 
         Hue[0.576923076923077, 0.07392156862745096, 1., 1.], 
         Hue[0.576923076923077, 0.07392156862745096, 1., 1.], 
         Hue[0.576923076923077, 0.07392156862745096, 1., 1.], 
         Hue[0.576923076923077, 0.07392156862745096, 1., 1.], 
         Hue[0.576923076923077, 0.07392156862745096, 1., 1.], 
         Hue[0.576923076923077, 0.07392156862745096, 1., 1.], 
         Hue[0.576923076923077, 0.07392156862745096, 1., 1.], 
         Hue[0.576923076923077, 0.07392156862745096, 1., 1.], 
         Hue[0.576923076923077, 0.07392156862745096, 1., 1.], 
         Hue[0.576923076923077, 0.07392156862745096, 1., 1.], 
         Hue[0.576923076923077, 0.07392156862745096, 1., 1.], 
         Hue[0.576923076923077, 0.07392156862745096, 1., 1.], 
         Hue[0.576923076923077, 0.07392156862745096, 1., 1.], 
         Hue[0.576923076923077, 0.07392156862745096, 1., 1.], 
         Hue[0.576923076923077, 0.07392156862745096, 1., 1.], 
         Hue[0.576923076923077, 0.07392156862745096, 1., 1.], 
         Hue[0.576923076923077, 0.07392156862745096, 1., 1.], 
         Hue[0.576923076923077, 0.07392156862745096, 1., 1.], 
         Hue[0.576923076923077, 0.07392156862745096, 1., 1.], 
         Hue[0.576923076923077, 0.07392156862745096, 1., 1.], 
         Hue[0.576923076923077, 0.07392156862745096, 1., 1.], 
         Hue[0.576923076923077, 0.07392156862745096, 1., 1.], 
         Hue[0.576923076923077, 0.07392156862745096, 1., 1.], 
         Hue[0.576923076923077, 0.07392156862745096, 1., 1.], 
         Hue[0.576923076923077, 0.07392156862745096, 1., 1.], 
         Hue[0.576923076923077, 0.07392156862745096, 1., 1.], 
         Hue[0.576923076923077, 0.07392156862745096, 1., 1.], 
         Hue[0.576923076923077, 0.07392156862745096, 1., 1.], 
         Hue[0.576923076923077, 0.06933333333333336, 1., 1.], 
         Hue[0.576923076923077, 0.06933333333333336, 1., 1.], 
         Hue[0.576923076923077, 0.06933333333333336, 1., 1.], 
         Hue[0.576923076923077, 0.06933333333333336, 1., 1.], 
         Hue[0.576923076923077, 0.06933333333333336, 1., 1.], 
         Hue[0.576923076923077, 0.06933333333333336, 1., 1.], 
         Hue[0.576923076923077, 0.06933333333333336, 1., 1.], 
         Hue[0.576923076923077, 0.06933333333333336, 1., 1.], 
         Hue[0.576923076923077, 0.06933333333333336, 1., 1.], 
         Hue[0.576923076923077, 0.06933333333333336, 1., 1.], 
         Hue[0.576923076923077, 0.06933333333333336, 1., 1.], 
         Hue[0.576923076923077, 0.06933333333333336, 1., 1.], 
         Hue[0.576923076923077, 0.06933333333333336, 1., 1.], 
         Hue[0.576923076923077, 0.06933333333333336, 1., 1.], 
         Hue[0.576923076923077, 0.06933333333333336, 1., 1.], 
         Hue[0.576923076923077, 0.06933333333333336, 1., 1.], 
         Hue[0.576923076923077, 0.06933333333333336, 1., 1.], 
         Hue[0.576923076923077, 0.06933333333333336, 1., 1.], 
         Hue[0.576923076923077, 0.06933333333333336, 1., 1.], 
         Hue[0.576923076923077, 0.06933333333333336, 1., 1.], 
         Hue[0.576923076923077, 0.06933333333333336, 1., 1.], 
         Hue[0.576923076923077, 0.06933333333333336, 1., 1.], 
         Hue[0.576923076923077, 0.06933333333333336, 1., 1.], 
         Hue[0.576923076923077, 0.06933333333333336, 1., 1.], 
         Hue[0.576923076923077, 0.06933333333333336, 1., 1.], 
         Hue[0.576923076923077, 0.06933333333333336, 1., 1.], 
         Hue[0.576923076923077, 0.06933333333333336, 1., 1.], 
         Hue[0.576923076923077, 0.06933333333333336, 1., 1.], 
         Hue[0.576923076923077, 0.06933333333333336, 1., 1.], 
         Hue[0.576923076923077, 0.06933333333333336, 1., 1.], 
         Hue[0.576923076923077, 0.06933333333333336, 1., 1.], 
         Hue[0.576923076923077, 0.06933333333333336, 1., 1.], 
         Hue[0.576923076923077, 0.06933333333333336, 1., 1.], 
         Hue[0.576923076923077, 0.06933333333333336, 1., 1.], 
         Hue[0.576923076923077, 0.06933333333333336, 1., 1.], 
         Hue[0.576923076923077, 0.06933333333333336, 1., 1.], 
         Hue[0.576923076923077, 0.06933333333333336, 1., 1.], 
         Hue[0.576923076923077, 0.06933333333333336, 1., 1.], 
         Hue[0.576923076923077, 0.06933333333333336, 1., 1.], 
         Hue[0.576923076923077, 0.06933333333333336, 1., 1.], 
         Hue[0.576923076923077, 0.06933333333333336, 1., 1.], 
         Hue[0.576923076923077, 0.06933333333333336, 1., 1.], 
         Hue[0.576923076923077, 0.06933333333333336, 1., 1.], 
         Hue[0.576923076923077, 0.06933333333333336, 1., 1.], 
         Hue[0.576923076923077, 0.06933333333333336, 1., 1.], 
         Hue[0.576923076923077, 0.06933333333333336, 1., 1.], 
         Hue[0.576923076923077, 0.06933333333333336, 1., 1.], 
         Hue[0.576923076923077, 0.06933333333333336, 1., 1.], 
         Hue[0.576923076923077, 0.06933333333333336, 1., 1.], 
         Hue[0.576923076923077, 0.06933333333333336, 1., 1.], 
         Hue[0.576923076923077, 0.06933333333333336, 1., 1.], 
         Hue[0.576923076923077, 0.06933333333333336, 1., 1.], 
         Hue[0.576923076923077, 0.06933333333333336, 1., 1.], 
         Hue[0.576923076923077, 0.06933333333333336, 1., 1.], 
         Hue[0.576923076923077, 0.06933333333333336, 1., 1.], 
         Hue[0.576923076923077, 0.06933333333333336, 1., 1.], 
         Hue[0.576923076923077, 0.06933333333333336, 1., 1.], 
         Hue[0.576923076923077, 0.06933333333333336, 1., 1.], 
         Hue[0.576923076923077, 0.06933333333333336, 1., 1.], 
         Hue[0.576923076923077, 0.06933333333333336, 1., 1.], 
         Hue[0.576923076923077, 0.06933333333333336, 1., 1.], 
         Hue[0.576923076923077, 0.06933333333333336, 1., 1.], 
         Hue[0.576923076923077, 0.06933333333333336, 1., 1.], 
         Hue[0.576923076923077, 0.06933333333333336, 1., 1.], 
         Hue[0.576923076923077, 0.06933333333333336, 1., 1.], 
         Hue[0.576923076923077, 0.06933333333333336, 1., 1.], 
         Hue[0.576923076923077, 0.06933333333333336, 1., 1.], 
         Hue[0.576923076923077, 0.06933333333333336, 1., 1.], 
         Hue[0.576923076923077, 0.06933333333333336, 1., 1.], 
         Hue[0.576923076923077, 0.06933333333333336, 1., 1.], 
         Hue[0.576923076923077, 0.06933333333333336, 1., 1.], 
         Hue[0.576923076923077, 0.06933333333333336, 1., 1.], 
         Hue[0.576923076923077, 0.06933333333333336, 1., 1.], 
         Hue[0.576923076923077, 0.06933333333333336, 1., 1.], 
         Hue[0.576923076923077, 0.06933333333333336, 1., 1.], 
         Hue[0.576923076923077, 0.06933333333333336, 1., 1.], 
         Hue[0.576923076923077, 0.06933333333333336, 1., 1.], 
         Hue[0.576923076923077, 0.06933333333333336, 1., 1.], 
         Hue[0.576923076923077, 0.06933333333333336, 1., 1.], 
         Hue[0.576923076923077, 0.06933333333333336, 1., 1.], 
         Hue[0.576923076923077, 0.06933333333333336, 1., 1.], 
         Hue[0.576923076923077, 0.06933333333333336, 1., 1.], 
         Hue[0.576923076923077, 0.06933333333333336, 1., 1.], 
         Hue[0.576923076923077, 0.06933333333333336, 1., 1.], 
         Hue[0.576923076923077, 0.06933333333333336, 1., 1.], 
         Hue[0.576923076923077, 0.06933333333333336, 1., 1.], 
         Hue[0.576923076923077, 0.06933333333333336, 1., 1.], 
         Hue[0.576923076923077, 0.06933333333333336, 1., 1.], 
         Hue[0.576923076923077, 0.06933333333333336, 1., 1.], 
         Hue[0.576923076923077, 0.06933333333333336, 1., 1.], 
         Hue[0.576923076923077, 0.06933333333333336, 1., 1.], 
         Hue[0.576923076923077, 0.06933333333333336, 1., 1.], 
         Hue[0.576923076923077, 0.06933333333333336, 1., 1.], 
         Hue[0.576923076923077, 0.06933333333333336, 1., 1.], 
         Hue[0.576923076923077, 0.06933333333333336, 1., 1.], 
         Hue[0.576923076923077, 0.06933333333333336, 1., 1.], 
         Hue[0.576923076923077, 0.06933333333333336, 1., 1.], 
         Hue[0.576923076923077, 0.06933333333333336, 1., 1.], 
         Hue[0.576923076923077, 0.06933333333333336, 1., 1.], 
         Hue[0.576923076923077, 0.06933333333333336, 1., 1.], 
         Hue[0.576923076923077, 0.0823087644696433, 0.988235294117647, 1.], 
         Hue[0.576923076923077, 0.0823087644696433, 0.988235294117647, 1.], 
         Hue[0.576923076923077, 0.0823087644696433, 0.988235294117647, 1.], 
         Hue[0.576923076923077, 0.0823087644696433, 0.988235294117647, 1.], 
         Hue[0.576923076923077, 0.0823087644696433, 0.988235294117647, 1.], 
         Hue[0.576923076923077, 0.0823087644696433, 0.988235294117647, 1.], 
         Hue[0.576923076923077, 0.0823087644696433, 0.988235294117647, 1.], 
         Hue[0.576923076923077, 0.0823087644696433, 0.988235294117647, 1.], 
         Hue[0.576923076923077, 0.0823087644696433, 0.988235294117647, 1.], 
         Hue[0.576923076923077, 0.0823087644696433, 0.988235294117647, 1.], 
         Hue[0.576923076923077, 0.0823087644696433, 0.988235294117647, 1.], 
         Hue[0.576923076923077, 0.0823087644696433, 0.988235294117647, 1.], 
         Hue[0.576923076923077, 0.0823087644696433, 0.988235294117647, 1.], 
         Hue[0.576923076923077, 0.0823087644696433, 0.988235294117647, 1.], 
         Hue[0.576923076923077, 0.0823087644696433, 0.988235294117647, 1.], 
         Hue[0.576923076923077, 0.0823087644696433, 0.988235294117647, 1.], 
         Hue[0.576923076923077, 0.0823087644696433, 0.988235294117647, 1.], 
         Hue[0.576923076923077, 0.0823087644696433, 0.988235294117647, 1.], 
         Hue[0.576923076923077, 0.0823087644696433, 0.988235294117647, 1.], 
         Hue[0.576923076923077, 0.0823087644696433, 0.988235294117647, 1.], 
         Hue[0.576923076923077, 0.0823087644696433, 0.988235294117647, 1.], 
         Hue[0.576923076923077, 0.0823087644696433, 0.988235294117647, 1.], 
         Hue[0.576923076923077, 0.0823087644696433, 0.988235294117647, 1.], 
         Hue[0.576923076923077, 0.0823087644696433, 0.988235294117647, 1.], 
         Hue[0.576923076923077, 0.0823087644696433, 0.988235294117647, 1.], 
         Hue[0.576923076923077, 0.0823087644696433, 0.988235294117647, 1.], 
         Hue[0.576923076923077, 0.0823087644696433, 0.988235294117647, 1.], 
         Hue[0.576923076923077, 0.0823087644696433, 0.988235294117647, 1.], 
         Hue[0.576923076923077, 0.0823087644696433, 0.988235294117647, 1.], 
         Hue[0.576923076923077, 0.0823087644696433, 0.988235294117647, 1.], 
         Hue[0.576923076923077, 0.0823087644696433, 0.988235294117647, 1.], 
         Hue[0.576923076923077, 0.0823087644696433, 0.988235294117647, 1.], 
         Hue[0.576923076923077, 0.0823087644696433, 0.988235294117647, 1.], 
         Hue[0.576923076923077, 0.0823087644696433, 0.988235294117647, 1.], 
         Hue[0.576923076923077, 0.0823087644696433, 0.988235294117647, 1.], 
         Hue[0.576923076923077, 0.0823087644696433, 0.988235294117647, 1.], 
         Hue[0.576923076923077, 0.0823087644696433, 0.988235294117647, 1.], 
         Hue[0.576923076923077, 0.0823087644696433, 0.988235294117647, 1.], 
         Hue[0.576923076923077, 0.0823087644696433, 0.988235294117647, 1.], 
         Hue[0.576923076923077, 0.0823087644696433, 0.988235294117647, 1.], 
         Hue[0.576923076923077, 0.0823087644696433, 0.988235294117647, 1.], 
         Hue[0.576923076923077, 0.0823087644696433, 0.988235294117647, 1.], 
         Hue[0.576923076923077, 0.0823087644696433, 0.988235294117647, 1.], 
         Hue[0.576923076923077, 0.0823087644696433, 0.988235294117647, 1.], 
         Hue[0.576923076923077, 0.0823087644696433, 0.988235294117647, 1.], 
         Hue[0.576923076923077, 0.0823087644696433, 0.988235294117647, 1.], 
         Hue[0.576923076923077, 0.0823087644696433, 0.988235294117647, 1.], 
         Hue[0.576923076923077, 0.0823087644696433, 0.988235294117647, 1.], 
         Hue[0.576923076923077, 0.0823087644696433, 0.988235294117647, 1.], 
         Hue[0.576923076923077, 0.0823087644696433, 0.988235294117647, 1.], 
         Hue[0.576923076923077, 0.0823087644696433, 0.988235294117647, 1.], 
         Hue[0.576923076923077, 0.0823087644696433, 0.988235294117647, 1.], 
         Hue[0.576923076923077, 0.0823087644696433, 0.988235294117647, 1.], 
         Hue[0.576923076923077, 0.0823087644696433, 0.988235294117647, 1.], 
         Hue[0.576923076923077, 0.0823087644696433, 0.988235294117647, 1.], 
         Hue[0.576923076923077, 0.0823087644696433, 0.988235294117647, 1.], 
         Hue[0.576923076923077, 0.0823087644696433, 0.988235294117647, 1.], 
         Hue[0.576923076923077, 0.0823087644696433, 0.988235294117647, 1.], 
         Hue[0.576923076923077, 0.0823087644696433, 0.988235294117647, 1.], 
         Hue[0.576923076923077, 0.0823087644696433, 0.988235294117647, 1.], 
         Hue[0.576923076923077, 0.0823087644696433, 0.988235294117647, 1.], 
         Hue[0.576923076923077, 0.0823087644696433, 0.988235294117647, 1.], 
         Hue[0.576923076923077, 0.0823087644696433, 0.988235294117647, 1.], 
         Hue[0.576923076923077, 0.0823087644696433, 0.988235294117647, 1.], 
         Hue[0.576923076923077, 0.0823087644696433, 0.988235294117647, 1.], 
         Hue[0.576923076923077, 0.0823087644696433, 0.988235294117647, 1.], 
         Hue[0.576923076923077, 0.0823087644696433, 0.988235294117647, 1.], 
         Hue[0.576923076923077, 0.0823087644696433, 0.988235294117647, 1.], 
         Hue[0.576923076923077, 0.0823087644696433, 0.988235294117647, 1.], 
         Hue[0.576923076923077, 0.0823087644696433, 0.988235294117647, 1.], 
         Hue[0.576923076923077, 0.0823087644696433, 0.988235294117647, 1.], 
         Hue[0.576923076923077, 0.0823087644696433, 0.988235294117647, 1.], 
         Hue[0.576923076923077, 0.0823087644696433, 0.988235294117647, 1.], 
         Hue[0.576923076923077, 0.0823087644696433, 0.988235294117647, 1.], 
         Hue[0.576923076923077, 0.0823087644696433, 0.988235294117647, 1.], 
         Hue[0.576923076923077, 0.0823087644696433, 0.988235294117647, 1.], 
         Hue[0.576923076923077, 0.0823087644696433, 0.988235294117647, 1.], 
         Hue[0.576923076923077, 0.0823087644696433, 0.988235294117647, 1.], 
         Hue[0.576923076923077, 0.0823087644696433, 0.988235294117647, 1.], 
         Hue[0.576923076923077, 0.0823087644696433, 0.988235294117647, 1.], 
         Hue[0.576923076923077, 0.0823087644696433, 0.988235294117647, 1.], 
         Hue[0.576923076923077, 0.0823087644696433, 0.988235294117647, 1.], 
         Hue[0.576923076923077, 0.0823087644696433, 0.988235294117647, 1.], 
         Hue[0.576923076923077, 0.0823087644696433, 0.988235294117647, 1.], 
         Hue[0.576923076923077, 0.0823087644696433, 0.988235294117647, 1.], 
         Hue[0.576923076923077, 0.0823087644696433, 0.988235294117647, 1.], 
         Hue[0.576923076923077, 0.0823087644696433, 0.988235294117647, 1.], 
         Hue[0.576923076923077, 0.0823087644696433, 0.988235294117647, 1.], 
         Hue[0.576923076923077, 0.0823087644696433, 0.988235294117647, 1.], 
         Hue[0.576923076923077, 0.0823087644696433, 0.988235294117647, 1.], 
         Hue[0.576923076923077, 0.0823087644696433, 0.988235294117647, 1.], 
         Hue[0.576923076923077, 0.0823087644696433, 0.988235294117647, 1.], 
         Hue[0.576923076923077, 0.0823087644696433, 0.988235294117647, 1.], 
         Hue[0.576923076923077, 0.0823087644696433, 0.988235294117647, 1.], 
         Hue[0.576923076923077, 0.0823087644696433, 0.988235294117647, 1.], 
         Hue[0.576923076923077, 0.0823087644696433, 0.988235294117647, 1.], 
         Hue[0.576923076923077, 0.0823087644696433, 0.988235294117647, 1.], 
         Hue[0.576923076923077, 0.0823087644696433, 0.988235294117647, 1.], 
         Hue[0.576923076923077, 0.0823087644696433, 0.988235294117647, 1.], 
         Hue[0.576923076923077, 0.0823087644696433, 0.988235294117647, 1.], 
         Hue[0.576923076923077, 0.09429184549356229, 0.9137254901960781, 1.], 
         Hue[0.576923076923077, 0.09429184549356229, 0.9137254901960781, 1.], 
         Hue[0.576923076923077, 0.09429184549356229, 0.9137254901960781, 1.], 
         Hue[0.576923076923077, 0.09429184549356229, 0.9137254901960781, 1.], 
         Hue[0.576923076923077, 0.09429184549356229, 0.9137254901960781, 1.], 
         Hue[0.576923076923077, 0.09429184549356229, 0.9137254901960781, 1.], 
         Hue[0.576923076923077, 0.09429184549356229, 0.9137254901960781, 1.], 
         Hue[0.576923076923077, 0.09429184549356229, 0.9137254901960781, 1.], 
         Hue[0.576923076923077, 0.09429184549356229, 0.9137254901960781, 1.], 
         Hue[0.576923076923077, 0.09429184549356229, 0.9137254901960781, 1.], 
         Hue[0.576923076923077, 0.09429184549356229, 0.9137254901960781, 1.], 
         Hue[0.576923076923077, 0.09429184549356229, 0.9137254901960781, 1.], 
         Hue[0.576923076923077, 0.09429184549356229, 0.9137254901960781, 1.], 
         Hue[0.576923076923077, 0.09429184549356229, 0.9137254901960781, 1.], 
         Hue[0.576923076923077, 0.09429184549356229, 0.9137254901960781, 1.], 
         Hue[0.576923076923077, 0.09429184549356229, 0.9137254901960781, 1.], 
         Hue[0.576923076923077, 0.09429184549356229, 0.9137254901960781, 1.], 
         Hue[0.576923076923077, 0.09429184549356229, 0.9137254901960781, 1.], 
         Hue[0.576923076923077, 0.09429184549356229, 0.9137254901960781, 1.], 
         Hue[0.576923076923077, 0.09429184549356229, 0.9137254901960781, 1.], 
         Hue[0.576923076923077, 0.09429184549356229, 0.9137254901960781, 1.], 
         Hue[0.576923076923077, 0.09429184549356229, 0.9137254901960781, 1.], 
         Hue[0.576923076923077, 0.09429184549356229, 0.9137254901960781, 1.], 
         Hue[0.576923076923077, 0.09429184549356229, 0.9137254901960781, 1.], 
         Hue[0.576923076923077, 0.09429184549356229, 0.9137254901960781, 1.], 
         Hue[0.576923076923077, 0.09429184549356229, 0.9137254901960781, 1.], 
         Hue[0.576923076923077, 0.09429184549356229, 0.9137254901960781, 1.], 
         Hue[0.576923076923077, 0.09429184549356229, 0.9137254901960781, 1.], 
         Hue[0.576923076923077, 0.09429184549356229, 0.9137254901960781, 1.], 
         Hue[0.576923076923077, 0.09429184549356229, 0.9137254901960781, 1.], 
         Hue[0.576923076923077, 0.09429184549356229, 0.9137254901960781, 1.], 
         Hue[0.576923076923077, 0.09429184549356229, 0.9137254901960781, 1.], 
         Hue[0.576923076923077, 0.09429184549356229, 0.9137254901960781, 1.], 
         Hue[0.576923076923077, 0.09429184549356229, 0.9137254901960781, 1.], 
         Hue[0.576923076923077, 0.09429184549356229, 0.9137254901960781, 1.], 
         Hue[0.576923076923077, 0.09429184549356229, 0.9137254901960781, 1.], 
         Hue[0.576923076923077, 0.09429184549356229, 0.9137254901960781, 1.], 
         Hue[0.576923076923077, 0.09429184549356229, 0.9137254901960781, 1.], 
         Hue[0.576923076923077, 0.09429184549356229, 0.9137254901960781, 1.], 
         Hue[0.576923076923077, 0.09429184549356229, 0.9137254901960781, 1.], 
         Hue[0.576923076923077, 0.09429184549356229, 0.9137254901960781, 1.], 
         Hue[0.576923076923077, 0.09429184549356229, 0.9137254901960781, 1.], 
         Hue[0.576923076923077, 0.09429184549356229, 0.9137254901960781, 1.], 
         Hue[0.576923076923077, 0.09429184549356229, 0.9137254901960781, 1.], 
         Hue[0.576923076923077, 0.09429184549356229, 0.9137254901960781, 1.], 
         Hue[0.576923076923077, 0.09429184549356229, 0.9137254901960781, 1.], 
         Hue[0.576923076923077, 0.09429184549356229, 0.9137254901960781, 1.], 
         Hue[0.576923076923077, 0.09429184549356229, 0.9137254901960781, 1.], 
         Hue[0.576923076923077, 0.09429184549356229, 0.9137254901960781, 1.], 
         Hue[0.576923076923077, 0.09429184549356229, 0.9137254901960781, 1.], 
         Hue[0.576923076923077, 0.09429184549356229, 0.9137254901960781, 1.], 
         Hue[0.576923076923077, 0.09429184549356229, 0.9137254901960781, 1.], 
         Hue[0.576923076923077, 0.09429184549356229, 0.9137254901960781, 1.], 
         Hue[0.576923076923077, 0.09429184549356229, 0.9137254901960781, 1.], 
         Hue[0.576923076923077, 0.09429184549356229, 0.9137254901960781, 1.], 
         Hue[0.576923076923077, 0.09429184549356229, 0.9137254901960781, 1.], 
         Hue[0.576923076923077, 0.09429184549356229, 0.9137254901960781, 1.], 
         Hue[0.576923076923077, 0.09429184549356229, 0.9137254901960781, 1.], 
         Hue[0.576923076923077, 0.09429184549356229, 0.9137254901960781, 1.], 
         Hue[0.576923076923077, 0.09429184549356229, 0.9137254901960781, 1.], 
         Hue[0.576923076923077, 0.09429184549356229, 0.9137254901960781, 1.], 
         Hue[0.576923076923077, 0.09429184549356229, 0.9137254901960781, 1.], 
         Hue[0.576923076923077, 0.09429184549356229, 0.9137254901960781, 1.], 
         Hue[0.576923076923077, 0.09429184549356229, 0.9137254901960781, 1.], 
         Hue[0.576923076923077, 0.09429184549356229, 0.9137254901960781, 1.], 
         Hue[0.576923076923077, 0.09429184549356229, 0.9137254901960781, 1.], 
         Hue[0.576923076923077, 0.09429184549356229, 0.9137254901960781, 1.], 
         Hue[0.576923076923077, 0.09429184549356229, 0.9137254901960781, 1.], 
         Hue[0.576923076923077, 0.09429184549356229, 0.9137254901960781, 1.], 
         Hue[0.576923076923077, 0.09429184549356229, 0.9137254901960781, 1.], 
         Hue[0.576923076923077, 0.09429184549356229, 0.9137254901960781, 1.], 
         Hue[0.576923076923077, 0.09429184549356229, 0.9137254901960781, 1.], 
         Hue[0.576923076923077, 0.09429184549356229, 0.9137254901960781, 1.], 
         Hue[0.576923076923077, 0.09429184549356229, 0.9137254901960781, 1.], 
         Hue[0.576923076923077, 0.09429184549356229, 0.9137254901960781, 1.], 
         Hue[0.576923076923077, 0.09429184549356229, 0.9137254901960781, 1.], 
         Hue[0.576923076923077, 0.09429184549356229, 0.9137254901960781, 1.], 
         Hue[0.576923076923077, 0.09429184549356229, 0.9137254901960781, 1.], 
         Hue[0.576923076923077, 0.09429184549356229, 0.9137254901960781, 1.], 
         Hue[0.576923076923077, 0.09429184549356229, 0.9137254901960781, 1.], 
         Hue[0.576923076923077, 0.09429184549356229, 0.9137254901960781, 1.], 
         Hue[0.576923076923077, 0.09429184549356229, 0.9137254901960781, 1.], 
         Hue[0.576923076923077, 0.09429184549356229, 0.9137254901960781, 1.], 
         Hue[0.576923076923077, 0.09429184549356229, 0.9137254901960781, 1.], 
         Hue[0.576923076923077, 0.09429184549356229, 0.9137254901960781, 1.], 
         Hue[0.576923076923077, 0.09429184549356229, 0.9137254901960781, 1.], 
         Hue[0.576923076923077, 0.09429184549356229, 0.9137254901960781, 1.], 
         Hue[0.576923076923077, 0.09429184549356229, 0.9137254901960781, 1.], 
         Hue[0.576923076923077, 0.09429184549356229, 0.9137254901960781, 1.], 
         Hue[0.576923076923077, 0.09429184549356229, 0.9137254901960781, 1.], 
         Hue[0.576923076923077, 0.09429184549356229, 0.9137254901960781, 1.], 
         Hue[0.576923076923077, 0.09429184549356229, 0.9137254901960781, 1.], 
         Hue[0.576923076923077, 0.09429184549356229, 0.9137254901960781, 1.], 
         Hue[0.576923076923077, 0.09429184549356229, 0.9137254901960781, 1.], 
         Hue[0.576923076923077, 0.09429184549356229, 0.9137254901960781, 1.], 
         Hue[0.576923076923077, 0.09429184549356229, 0.9137254901960781, 1.], 
         Hue[0.576923076923077, 0.09429184549356229, 0.9137254901960781, 1.], 
         Hue[0.576923076923077, 0.09429184549356229, 0.9137254901960781, 1.], 
         Hue[0.576923076923077, 0.09429184549356229, 0.9137254901960781, 1.], 
         Hue[0.576923076923077, 0.09429184549356229, 0.9137254901960781, 1.], 
         Hue[0.576923076923077, 0.10808921129803985`, 0.8352941176470577, 1.], 
         Hue[0.576923076923077, 0.10808921129803985`, 0.8352941176470577, 1.], 
         Hue[0.576923076923077, 0.10808921129803985`, 0.8352941176470577, 1.], 
         Hue[0.576923076923077, 0.10808921129803985`, 0.8352941176470577, 1.], 
         Hue[0.576923076923077, 0.10808921129803985`, 0.8352941176470577, 1.], 
         Hue[0.576923076923077, 0.10808921129803985`, 0.8352941176470577, 1.], 
         Hue[0.576923076923077, 0.10808921129803985`, 0.8352941176470577, 1.], 
         Hue[0.576923076923077, 0.10808921129803985`, 0.8352941176470577, 1.], 
         Hue[0.576923076923077, 0.10808921129803985`, 0.8352941176470577, 1.], 
         Hue[0.576923076923077, 0.10808921129803985`, 0.8352941176470577, 1.], 
         Hue[0.576923076923077, 0.10808921129803985`, 0.8352941176470577, 1.], 
         Hue[0.576923076923077, 0.10808921129803985`, 0.8352941176470577, 1.], 
         Hue[0.576923076923077, 0.10808921129803985`, 0.8352941176470577, 1.], 
         Hue[0.576923076923077, 0.10808921129803985`, 0.8352941176470577, 1.], 
         Hue[0.576923076923077, 0.10808921129803985`, 0.8352941176470577, 1.], 
         Hue[0.576923076923077, 0.10808921129803985`, 0.8352941176470577, 1.], 
         Hue[0.576923076923077, 0.10808921129803985`, 0.8352941176470577, 1.], 
         Hue[0.576923076923077, 0.10808921129803985`, 0.8352941176470577, 1.], 
         Hue[0.576923076923077, 0.10808921129803985`, 0.8352941176470577, 1.], 
         Hue[0.576923076923077, 0.10808921129803985`, 0.8352941176470577, 1.], 
         Hue[0.576923076923077, 0.10808921129803985`, 0.8352941176470577, 1.], 
         Hue[0.576923076923077, 0.10808921129803985`, 0.8352941176470577, 1.], 
         Hue[0.576923076923077, 0.10808921129803985`, 0.8352941176470577, 1.], 
         Hue[0.576923076923077, 0.10808921129803985`, 0.8352941176470577, 1.], 
         Hue[0.576923076923077, 0.10808921129803985`, 0.8352941176470577, 1.], 
         Hue[0.576923076923077, 0.10808921129803985`, 0.8352941176470577, 1.], 
         Hue[0.576923076923077, 0.10808921129803985`, 0.8352941176470577, 1.], 
         Hue[0.576923076923077, 0.10808921129803985`, 0.8352941176470577, 1.], 
         Hue[0.576923076923077, 0.10808921129803985`, 0.8352941176470577, 1.], 
         Hue[0.576923076923077, 0.10808921129803985`, 0.8352941176470577, 1.], 
         Hue[0.576923076923077, 0.10808921129803985`, 0.8352941176470577, 1.], 
         Hue[0.576923076923077, 0.10808921129803985`, 0.8352941176470577, 1.], 
         Hue[0.576923076923077, 0.10808921129803985`, 0.8352941176470577, 1.], 
         Hue[0.576923076923077, 0.10808921129803985`, 0.8352941176470577, 1.], 
         Hue[0.576923076923077, 0.10808921129803985`, 0.8352941176470577, 1.], 
         Hue[0.576923076923077, 0.10808921129803985`, 0.8352941176470577, 1.], 
         Hue[0.576923076923077, 0.10808921129803985`, 0.8352941176470577, 1.], 
         Hue[0.576923076923077, 0.10808921129803985`, 0.8352941176470577, 1.], 
         Hue[0.576923076923077, 0.10808921129803985`, 0.8352941176470577, 1.], 
         Hue[0.576923076923077, 0.10808921129803985`, 0.8352941176470577, 1.], 
         Hue[0.576923076923077, 0.10808921129803985`, 0.8352941176470577, 1.], 
         Hue[0.576923076923077, 0.10808921129803985`, 0.8352941176470577, 1.], 
         Hue[0.576923076923077, 0.10808921129803985`, 0.8352941176470577, 1.], 
         Hue[0.576923076923077, 0.10808921129803985`, 0.8352941176470577, 1.], 
         Hue[0.576923076923077, 0.10808921129803985`, 0.8352941176470577, 1.], 
         Hue[0.576923076923077, 0.10808921129803985`, 0.8352941176470577, 1.], 
         Hue[0.576923076923077, 0.10808921129803985`, 0.8352941176470577, 1.], 
         Hue[0.576923076923077, 0.10808921129803985`, 0.8352941176470577, 1.], 
         Hue[0.576923076923077, 0.10808921129803985`, 0.8352941176470577, 1.], 
         Hue[0.576923076923077, 0.10808921129803985`, 0.8352941176470577, 1.], 
         Hue[0.576923076923077, 0.10808921129803985`, 0.8352941176470577, 1.], 
         Hue[0.576923076923077, 0.10808921129803985`, 0.8352941176470577, 1.], 
         Hue[0.576923076923077, 0.10808921129803985`, 0.8352941176470577, 1.], 
         Hue[0.576923076923077, 0.10808921129803985`, 0.8352941176470577, 1.], 
         Hue[0.576923076923077, 0.10808921129803985`, 0.8352941176470577, 1.], 
         Hue[0.576923076923077, 0.10808921129803985`, 0.8352941176470577, 1.], 
         Hue[0.576923076923077, 0.10808921129803985`, 0.8352941176470577, 1.], 
         Hue[0.576923076923077, 0.10808921129803985`, 0.8352941176470577, 1.], 
         Hue[0.576923076923077, 0.10808921129803985`, 0.8352941176470577, 1.], 
         Hue[0.576923076923077, 0.10808921129803985`, 0.8352941176470577, 1.], 
         Hue[0.576923076923077, 0.10808921129803985`, 0.8352941176470577, 1.], 
         Hue[0.576923076923077, 0.10808921129803985`, 0.8352941176470577, 1.], 
         Hue[0.576923076923077, 0.10808921129803985`, 0.8352941176470577, 1.], 
         Hue[0.576923076923077, 0.10808921129803985`, 0.8352941176470577, 1.], 
         Hue[0.576923076923077, 0.10808921129803985`, 0.8352941176470577, 1.], 
         Hue[0.576923076923077, 0.10808921129803985`, 0.8352941176470577, 1.], 
         Hue[0.576923076923077, 0.10808921129803985`, 0.8352941176470577, 1.], 
         Hue[0.576923076923077, 0.10808921129803985`, 0.8352941176470577, 1.], 
         Hue[0.576923076923077, 0.10808921129803985`, 0.8352941176470577, 1.], 
         Hue[0.576923076923077, 0.10808921129803985`, 0.8352941176470577, 1.], 
         Hue[0.576923076923077, 0.10808921129803985`, 0.8352941176470577, 1.], 
         Hue[0.576923076923077, 0.10808921129803985`, 0.8352941176470577, 1.], 
         Hue[0.576923076923077, 0.10808921129803985`, 0.8352941176470577, 1.], 
         Hue[0.576923076923077, 0.10808921129803985`, 0.8352941176470577, 1.], 
         Hue[0.576923076923077, 0.10808921129803985`, 0.8352941176470577, 1.], 
         Hue[0.576923076923077, 0.10808921129803985`, 0.8352941176470577, 1.], 
         Hue[0.576923076923077, 0.10808921129803985`, 0.8352941176470577, 1.], 
         Hue[0.576923076923077, 0.10808921129803985`, 0.8352941176470577, 1.], 
         Hue[0.576923076923077, 0.10808921129803985`, 0.8352941176470577, 1.], 
         Hue[0.576923076923077, 0.10808921129803985`, 0.8352941176470577, 1.], 
         Hue[0.576923076923077, 0.10808921129803985`, 0.8352941176470577, 1.], 
         Hue[0.576923076923077, 0.10808921129803985`, 0.8352941176470577, 1.], 
         Hue[0.576923076923077, 0.10808921129803985`, 0.8352941176470577, 1.], 
         Hue[0.576923076923077, 0.10808921129803985`, 0.8352941176470577, 1.], 
         Hue[0.576923076923077, 0.10808921129803985`, 0.8352941176470577, 1.], 
         Hue[0.576923076923077, 0.10808921129803985`, 0.8352941176470577, 1.], 
         Hue[0.576923076923077, 0.10808921129803985`, 0.8352941176470577, 1.], 
         Hue[0.576923076923077, 0.10808921129803985`, 0.8352941176470577, 1.], 
         Hue[0.576923076923077, 0.10808921129803985`, 0.8352941176470577, 1.], 
         Hue[0.576923076923077, 0.10808921129803985`, 0.8352941176470577, 1.], 
         Hue[0.576923076923077, 0.10808921129803985`, 0.8352941176470577, 1.], 
         Hue[0.576923076923077, 0.10808921129803985`, 0.8352941176470577, 1.], 
         Hue[0.576923076923077, 0.10808921129803985`, 0.8352941176470577, 1.], 
         Hue[0.576923076923077, 0.10808921129803985`, 0.8352941176470577, 1.], 
         Hue[0.576923076923077, 0.10808921129803985`, 0.8352941176470577, 1.], 
         Hue[0.576923076923077, 0.10808921129803985`, 0.8352941176470577, 1.], 
         Hue[0.576923076923077, 0.10808921129803985`, 0.8352941176470577, 1.], 
         Hue[0.576923076923077, 0.10808921129803985`, 0.8352941176470577, 1.], 
         Hue[0.576923076923077, 0.10808921129803985`, 0.8352941176470577, 1.], 
         Hue[0.576923076923077, 0.10808921129803985`, 0.8352941176470577, 1.], 
         Hue[0.576923076923077, 0.11583333333333334`, 0.611764705882353, 1.], 
         Hue[0.576923076923077, 0.11583333333333334`, 0.611764705882353, 1.], 
         Hue[0.576923076923077, 0.11583333333333334`, 0.611764705882353, 1.], 
         Hue[0.576923076923077, 0.11583333333333334`, 0.611764705882353, 1.], 
         Hue[0.576923076923077, 0.11583333333333334`, 0.611764705882353, 1.], 
         Hue[0.576923076923077, 0.11583333333333334`, 0.611764705882353, 1.], 
         Hue[0.576923076923077, 0.11583333333333334`, 0.611764705882353, 1.], 
         Hue[0.576923076923077, 0.11583333333333334`, 0.611764705882353, 1.], 
         Hue[0.576923076923077, 0.11583333333333334`, 0.611764705882353, 1.], 
         Hue[0.576923076923077, 0.11583333333333334`, 0.611764705882353, 1.], 
         Hue[0.576923076923077, 0.11583333333333334`, 0.611764705882353, 1.], 
         Hue[0.576923076923077, 0.11583333333333334`, 0.611764705882353, 1.], 
         Hue[0.576923076923077, 0.11583333333333334`, 0.611764705882353, 1.], 
         Hue[0.576923076923077, 0.11583333333333334`, 0.611764705882353, 1.], 
         Hue[0.576923076923077, 0.11583333333333334`, 0.611764705882353, 1.], 
         Hue[0.576923076923077, 0.11583333333333334`, 0.611764705882353, 1.], 
         Hue[0.576923076923077, 0.11583333333333334`, 0.611764705882353, 1.], 
         Hue[0.576923076923077, 0.11583333333333334`, 0.611764705882353, 1.], 
         Hue[0.576923076923077, 0.11583333333333334`, 0.611764705882353, 1.], 
         Hue[0.576923076923077, 0.11583333333333334`, 0.611764705882353, 1.], 
         Hue[0.576923076923077, 0.11583333333333334`, 0.611764705882353, 1.], 
         Hue[0.576923076923077, 0.11583333333333334`, 0.611764705882353, 1.], 
         Hue[0.576923076923077, 0.11583333333333334`, 0.611764705882353, 1.], 
         Hue[0.576923076923077, 0.11583333333333334`, 0.611764705882353, 1.], 
         Hue[0.576923076923077, 0.11583333333333334`, 0.611764705882353, 1.], 
         Hue[0.576923076923077, 0.11583333333333334`, 0.611764705882353, 1.], 
         Hue[0.576923076923077, 0.11583333333333334`, 0.611764705882353, 1.], 
         Hue[0.576923076923077, 0.11583333333333334`, 0.611764705882353, 1.], 
         Hue[0.576923076923077, 0.11583333333333334`, 0.611764705882353, 1.], 
         Hue[0.576923076923077, 0.11583333333333334`, 0.611764705882353, 1.], 
         Hue[0.576923076923077, 0.11583333333333334`, 0.611764705882353, 1.], 
         Hue[0.576923076923077, 0.11583333333333334`, 0.611764705882353, 1.], 
         Hue[0.576923076923077, 0.11583333333333334`, 0.611764705882353, 1.], 
         Hue[0.576923076923077, 0.11583333333333334`, 0.611764705882353, 1.], 
         Hue[0.576923076923077, 0.11583333333333334`, 0.611764705882353, 1.], 
         Hue[0.576923076923077, 0.11583333333333334`, 0.611764705882353, 1.], 
         Hue[0.576923076923077, 0.11583333333333334`, 0.611764705882353, 1.], 
         Hue[0.576923076923077, 0.11583333333333334`, 0.611764705882353, 1.], 
         Hue[0.576923076923077, 0.11583333333333334`, 0.611764705882353, 1.], 
         Hue[0.576923076923077, 0.11583333333333334`, 0.611764705882353, 1.], 
         Hue[0.576923076923077, 0.11583333333333334`, 0.611764705882353, 1.], 
         Hue[0.576923076923077, 0.11583333333333334`, 0.611764705882353, 1.], 
         Hue[0.576923076923077, 0.11583333333333334`, 0.611764705882353, 1.], 
         Hue[0.576923076923077, 0.11583333333333334`, 0.611764705882353, 1.], 
         Hue[0.576923076923077, 0.11583333333333334`, 0.611764705882353, 1.], 
         Hue[0.576923076923077, 0.11583333333333334`, 0.611764705882353, 1.], 
         Hue[0.576923076923077, 0.11583333333333334`, 0.611764705882353, 1.], 
         Hue[0.576923076923077, 0.11583333333333334`, 0.611764705882353, 1.], 
         Hue[0.576923076923077, 0.11583333333333334`, 0.611764705882353, 1.], 
         Hue[0.576923076923077, 0.11583333333333334`, 0.611764705882353, 1.], 
         Hue[0.576923076923077, 0.11583333333333334`, 0.611764705882353, 1.], 
         Hue[0.576923076923077, 0.11583333333333334`, 0.611764705882353, 1.], 
         Hue[0.576923076923077, 0.11583333333333334`, 0.611764705882353, 1.], 
         Hue[0.576923076923077, 0.11583333333333334`, 0.611764705882353, 1.], 
         Hue[0.576923076923077, 0.11583333333333334`, 0.611764705882353, 1.], 
         Hue[0.576923076923077, 0.11583333333333334`, 0.611764705882353, 1.], 
         Hue[0.576923076923077, 0.11583333333333334`, 0.611764705882353, 1.], 
         Hue[0.576923076923077, 0.11583333333333334`, 0.611764705882353, 1.], 
         Hue[0.576923076923077, 0.11583333333333334`, 0.611764705882353, 1.], 
         Hue[0.576923076923077, 0.11583333333333334`, 0.611764705882353, 1.], 
         Hue[0.576923076923077, 0.11583333333333334`, 0.611764705882353, 1.], 
         Hue[0.576923076923077, 0.11583333333333334`, 0.611764705882353, 1.], 
         Hue[0.576923076923077, 0.11583333333333334`, 0.611764705882353, 1.], 
         Hue[0.576923076923077, 0.11583333333333334`, 0.611764705882353, 1.], 
         Hue[0.576923076923077, 0.11583333333333334`, 0.611764705882353, 1.], 
         Hue[0.576923076923077, 0.11583333333333334`, 0.611764705882353, 1.], 
         Hue[0.576923076923077, 0.11583333333333334`, 0.611764705882353, 1.], 
         Hue[0.576923076923077, 0.11583333333333334`, 0.611764705882353, 1.], 
         Hue[0.576923076923077, 0.11583333333333334`, 0.611764705882353, 1.], 
         Hue[0.576923076923077, 0.11583333333333334`, 0.611764705882353, 1.], 
         Hue[0.576923076923077, 0.11583333333333334`, 0.611764705882353, 1.], 
         Hue[0.576923076923077, 0.11583333333333334`, 0.611764705882353, 1.], 
         Hue[0.576923076923077, 0.11583333333333334`, 0.611764705882353, 1.], 
         Hue[0.576923076923077, 0.11583333333333334`, 0.611764705882353, 1.], 
         Hue[0.576923076923077, 0.11583333333333334`, 0.611764705882353, 1.], 
         Hue[0.576923076923077, 0.11583333333333334`, 0.611764705882353, 1.], 
         Hue[0.576923076923077, 0.11583333333333334`, 0.611764705882353, 1.], 
         Hue[0.576923076923077, 0.11583333333333334`, 0.611764705882353, 1.], 
         Hue[0.576923076923077, 0.11583333333333334`, 0.611764705882353, 1.], 
         Hue[0.576923076923077, 0.11583333333333334`, 0.611764705882353, 1.], 
         Hue[0.576923076923077, 0.11583333333333334`, 0.611764705882353, 1.], 
         Hue[0.576923076923077, 0.11583333333333334`, 0.611764705882353, 1.], 
         Hue[0.576923076923077, 0.11583333333333334`, 0.611764705882353, 1.], 
         Hue[0.576923076923077, 0.11583333333333334`, 0.611764705882353, 1.], 
         Hue[0.576923076923077, 0.11583333333333334`, 0.611764705882353, 1.], 
         Hue[0.576923076923077, 0.11583333333333334`, 0.611764705882353, 1.], 
         Hue[0.576923076923077, 0.11583333333333334`, 0.611764705882353, 1.], 
         Hue[0.576923076923077, 0.11583333333333334`, 0.611764705882353, 1.], 
         Hue[0.576923076923077, 0.11583333333333334`, 0.611764705882353, 1.], 
         Hue[0.576923076923077, 0.11583333333333334`, 0.611764705882353, 1.], 
         Hue[0.576923076923077, 0.11583333333333334`, 0.611764705882353, 1.], 
         Hue[0.576923076923077, 0.11583333333333334`, 0.611764705882353, 1.], 
         Hue[0.576923076923077, 0.11583333333333334`, 0.611764705882353, 1.], 
         Hue[0.576923076923077, 0.11583333333333334`, 0.611764705882353, 1.], 
         Hue[0.576923076923077, 0.11583333333333334`, 0.611764705882353, 1.], 
         Hue[0.576923076923077, 0.11583333333333334`, 0.611764705882353, 1.], 
         Hue[0.576923076923077, 0.11583333333333334`, 0.611764705882353, 1.], 
         Hue[0.576923076923077, 0.11583333333333334`, 0.611764705882353, 1.], 
         Hue[0.576923076923077, 0.11583333333333334`, 0.611764705882353, 1.], 
         Hue[
         0.576923076923077, 0.11583333333333334`, 0.611764705882353, 
          1.]}], {}}]}, GraphicsGroupBox[
    {GrayLevel[0.8], EdgeForm[{GrayLevel[0.6], Thickness[0.01]}], 
     FilledCurveBox[{{Line[CompressedData["
1:eJxd1V1I02EUx/EtrC56o4xCsWykhiCRWWImncywF1wTixokKYbIkmgrbxzJ
oiKvrLQWxAoiltnLCiU1QzxgTaMpvkS1icl05TZ1+yNlGMXK6Py66IHDuTs3
H/g+mpJTBaXzVCpV6dz82X+flx/m6QPmlkn+Oj8/zl8xzBtHbM2PHkxxpeZO
ytJeNye0hZP8lhBfTY1vTFr8jmPXJbsOZYQ5ZG4y/9g6wPnRdm3mYJhn9Lse
e2694XMq8+afeQpX1KzK8TR18tOs22fWNih8MubCzmB5MzfUJUZ2+xR+viKi
Dpus3K49vGxLROGpL9VdbcZ7FOeMGPtnFS4/kmUr7nxBXWWz1+PfKrw6Umt3
6J1kPF9/ZU/N3L3WWuVmZi/FHqiavrxB4SWF7gyLZZCmE1sthXfDXKb2adS6
92SctPSkR0LcH7tA833hEFktv5683B5ia1qvwV7/kZyOHlv30SmOrvxW7Ljm
pVd9ppGEokn2DNTF7MsZo2NNrmdDuRO8PrBXZ/L6qLo1WRu1MsjuRWM3Lho+
U2dHWsOHbj+fWL6mb2Z4nAyjLUX24+N8NjvQqN0WoHST9eBg4BOnlFzSpVQF
Kff1ph1evY87XPGn99+foKjs9tSS5lE4EFzEgeAiDgQXcSC4iAPBRRwILuJA
cBEHgos4EFzEgeAiDgQXcSC4iAPBRRwILuJAcBEHgos4EFzEgeAiDgQXcSC4
iAPBRRwILuJAcBEHgos4EFzEgeAiDgQXcSC4iAPBRRwILuJAcBEHgos4EFzE
geAiDv9cxIHhIg4MF3FguIgDw0UcGC7iwHARB4aLODBcxIHhIg4MF3FguIgD
w0UcGC7iwHARB4YLOgUXdAou6BRc0Cm4oFNwQafggk7BBZ2CCzoFF3QKLugU
XNApuKBTcEGn4IJOwQWdggs6BRd0Ci7oFFzQKbigU3BBp+CCTsEFnYILOgWX
//+P34UFays=
         "]]}, {Line[CompressedData["
1:eJyF1V1I02EUx/EpoxfEAkOSwsqQhGFemCAGdgTT6EbQihQkwbfI3tAi8UIv
mk5XYpmVNyVpUmkvWIlMnR0MUckwNE1xS12r2drc/z+ziErK8Px24U0XD4dz
ca4+8H3Css+m5flrNJrjy+/f3F7hSjVts/Hi3a6lzffnefXefaOsdrJomm8/
sPWlPPSw9edWKjVOcWLTswTjVYX1xvjMtIp3PGJrcys6lc8fGX6SXzDKkVEN
9UmlKq/VR3/lktc8djGgaOGFynme8Pp5vz4eu/I0rF1RuSu5Wh10dfCgY0du
xkYvz8RmVcct3OSgMkPCy1Avm3JyehT1Hu30/oiY3eJla/CpY3ONZsq07NZ2
rPFyfnfl45iJfkoprIpJt6mcEd2zKzv5DRWnlpe4W1UeSHx/6NertxSeXjvc
kqPy5RDH4f7pCYr/Y4ieDFD5liey8tyUhXpHh3vuHFB4dp/d9Ltzhup0xdbv
Rz2s1yVtMpttFHS93958cJ4bNhhiay7ZKWR9ldId6uZG/5o9Tfs/kfZbs+bk
+Bfu3euXG+d00LhOO7RU6OShqEBL64XPtC64IN+yOMd6vSkwz+Ukbfsje3mW
g9syrp1QklzL9y0Ddc8/MoVHjLjK3VR5xnjatPABDgQXcSC4iAPBRRwILuJA
cBEH8rmsOBBcxIHgIg4EF3EguIgDwUUcCC7iQHARB4KLOBBcxIHgIg4EF3Eg
uIgDwUUcCC7iQHARB4KLOJDPZcWB4CIOBBdxILiIA8FFHAgu4kBwEQeCizgQ
XMSB4CIOBBdxILiIg89FHBgu4sBwEQeGizgwXMSB4SIODBdxYLiIA8NFHBgu
4sBwEQeGizgwXMSB4SIODBdxYLis6hYc0C04oFtwQLfggG7BgX0u0im4oFNw
Qafggk7BBZ2CCzoFF3QKLugUXNApuKBTcEGn4IJOwQWdggs6BRd0Ci7oFFzQ
KZ+LdAou6BRc/vef/AWs0Kog
         "]]}}]}], {
    {RGBColor[1, 0, 0], 
     PolygonBox[{{-0.866025403784439, -0.49999999999999933`}, \
{-0.8191520442889922, -0.5735764363510454}, {-0.7660444431189783, \
-0.6427876096865389}, {-0.7071067811865479, -0.7071067811865471}, \
{-0.6427876096865395, -0.7660444431189779}, {-0.5735764363510464, \
-0.8191520442889916}, {-0.5000000000000004, -0.8660254037844385}, \
{-0.4500000000000004, -0.7794228634059946}, {-0.5162187927159417, \
-0.7372368398600925}, {-0.5785088487178855, -0.6894399988070802}, \
{-0.6363961030678932, -0.6363961030678924}, {-0.6894399988070805, \
-0.578508848717885}, {-0.737236839860093, -0.5162187927159408}, \
{-0.7794228634059952, -0.4499999999999994}}]}, 
    {RGBColor[1, 0.85, 0.85], 
     PolygonBox[{{-1., 
      5.66553889764798*^-16}, {-0.9961946980917455, -0.08715574274765751}, \
{-0.9848077530122082, -0.17364817766692958`}, {-0.9659258262890684, \
-0.25881904510252035`}, {-0.9396926207859085, -0.3420201433256682}, \
{-0.9063077870366503, -0.4226182617406989}, {-0.866025403784439, \
-0.49999999999999933`}, {-0.7794228634059952, -0.4499999999999994}, \
{-0.8156770083329853, -0.380356435566629}, {-0.8457233587073177, \
-0.3078181289931014}, {-0.8693332436601616, -0.23293714059226833`}, \
{-0.8863269777109875, -0.15628335990023662`}, {-0.896575228282571, \
-0.07844016847289176}, {-0.9, 5.098985007883182*^-16}}]}, 
    {RGBColor[1, 1, 0], 
     PolygonBox[{{-0.8660254037844385, 
      0.5000000000000003}, {-0.9063077870366497, 
      0.4226182617406999}, {-0.9396926207859082, 
      0.3420201433256693}, {-0.9659258262890681, 
      0.25881904510252146`}, {-0.984807753012208, 
      0.1736481776669307}, {-0.9961946980917455, 0.08715574274765864}, {-1., 
      5.66553889764798*^-16}, {-0.9, 
      5.098985007883182*^-16}, {-0.896575228282571, 
      0.07844016847289277}, {-0.8863269777109872, 
      0.15628335990023762`}, {-0.8693332436601613, 
      0.23293714059226933`}, {-0.8457233587073174, 
      0.3078181289931024}, {-0.8156770083329847, 
      0.3803564355666299}, {-0.7794228634059946, 0.4500000000000003}}]}, 
    {RGBColor[0.88, 1, 0.88], 
     PolygonBox[{{-0.4999999999999994, 
      0.866025403784439}, {-0.5735764363510455, 
      0.8191520442889922}, {-0.642787609686539, 
      0.7660444431189783}, {-0.7071067811865471, 
      0.7071067811865479}, {-0.7660444431189776, 
      0.6427876096865398}, {-0.8191520442889916, 
      0.5735764363510464}, {-0.8660254037844385, 
      0.5000000000000003}, {-0.7794228634059946, 
      0.4500000000000003}, {-0.7372368398600925, 
      0.5162187927159417}, {-0.6894399988070798, 
      0.5785088487178859}, {-0.6363961030678924, 
      0.6363961030678932}, {-0.5785088487178851, 
      0.6894399988070805}, {-0.516218792715941, 
      0.737236839860093}, {-0.44999999999999946`, 0.7794228634059952}}]}, 
    {RGBColor[0, 1, 0], 
     PolygonBox[{{5.053215498074303*^-16, 1.}, {-0.08715574274765757, 
      0.9961946980917455}, {-0.17364817766692986`, 
      0.9848077530122081}, {-0.2588190451025202, 
      0.9659258262890684}, {-0.3420201433256681, 
      0.9396926207859086}, {-0.42261826174069894`, 
      0.9063077870366502}, {-0.4999999999999994, 
      0.866025403784439}, {-0.44999999999999946`, 
      0.7794228634059952}, {-0.38035643556662907`, 
      0.8156770083329852}, {-0.3078181289931013, 
      0.8457233587073179}, {-0.23293714059226817`, 
      0.8693332436601616}, {-0.15628335990023687`, 
      0.8863269777109873}, {-0.07844016847289181, 0.896575228282571}, {
      4.547893948266873*^-16, 0.9}}]}, 
    {RGBColor[0, 1, 0], 
     PolygonBox[{{0.5000000000000003, 0.8660254037844385}, {
      0.42261826174069983`, 0.9063077870366498}, {0.34202014332566905`, 
      0.9396926207859083}, {0.2588190451025212, 0.9659258262890682}, {
      0.17364817766693086`, 0.984807753012208}, {0.08715574274765857, 
      0.9961946980917455}, {5.053215498074303*^-16, 1.}, {
      4.547893948266873*^-16, 0.9}, {0.07844016847289272, 
      0.896575228282571}, {0.15628335990023778`, 0.8863269777109872}, {
      0.23293714059226908`, 0.8693332436601614}, {0.3078181289931021, 
      0.8457233587073175}, {0.38035643556662985`, 0.8156770083329848}, {
      0.4500000000000003, 0.7794228634059946}}]}, 
    {RGBColor[0.88, 1, 0.88], 
     PolygonBox[{{0.8660254037844389, 0.49999999999999944`}, {
      0.8191520442889921, 0.5735764363510456}, {0.7660444431189785, 
      0.6427876096865389}, {0.7071067811865478, 0.7071067811865472}, {
      0.6427876096865397, 0.7660444431189777}, {0.5735764363510465, 
      0.8191520442889916}, {0.5000000000000003, 0.8660254037844385}, {
      0.4500000000000003, 0.7794228634059946}, {0.5162187927159417, 
      0.7372368398600925}, {0.5785088487178857, 0.6894399988070801}, {
      0.6363961030678931, 0.6363961030678925}, {0.6894399988070805, 
      0.578508848717885}, {0.7372368398600928, 0.5162187927159412}, {
      0.7794228634059951, 0.4499999999999995}}]}, 
    {RGBColor[1, 1, 0], 
     PolygonBox[{{1., -8.881784197001252*^-16}, {0.9961946980917457, 
      0.08715574274765732}, {0.9848077530122082, 0.17364817766692955`}, {
      0.9659258262890685, 0.25881904510252}, {0.9396926207859086, 
      0.34202014332566805`}, {0.9063077870366503, 0.4226182617406988}, {
      0.8660254037844389, 0.49999999999999944`}, {0.7794228634059951, 
      0.4499999999999995}, {0.8156770083329853, 0.380356435566629}, {
      0.8457233587073179, 0.3078181289931013}, {0.8693332436601617, 
      0.23293714059226803`}, {0.8863269777109875, 0.15628335990023665`}, {
      0.896575228282571, 0.07844016847289166}, {
      0.9, -7.993605777301127*^-16}}]}, 
    {RGBColor[1, 0.85, 0.85], 
     PolygonBox[{{0.8660254037844385, -0.5000000000000002}, {
      0.9063077870366498, -0.4226182617406998}, {
      0.9396926207859082, -0.34202014332566916`}, {
      0.9659258262890681, -0.25881904510252135`}, {
      0.9848077530122079, -0.17364817766693103`}, {
      0.9961946980917454, -0.08715574274765896}, {
      1., -8.881784197001252*^-16}, {0.9, -7.993605777301127*^-16}, {
      0.8965752282825709, -0.07844016847289306}, {
      0.8863269777109871, -0.15628335990023792`}, {
      0.8693332436601613, -0.23293714059226922`}, {
      0.8457233587073174, -0.30781812899310224`}, {
      0.8156770083329848, -0.3803564355666298}, {
      0.7794228634059946, -0.45000000000000023`}}]}, 
    {RGBColor[1, 0, 0], 
     PolygonBox[{{0.4999999999999995, -0.8660254037844389}, {
      0.5735764363510456, -0.8191520442889921}, {
      0.6427876096865389, -0.7660444431189783}, {
      0.7071067811865472, -0.7071067811865478}, {
      0.7660444431189778, -0.6427876096865397}, {
      0.8191520442889916, -0.5735764363510464}, {
      0.8660254037844385, -0.5000000000000002}, {
      0.7794228634059946, -0.45000000000000023`}, {
      0.7372368398600926, -0.5162187927159416}, {
      0.6894399988070802, -0.5785088487178857}, {
      0.6363961030678925, -0.6363961030678931}, {
      0.5785088487178851, -0.6894399988070805}, {
      0.5162187927159412, -0.7372368398600928}, {
      0.44999999999999957`, -0.7794228634059951}}]}}, 
   {GrayLevel[0.5], Thickness[0.008], 
    {GrayLevel[0.5], Thickness[0.004], CapForm["Butt"], 
     StyleBox[{{
        {GrayLevel[0], 
         LineBox[{{{-0.5000000000000004, -0.8660254037844385}, 
            Scaled[{0.030000000000000072`, 
             0.05569219381653051}, {-0.5000000000000004, \
-0.8660254037844385}]}, {{-1., 1.2246467991473532`*^-16}, 
            Scaled[{0.06, 0.}, {-1., 
             1.2246467991473532`*^-16}]}, {{-0.4999999999999998, 
            0.8660254037844387}, 
            Scaled[{0.029999999999999992`, -0.055692193816530566`}, \
{-0.4999999999999998, 0.8660254037844387}]}, {{0.5000000000000003, 
            0.8660254037844385}, 
            Scaled[{-0.03000000000000002, -0.05569219381653053}, {
             0.5000000000000003, 0.8660254037844385}]}, {{1., 0.}, 
            Scaled[{-0.06, 0.}, {1., 0.}]}, {{
            0.5000000000000003, -0.8660254037844385}, 
            Scaled[{-0.030000000000000006`, 0.05569219381653054}, {
             0.5000000000000003, -0.8660254037844385}]}}]}, 
        {GrayLevel[0], 
         LineBox[{{{-0.7071067811865479, -0.7071067811865471}, 
            Scaled[{0.028284271247461915`, 
             0.03031499055704094}, {-0.7071067811865479, \
-0.7071067811865471}]}, {{-0.8660254037844388, -0.4999999999999997}, 
            Scaled[{0.03464101615137756, 
             0.021435935394489788`}, {-0.8660254037844388, \
-0.4999999999999997}]}, {{-0.9659258262890684, -0.25881904510252035`}, 
            Scaled[{0.038637033051562734`, 
             0.011096056659362344`}, {-0.9659258262890684, \
-0.25881904510252035`}]}, {{-0.9659258262890682, 0.258819045102521}, 
            Scaled[{0.03863703305156273, -0.011096056659362374`}, \
{-0.9659258262890682, 0.258819045102521}]}, {{-0.8660254037844385, 
            0.5000000000000003}, 
            Scaled[{0.03464101615137754, -0.02143593539448983}, \
{-0.8660254037844385, 0.5000000000000003}]}, {{-0.7071067811865475, 
            0.7071067811865476}, 
            Scaled[{0.028284271247461898`, -0.030314990557040962`}, \
{-0.7071067811865475, 0.7071067811865476}]}, {{-0.2588190451025204, 
            0.9659258262890684}, 
            Scaled[{0.010352761804100816`, -0.041411047216403325`}, \
{-0.2588190451025204, 0.9659258262890684}]}, {{6.123233995736766*^-17, 1.}, 
            Scaled[{0., -0.04287187078897963}, {6.123233995736766*^-17, 
             1.}]}, {{0.25881904510252096`, 0.9659258262890682}, 
            Scaled[{-0.010352761804100838`, -0.04141104721640332}, {
             0.25881904510252096`, 0.9659258262890682}]}, {{
            0.7071067811865476, 0.7071067811865476}, 
            Scaled[{-0.028284271247461905`, -0.030314990557040962`}, {
             0.7071067811865476, 0.7071067811865476}]}, {{0.8660254037844387, 
            0.49999999999999983`}, 
            Scaled[{-0.034641016151377546`, -0.02143593539448981}, {
             0.8660254037844387, 0.49999999999999983`}]}, {{
            0.9659258262890683, 0.25881904510252046`}, 
            Scaled[{-0.038637033051562734`, -0.01109605665936235}, {
             0.9659258262890683, 0.25881904510252046`}]}, {{
            0.9659258262890683, -0.25881904510252046`}, 
            Scaled[{-0.038637033051562734`, 0.011096056659362358`}, {
             0.9659258262890683, -0.25881904510252046`}]}, {{
            0.8660254037844385, -0.5000000000000002}, 
            Scaled[{-0.03464101615137754, 0.021435935394489836`}, {
             0.8660254037844385, -0.5000000000000002}]}, {{
            0.7071067811865476, -0.7071067811865476}, 
            Scaled[{-0.028284271247461894`, 0.030314990557040965`}, {
             0.7071067811865476, -0.7071067811865476}]}}]}}, 
       {GrayLevel[0], 
        StyleBox[{{
           {GrayLevel[0], 
            InsetBox["0", Offset[{1.5000000000000036, 2.5980762113533142}, 
             Scaled[{0.030000000000000072, 0.05569219381653051}, \
{-0.5000000000000004, -0.8660254037844385}]], {-0.5773502691896275, -1.}, 
             Automatic, {1, 0}], 
            InsetBox["20", Offset[{3., 0.}, 
             Scaled[{0.06, 0.}, {-1., 1.2246467991473532*^-16}]], {-1, 0.}, 
             Automatic, {1, 0}], 
            InsetBox["40", Offset[{1.4999999999999996, -2.598076211353317}, 
             Scaled[{0.029999999999999992, -0.055692193816530566}, \
{-0.4999999999999998, 0.8660254037844387}]], {-0.5773502691896255, 1.}, 
             Automatic, {1, 0}], 
            InsetBox["60", Offset[{-1.5000000000000009, -2.5980762113533156}, 
             Scaled[{-0.03000000000000002, -0.05569219381653053}, \
{0.5000000000000003, 0.8660254037844385}]], {0.5773502691896262, 1.}, 
             Automatic, {1, 0}], 
            InsetBox["80", Offset[{-3., 0.}, Scaled[{-0.06, 0.}, {1., 0.}]], {1, 0.},
              Automatic, {1, 0}], 
            InsetBox["100", Offset[{-1.5000000000000004, 2.598076211353316}, 
             Scaled[{-0.030000000000000006, 0.05569219381653054}, \
{0.5000000000000003, -0.8660254037844385}]], {0.577350269189626, -1.}, 
             Automatic, {1, 0}]}, 
           {GrayLevel[
            0], {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}}, \
{}},
         StripOnInput->False,
         FontFamily->"Helvetica",
         FontSize->Scaled[0.07]]}},
      StripOnInput->False,
      Antialiasing->True]}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}}, 
   InsetBox[
    FrameBox[
     StyleBox[
      StyleBox[
       TagBox[GridBox[{
          {"87"}
         },
         DefaultBaseStyle->"Column",
         GridBoxAlignment->{"Columns" -> {{Left}}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
        "Column"],
       StripOnInput->False,
       LineColor->GrayLevel[1],
       FrontFaceColor->GrayLevel[1],
       BackFaceColor->GrayLevel[1],
       GraphicsColor->GrayLevel[1],
       FontColor->GrayLevel[1]],
      StripOnInput->False,
      LineColor->GrayLevel[0.25],
      FrontFaceColor->GrayLevel[0.25],
      BackFaceColor->GrayLevel[0.25],
      GraphicsColor->GrayLevel[0.25],
      FontFamily->"Helvetica",
      FontSize->Scaled[0.07],
      FontColor->GrayLevel[0.25]],
     Background->GrayLevel[0.6],
     FrameMargins->1,
     FrameStyle->None,
     RoundingRadius->Scaled[0.01],
     StripOnInput->False], {0., -0.4}, Center, Automatic], 
   GeometricTransformationBox[GeometricTransformationBox[
     TagBox[
      TooltipBox[{
        {RGBColor[0.73, 0.24506099999999992`, 0.1971], 
         PolygonBox[{{0., -0.054700000000000006`}, {1, -0.025}, {1, 0.025}, {
           0., 0.054700000000000006`}}]}, 
        {RGBColor[0.73, 0.24506099999999992`, 0.1971], DiskBox[{0, 0}, 0.07]}, 
        {GrayLevel[1], DiskBox[{0, 0}, 0.035]}},
       "87"],
      Annotation[#, 87, "Tooltip"]& ], {{{0.8402223838474815, 
      0.3225311545907705}, {-0.3225311545907705, 0.8402223838474815}}, {0., 
      0.}}], {{{1, 0}, {0, 1}}, Center}], {}},
  AlignmentPoint->Center,
  AspectRatio->Automatic,
  Axes->False,
  AxesLabel->None,
  AxesOrigin->Automatic,
  AxesStyle->{},
  Background->None,
  BaseStyle->{},
  BaselinePosition->Automatic,
  ColorOutput->Automatic,
  ContentSelectable->Automatic,
  CoordinatesToolOptions:>Automatic,
  DisplayFunction->Identity,
  Epilog->{},
  FormatType->TraditionalForm,
  Frame->False,
  FrameLabel->None,
  FrameStyle->{},
  FrameTicks->Automatic,
  FrameTicksStyle->{},
  GridLines->None,
  GridLinesStyle->{},
  ImageMargins->0.,
  ImagePadding->All,
  ImageSize->125,
  ImageSizeRaw->Automatic,
  LabelStyle->Directive[
    GrayLevel[0.25], FontSize -> Scaled[0.07], FontFamily -> "Helvetica"],
  Method->Automatic,
  PlotLabel->None,
  PlotRange->All,
  PlotRangeClipping->False,
  PlotRangePadding->Automatic,
  PlotRegion->Automatic,
  PreserveImageOptions->Automatic,
  Prolog->{},
  RotateLabel->True,
  Ticks->Automatic,
  TicksStyle->GrayLevel[0]]], "Output",
 CellChangeTimes->{3.7741883231356535`*^9},
 CellLabel->
  "Out[695]=",ExpressionUUID->"6964a171-aa2d-4c94-92a9-8a52fd8f9467"]
}, Open  ]],

Cell["Make the date list step plot", "Text",
 CellChangeTimes->{{3.774021898744833*^9, 
  3.7740219179463215`*^9}},ExpressionUUID->"ffc6aa8c-d493-498a-9106-\
e738ec2f27ec"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"ClearAll", "[", 
  RowBox[{"dlsp", ",", "data"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"dlsp", "[", "data_", "]"}], ":=", 
    RowBox[{"DateListStepPlot", "[", 
     RowBox[{"data", ",", "\[IndentingNewLine]", 
      RowBox[{"ImageSize", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"200", ",", "130"}], "}"}]}], ",", "\[IndentingNewLine]", 
      RowBox[{"PlotRange", "\[Rule]", "All"}], ",", "\[IndentingNewLine]", 
      RowBox[{"PlotLabel", "\[Rule]", "\"\<plot label\>\""}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"Frame", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"Automatic", ",", "None"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"Automatic", ",", "None"}], "}"}]}], "}"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"FrameLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\"\<Time\>\"", ",", "\"\<Reading\>\""}], "}"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"GridLines", "\[Rule]", "Automatic"}], ",", 
      RowBox[{"GridLinesStyle", "\[Rule]", "Dotted"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"dlsp", "[", 
  RowBox[{"readingsDS", "[", 
   RowBox[{"All", ",", 
    RowBox[{"{", 
     RowBox[{"\"\<Timestamp\>\"", ",", "\"\<reading\>\""}], "}"}]}], "]"}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.7740219475003047`*^9, 3.7740219579757214`*^9}, {
   3.7740219979307914`*^9, 3.7740220862445965`*^9}, {3.7740221196205587`*^9, 
   3.7740221331687927`*^9}, {3.774022182290905*^9, 3.7740221839808917`*^9}, {
   3.7740222469475965`*^9, 3.774022275751403*^9}, {3.7740223613293695`*^9, 
   3.774022390906128*^9}, {3.7740230810842667`*^9, 3.774023084879268*^9}, {
   3.7740251212268376`*^9, 3.774025157601924*^9}, {3.7740252416198735`*^9, 
   3.7740252450668283`*^9}, 3.774025336939823*^9, {3.7740256900477734`*^9, 
   3.77402570281981*^9}, {3.774025756688384*^9, 3.7740258236073604`*^9}, {
   3.7740260148908005`*^9, 3.7740260152117867`*^9}, {3.7740271693575087`*^9, 
   3.774027169793498*^9}, 3.774188351645193*^9},
 CellLabel->
  "In[696]:=",ExpressionUUID->"fa39ca60-7f2d-4a0d-89ea-28e2b954f882"],

Cell[BoxData[
 GraphicsBox[{{{}, {{{}, {}, 
      {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       0.009166666666666668], AbsoluteThickness[1.6], LineBox[CompressedData["
1:eJx91ntIU2EUAPDrEBMVM5G01NGUVDJfpPkI3dnUq1tLy0fYtDVN94ekluEr
KhcWZVBCFgk9zMdaSNiwEBtkZhGKTijnq1EyJkqlsYiiNKRv/tU/51y4XH7w
cc93z/nu9x1RSVVOmYDjuHF2O552fRBfIFyWcBtXAqybZ3EP5cPdN9HHUHO7
wXfuF+Fs0GhUxai1maAs3VyJez8YZQvXUXNJ8GB7lRG3AsY6GpyUmLXpbD5C
Z9ScHxu/xQV3PmSVXNyEOwwE4U/ccfMw0+XhT7moZSKAsvVMtBC3DGpa/cIo
r5tvRlDm+5ciKZ9K3huDWitj9SjcQ3mqXhaLmpPDwzsecai1cuhMn5ZSFoTH
85TnJmwyyt5NrgrKffeijlNuq7xRRllZajtNued7SA3l1z/TalHDQbj01akO
9VAOhMb8rUfN5cHkgV3dqDfyfV9H2eXCTj1qFi9nQP4INRcL74LEL1Gz91Us
NQ1RdptJHcZ9iNWrcRS3HKRq0xhlQ/XILOVWP8UHysrSNQtqLg2ejVR/wp3F
6r08jzsPbDp3O2oWr/+HyK2QsGfEeXfKLcMfPSjPZzd74uZhsP29N2ouke1H
y764I1k++EDULJ5d/2UHZZVRF0w5NEYdgprNx65/G4qaree6QXEeanbenhO/
yMftCpnWYcISth/OFlCO6Ht1hLJUrSvC7QPiuB7CMnZeVlegZvvNgNBkQM3y
WdNqfkrZP2rlOWWbzpJahJqHQOUCbs4Lgi0rabhd2XmwhlsrAcufrbFHUTv+
l/I4ynz/ZBJqFk+qthJOYd8zvg+3K4zWThNOYf3CiWTcPtAsOUlYBg2fe6+o
UCew9e57lbJGs3oLNVsvIkNQG+XeDBNuVs/GcjNu1u/FN1vj6zCzfIkMi4Sl
bLwpEbcPLK1N4dYq2HyLkyjPTQQvouYCYJtzCOFc+HY2Y6ADNQe/c9tXcSc4
+u3VTtRe4FXgJOgiHH5ZgFvr6GdVj1Gzel67bTzc/Z//ARzgftY=
        "]]}}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.009166666666666668],
       AbsoluteThickness[1.6]}, {
      {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       0.009166666666666668], AbsoluteThickness[1.6]}, {}}, {
      {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       0.009166666666666668], AbsoluteThickness[1.6]}, {}}}, {{}, {}}}, {{}, {
     {Opacity[0], PointBox[CompressedData["
1:eJxV1GtIk1EYB/DXISYqZhJpeaEpqWTeSPOG7WzqdLa0vIDNuabpPkhqGTqV
yoVF2YeELBC6mNpaSNiwEBMyswjFNijnZY2SMVEqjUUUpSEd+/Cev4OX8eN5
nvM+z9nZEZbX5lcKOI7T0Gfj22kIkRYHL4u5/58ksm6ZYx4tIrdfxx5n8X3E
z/oLnEc0GlUZb102UVRsrWE+RIZlC9dYfgq5t6t2mFlOJrubXBR8fiZdL9iV
N+dP49vcmItIbvnFLcwRRBD52JNZSmZ7vQLQynZzINreHBvMLCP1Hf4R6HXL
jSi0dHApGn067UAc61dG5ynZj55ulMWz/Bzy4JZXAovnkJ7MGQlaEJkoRVvN
Dhnat9Vdjh64E3MC3VlzvRKtqHCcQfd9D6tHv/qZ0cCbHCGXvrpoeY/mk/C4
v42s/0IydXjv/c3939Wj3S7sMWB9/lDOQ1YfT96FiF5gfvVS6yjaYzZ9jPko
na9lAuMStWkSbawbn0N3+Ms/bJ5/zcben0Gejtd9Ys6l8y/P43wOvacT6wd/
CD1KwN5R5z3R7WMfvdDzeW3ezFIy0vXelzeXTM/Tsh9zNO1HGoT1TsOX3WjV
sD4UHR6nDsP1nIY34SWw39oRUSGLJ5FzoudFzO4k2z4GFtPzOFeMjhp4eQwt
UeuVzNuJKKEPLKP/z7pq3vT8DAWbjNhvfYflCTogZuUZ2qG3pSthv4IUC8yc
Dwm1rWQooX+reY1ZJya2PzviSzf9PlUJaOngVEop1EvUdvBB+r63qRifaJhJ
xbi9+WRaKczfJj4FlpGmz/1XVLDf2hG/q2iNZvWmCvZHaAzpRPdnmZjpvC1V
FmZ6/yW22RO10J/QuAiW0LgpWQv9La1NM+vkdP2yFLTVHLrI8gPJTtcwcAH5
djZrqJs3R34XdK12wzz0/l7tgX59il0EveDIywJm3cZ9q3rUC/P+A/H5v/o=

       "]]}, {
      {Opacity[0]}, {}}, {
      {Opacity[0]}, {}}}, {{}, {{}, {}}}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{3.774005809083*^9, 0},
  DisplayFunction->Identity,
  Frame->{{Automatic, None}, {Automatic, None}},
  FrameLabel->{{
     FormBox["\"Reading\"", TraditionalForm], None}, {
     FormBox["\"Time\"", TraditionalForm], None}},
  FrameTicks->FrontEndValueCache[{{Automatic, Automatic}, {
      Charting`DateTicksFunction[
      Automatic, Ticks -> Automatic, DateTicksFormat -> {Automatic}], 
      Charting`ScaledFrameTicks[
       Charting`DateTicksFunction[
       Automatic, Ticks -> Automatic, "TickLabels" -> None, 
        DateTicksFormat -> {Automatic}][
        SlotSequence[1]], {Identity, Identity}]& }}, {{
     Automatic, Automatic}, {{{3.7739952*^9, 
        FormBox[
         TagBox[
          GridBox[{{
             StyleBox["\"12:00\"", 
              Directive[], {}, StripOnInput -> False]}}, 
           GridBoxAlignment -> {"Columns" -> {{Center}}}, DefaultBaseStyle -> 
           "Column", 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"], 
         TraditionalForm], {0.013888888888888888`, 0.}, 
        Directive[]}, {3.7740384*^9, 
        FormBox[
         TagBox[
          GridBox[{{
             StyleBox["\"00:00\"", 
              Directive[], {}, StripOnInput -> False]}}, 
           GridBoxAlignment -> {"Columns" -> {{Center}}}, DefaultBaseStyle -> 
           "Column", 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"], 
         TraditionalForm], {0.013888888888888888`, 0.}, 
        Directive[]}, {3.7740816*^9, 
        FormBox[
         TagBox[
          GridBox[{{
             StyleBox["\"12:00\"", 
              Directive[], {}, StripOnInput -> False]}}, 
           GridBoxAlignment -> {"Columns" -> {{Center}}}, DefaultBaseStyle -> 
           "Column", 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"], 
         TraditionalForm], {0.013888888888888888`, 0.}, 
        Directive[]}, {3.7741248*^9, 
        FormBox[
         TagBox[
          GridBox[{{
             StyleBox["\"00:00\"", 
              Directive[], {}, StripOnInput -> False]}}, 
           GridBoxAlignment -> {"Columns" -> {{Center}}}, DefaultBaseStyle -> 
           "Column", 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"], 
         TraditionalForm], {0.013888888888888888`, 0.}, 
        Directive[]}, {3.774168*^9, 
        FormBox[
         TagBox[
          GridBox[{{
             StyleBox["\"12:00\"", 
              Directive[], {}, StripOnInput -> False]}}, 
           GridBoxAlignment -> {"Columns" -> {{Center}}}, DefaultBaseStyle -> 
           "Column", 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"], 
         TraditionalForm], {0.013888888888888888`, 0.}, 
        Directive[]}}, {{3.7739952*^9, 
        FormBox[
         TagBox[
          GridBox[{{
             StyleBox[
              TemplateBox[{0., 0.}, "Spacer2"], 
              Directive[], {}, StripOnInput -> False]}}, 
           GridBoxAlignment -> {"Columns" -> {{Center}}}, DefaultBaseStyle -> 
           "Column", 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"], 
         TraditionalForm], {0.013888888888888888`, 0.}, 
        Directive[]}, {3.7740384*^9, 
        FormBox[
         TagBox[
          GridBox[{{
             StyleBox[
              TemplateBox[{0., 0.}, "Spacer2"], 
              Directive[], {}, StripOnInput -> False]}}, 
           GridBoxAlignment -> {"Columns" -> {{Center}}}, DefaultBaseStyle -> 
           "Column", 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"], 
         TraditionalForm], {0.013888888888888888`, 0.}, 
        Directive[]}, {3.7740816*^9, 
        FormBox[
         TagBox[
          GridBox[{{
             StyleBox[
              TemplateBox[{0., 0.}, "Spacer2"], 
              Directive[], {}, StripOnInput -> False]}}, 
           GridBoxAlignment -> {"Columns" -> {{Center}}}, DefaultBaseStyle -> 
           "Column", 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"], 
         TraditionalForm], {0.013888888888888888`, 0.}, 
        Directive[]}, {3.7741248*^9, 
        FormBox[
         TagBox[
          GridBox[{{
             StyleBox[
              TemplateBox[{0., 0.}, "Spacer2"], 
              Directive[], {}, StripOnInput -> False]}}, 
           GridBoxAlignment -> {"Columns" -> {{Center}}}, DefaultBaseStyle -> 
           "Column", 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"], 
         TraditionalForm], {0.013888888888888888`, 0.}, 
        Directive[]}, {3.774168*^9, 
        FormBox[
         TagBox[
          GridBox[{{
             StyleBox[
              TemplateBox[{0., 0.}, "Spacer2"], 
              Directive[], {}, StripOnInput -> False]}}, 
           GridBoxAlignment -> {"Columns" -> {{Center}}}, DefaultBaseStyle -> 
           "Column", 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"], 
         TraditionalForm], {0.013888888888888888`, 0.}, 
        Directive[]}}}}],
  GridLines->FrontEndValueCache[{Charting`ScaledTickValues[
      ((Transpose[{#, 
        Table[
         Dashing[{0, Small}], {
          Length[#]}]}]& )[
       Part[
        Select[
         Charting`DateTicksFunction[
         Automatic, Ticks -> Automatic, DateTicksFormat -> {Automatic}][
          SlotSequence[1]], And[
          FreeQ[#, 
           Alternatives["", 
            Spacer[{0, 0}]]], Head[#] === List, Length[#] > 0]& ], All, 1]]& )[
       SlotSequence[1]], {Identity, Identity}]& , Automatic}, {{{3.7739952*^9, 
       Directive[
        Dashing[{0., Small}]]}, {3.7740384*^9, 
       Directive[
        Dashing[{0., Small}]]}, {3.7740816*^9, 
       Directive[
        Dashing[{0., Small}]]}, {3.7741248*^9, 
       Directive[
        Dashing[{0., Small}]]}, {3.774168*^9, 
       Directive[
        Dashing[{0., Small}]]}}, Automatic}],
  GridLinesStyle->Dashing[{0, Small}],
  ImageSize->{200, 130},
  Method->{
   "NoShowPlotTheme" -> Automatic, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotLabel->FormBox["\"plot label\"", TraditionalForm],
  PlotRange->{{3.774005809083*^9, 3.774161589831*^9}, {0, 87.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.08090169943749476]}},
  Ticks->{{}, Automatic}]], "Output",
 CellChangeTimes->{3.774188354260192*^9},
 CellLabel->
  "Out[698]=",ExpressionUUID->"16c70d5d-0237-4df2-8926-0e811a15c0db"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"ClearAll", "[", 
  RowBox[{"outerRF", ",", "items"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"outerRF", "[", 
   RowBox[{
   "bpW_", ",", "rsMult_", ",", "w_", ",", "h_", ",", "frmTF_", ",", 
    "items_List"}], "]"}], ":=", 
  RowBox[{"Rasterize", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Framed", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Grid", "[", "items", "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"Alignment", "\[Rule]", "Center"}], ",", "\[IndentingNewLine]", 
      RowBox[{"ImageSize", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"wPX", "[", "bpW", "]"}], ",", 
         RowBox[{"hPX", "[", 
          RowBox[{"bpW", ",", "w", ",", "h"}], "]"}]}], "}"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"FrameMargins", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "0"}], "}"}]}], "}"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"ContentPadding", "\[Rule]", "False"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"RoundingRadius", "\[Rule]", "0"}], ",", "\[IndentingNewLine]", 
      RowBox[{"FrameStyle", "\[Rule]", 
       RowBox[{"If", "[", 
        RowBox[{"frmTF", ",", "Red", ",", "White"}], "]"}]}]}], 
     "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
    RowBox[{"ImageSize", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"wPX", "[", "bpW", "]"}], ",", 
       RowBox[{"hPX", "[", 
        RowBox[{"bpW", ",", "w", ",", "h"}], "]"}]}], "}"}]}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"RasterSize", "\[Rule]", 
     RowBox[{"rsMult", "*", "bpW"}]}]}], "\[IndentingNewLine]", 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"items", "=", 
   RowBox[{"{", 
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"ag", "[", 
       RowBox[{"readingsDS", "[", 
        RowBox[{"First", ",", "\"\<reading\>\""}], "]"}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"grd", "[", 
       RowBox[{"readingsDS", ",", "5"}], "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"dlsp", "[", 
       RowBox[{"readingsDS", "[", 
        RowBox[{"All", ",", 
         RowBox[{"{", 
          RowBox[{"\"\<Timestamp\>\"", ",", "\"\<reading\>\""}], "}"}]}], 
        "]"}], "]"}]}], "\[IndentingNewLine]", "}"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"outerRF", "[", 
  RowBox[{
   RowBox[{"72", "*", "7.5"}], ",", "3", ",", "40", ",", "10", ",", "False", 
   ",", "items"}], "]"}]}], "Input",
 CellChangeTimes->{
  3.774022602356182*^9, {3.7740226448327217`*^9, 3.774022768034034*^9}, {
   3.7740228239335732`*^9, 3.774022918980071*^9}, {3.7740229564280615`*^9, 
   3.7740229636457973`*^9}, {3.774023026615224*^9, 3.7740230719823756`*^9}, {
   3.7740231303632317`*^9, 3.77402318501998*^9}, 3.7740232491212068`*^9, {
   3.77402329166335*^9, 3.774023319265185*^9}, {3.774024917808483*^9, 
   3.7740249792850885`*^9}, {3.774025441337478*^9, 3.774025451592514*^9}, 
   3.774025654892606*^9, {3.7740258560732813`*^9, 3.774025856470249*^9}},
 CellLabel->
  "In[699]:=",ExpressionUUID->"b5ed8e83-3a83-473b-b68a-7e6014e1f42d"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
iV5codd0h4uv5xobFzYPFjnlJZV4pfgujenSS61g7Hsd3JpThJhRhckejC8G
4zoiEwmWTBDJysCUNLCsRV85bomsdyD0V1YqqPtKeWvOlmutGWl9WwLGV/Lc
7is96z6L+9LOvmc7n2kuLihQeeY5TelX8VgwuC/Xa83dohbJKW06n58pcllP
vXnMUgOWItByuC8vT24Pz63+tLzUyFZHNuC+WgjcFwAAgNZSlfgi4+XXXg7+
b0dX68W1Ny5tBoletNAr6W3cm+vuRY2N6cpL77tMssvuuDa8jlQnprVhkgoT
6sG4vkizBIuD8YUysCQNLIMBey24qlmLvtjIMQUk9Jc7pbqv6N1TeaXNNMFi
1pd3S0+fDtfYMRdhFaL2OhVzX6lHJL6qaxY2vMuLlsxDpUofuy/nCftyuy9j
PR5bwDa5Z+abLcM4ZeqCtOus7O7Lz5Pbw3MbTAHwHBuDwYSYjS33YgPuq4XA
fQEAAGgn+cQX63MsIr5cOh8V6yW2N7JCr+7e3Mb+/MYBLfTilJca4WX3XSmm
S6eqDqNxIIzNLEP47T4/0pyYoTDM4MEsEizIBAuC8bkyMJYGpm2ELKPoy2P/
Y9UPVn3phftS3z0Lh8yfOjr4wkv0lVNalfjz5wb5tqlwyO/XblIr/UWbopMk
mfvglGWsBSeS2lLrxAxnW1QNHuKJ4L5cr7XSc6e/cOJ18ei+DI+P3C1ovlsc
7pnM7svTk1v1uW36gPtqIXBfAAAAWkhu8eXFetlLv8zWa2c6SvS6N7u+Swu9
ot5GLr5e29Vo6Gc0+i695squtgoOxYkZVJiuJExKCeMlmJgJ9mhp5yE5gWIZ
GJcG5m7AXguuZ+6iL4/6i9zeVT9hdaQ37svNEbm/YHLLSC+q4oZ0v3VsZ3Ny
X4oQ0C5W3H1Z28Hk/dd0eBkECNyXaZTrvrgzz98wutY87uK6Xa8ij4+cAG9f
s2f35enJrfrcNn7AfbUQ1X1t37t/9PUL/CCfVLJvAAAAQBnkTrb3KL60pV+/
t/nK72+9IlkvFurFtTcmiV6s0Evb2Ggp8bL6rmpMV3YbplNhggfTFIOZJRgr
A4vTwPhGSBcD9lpwMX3dG1n7H7+nUPVzVjt65L6ccrGcXzD512Rbx5/+HVbZ
E+1iGXcjxGBIfLgvS0eYYgB0S2rONtyXcaim0Wvel8HPpGW1CTaphMfH/FiF
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
ol/7jee//LVvnLtyizrD6c7WT0Z+RfUXq/5Si+54/WVxX07xX1n1VzDzY5fc
lr5Kv9oW/IU3HeAL3EsANB08xS3Eo/uiAwasWcB9YdR2wH0BRo5uR//ia1XX
6rjrWXz9czir4J//5bf4dC+1w5F+olovvqjJbr2Y8tKUeCm+S9JcJn91Z+1e
7jGzpl+nJMR4FeYowbRlYPQU/dlf/JUUhs9i8L/3334kaUat/rK7r8L666HU
/DhJ9de8T/1lf6D6rPMRbzrAF7iXAGg6eIpbCNxXy4H7wqjtgPsCFKnoy0V8
FSz6isTXfHdcEF+7xoyvPVfxZZEkZMysbH8mjLi/s7JtT/di7kuyXrTWi3Nf
ukIvU5WXyXepsmvNrLlW790Oxl3HQZbPJMR4FSbXgxkkmFoGRk4LPUXXby+r
Yfg3Z4LJAn77C1+iMfjSyZcMWKr7svU/uumvRaa/Vqn+2iK35Vigv7zl3ruX
fjW98xFvOsAXuJcAaDp4ilsIn5BPP4H7ahWS+/pgdKHqPQLt5e/eugr3BSR6
3+04sbV0Y3ZtLBJfW0x8zW3sL2xaxdd+IfHVPTj89ne+PzAw8LO3T/KCRdIv
tNCLTlM4tbwpT+B49/HE4gb56uU//lNboZdWefH9jJLv0smudLW1kjYyajFJ
hXESbE8oBtNJsCWxDOzlr/4pXxonJeHzZXX0VLMWSF5/3VnZHgjneVQz8L3q
r+CSzQX6azfQX51Ef3mc9tFdf1X9V0Ih8KYDfIF7CYCmg6e4haDuq+XAfYH6
APcFVLJ2OxYVX5uLsfjaCMRXJ0187SriK3uf44bYQGeHCpm//n+/R/58+daM
mmZ/aew2+eqv/vN3U6wXp7z0JV6S79JWc4UKa3plx+MwaTFJhfEejBWDyR2R
ahlYbMDI+SFnSQrDl5LwaQjYX/9NeKrH56RZNbv7h1cmglkJvv2d72ungMyS
fu+gvzYD/TXD9NfSFrlFvegvl4rKvul8xJsO8AXuJQCaDp7iFgL31XLgvkB9
gPsCElm7HYvn24fia318YWNyaWuqs3N79e5Mr8SXo/uiTY4j758lf/7BP70l
ptkHFU2v/38/I1/904l3VOslZ3npqrxsvktrujrCmOps5xrielQbZvdgWgmm
LwOLDNjP3/uQnKVfnf1UnQ7yxp1l8tWX//gbtAZs5P1z5D//4c23aAskP374
4xNBnd7ISSkAP7/+2o/1155Wfx2Q4yKHSc7AVAn6yz34q7mdj3jTAb7AvQRA
08FT3ELgvloO3BeoD3BfQMK929FnzNfCxkQgvrYD8bW2O9fdX9g8sImvPT/i
i29y5Mfa3iFvvWiT4407nYFwmkI1zf5f//pvkq+uTC2mF3oZlJfku7SmS5ZX
y8YxubylDuPy4mpdVFgmCcbKwG7NrZGz9G9+Z1DMAQvO5N8e/yH56sf/8h6t
Abs5E57qz34unlkguTSf+WwQzjY+t6rO/+hBf4nVX8u8/lqj+mub3Kjkdh2b
W78xu4rORxfwpgN8gXsJgKaDp7iFwH21HLgvUB/gvgBPj7sdOfG1ObW8fXuF
iq+9hc2Dxe0Hyzv+xVfXSXwFviV2X3ym/eM/+4v/GOZ6feOjT8eouvnw0s1/
8zuD5MNX//1/sFuvbMpLlV0mtbVUbGjNmFmFpUowuwE7/qOfkHP1h1/9k6tT
i9SAjS90adUclYqsBfK1/yeI/Pry1755/so4vSIXrk689IUvkQ+Hjn5rXTf/
o92A5dRfO0EhX6i/9gL9tUL11ya5acmtS27gIvc/eXza0PmINx3gC9xLADQd
PMUtBO5LgvWVVL0jPaIk99W201gerTqTcF+A4R5xz+Z29CG+uhOLgfiaXglE
ymx3b37jYHHrwfLOwxTxlT3cXrVeJvG1GrsvKdrr0tidX/uN59WmyH/96785
OrHgbr2cfJdquhRzNbG0GY3FjCP+oZMNM3kwnQSTUvFVA/adv/+B5gT+xvPX
by/xIWCfjs1oT/VnPvu5W3Or2vkfi+ovQ/ZXoL+2HpCdDy4luXYrd8k5Iefw
VjDt4zpKv1LBmw7wBe4lAJoOnuIWAvcl0SrVcAj3VXtadSbhvgDDvejLS7cj
N7HjdjCx49q92fW9+Y39xa37VHwF7mv3cc/E19peLL7CPkfOfT3mmxzHF7p/
e/wNWusVdPB9fvD4j34yNrvKWy+pvVGf5cWsF6+8JN+lai6zzhpf3AjGQtpY
3Eh1YqoKkzwYL8H4SjA+E4wvA5MM2JlPrv+HY/8lOoG/M/hfht8gZ5VvgaT6
a3Jp87v/9R9/+wu/S5f87S986R/efGu6s72uBOCXpr9oHRrVX/fJzpPDIYdG
jtrjtI+OwXrN1V940wG+wL0EQNPBU9xC4L4kWqUaDuG+ak+rziTcF6D0vttR
ndiRiq+lnYdRzNduVPRVhvjSlnsx8RX3OT5Wo72iaRyVNPu41ktvvVyUl953
qY4rzW7dImO+K4/wc/sPtSrM6MHsEszUCCl1QcZzQdKzKoWAsRZIekXIpWGX
yb/+2tfor1WN/tqf9T3tI3vuHEu/Ghd6jzcd4AvcSwA0HTzFLQTuq+Ug7wvU
B7gvcFhZtyPNtzdM7BiLr7VeiS/RemnE19LOQzaNo8567dutF9/baFFequ/S
2C1VbcVjjI259WDwn4TD9MN0FcZ7MK0EU3ohXWrAEgO2HRqwnYda/aUasLL1
15qov+JpH++TPY+nfYxy78nNfH2mUO59f3c+4k0H+AL3EgBNB09xC4H7ajlw
X6A+wH2Bw952OyYxX0ubwcSOK9aJHffioq/KxJeu3EsKtBdzvWTrZSz0Miov
qXVRreOKvJY4broN7W9VLWbzYFoJZi4DsxgwPgbfUgBm1F97ZemvqPRrTwj+
6iTTPsa598tJ7n3ZnY/NLf3Cmw5jauTY4JEjrLb8yJHBkakp7vuRQTXhjufI
sSnjultB0XtJOcGDI+kLVXrWp44dGdCSYa+kdeiOuTKmRqQn4tiI7rjCJydZ
zLBUsnh8xNpjFbZp3GTajls3wcPuJ7dL5n7Fp+QDcT2OPDdVxqOwgX8RWgjc
V8uB+wL1Ae4LSEVflrfv4t2OE5uLmpiv7t48ndjRLL66JYgvKeDL3ueoL/dy
tl5yoVea8uJ915gouyKLNbvGjxtZxk11qFpM7JfUezBRgmnLwIwGrKszYA4F
YEr/o3/91TXrLz73Pgz+uktu4/Ew977HnY9V/7WRAbzpUEwvnNy7JNxXCt7d
l+aMuizTO4y3hPteKTdeXeSXUcFIO6hfznwCuOWVQ53Sn9Cs19i2CRFue24b
cbziWU9Kjk0UOQob+BehhcB9tRy4L1Af4L6AY9GXr27HKOZricV8Cfn2mokd
9+OiL8/iSwj4ylDuFVivAxZon896CcpL18zI+y7JdEUKa2aVH9czDunnGidm
8GApEszNgM2siXNBphWAkcuhKwArT389FfSXZtpHGvy1FwR/Rbn33oK/UuVz
4/QX3nQCjO/5/Nsk3FcK3t2XekodFukh5tvGea80q6iF/LI9EfzRZTsFQSmU
+Uht23Q+KfZNiAh3k9Mlcztc898UDhvJfFNlPwor+BehhcB9tRy4L1Af4L5a
Ti+LvowxX2K+fW/Fl6bPUY2115d7idFecq4XZ734RC99lZfSzMj7Lkl2JQrr
zgod13IN9nONE5NUGOfBNBKMTRyploHZDZilBZIrAIv0l77/UZ9+X1B/bRj1
V9z5uPOQ7OFcmHsfBn/teAn+Ig9XX5Z+4U3nUHjdjN4dp0aUjxx/2WL8uy/5
pGq8QIWnPdmb3LqKW8UgO/oayC9NJdGUrroo+ewI7U3klxKOQ+yL1B2o8Mvo
KRzM8nilb8J0jK43ktMVV8+T8aTk3USxo7CDfxFayCAH/QTuq1XAfYH6APfV
cjIVffmJ+VrcnFo2xHyZJnYsQXyZAr6EWHvdZI6acq/VezbrtaRYLwflxfsu
3nQJ/up2h46reUe0BlWImTyYVYIZy8AkA0b116quBTLIwE/vf3RJv/emv3TT
PnLBX/tJ8FfY+XhzDqVfMnjTOeTfH7n3Te2HIu69Va3Ao/s6MhhZDOFdPjrf
7Ev9y76a26aJjGKXLvh9zmgmtr+5L75wj/EeSVMyZXIi5vtUcEHRQbntc7Ix
YVeUTdkfHH2/MHdpRDmm3aZhTzQ4bMKwuGb9aSfASX3J5XFHAti9VWATrkeR
C/yL0EJQ99Vy4L5AfYD7ajPuRV/FI+6NMV9bD5Z3NDFf9okdvYovZT5Hsc9R
X+61tqtpctRZL217o9TYKCgvk+/Saq7p5SsFBvm53YapHswkwTIZMPcCMF3/
oy3+y6f+EqZ91OTeL27zwV+083GzB52PjQu9x5vOYYZXeAGYLwmf7uvYsUG9
QAjO9rFjJvfl3DCWuK9BpVbI0SEkqziSmDP3SPND5b6zyq+s7kt3JsjOObuv
AHkxeVP6fdJJneiXRwbJJ4YdTv045ZI4bEJdK3f1HdyXyxV3lnX5N+F8FLnA
vwgtBO6r5cB9gfoA99VmMhV9Pf/88+T/7Hn5tZdzF32NLzjEfDlM7FiO+HLq
c9Q0OUrRXlyHo2q9pEIvvfISfVeK6ZpaGi0wyM/tNox5MFYPZpJgUhmYxYCl
tECqCWBhAZgl/qsH+suce0+Dv3aD4C+u85Hc8DkeE/JwkUeMPGj25/FS0zof
8aYToLxgc91WprdJh7qwluHVfbE+MXb+Yy1w5NiIwX2lJLLpBY3L0josa3C8
IZQ7yOZNsrmvtGy6XDetW9mX1hqTx4lV32WSXO5NxQ6bUDY1OGI45dqPna44
v2m+8E6pPsy/CeejyAX+RWghcF8tB+4L1Ae4r9biKL7Yi/bhYfJ/IuXsdlza
nOpsJzFfm/eXtlNivjJN7OhFfEnzOZomc9Q0OUpp9jrrlRR6OSovUUyZFNbl
ycUcwyjEeBXmLMGkVHzJgKlJ+HILpL7/cd8Y/1WC/sqSe893Pt5POh872+Qm
J7c6ueGzWi8qvl57bYA8aH1W+oU3HYrDPI+G5ZHzFePRfZEXfaErkfv6iFDX
o9YWRZ+y1jI++zzxB8L1ZnU1wjyD7lMEOogK6wrY0pa7Kov7mhLcIDs24RbP
7L40mVXZKrjSvlbzvqSn0n2XrXsglL5leY6drrh1odRtuN9UuY8iDfyL0ELg
vloO3BeoD3BfrYV/fU4t+rp06XnySk4Hw919Sd2Oc9097zFfPsWXoc/RtcnR
bL2kQi/W2Ei1kra+K4fm+nRiQTtyCDG1HkwvwaQyMBcDRlsgDQVgxv7Hnusv
x+AvrvNxO2vnI7VeA7H4IoM8bv0Ueo83nRhpgjj7iySKvjT4dV+y/Iq/Db5K
i10XL5uuOdXUsOrcyDoVhIoFyyYFPdo0eIej5TZklhhZ3Jfx7syQuS4frU4g
+nVfqcVqXtyX1PSZwRq5XfGUg7Bvxfmmyn8UqeBfhJjOyHAWRkYJnU7Ve50L
uK+WA/cF6gPcVzvJ1O1Ii774QV7SKc5FX8Hcji7djqWLr9Rke4c+R02Toxjt
ZbJeUqGXVOVl6mTMJLjyjWweTJVgUhmYxYBZWiB1BWDG+C9d+n1P9Jel83GP
dj6Soxt363xUrRcb/VT6hTedENV72V5WUfSlxbP7El/wefWlnYbQqV9QaaBU
Fi9mNZ3TqRxiusTtZ3BfllOR6+hGTFMLeHZfaZ2oHtwX24DDucq6KVHRRltR
Zo3NcVupHdnej4ID/yLEjA4P5mNoeLRhCgzuq+XAfYH6APfVTnIXffGDYXq1
n9hcvDm7dmtenduRdjs+XmHiazd/zFfuii97wJfc5yhO5iiVe8nWKxRfKdZL
qfKy+y6ts7o0TsZ87uGuwlQJJlWCpRgwKQmfGjC1ACxn/Ff5+ksK/oo6H5/E
pV8PyV6RnSQ7TPY/6Xw0l37xTY6q+Oqz0i+86RyKL5eacgtl/jyoLy2+3Rcv
v8T0L437cmtzS7cFxdyX862RHsjlNA2idoed5JLj0U0ZxZd5QymzRNjPsJSR
NZXrYUsTi7re15zPsrwCw98bRbYj/baMo+DAvwgxud1XwPBo1bufBbgvCfYQ
V70jPaIk99W201gerTqTcF8tpGDRl9aAaTPw427HjcnlLTa3o63b0RzzlZ5v
70l80Zip9D7H1CZH0Xpd11kvtbHR7rvsIuuTW3OOI5MNM0kwlpOvGrDrigET
5oJc3LAUgBn7H0vQXxlz7+XgL7Xzcc5tzkdLuVdfln7hTSdz+QrUlwF/7kuu
bxk4cuQI/4XPui+3aRNlpo4NDtKpEN0MlfFQbbjIE02hmL+6L/48a+YadJ/n
Mf8+5KxUs59CM+bL5njFDYV7TjeG0yaKHUU6+BeBpzMylFRzjYx24p5G8ofR
keHku/Ar+bPmFH/BfUmwR6nqHekRcF81p1VnEu6rhXgp+kotAOO7Haeibsdd
c7djsZgvj+LLEPCl7XPUNznyafbaWi+r8nLxXe6aq6AQs3gwbRmYasD4JHxj
C2Ra/6MQ/9UT/VWw83GKm/PRkmlvH31T+oU3nczuC1lfBry7L/U9X5kQsXje
V173pVUcjr92U19OSWC6OiM/eV8O6WUpc0zqt2F0yiOh+DlimPgwi88px325
XfG0+Sqt7sthE3BfvSMxX6YuRlYblpguzUe1B+5Lgj1KVe9Ij4D7qjmtOpNw
X23Db9GXxYDdmF0b03c7sqIvz92OvsSXKeArmcyRS/caX9xg4kttcsxtvVxk
18djs16GiwrLbcC0LZBCAVicge/S/8jivzzoL8+dj4+Dzkd+zkcl9N7e5Fi8
9Kvqv1qM4E1HX91izi2H+jLh333JkkitbCo+z2M+9yWlv0exTo5qKSUVTHt0
wvZiNWiYutHHPI9uyWVKt7DDOXAwc9FjyO9yJp1ThvtyvuLC3xzRcsfccuBc
NgH31TOYxbI1MKoLMWPWHPkF99VykPcF6gPcV9vI5L5cir6kDHz6Xk+LvsYX
hG7H+c2DxZRuR1/ii7kvN/FlSba39jmmNDm6WS+T8nKXXRdvzuQY7irMXYI5
GjC1AMzS/1hQf9E7gdwSnvSXrfOR3N7zdM5HMfSenIHtw5czWa9+Kv3Cm85h
2uukqccMHY8SJbgvUX5pOhb1NUJ69B4kp/uyFm+5Cg7DcqlqL/X4Mi2c7djE
X5sXNJ4D8xm2bDWbZ3a/iIbHWf+x4xW33Yc6mZljE25HkQv8ixDjpL50izn+
sEZ4d19f+U/vH339wtWpNctG5zo7ZBk24FsqBO4L1Ae7+yI3J//3Bhs/fGes
qh0GReDFl+WFOp/4YmNl85Ubs2u3FroTS5tTne3bq3dnbN2OeeZ2tOXb7wlF
XznF16pRfKl9jlG5V9zkaMr1shR6WZRXJtN14cad1JHJhrlIMKMB0yXhJy2Q
bv2Pkf5a9ay/HHPv0zofn2o7H7Wh9/kepf4o/cKbTsiUaaLHI+age5R9SZTh
vvSdd0Z9ZNQORwZFKeDBfZm2ptwyxh8ZRYV+Ga0XORJHoZknjORO4DG3o0tV
Z9pmTHFTRgdjO8P6DWcWOiW5L/crrv/r5IjevubbhMNR5AL/IsTAfeV3Xy4K
5dZMF6ViNQHuC9QHu/uS7lU2jr5+oaodBkUoteiLjdWtV8bm1/mI+zkl4t5P
t2NazFc+8WVJto/6HB3KvQpaL7vvMnmt89dvpw5HJ2aRYHkMWHhObAVgfAC+
Of3eRX+Re0zRX16Dv/Sdj5bQ+w3a+dha/YU3HUY4wxzXLHZk8Jga742WRzP+
3JderWjrmjTJ9i7X0Yv7ijfGb0tzyxg27NhfJ1QU8VuLDswsY8MALXHP3I4u
a9WYdBK0z41u7WnzPDqd0OybEDaXzX1l2MG0k+JhEy7rygz+RYhxC+7iM8Hk
HzbJfTHoJ3BfrQLuC9QHuK/20Juir9WtV/iI+9urd00R97nndswivp5QDdK5
G4qvHVfxJSfb6/ochXQvpdwrtcMxVXnZfZdJbZ27Nm0ZjkLM4sG0Ekw1YHIO
mLYAzNr/aEq/T9FfO5L+elKO/tJ1Psqh97tS6D3cV9U7AhoP7qXaA3MLUsBT
zGAOyyKxNMsUD7sP54tkE0YODoVTTHr+hQDqvloO3BeoD3Bf7aFXRV9fHZvv
ji9uTsoR9w9pKY7fbke7+IqLvh6xoi9juP2aLL7kZHtJfMWTObJyr2tSuVcW
62VSXhbZZRFcZ69OaYe7EzN5MK0ESzVgV0IDZioAY1NA6vXXsib93q6/4s7H
LPorY/CXac7HuPTLGHpfkv5iM1MQyGNe9d80MnjTAb7AvVQTxKz7JA8tb3Q8
aBF4ihMSsTU4pJnpsTM6nOimSH11kt/kU19JHZmMaX3Cbgg/MM1OqQD31XLg
vkB9gPtqDz0u+pru7NxZvTe7vje/cbC49WDZEHGfqdvREvNF8+3tEzvaZ3VU
xZca8HUrFl+sz9FS7pXbeml9l6PgouOjK5PqsCxvUWGqBMtpwLQFYFL/oyX9
3q6/NrX6yzTto4/gL6XzURN6vx6F3re89AtvOsAXuJfqQmrTItQXMICnmEc2
UUOE4eHgf7VaipNluRoezeLLuE5+k26/0AD31XLgvkB9yOS+cK82lx4XfU3x
RV/6iPunrOjLa7ejWXxtPwjcVy7xNb6oC/jSpXtJTY4u1stdebkILjY+HJ1g
w76kxYM5SrBUA6YtALP1P2rjvxz0F7nEdv3lq/MxNfR+gYbeeyr9Sp3wsc6l
X3jTAb7AvVQfrPYL5gsYwVMsYSyr0lRXJe2OBc0X37PYGeU+l2q/+J/wvxg2
/kIL3FfLgU8A9QHuqyW4FH2x6pGCRV+TrOiruzefGnFfSrdjKeKLzeco9Dmm
lXvls15a32WxW0WGRYWpEiyHAUspABP7H+X4rwz66yDRX9sW/ZWz8zFH6H1Q
+tVF6RfedIA3cC/VCpr5L0waaJi/AQAGnmIdHRqoxUswmqklq6jh4ZFMSVsc
tngx5rhElWWJFtNk8JuB+2o58AmgPsB9tYFeFn1N0KKv1bsz67tzuoj7fEVf
mWK+9BM7huKL5ttnEF8LecSXVO6Var0syssuuz64PF58WFRYqgRLNWD6AjCl
/1GI/8qnv8LgL6a/2LSPnP4qGvyVI/Q+KP1a91n6ZXl+4b5A34N7CYCmg6e4
ImKPZSjU0n1t/wmzX+nyC+6r5cAngPoA99UGHN1XXFiSx33JRV9rQdHXQvai
r6zdjuaYL1F8bQnia3Z9j4qvO6v3soovU5+jvdzL0XqlKi9JW5359FbBYfFg
FgnmaMBSC8D4/kdb+r1Bf5HLR/UXuaCC/tJN+0hLv0T95a3z0aX0azIu/SIP
SxmlX7Vte8SbDvAF7iUAmg6e4mpIUV86YrllDMFP+T4B7qvlwCeA+gD31QZ6
kHJ/Y3ZNSPoyFH0x8dUtEHGfLeaL5dur4mvNTXxxUzoK4itjuZfWelkKvbS+
S5VXpy+N5R52FaZKMFMZmNaAORaAXaUFYGL6vYv+IrcZLf1S9ZdL7r3Hzsee
lX456uu6lX7hTQf4AvcSAE0HT3EluHuqhFiXGeu6UheIgftqOfAJoD7AffU9
PWh4dCj6Yt2OT7rFir6yxXwF4uuBIL66gvi6vXLXVXyJyfamPkd7uZfFelmU
V6rsOsXGJzfTR7xwqgpLlWAWA+ZSACb3P4rp93b9RW4zjf7Klnuf0vmYK/T+
SRx6n5R+LdDSr7X2ln7hTQf4AvcSAE0HT7FCGPaVTgZrpSJqqk6QVp+Eiw0F
efrK2tN1mbNQg/uSYBGJVe9IjyjJJ7TtNJZHq84k3Fff4+K+2Ctzb4q+NnIU
fVm7HbUxX6Z8e0l8TXcC92USX/KUjtaAL0u5l6XDUbJeWuWlkV2K1HrfeWiF
mMWDSRJMa8C0SfiWAjBT/JeL/opKvxz1lyb3vlDnY/7Sr9Wg9GvCR+mXyX3V
s/QLbzrAF7iXAGg6eIp50iZ55MkztSPbDmepTJuU546E+yqPVqmGQ7iv2tOq
Mwn31d/0suhrwj69Y66ir+zdjqH42lHy7dnEjmtivn0nLvpKq/hSk+0tfY6p
5V689bIUell8VySyPr4hjZPWoS6vsWEGCZbVgFkKwNT+xytx/Bc/+aOsvxYN
+ks37aOcex8Ff5XS+Ziv9Cuf+2pi4j3edIAvcC8B0HTwFCckcyX2zH0NW12b
ILHgvsqjVarhEO6r9rTqTMJ99TeZUu7zvYzT6R3HFzcnadHXWm+Kvly6HYWY
r5k45ksrvgL3tbg5vqiE26viy63P0cV6SbVeqcpL8l2C17p4XRq/iof6VTBM
QsxZgkmNkC4GzKX/Ua+/2MyPof6i1ytFf7kGf8mdj7lLvzZ6m/pl99i1anvE
mw7wBe4lAJoOnmJG3IdIa646atehPyTLJvQ4Bh2XQxr75dd9SS/XHt2X6bVd
674yveNjYV8L231CPfcZC/frwjncV6bdANVSdsq9puhrvfSir6zdjvqJHTti
zNdiVPRlF1+5+xxN5V4m68WUF++7VNP1K+24cE0/dAurNkxTD5ZmwLLqL3v/
o11/0SvlOu1jkc5HD6VfT4QJH9ejCR8notKvtiTe400H+AL3EgBNB09xTKK+
ilR0ucG7r+FRjalKFmA749d98RzCfbVsYbgvLFyfheG++pjeNDzKRV/d/YWM
RV8eI+6D7jau29ES85Uuvtisjm7iS+1zzGm9+CovXnmpsis0Wu8VGKoT4z2Y
WgmW24Cl9j9q9Zc08+Mtq/5KDf6i90bovh6VEnpvLf0iDwXZH/KAkP2cDEq/
Nsbmy0q8h/sC/QruJQCaDp7iGOa+yldfnNoyeqp4d9gCqPvCwr4WhvvCwvVZ
GO6rj3FveMwnvg7DlPtbC92Jpc0pS9HXboGir7zdjlHM10Yc88W6HVm+vSq+
WL59XvFlKfdKtV5CoZdFeekU1rvnr2Yd75GhVWEmCaYrA7MbMPf+x5z6yzzt
o9L5eODW+Vgo9F4u/doVUr8Wtx+QPaGlX1OdbbLzt1rT9og3HeAL3EsANB08
xTG9dF+q2VJQRZY4N6RlpakHgLyvloMMJVAfkPfVx/Sm4XF8YWNyeWt6ZSe1
6Kvrs+grirg3djtuyN2Ojvn2gvi6s5JbfLmUe6VaL5Py0uisc1ffOXfFcZCF
NTbMIsG0ZWCiAbMUgBXSX3dWVP1lm/aRC/5KOh839J2P7qH3xUu/lnYekn0I
S7/ukf0kj8x4mHifr/SrWYn3eNMBvsC9BEDTwVPMSPdR/mCFX0ZPpbqvtLIu
57IvuK+2A58A6gPcV7/Ss5T7icXNqc727dW7s+u780HKvaboa738oi9pbkdt
t6M+354XX3PrN2jMFye+TOH27uLLZL1Oa60XX+jFKy9RVWmk1tlg/PLsqGXQ
ZTQ2zFASxiQYKwOTDNhpqwGT+h8z6a8rov66QfUXP+3jgjH3PqXzUT/no4fQ
e1b6ta6UfpEtLm7dJw8IeUzIHgalX2Um3sN9gb4E9xIATQdPcUIvK79St6Up
4rLLuXSdxoD7ajnwCaA+wH31Ky7uy0vK/SRNuV+7N9vdW4gaHksv+tJH3Gvm
dtydWdt1ivkKxddNVXyFRV+O4suxz9FivVi1lVZ5SaZLVlsfCePtjy7HQ/5K
I8R0HkyQYGIZmNaAufc/uuqv8Pzz+uumqL/swV/k0rvN+SiE3hcv/erG+ktN
vCcPyFx37w4t/YoS79f7vu1xAgAAABCp9h+mmsCM1NCILoG+pE1ptqT/1vIb
TTi+GbivlgOfAOoD3Fe/0oOGRyHlfn13Lij6ihsed3Up96UUfaXP7Sh1O7pM
7Hj1dudqXvEl9TmmNjkK1kvX2Gj0XYLgCseHDkP8iaTCeA+mtkMKZWBuLZCm
/kd3/XWV6a/UaR/tnY/ZQ++9lH6tJqVfD2npF9kr8shMBYn3tPRrtb/bHqt+
wQIAAFA7qv2HqQZ0RoYDkgkYA8dkoWhxGDfX49Awp9o6oyPJTkgbEX7DftIZ
TX7g1LAJ99VOyDmn4+jrF+ATQE2A++pLetDwmJZyHzZ8UfG1py/6cnFfnPg6
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
kU6252aojIdqw0WeaArF/NV98edZM4Gl+zyP+fchZ6Wa/kdFrprjbw2Fey6b
CLSfbhMOAWmZphe1A/cl0+mMjgxrGIqJEsCGR6ve09zAfbUTuC9QQ+C++oCS
3Vc4yeMyneSRBd0/lIPund2Xe9B9trAvS8Oj6L6yNjye5tzXSc59SdM7CkVf
ScS9udvx/Yu/OPMJ+SFZD1nn6TDc/tzVRHxdD8RX2Oe4vDGzshWUe23urmzv
r9+9v7H3cOvgMa3y4n3XvjgOwiF9yHswWgkWGbCwC5JsgmyIbI5slGya7MB1
Xn9dnSI7SXaV7HCovy7T3Ht75yMfei+UfgVn7+q7XNvjSc59nS7S9kjdl7Xt
0UvkVzdr5BfvvvaUqR43PEz1CPdVS+C+/ODdfaknXZkQsXjeV173pVUcjr92
U19OSWC6OiM/eV8OOVgpc0zqt2EUU2+E4udZw9yK+XLiTY2j2a+a62/T5qu0
HEeWn2bKlssC3BdPZ8Q6x6MA3BfcV8OA+wI1ROu+pL9DcK/WnNIneVzcmFze
DiZ5DILu9xe3Kgq6Tw37WjSHfU0vXynQ8GhJuTcmfbGiL3FuR77b8e0PP333
3JVAfH1y88PL4+euTl4IM77iiq9AfN1e3phd3V7o3l3eDMq9ursPtvYf7dx/
Qq0Xr7wC0/U4GPcNg357IEkwVgO2/4isnGyCbIhsLux/jPRXUP0VZn9dCPTX
JNlVssNkt8nO09x7qfMxLv06ry/9UlO/HBLvtW2PptkebZFfi3kivyT35R75
pbqvDaepHrfGF3JO9eiS+wf31XN09RNKijXcVyr+3ZcsidTKpuLzPOZzX1K+
eBTr5KiWUvKltEcnbC9Wg4apG33M8+iWgaV0CzucAwczFz2G/C5nerYsWff5
r5rrbzUTNJ4dcksUU39qiAorklCWAtxXQgbzNTQ80tyWR7ivlgL3BWoI3Fcf
UKr7GptLmeSx1KD7pZ2HgvtyDvsqu+HxXa7h8e2PLkcNj1LSl1j0JXY7fvyL
Dy5F+faf3Pjg01tnr0xeuD5Nw+2vTcviq7O1t3b3/sbuw+2Dx3e5Wq/IenHK
6wEdT5QRfs5LMGbAaA0YWS1ZOdkE2RDZ3EL3Hqe/guwvGn1PdpLsKtlhsts0
+CvsfLwodz6qpV9c6hc5Xaz0i57JstsepcivxH0ZIr+o+yK3nyHu3rXt0X2q
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
kQeN7M9U4L42x3K5L/Kww32BvgT3EgBNB+5LojNCg+MTgaSxX/76HeOVK6pN
2UR6WZdz4RfcVzuB+wI1BO6r6bDX2BMnTmhfdcnn+d3XfFXuSwy63xSC7pn7
SoLuDe6ryCSPatD9e6L7evujy4L74sO+lBkeySc/P/3x2x9++m6Ycn8mTLm/
eCNIub86tXhzJprekSZ9saIvvttRyvii4uvBoycHDx/TWq+7+4Hy2tq9v3nv
/sa9g+vf/Rs2yH+SD7dCCUYNGPlJWACmVH+F+ovvfKSlX+v3HtDULzrhI9lh
sttk58khkAMxtT1Ksz3qIr8uC5Ff4RnOFHevdV9S26PFfbGpHtPc16Meua/N
g9n1vcR9zXdzuy/7XwhwX6CJ4F4CoOnAfWnpEIT/Hh0ZHgoZTuZXLI5aqQX3
BUoD7gvUELivplOy++py7muPvJhT97Wqc1/kvX52Zfvvf/Cjz3/xSzT5g/zh
737wo4n5VdV93VnZ/v7rP3rpC9GSX/7aN//hn96aXNp0cV9B0P2qPMmj5L68
TPKoBt2/aw+614Z9KTM8sobHKOX+9tKtudWppS6d3jFM+nrIir4OHiXdjnzG
F634ouLr3sHDndh6Xf/u31z727959399Rh3kK2rAyMJMf9Hqr0Mu+yvpfORK
v2jqF53wkewq2WGy2zTxnrU9SrM9/oSVfhkiv8ipGxHj7t/NGHfvPtWj7L4W
Ffe1qrivTY37Onnu8pe/9g16037l6988ffGK1n3NrGz/HfcgvPL1b/7jj0+Q
pyOOu5fd12p423Pu6x7ZsQm4LwBEcC8B0HTgvqpD16MI9wVKA+4L1BC4r6ZT
tvsiL+DkNfzO6j3ySr4Quq+g6Evnvj64eMU059OZi1d49zU+t/qZz35OXezX
fuP5G3eWacNjVvc1vrhB3VemSR5T3VeOoHtd2Nc58tUv5Bke+YbHKOV+eXNv
7W48vaOu6CtqUQwzvu6L4uv6d/XKSxobdw94/RU0Pz4Osu8PaS2ZUvpFU7+C
CR/v3ie7xyfeR22P16Y/Gh0nB0VneySHGUZ+ndNEfuWIu3d2Xy5TPVL3RW4V
1X0JUz0q7ou2PX73v/5QvWm///qPJPc1Mb/667+pub3Jh+Qrk/sijxV5uMgj
RnbgjuC+vgr3BQAF9xIATQfuqyr06Vy9cl/s/xain/h1X7/15eOO7kvaDTtY
uODCju6rVvuMhft+4RzuK9NugLIp0319VXBfXZv7ujoxS++Kvw8LvTZjCfDt
73yffn51co65rz8/+q2BsGzmwtUJ2vN47so4Laf5s7/4jxr3taG4rxXFfS0E
7msso/ui4svovnSTPL5z7so7Z69kCronf47Cvs4FYV9nLo19RGd4vDV7ZWpB
aHjc3u/+/+y96ZMc13nm238UP+HrvbZkmYq498OdG3GHM5bGEqyZ0Vj7You2
0ZZkbbQES6JIUGrLggiJI0EkAVJNQFiIrbE20I1u9L6v1VtV7xu2uu/Jk3ny
7HkyK6sqs/J9IoMBVmVVnjx5srvzF8/7vDuHmwfP1KQvvtrxiRduv3cYG3zR
bY3DX/Al8FVPSOmjxvoVNnw8eAYDI4n3XNkjDB5OAU4ETueqF/n1p5tB5JeW
fcWJu7e0eqTsy9Tq0cK+Bin7mlPY15LCvsoy+7rY9QDW5xe++o0HQ1O01WPP
yAys4TYP7TL2RZb3d8ny/tLXX77bN0KR772+kS97e37zu68g+0KhEgvXEgqV
dyH7MqtU6qHy6x9L6RU7GjFVo9gXryqyr2LsjOwLd87gzsi+cq179+7VnX0t
VMZKmxz7eiyxrzWPff3o1ROwJP509Zaa90XxF/zXN33NLsP/fuJTn+HzvpZ3
SN7Xn//Fi/DWyHzZnX0JTR6t7Itv8iixLwq+TOzL1uSRFjwq7MsPug/CvuB/
4V0S9nWzlw/7uj88/dDv8Lg2tbSuKXgM2jvKpq8nz/YPn+4ckIyvuOCLd3/B
x+FL4KvgCyXrF2v4qJY9et0e12DYD0m3Ry/y6+HoNT/yq5dEfn14F06ZRX7p
4u499mWKuze0emTsS4384tmX3OpRZF+s7BGWDWn16My+Pv9Vwma7eoYIqtrx
875uPxxp8zAXY190eX/y059R876oGWx6aYOyrzUN+3rMsa9NuPXqzb7gB0gD
fkwhr0ClJVxLKFTehexLVamno12It6ccyjNqtXekEPdlgVTo+zILd65xZ2Rf
uHMGd0b2lWvVlX09ml7RsK9NPfv6qFfDqM26n1raoAuGwoF3Oi/Bv0+dPquy
r5O/OwNvvX+pKyH7omFfSdnXjd5RG/uyN3n8UG7yKATdX7r13pV7sP8FL+j+
2oOhmw9H7wxMPhj2w77GvbCvhfLOytZBZe8JX/DI2jvypi/S2NGrdtzYPSxv
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
i7GvH3nv9ozMqOzr/uAUvPXKj19vRfZ179wNvs/jmNfncZawr9mViVJllvR5
3F3bPtwI2Neevc/j/uON3cPy9r6Kp0yrJRX2Rbd7Pz4Ow/b6PM567Gss7PN4
o+f9q/dgHjLEvqL6PE4sbdnZF/VrlUg3Rpl9wUbfpeyLLu+HozMq++obnYG3
4O5w7vNYQfaFQvHCtYRC5V14F3PiwrTaqZGKZ18l7u36FDw2SvVmX3/97Q+Q
fWVQyL5QGRSyr1wra+xrZHb5k5/+DDzgv/vBJQl8MfZ17sot2OHN02dV9nXy
d2doZdni5hOCv8zsa2Jpy8a+plf6p5Yt7IviLxP7ovjLZ1/3BlzZFy17lNiX
t7176fb7hH09uHDrIXzn9QfDN/vG7g5M9ozM9k8uDs8uTyyWZ1c2F9d3V7cP
N/afbovs67HHvp557OvZ8+ePnzzbP3y6s/94c/ewsn2gZVPqUkkRfLHt5g9f
gVOAEyHs68EwnBqcIJwmnOy7lH15m8y+Przryr7uDTiyL3pNbexreqUW9kV9
X0si+1rV+b7OXSXL+9Tpsyr7+s3ps/6tYWBfC4R97cMAJpe3xzz2NYjsC4Xi
hGsJhcq78C4WJEbJs7LC9nYhYivf5Kv+7EvakH1lRMi+UBkUsq9cqyHsq6Jh
X9sa9jUyu/zRv/w4bNfu9FYU8MXY1/DMMmUFXOSXz75onHj/xGJN7GtmtRb2
xaxfPPu6pLCvczd6JPb1nsK+3vbIz+nzN969dAv2+YCyr7uPrj0YuvmQsK8H
IzP9EwtDM8vjC+WZlY2Fys7K1sH6Xsi+9p9WD2nk13MWd/+ci/wiZY/lLY31
i27j//463VKnXjIEezgGJwWnBicIpwkn++6l237Yl8K+3lPYF0ymxL4uKeyL
gq9msS+a9/XHy10C+9rT5H0Nz5LlDXeByr7gRVI4Obtc3nuO7AuFSiBcSyhU
3oV3saywrrHGRPnsij8f+gqyryII2Rcqg0L2lWvVm30NeuwLHsPhYXyasK/9
BQP7mlpap+ALHu1Zn0ct+2KRX1/8+su3H45Q9nWzd/ivPvU38OI/ffv7pa2n
GvZVVtjXko59za7Vwr74skeZfXlx90b2dYVjX5duv3Px1js8+7p4C3b44Pp9
+Pjlu4+u3R/qejh659HE/eGZvvH5wemlsYW16eWN+fL28uZ+ZffJltfqcU+N
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
RrY60lqEvxFQ2VTw3K55cA8L8cSn9gQfyebR664o9hUOuGZPUCvNJK5JFKo1
lAx/dadhADvm/R331//9b28/mrwzOE0J2H2RgLEQsMFZVgUpErAwCozYwGYr
XkdIkoevg2DackgzB1Nz8s1ATCFj8Tb9t2mPK+Z3ibxLj7yemmsbidErKG/c
ZeWNE0tb46Wgh6NIvfoV6gWXrHt4Fi4fXES4lLf6J9oaWOeI4CuW8ElHleGp
0vWRvLDKC/syFLEdcacNNSwAaUhW+BWXfelODM7KmX0RybvJh9KPSTc1/ieP
HIVXDAOOfNk20a4jcYV1ESDuyJGQlkqY03lhWNmXbaIs35S2ZRB/I6AyKn3E
urXjYIKPZPPo9ZadfbETSWW8rTSTuCZRqFZRs/DXsba2T37mf3U9HLvZN36r
f+L2wBQlYN0KARNywGgvyPnK6ML6WBAFJtjAxDx81hSyxMEfoxlMw8F0KMxA
w+yIzP0jZswlwC7V32WyeMnIK0z0ko1ePvVa3IDphUmGqY6kXvco9RqYgosI
l/LGwzH6N3rj6xwRfEUKn3QUmR4/+dd5e03MtnStq3ywL1tykrvPKOkCUEZk
4ybx2FdUJFQiSuJm+9KypM6j4cTEglyOtXzOI1GOwtVVamPMnLLNtEsqYmGY
2FfkRDmeexrC3wiozIq5VvTSgZu4H7FgngYcvWmysq+IszCcUEFmEtckCtUy
Soy/GHzofvHFBKavT/zNZ6/1jFzvHfUJ2KNJSsDuWQmYWAhJo8A8GxiXh8/V
QgaBYIETzGIGkzmYkYY9U3gUh8XsiMywp/qFEuYKnV1RvEuyePFxXiHyKhPk
5SV6eUYvv7xxQ4my93s4RlCvR5M3+yfgIsKlhAt69cFwm3eJG1nniODLRfik
I8nMIqxsAa1g+WBfOq7CR0zZUEIKC8C91C7meQmQ5khAUvhgqyScRJNZFc/B
FfW2mvcl0SanQsPIkSTv82i95uqcJDqGy0QJqqsDFX8joDIs3qAiyJxBFe8j
VotT3Y/eNNnYlzv6cmVfrTWTuCZRqJZSIw1goP/66f/xYffglftDVx8MX+sZ
uUEJWP8EJWB3YxAwrxDSs4EJefheLSQPwfhySL0ZTORgehS2EzIoBYhF8DEL
13LEXBrYpfAuZvFihY125BUavfzyxvjUy7N7XfeoF1xQuKz0T/WG1Tki+HIU
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
Rq+wvJEavRJSrzNwWV/vOPmzX/wHvdAvekoAThF8pS580gnkGAmu7xl3pOg9
Homax74MiIJW0ykfM3EKN56QZAFEoy/TPnHOS3tiR44fd/MKRaIzbTGm4/zZ
rp/+wI5wx2kkY6ZGj0f0y8KYrmb6qH8ekfulx77q9/MGfyOgUCgUCoVCqaoF
f3WLJZC8Xjv5e5+AnX7/1+/8/+3d6VIiWRqA4fuaC5r78CaqZJRSS0tlR3ZE
UASXcq3qnomOnt8T4awRcwczZ8k8eXIhTTQlQd8n8kdHiwgJRAVvfOdkb78x
KLRGehVkfXipd8JX14L8Obz5s1fA1FZgwTEwey2kPQlmIph/RaTbwf5pdzC9
Sb5MYXqLMH8N02skVRBT42GqiXlZTJUxcziJLHjo/++7pfl1fW/OPXuZyypd
zmSXO9yl9u/S6xn1fJc74uX0LrN9vUleD7OSl3/QSy9vHN//pquXOPniJRAv
RHz12tivru+WPrvVy6aXLr64ehG+UsE3HVfy5UT2ZenUhenCO4J/SFm2r8Cr
8gf9qsxsBerG1msYtav7bPO+AZKkr5m3mut56Q20/M8q2Rt73qmx+c5B8us8
zv1iJHwk4Vc8eLuYMJX0AT73UF7bvhaw5JF/EQAAAKJFxqtUCtj6bmljv/ql
0Ngut/UMmF4FqXfCb5xet89ve9OH4ytZwCLGwNzdwOy1kPYkmL0nWGAYzO5g
wZEwbyrM1DA7iNlN7L+qUKkyZo6/JzierLqlApfbuHyZyxnr+tt/nMkuJ3b9
24pd3nxXcO96s329dd3Gm1Dymj3o9evx1Y/u9EG8BPoajtHV61s61SsyfFG9
0sI3HaSF99JSWkQwwbvBpxgAACDGK/NX5EiP8Hlze323vLFfzRecVZByH7Dm
sNg5rfTPaycXjdF1e3zbncqtwHwLIaPWQtqTYDKCuXuC6QhmhsHC82ChFKam
wnw1zB0Pc5uYlcWcOKaPv8Yev/sOdQ9O4FKNK5S5zFjXrNhlz3cFVzVae3nJ
5OVu5xVe22gGvcTpFSe5f/nYndy3xjfi5NcGF+KFKHWc3ex9KxxnVK/cqxc5
Er7SxTcdpIX3Uob8e917m13NsXU8wKcYAADgOZGVI70C5qyClDvhy2tB9g+a
J8XOabl3Xhu4W4Gd3+kxsPAVIb0IZpZD2nuC2cNg1qLIB6uD6ZGwwFSYqWEm
iLkTYv9y25Qdx5w+luD492/Wrwcal8lcpnR5scse7rLnu+wRL7Wq8cbtXWbK
K5C85NpGa9BrePOrOLG9iwdxktXyxqvqYFrujYvtU/FCiJfjq39fr1SqV+Rb
4lbJ+s3+rvBNB2nhvZSlZxctkr6QAJ9iAACAZ0VugP/63OFFMLkPWGXzoL5V
bH6tdPbq/YPGoNAeleRm+JO6GgNrjW86k3u9H77cDcyOYPYkmBXBAsNguoPd
mg7mbpKvU5g9FWbXsEATs7OYffzFX8n05vPyUD+K+pV/2PdpMpc31mUmu8LD
XfZ8lz3ipXqX3L4+tLAxlLzkjl7iZHYn9+3xbeP0un5yWVHLGwut0X5jsFfr
iRdCvBwLqF45xr3eBt90kBbeS9mKrV+ULyTCpxgAACChyPQxV/e4m70JmCpg
xdyeLmCNnXJbbobvLoQs98ZVOQYm98Nvn992pw96LWRgQzB7TzC9IjLQwQLz
YCaF2asjzQJJeejZMP+EmHNYZWyu46dbtwKNy5e5zE71KnbpxYx6uCuwnnFW
7/IWNgaT1y/i1HWnMnmJk3k0vKoNppX+uTjJ4lTr5Y3i5H8pNMQLIV6O9fxO
itWLca9F4psO0sJ7KXN6R3ff9QYjdnUHZuJTDAAAkFwqA2B38TNg+Z3cXnlj
v/ZFbQWmx8DMFSHlbmCDi6PRVevspn1+FxnBgisiYzqYSmHhqTCvhvmbmC+L
2YedyKKOR3NYv2UCVzBzmbEua7JrVu+6VM9LPMGp27vM9vVRyUttYn+mk5fa
0at7VmiPDpon4iSLU21dwLEsXohPG+lUr1mvONXrTfFNB2nhvQSsOj7FAAAA
84rsIfPGkGcK2OaO3gps86D+RY+Bqf3wD5onhfZIjoGptZBHI7khmJwE08sh
rT3BAsNgvg5mb5KvUlight24NcweD7OzmD7uw4eVsGYdd27dcka53MblZC5r
rMuUrnDs0vNdundN3N5lRrzMRRvFCXGTl9rOa6ST18QkLznoVeuJ07tVbIpT
/advlZjljelWL8LXW+ObDtLCewlYdXyKAQAAXmYBBSynx8D0FSEPj7aKzZ1K
Z0+uhRzItZDt01J3XOlP5CTY8Eouhxzfdib3vYtHuTG+NQwWuEak7mCBFBZd
w1QQc5qYncX8fcxLZFHHTeBwf/e71bjCmctXuqJil97CS1+r8cztXXrE6/jy
h9y+fuIubBxd1U8u1HZeY1/yqnS2Sk016FXL7ZXX8zuf0q5ejHtliG86SAvv
JWDV8SkGAAB4sVmdJP0Ctrn9+WtJ7QZW+1JoOGsh1YZgehLMXQ4p9wRrnKqN
8eWKSKeDDUIdzBsJ01uEmRqmEtNFKIjpw2QxXxyzEtnMw7qldw8mcEVmLlO6
TOyyhrvs+S7x1E6+y8s1yr3rp/ft89vW2U1jdF0fXuq9vEpded3Gw+aJOF16
E3u5trGgk1dFnNj4QS+q14rimw7SwnsJWHV8igEAAF4prTEhLaaA5dQYmLcW
UkWwnUpnt9b7ZkWwcu+8ejyVKyKHV7KD6Z3B9DyYszmYXBcZSGGBBZJ2EDMT
Yl4Wc8uYOS5nHxfhQ93D1Gpc4czljHWZya5Q7HLnu2Tv6pzftcY37t71F9Xj
Sbk3LnZOzZSXSV5qE/uaXNsok9fOp42tdKvXHYsclwbfdJAW3kvAquNTDAAA
8HqRe+C/poDFj4FZEUxOgjnLIfWeYPX+QWNw2BoW5IpI3cGcRZFuB1PrIqcP
fSeFyS3C9FSYV8NCQcxMiNnHxN/HEh3+e/ACV1Tm0qXLF7uufqjhrofO5K49
VvNdp9fiqdVPLqrHU7N3/WFzuN8Y7NX7+qKNW07yUtt57ZZiNrF/o1eN6pUJ
vukgLbyXgFXHpxgAACAtqRewRBFsc0cvh9zY9yLYVz0MVj/edzrYyO5g9eGl
3CRfp7DxbceZCpOXjNQLJE++/2oHMdPEAlnMPsZWJTMhSx+Rtz9z73BW5hpc
/Ty+/NG/fBQPTE52Te70YkbxsNX+XXo9o5zvEk9NLmlsDQ8aA72RlzPiVWy4
e3m5yWv22sbcKwa9qF7LiW86SAvvJWDV8SkGAABIVyYFLOfsCVbM7ZU31IrI
fEF2sG2vg/VlB2vKDlbsyE3yy73zikxhenXkZWN03Tz9bmpYZ3IvtwubPvQu
HmUT87KYW8ZUHNOHSWTPHvr26h5+kYHr+qe4WznNdSkHuqzMddca69L1XTww
Ndl16S5mlMNdcj1jS65nFE9KPDW5pFGPeBWb4omrVY3V9V25fX3MXl6vT15U
r2XGNx2khfcSsOr4FAMAALyFmNLy4sySMILl1IpINQxW1juD6XkwvUP+bq27
V+9/O5IjYQfNk8OWvl7kWbk3rvT1YNi0dnJRP7k8Gl4dja5ME2uNZRZrn9+p
MqbimOpj3elDTx8yXtnHgzym3tGVh/wt+evnco5Lr1vUjat5eu3PXHKsSzwk
Z7JLbd6lFzPq/bvkekY13+X2rvrGflWOeOW/yo283jh5xVcvwtcy4JsO0sJ7
CVh1fIoBAADezhsVsOQRLOctitQdTK6L/FJo6BS2U+l8rXadqbCj4wM9GNZy
Z8M6Z2o8TDaxSn9SPZ7KLDa4qKsyJo+h6mNOIpOVrKH6lf+QPzoyx/BK/Ja4
h5o4BlNxn9Xjidu4/JmrNdRjXeKB6cmu3WpXLmYsy9glnkL+sL6xL3etF09N
XqsxwYhXKsmL6rUq+KaDtPBeAlYdn2IAAIC3FpNiXhlh5opguoOtq03ydQrb
2K/pqbAvxcZWqaU3ClM1rLtX6znjYUeDA3dCrNAaFdojXcb0ofqYPmQlCx7d
cck5zM1k2iq2Zd0S9ybu87ApG5f4E+HMtVNpy9JVam4VGyp2OYsZxYPX+3d9
3tyO37U+9eRF9VohfNNBWngvAauOTzEAAMBivGkBiy8zs1PYtl4dub5bzu1V
9GCYU8MK3njYdrntZTE1J7anj3pf9jGVyFQlk6Fs3/mP42/hQ91epi1Vt3Tg
ko1L3b9cvVgyM116DaMuXRXx8OSDlLHr+cWMqSev+HNL9VpafNNBWngvAauO
TzEAAMAizdoJP5fGQsgkrSbGp81tXcPWnSAmx8N0E1MTYk4W04eOY/IoykQm
j5IKZSU1qVVqOv/Tf+hf0fcg7k0Hro39qvgTavWizFzrbuaSY13zlC5zGtM9
k7P+ENVryf0OAIBf1v80AViwx/wf57TWeXJ+96mzpv9X/jHT5wAAqyumgOVS
GgOz680LOljAZyuLqTJWlHFM9TE5MybHxmQl8x9l71C3kV1rt6TTlrwTN3C9
rHHZGq7FnDSS10rI+gsWAGDpZP1PE4AFo30BQPbiC1iKJSeQdF6fwjKXeuyy
T1HM36V6rZCsv2ABAJZO1v80AVgw2hcALIv4ApZ7mwhmp57lT2ENSybngeWN
AAAAwLvgRi0vcwEAFifbCBaoQFk1sQVkrvCTjXk8JC8AAADgHaF9AcBSSBKI
FtCFZpWisLmKVkCGTyQ+eVG9AAAAgHeH9gUAS+TZMbAMI9gqSljqqF4AAADA
+5WwfUXu9+VuIKb/39NjJ79mdgrL++7v6dH7kfzZ46w/pu7EumncbQHgHUsY
wehgkRJOppG8AAAAgA8gpfZlfm7vlO82sag99iP+XtR9+O4JAD6gJBGMDnY3
zwb+JC8AAADgI0mlfeVnXEFS3OnsoOXvWbNvN7OVAcCHkjCCfagONtf+/CQv
AAAA4ENKo325s1nuPQQnveQCyCf3R17jsu7KKl++VY72zalfAKAkj2DvL4XN
ezFKehcAAADw4aXTvkK/bdWv0HpF92feL3npK2pxo7kvVj4CQMC8HSxnXX4x
6471vLkuKxnoXSQvAAAAAEoq7SscpcztY/b1Mj+KvPP5HyMAfGwv6GDLE8Re
lrnCySvrFwEAAADAskmjfUX9rv8akPF/Mua2/t9g8AsAknlNB4tsYmHzFq3X
160A5rsAAAAAJJDSdR5DXtK+nsXgFwC8iG5EqRSnDBG7AAAAAMxvCdrXc5d4
pH0BQLpMRMq6Zs10a8n6bAEAAABYaUvQvp5f8wgAWITFN7Fbv6xPAAAAAID3
Zxna13N73QMAlsPt62T98AEAAAB8QMvQvrwNv6IfBW0MAAAAAAAAL7EU7cve
8mst33n0HsrT02Pe/RG7fQEAAAAAAGAuy9G+kmx4z9AXAAAAAAAA5rMs7et/
sflrLf/IzBcAAAAAAADmtETtS/3ssZNfsxLY2prMXnQvAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAIDX/B3y/hiQ=
    "], {{0, 407}, {1620, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->{540., 135.},
  ImageSizeRaw->{1620, 407},
  PlotRange->{{0, 1620}, {0, 407}}]], "Output",
 CellChangeTimes->{3.7741884053542786`*^9},
 CellLabel->
  "Out[702]=",ExpressionUUID->"3dc9fba1-0311-4496-8e98-380407289120"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"ClearAll", "[", 
  RowBox[{"args", ",", "func", ",", "funcWid", ",", "frmt", ",", "params"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"args", "=", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"\"\<reading\>\"", "\[Rule]", "\"\<Integer\>\""}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"\"\<rows\>\"", "\[Rule]", "\"\<Integer\>\""}]}], 
    "\[IndentingNewLine]", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"funcWid", "[", "dbID_", "]"}], ":=", 
   RowBox[{"Function", "[", "\[IndentingNewLine]", 
    RowBox[{"(*", 
     RowBox[{
      RowBox[{"dbID", "=", "\"\<FBrnXpZX\>\""}], ";"}], "*)"}], 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"bpW", "=", 
      RowBox[{"72", "*", "7.5"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"w", "=", "40"}], ";", "\[IndentingNewLine]", 
     RowBox[{"h", "=", "11"}], ";", "\[IndentingNewLine]", 
     RowBox[{"rsMult", "=", "3"}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"readings", "=", 
      RowBox[{"Databin", "[", 
       RowBox[{"dbID", ",", "All"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"readingsDB", "=", 
      RowBox[{"DatabinAdd", "[", 
       RowBox[{"readings", ",", 
        RowBox[{"<|", 
         RowBox[{"\"\<reading\>\"", "\[Rule]", "#reading"}], "|>"}]}], 
       "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"readingsDS", "=", 
      RowBox[{
       RowBox[{"Dataset", "[", "readingsDB", "]"}], "[", 
       RowBox[{"Reverse", ",", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"SortBy", "[", 
           RowBox[{"#", ",", "\"\<Timestamp\>\""}], "]"}], "&"}], ")"}]}], 
       "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{"Normal", "[", 
       RowBox[{"readingsDS", "[", 
        RowBox[{
         RowBox[{";;", "#rows"}], ",", 
         RowBox[{"Query", "[", 
          RowBox[{"{", 
           RowBox[{"\"\<reading\>\"", ",", 
            RowBox[{"\"\<Timestamp\>\"", "/*", "DateString"}]}], "}"}], 
          "]"}]}], "]"}], "]"}], "*)"}], "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"items", "=", 
      RowBox[{"{", 
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"ag", "[", 
          RowBox[{"readingsDS", "[", 
           RowBox[{"First", ",", "\"\<reading\>\""}], "]"}], "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"grd", "[", 
          RowBox[{"readingsDS", ",", "#rows"}], "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"dlsp", "[", 
          RowBox[{"readingsDS", "[", 
           RowBox[{"All", ",", 
            RowBox[{"{", 
             RowBox[{"\"\<Timestamp\>\"", ",", "\"\<reading\>\""}], "}"}]}], 
           "]"}], "]"}]}], "\[IndentingNewLine]", "}"}], "}"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"outerRF", "[", 
      RowBox[{
      "bpW", ",", "rsMult", ",", "w", ",", "h", ",", "False", ",", "items"}], 
      "]"}]}], "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"frmt", "=", "\"\<SVG\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"params", "=", 
   RowBox[{"<|", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"\"\<reading\>\"", "\[Rule]", "53"}], ",", "\[IndentingNewLine]", 
     RowBox[{"\"\<rows\>\"", "\[Rule]", "6"}]}], "\[IndentingNewLine]", 
    "|>"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"makeAPI", "[", 
   RowBox[{"args", ",", 
    RowBox[{"funcWid", "[", "\"\<FBrnXpZX\>\"", "]"}], ",", "frmt"}], "]"}], 
  "[", "params", "]"}]}], "Input",
 CellChangeTimes->{{3.774023438966531*^9, 3.7740234450515413`*^9}, {
  3.7740234936755342`*^9, 3.7740235238095064`*^9}, {3.774023561235928*^9, 
  3.7740236154701366`*^9}, {3.7740236454741364`*^9, 3.7740237497552032`*^9}, {
  3.7740238289431615`*^9, 3.7740238332641706`*^9}, {3.774023948964309*^9, 
  3.774023982577308*^9}, {3.774024054404964*^9, 3.7740241664646225`*^9}, {
  3.774024297065279*^9, 3.7740243439364223`*^9}, {3.774024524304776*^9, 
  3.7740245332797685`*^9}, {3.7740248277816486`*^9, 3.7740248503176484`*^9}, {
  3.774024882386965*^9, 3.7740249047689753`*^9}, {3.7740250148227854`*^9, 
  3.774025048725784*^9}, {3.774025261843322*^9, 3.7740252668953147`*^9}, {
  3.774025649645604*^9, 3.774025650183605*^9}, {3.774025867798688*^9, 
  3.7740258703306603`*^9}, {3.77402605317223*^9, 3.7740260533002377`*^9}, {
  3.7740301435974545`*^9, 3.7740301696382856`*^9}, {3.7740302170178022`*^9, 
  3.774030299699966*^9}},
 CellLabel->
  "In[703]:=",ExpressionUUID->"3842b88a-197e-45c4-b4ee-241ac5786d38"],

Cell[BoxData["\<\"SVG\"\>"], "Output",
 CellChangeTimes->{3.774188430530279*^9},
 CellLabel->
  "Out[706]=",ExpressionUUID->"1e104de4-32bc-4aae-86b4-c5c75316762e"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
1P7H1d2pTPyXW/q9WXxBf5HgTSckeRHdsyeVJpEuMHxKqEvpgGKduik5lwj3
I/qBIVX+5OmSDHvkb2hIKRIKt+ov5L4KNV9KmsQov1zdF3UX2C2wdl97uGw0
VtnR50RKnf7oBNhPNCec++Oc78PiENSV0o+wyX3FO6enivU9sbJ6ln9hfP4h
wr8I9ZAG3VPJ9NRv/bovkUdwX9gYG2PjLt0YdB9ORV+W4stSf8nJ9krAl67P
MV3M0TrTvg3Ki/RdBtmVZ7TuW4/MB8+98rJBfJ179eXklMjEsDISrJoCMGkJ
SLn/UYr/StLvc/WXjfgS9ZfZffWO/sKbToAhP0fzKpn9BIq+AkrOJUIfZYpZ
Uj8Zd+FRvskUxEWX59hsnUeh3kvlQyYd4ua+8q+ugCKxK/uiK5X609o7J8ll
30dqcYgspkdY/00I8pDcyPqe5Lkvy78w3v8Q4V+EWkjklm5NRnUD1H1hY2yM
jbGx68agy6hOfOXqr1R8za0lyfaTy9uZgC91PcdC5V6nzo/xM1E9zOTi5j/+
04//6NOf4Rv81d8896OfvHV9cbOM8iJ9V67dat3wM3Lc1ysvk82SZSTY6MwS
u4cf//1P8nv4wos/ODc+nXurn/2b5/7lJ29NLW7aFoDR6z/emd0I47/k9Pto
8cfy4quw/mIPV93PdyXgTSfAqArI1+dM+FFOeVivUHYuKTZAEgay/CI0A6VK
qKIY0Rik5X3ZnHR7j1CsT9J4+sqOXNxX5uri2TkxlLEkzu6LCK1yq+DK+7Wa
9yWJncIFdbkXZP0IZ8rmCrkv66uwPD3vf4jwL0ItFBFZcZOkTpflbxCDvC8A
AACNo2rxlbgv1TCEyfbLwpKOYrJ9GPC1aVrPkYsv+3SvxLdINmZsZul3Y2Mj
8vFPfHJ0eslsvfTKy+C7Cmiue3lD/sjZPPelb5YMz99agvH78/6HZ9UbyGA/
t7nV7IfsVzkFYNn+R2n9xyT+K0m/Z9OJL/4Y6q+V8uKrsP6q+xGvBLzpPAqT
onmHV1o5QiZ7i5+QCsVQ+eVhLkmlP/o6o/B/O/SRyVU3+g7FAnn1BQP3yU/p
5ZeL+9KekHXouow436kaOx/uK7dYza/7KvAISw2jlbovy9Pz/4cI/yLUQhH3
lfcZ67KvnnZfyaNT94mA7gQTDIDqsBdfyRu9k/jSlX7xJR0j8SUs6Rgk2wcB
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
p+23q1PLVWdkM6bpZpM7V8+BPrCzzjGW49k8wqXcl9090Zuzev8Q4V+EHgTu
q4upXYlg9MiA+wJtoB7xNSWLr8l88WWVbK8TX2zwJrsPz4+R7msl674k68WL
mvhvKeuVo7xmufKifJeV5loJBrtF9oN/JBirO2b3debF76cFZkKnZBIXZinB
+D3ht+h3PvHEX37+C8fPXuFRYFdbGz8dercv1F9J9Zd481X9xX+r+yqLpN9H
Xxmpv4LqLzYh2bT0pb96LfgLbzop4hJzgVQg0r35Zv179ghb7ac36z08zSXR
f5Cv8vlBVOE3afVVCt949FW6rMhXoOXRLlBMsxV1vnr/Jk7U6Ba45k7pkJO6
Mg9OzhNhv86j4Zszk3eZuY9wSfelXofTISz/wlTzhwj/IvQgvtzXZ7/zHvvt
uYnltl8B0FK7EsHokQH3Baqm/TFf4xvzF0nxtRplfJnFlznZ3iC+fhauKvil
r31TTPfi/29PbG/kP1GtF6/14r/VWS9KeSklXorvUjWX1mgt37y+vG052Mb8
U6e//7089/W9SLsJbZIZCbaeI8FEA8Zv0d999RtqGD6Pwf/BD38saUYpA1/U
koYv1CH9ntZft9nFTmWbH9m0vOhPf9mXfnWB/sKbDvAF5lLHg0VJQQ54insQ
X+6LjyMjs22/AqCldiWC0SMD7gtUilO3oxfxNbY+J4mva0s3XMWXU8AXH5OL
mx8PI+6vL26a070S90Wl2UdiR030Sq0XqbxE3yVVdlGmy8puLQWD3T02+H9P
R3bL09//rtl9JeVhaafkmuzBDJVgUhoYv0UXri2kYfix/ro0uch+9Yef+gy7
vWp7qaS/ct2XVfq9hf5iN/wa11/zG6Nza3Xpr7r/GJQFbzrAF5hLHUI26z5N
iSoaHQ96CDzFPYiYkM9/AvfVNYhfzX/41rtXJlcxMLyMb/7oFNwXaBvt73aM
xdfa+DwhvhaqEV9svPDiD9j/TX/znYNiiZGkX3iTI1+mcGJhQ7Jere37Y3Nr
7FfP/PUX1EUbM4VeGuWl9V1kNVfstcqPj76X476IZknFg6kSTC4Di5eGfOZz
/zHRg2IYvtg0ymvq9u77JvvvSQukqL+uL272hes8ruZ9s6X1V7TyI7tRE1x/
zfrRXzbBX93U+Yg3HeALzKVOIbdpEeoLaMBT3IOg7quLEb+az37nvbpPB3QP
//jzc3BfoD24djt6ifm6PL0yOrs2Nr8xoYqvrYLiy+xGxCIiM1zIfOt7r7L/
PnxlUk2zP335OvvVN777Cl3olW1szFFeku/Sma7FYFxd3CozzOKLDbJT0lWC
JTeE3R92l8QVIdUkfN4C+a3vB7d6ZGxaWlVzdffR2bFgVYIXXvwBuQSkbf9j
nv5aEPXXMtdfm2OR/lrxpb9syim7QH/hTQf4AnOpczDaL5gvoAVPcQ8C99XF
wH2BioD7Au3BvtvRY8zXpemVK5H42gzE13IkvuYC8XW3OvFl6b54k+PQe8fY
f/+n//pzKc1+YeveD/+/N9mv/utbv9ZarzzlleO7SM3VyoyJYGzmDvEjZvH1
0fe+m5yA1C+ZL8EoA/b2bz9gd+ndY2eSLsjEgF283mK/+su//gKvARt67zj7
n//8+s+Xdx5J+utHP3mL/erNoYPq+o+e9ddWULMX6q+dQH8tRvqLTVQ2XX3p
L4P7Ot0tnY940wG+wFzqKHjgf2Y1QKzMAPLAU9yDwH11MXBfoCLgvkB7aHPR
lyC+1icWNq8t3phc3p5e3Zlpi/iS+hz16V6BEuF+5nd+7wnRevHxb37v99mv
zk3MidZLW+ilUV45ZV2p48rqrIWC49R3v5Pnvr7DDx2cjHBuZgkmGbBIgoUG
7Mr0MrtLf/DH/dkw/OBOvnzgR+xXP/nFu7wF8tJkcKs//olP8oo78XthP2S/
Gp1ekgLwq9JfG3fYJUwF+ms70F8Lm2yicv11YXKpav3VHZ2PeNMBvsBcAqDp
4CnuQeC+uhi4L1ARcF+gDdQjvmZWx4J8+82ri1vXl7enVndm1m7Nbdzm4mux
evElWS+e7hVXfGWivf7uq//QF+Z6HRu+zNXNB2cu/cEfB70fz3/567T1Misv
scSLkl16zbUxLo55x7Gwceq7+83u69R3vxMJt/iUZAm2REmwbBlYphFy4/Z/
/vEb7F79xef+47mJOZ4DNjq7+sP/8mYiFZMWyL1/H6Sr/eXnnztxdjQ0YI9O
nht7+lOfYT8c2PdNNQDft/6K+jFD/XWbXQK7ouuJ/ppbvzK7yqZumzsf2eNZ
91+IIuBNB/gCcwmApoOnuAfpZfeVVMXWfSJVAfdVL108weC+QNUU6HYs8+Iv
L+y4uHV9aXtqZWdmbTcrviL3VV58rVqJr4d8JO4rzbQPc71+5/eeUJsi/83v
/v7I+KycY69YL7rKS1Reku+KTZfZcY3Nr2fGnH4Im536Tr77Co4uNUtSHkyt
BJPKwEQD9uLgPxE38PeeuHBtQczAP3N58nc+Qdzqj3/ik1eml8j1Hz3qryVS
f60E+otd+/jCJpu0HnPvDe7rdPM7H/GmA3yBuQRA08FT3IPAfXWlmuDAfdVL
F08wuC9QNfZFX75ivqKFHReChR1D8XVzZm13duP2/ObdFl/YsQ7xxdO9+F+S
xHolTY6js6svH3iN13oFHXx/1H/gxz+9PLVE1nqphV75ykvyXaTmMtiteLAb
y4dug9yg+1Pf2c/PIS02s5ZgUhmYZMDe/+jC1/e/FN3AP+5/afA1dlfVELDx
+fVX/vO//OGn/oRv+Yef+sw/v/5zcfFHUn+ZDZiF/nqwnNVfwbKPkf7aZVOU
TdSrfNnHOQ/LPrKHKFd/NT30Hm86wBeYSwA0HTzFPQjcV1eqCQ7cV7108QSD
+wKVIhV9Gd7EfXU78oUdx8WFHdd2Z9dvz2/ekcTXciC+HvgRX5qAL97nKKZ7
ieVe4Yjyqea3wjT7TU2avZP1UpSX6rtI0xVIrdmyI9d9sUNLbZKpByMlmL0B
k5LwN6O1IGP9dU8sAOMJYOF4GFflyYs/OhWAmfXXik5/Bbn3t9n5s8sJl33c
SnLvSwZ/uXY+1v2nwhm86QBfYC4B0HTwFPcgvey+uh64L1ARcF+gUly7Hcu4
r0y+fXZhx1R8bWfE14pX8aXrc8yKr/tqpn1mGUez9Vq+KSd6WSsv1Xep5ord
vSszq4XHyf0v5LuvbLOkpQRTy8ByDViyEKSagZ8YMEV/PZS+RC/6azVff0nL
Pka591V3PjY69B5vOsAXmEsANB08xT0I3FcXA/cFKgLuC1RHOyPuk5ivsTmL
hR0F8bVapfha2tGVe93PWK/N7DKOxlovstDLWnkpsisrr9gNvDy9YhiXjL89
+cK3c91Xcmg1NMwkwSwN2FrWgBUqAPOrv4Kf7z6k9Zey7GMY/HVjnOfez6xe
mm5r52OzQu/xpgN8gbkEQNPBU9yDwH11MXBfoCLgvkB1OBV9+Yz5SvPt04Ud
l9SFHXfjoq+KxJeuz9G+3CubZm9lvagSL11ll2q6LvExtUyOi8qQNjiR575O
7n8hObp4VuLZipVgTgaMJ+HzAjDRgBkKwGrTXzdV/RXn3i/x3PsNL7n3Xdz5
iDcd4AvMJQCaDp7iHgTuq4uB+wIVAfcFKqKdEfdCt2MU88Xz7aWFHZfJfHuv
4ksT8KWUeynpXmbrlXQ4ijn2qvKSrBdZ3yX6Lsl0pVJrckkdF/Qj2ebEt7+V
475e+HZ0dKHYjJZg87QEczJgdAHY1l27/sf26K80935Wzb2fXbvsKfir+0q/
8KYDfIG5BEDTwVPcg8B9dTFwX6Ai4L5AFbQz4l6O+VqkYr50CztWKb60sfbZ
cq/Ueq1lmhwNuV7mQi+6xEv0XZLsIu3W9cVknLcYfMvchscTL3w7OrpQbGYr
wYwGTErCJ1sg1QIwTf9jxfprJ9VfRO79apJ7nwZ/sUle0n3Z66+6/3jYgjcd
4AvMJQCaDp7iHqRfgP8E7qtrgPsCFQH3BarAsugridou/F6fxHyNzq2PL2xe
XQwcyFQc80Xm25sXdmyD+LIv9ypuvcgSL8V3SZoro7Outfg4Zz3Yxvnu69vf
ilRb0ikpZIipEqyYAZtczikAmw8LwOz010Of+mtX1F9y8Fc29z4K/vLY+Zir
oJulv/CmA3yBuQRA08FT3IOg7quLgfsCFQH3BbzT5qKvNOarZYz5KrewY574
emgQX4Y+R125l5P1Ihob7XyXaLoInXV14azLOPatb+a6r8iziZ2SYm5YrgRz
MmBqAVhe/6Nf/aVb9nEtJ/deCP5KOh9nVqrWX3BfoGfBXAKg6eAp7kHgvroY
uC9QEXBfwDtORV9PPPFEX19f6W7HKOZrcuXm9Nru7Mbt+a27XGXIMV+FFna0
Fl9psj29nqPa5yiUeyVde5loLxfrdTlrvRLlRfguG801MT/iMo5+8xu57ouX
h4ltkqkHSyRY0g5pacCkJHy7AjCq/5FKv69Ef9G594ux/mITmJ2q0Pm4Uabz
8Zm9z7DRfaVfeNMBvsBcAqDp4CnuQeC+uhi4L1ARcF/AL/ZFX/EGgftisNdz
15d63u04Nrc+sVBhzJeN+MpJto/Fl9TnmFPuJazhmG+91EIvQXmRvstScw2P
z9kMS/fFjnWOjbhHMuPBBAlGloHZGzBzAZjS/yjrL136vS/9ZRf8xTsfb7Jr
mSjR+cgeK/587d3b12WlX2MAAABAlrr/aQLtA+6ri4H7AhUB9wX84lT0dfr0
E48e9bHBXsw5jt2OK1G34+KWGPO1sGWM+WqT+NIGfKV9jlS6l1Tu5WS9Mo2N
lPISfVdhzaUbueKLDXYU8RzErDBRgmUywRwNGF0AZtH/SMZ/tUd/UZ2Pd6LO
xyD4a4tdHZvqTvpLtF78Kct9Kpulv+p+wQIAANBx1P1PE2gfcF9dDNwXqAi4
L+CRAkVf/K2cjwTHbsdN3u04s7ZbLOarHeJrPRRfmj7H/HIvg/XSF3qpystG
dp0Zmy02csXX0W9+QzoBnQQjy8CMBsy2AEzqf6xTf1kFfyWdj1tJ56NlkyO3
Xon4EvUX3BcAAICupO5/mmqnNTTowtAIo9Wq+6wLAffVxcB9gYqA+wIeKVb0
JY6kAMzcAimu7Rh3O+5I3Y5UzNfDIgs7+hBfUsCXQ7lXdg1Hk/VSCr1I5eUk
u06PzliOD77xDzbuS2qT1EkwogxMb8CSW+RUAEbEf/nQX67LPkrBX1Tn427S
+Thm0fmolnuJgz10Zv3VoNSv5E1nAYByYC4B0HTgvmJGBvuLMTA40jAF1svu
K6kWqPtEqgLuq166eILBfQFfWIqvpLZEfTG3LAALuh2nV0Zn18bnpbUd5W5H
DzFftuH2lPhSku3pgK94MUep3EtqctR1OBKFXhbKq5jm+ujKtDSc3Bfbhh9L
zQqTJFiaCeZqwHgLpFoAZhH/laTfV6S/3Dsf781t3mHnxs4z6nzkaz5Or7C7
YS73MjxcXVP6BV8BfIG5BEDTgfuKKey+AgZH6j59F+C+ulJNcOC+6qWLJxjc
F/BF+aIvGwMmdDuuJ92O0/puRy8xX1nx9cgsvua36CUd04Cv5Zt0n6Pa5DiX
NjnyNRxp66Uv9DL4Lku7ZTmO/MPXbdwXO4R0GqQEk8vASAMmrgXJWyDn1gwF
YET/YyH9FZvPR4T+KhH8Zdf5uMmm/ZXZ1UvTcumXrsmxi0u/4CuALzCXAGg6
cF8iraGBtJpraKQV9zSy/zIyNJj+LvyV/LPmFH/BfXWlmuDAfdVLF08wuC/g
Bcukr+S1Old86Vogw4j7qNvxatDtuJ3b7egx5stefBFLOioBX2Sfo67cy8Z6
FVBeOpd16vKU07AJupcObS/B1CgwyYDlFoDp+h+j+C9y8Uet/nroWX8pnY/L
9JqPPPReXvPR3OTYxaVf8BXAF5hLADQduK+U1HzpuhiT2rDUdBE/6nh62X11
PXBfoCLgvoAXvBd9SQVg7L1+89EzSdGX0u0oF31J3Y5V5NtT4uueJL4MyfZy
n6OwmCMv97rCy73EaC+qw9HSepl9l9lrfXhpMnfYuC+yWVKSYPkGLFsDJrdA
qgVgYv+jQX+tyos/hvrrrll/ecm9lzofV+jSr3DNx6Xtq0LoPXsc2ENhWe7V
faVf8BXAF5hLADQduK+ExGKZGhjVjRJj1hz55dd9fee/nH7j8PjOrbu6wx0Z
mWUbJKPCCwNwX6AyDO6L/XfxGa96GP7agM6niqIvdfCI+7G59QkecR92O85u
3J4Pxdeibm1HrzFfOvG1oBdfk6T40vU5WpR7ma2XpfIq5rhOXrzOh/jD97/+
NRv3xY+iSwzTSTCdAbMsAKP7Hw3p9zn664G9/ioa/JV2PvJZzc6BnRIZel/4
UeqC0i/4CuALzCUAmg7cV4yV+qI2s/xgB+HXfeUWgUh7qPDCANwXqAyD+7oy
uWrzV8LXQMlZc6m06CsZSxvPXkoi7he3ri9vTyndjkvE2o4Via8H1uKLSrbP
63OM0r00TY651steeRnslv1wcl/iICVYrgHjSfhkC2RSAJbb/8jjv2z0l5L9
VY3+2s0GfylrPpKh9+yhKPY08dKv3Ke1k/UXfAXwBeYSAE0H7iumt9wXJ/kJ
3FfXAPcFKgLuC5THpujrtMXyjoaxuP7sxanlKzOrYsT9jDbi3rS2Y6F8e1l8
JUVf5KqOBcRX1OeoKfeSmxzdrZfBd0ki68SFa67j8Nf25Yqv97/+NfGguQZM
lGCSARPXgoxaIA0FYLz/0aC/luz1V9r5mK+/igR/GdZ81Ibe92zpF3wF8AXm
EgBNB+4rxi64S8wEkz/YJPcl/QTuq2uA+wIVAfcFStK2oq/LMyujc2vjC1HR
lxJx/4CIuLfudjTm26fiS+p2tBVfS3rxRZZ7cfFlbHI0WC8b5WWQXcfPX3Ud
NkVf73/9a2S/pH0ZGG3AlAKwnP5HR/2lrPwoL/sY6y/n4K/8NR+tQu9XLk4t
taH0iz3mdf+lkYGvAL7AXAKg6cB9JSQOyyCxiG3Kh92H60UmC0b2D4RLTHr+
RAa4ry4G7gtUBNwXKIlYHGJ4jy5V9BV2O16ZXUuKvqY0RV/eux0NCzum4msz
FV/Bqo424osK+FL7HNNyL6rJ0dJ6kcrLLLuOnZtwGjbu6/DX9iVHNEswGwOm
bYHM63/kd95GfyUrPwb6a9Okv9RlH8t0Pq6qnY9U6P2EEHrfm6Vf8BXAF5hL
ADQduK+UVGz1DxArPbZGBlPdFKmvVvqZYuorrSOT0e0vcxqZD+hWp1SA++pi
4L5ARdi7L7Yl+4nH8c0fnYL7ajrtKvr63OWZ1dG59fGFzauLNyaXb06v7s6u
35aLvsKI++Ldji759lrxtVZUfAl9joZ0L6ncS7VeZKFXrvKSXNbRs+NOw9J9
8WOJ56BKMLIMTDJguQVgav9jEf21Zq+/vHU+OoXex6VfxUPvc0u/4L5AL4C5
BEDTgfsSkU3UAGNwMPhPUksJsqxQw6NefGn3KR7S7hMEcF9dDNwXqAh79+V9
OVfDoUFTsHRfZYq+ltKir42J1tb1pe2plZ2ZtVtzG3cWNBH3ay5FXy4xX7L4
ivLts+JrSlrV0Si+5IAvqs/R3ORoY71yfZeqsz4YGbMc7/39V23cV3Is8Rwk
CWZjwAwtkOoSkGr/o6X+Yl+iqr/4N57VX2WDv1xD7+c276D0iwNfAXyBuQRA
04H7ktCWVRHVVWm7Y0nzJfYstkaEn0u1X+JHxE8Maj9BAvfVxcB9gYqA+wKF
EcWX4fXZV9HXxMLmtaToa+P2vDHi3le3I5VvnxVfG7biiwd80eIrLFJK+xw1
5V6GJkfJeqmFXqryMpuuI8OjlsPSfSXHUiWYrgwstwBMaoGUC8CK6a9ljf7a
yOgvvuwjlXvvpfNRG3rvvfTLUlzDfYEuBnMJgKYD90XR4oFaogTjmVqyihoc
HHJK2hIwxYsljiursgzRYkQGvx64ry4G7gtUBNwXKIxT0Vcx9yUWfV1Nir7W
b82l3Y5WRV8luh1N+fazG7eDoi/rii96SUcp4Msovlytl73ykozW+2euWI6D
X/2KjfviRxGPrpNglgbMXn8l8V9l9Jd52Ucx+Iso/TLqL9fQ+zaXfnVs4j18
BfAF5hIATQfuqyZij6Up1KJ+bf5IYr/y5RfcVxcD9wUqAu4LFKadRV/jSdHX
WlD0teCj6KtMt6MkvpJ8+9xWR634suhzLGO9cn2XKrUOs3H6cu6wEV/v/f1X
+VHEo0sSzMmA5SaAif2PmfT7ZPHHudCA5eqvVSf95bPzUVf6xSY/Ow3vpV+6
R7hjS7/gK4AvMJcAaDpwX/WQo74oYrmlDcHP+X0K3FcXA/cFKgLuCxSjDSn3
i+t00ZcQcX9/WS368tDtKImvB4Z8+2LiS17SkVrP0Sbdi8z10hV6qcpLll2U
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
7Ta8rsiABQbv6HCQA3b4I6IALI7/0ukvdsm/DBedJIK/qM5Hcc1HP6Vf0yti
6Vd+2+Na5as95kZ+sRNjJxnG3a8UcF8dG3cPXwF8gbkEQNOB+4pJ0u/t3Bey
7uG+Oga4r86hKycYB+4LGKjafSlhX7fmNkuFfa3muC/HhsfFvIZHfcq9fdGX
GHFPdjvKMV/u4uuN3xwL0r0OffiL9z9654Mzvz42wkO9wlqvwHoFhV7nxk+c
nwiUV+y7zoxOD4/NnB2fPTsxe+7q3Pmrc8e/9Q179/X+1/axHbLdHg0uM7zA
uAaMncA7UQFYmABWUn8JwV9k56Maeu9c+nV9US39ykm8b0/boyHya+POzNou
O5Mw7j6M/OquuHv4CuALzCUAmg7cV0witYwVXUl1WMPrvqSf9I776krgvkAb
gPsCBuyD7gvUk0RhX3NB2Ne1pRti2BfZ8Fgy7MtPw6Mh5b5c0ZfY7XhQ1+0o
xnwdjrod1VUdZfEVxNqfZFv+8sjpd44O/+b42XfDXK/DH106ciaxXld5ldfp
K1PDo9Mj4zPnJmbPX52/cG3+4vWFS5Oty1OLbJx84Vv27uuDf/g62yHb7Yng
kkMDFlwpu8ZA67HTYCfDTultof9Rp7+SlR/5VdPBX0LnI7nmY7HSL/a1WiXe
W7c9kqs9yu5LX/plE/m1GEd+zYSRX0HcfRz5xR46722PdUV+wVcAX2AuAdB0
4L4SEvmlL+lKzFejy77avc4jXlqrBu4LtAG4L2Cg0qD7i1PLV8Kg+yDsa2l7
Kgj7ujW/2aawr1INj5qUez9FX/puRzXmy0Z8sd++ffgU73P8zfGzB0+eP/TR
xffPXP5gOOhwPHF+IrVeYzNnQ+XFfdeVqcXR6aWxmeXx2ZWJuZWJ+dWPvvOC
vftiu2I7ZLuNDdgEOxw76Pu8BTLUX7z/MQjAV/TXmwb9JQV/aTof/Zd+UW2P
QemX+2qPbYj8YocL4u5Xg7j7KPKru+Lu4SuALzCXAGg6cF8pgtkaUFd6bI2k
v2501RfcV9cB9wXaANwXMJDb8MjffAsG3U8HQffj8xtXF3nQ/e6sEPa1JId9
lXFfUcOjFPbFGx5T91Wg4dEx5d6m6IuMuDd1O4ZqiAy3D8TXe1x8nflV1Od4
4VBc7nX83MTJC1cT63VuYvbCtXle4jU6sxT6rtWrC2vXWuvXFzcmFzemljad
Fnlku2I7PCcYMHY4dlBeAMZOg/c/shNjpxeu/6jVXz+P9Ze587FM6VfivpLS
L5vE+8B9zVm1PXL3lW17fLCU1/Zo775WRfcVR36xB4qdwOTydhD5NV888qsz
4+7hK4AvMJcAaDpwXyKC/eKKizE4GPxn9seNNl9wX10H3BdoA3BfQEf9Qfe8
6Ms66L5I2JfQ8Bi4L5eGR/uU+5MXr0vuy77oi1jb8fBHbx/OxnzpxFdU8RUF
fL136sLh05eODF9Jyr0+ujw5PDp9NrZeV6aXxmaXJ+ZWry2sXW+tTy1tTi9v
zazcmF29Mbe6Pb9208l9sV2xHXIDFtSAjU6zw8UFYMHlB/2PcfyXlf5Kgr8O
n8p0PmbXfHQt/eLfjmviva7t8Vq27ZFNqty2Rz+RXzti5Bd3X/fYAzUTxt2H
kV8bo6H78h75Vbv7AgAAADjt/Geok2kNDWZFlwRREdY44L66DLgv0AbgvoCO
yoPup4Og+/GFTfZiHgbd785t0EH33sO+5IbHdceGR2qFR8uiL8l9pcs72kTc
G7odQ/H1hkl8BbH2QZ/jufGk3GtkfOb81bmL1xeuTC8G1mt+9drC+uTixvTy
1uzKjbm17YX1m62NncXN3aWtW+de/r69+Dr9vf3XWutsh6EBW2SHYAdih0sK
wNhpfBDor8vsxDL6S2h+fCPWX+bOx0zp1/Fzaug9ueAj/y7I0q/8tsds6Vf+
ao8WbY9eIr/kuPvNOzNrt6ZWbgaRX5XF3de11GPdL1gAAAA6jrb9G9QEWiND
Q4OZaq+gAGxopNV47RUC99VlwH2BNgD3BXRU7L6CoPtRKuh+0UfQvS7sKyn6
MoR9BQ2PS0UaHi1T7rn4Shsec4u+woh7stsxE/MVi6+fBqs6yuLr/dOXPxgZ
PR6Jr8kzcblX2OHIa70C6zWzvBWUeAXKK/Bdyzdur2zfWbt5d23n7sUfvGTv
vkZe/C7bFdsh2y3bOTsEOxAvAGOHZicQ9j+yWxHEf0n6i518ciGR/soGf8md
j0rovaH0i995tfQrJ/He3PYorfa4lG17XMu0PZaP/LKJu1+i4u5Hw7j7i1NL
cF8AAAC6krb9GwRqB+6ry4D7Am0A7gvosFnksUzQ/eUw6H6i8qD7OOxru0TY
19z66Jy8wqN9w6Mu5V4q+sos73hcTPoi1nakux25+Hr3BF/V8VdHk1bHRHyF
fY5j0+cmonKv8dmVqwtrvNZrbnV7YT2o8lq+cXt1+87azt2N3fubtx5s3X54
487Dy//pFXv3de7l77NdsR1OhwaMHYIdiBeAsUOzE2CnwU6G66+w+ivM/jo6
wk77rUOn2CUkl6PrfBTXfBRLvxL9JaV+kaVfauK9ue2RWO1xbs0+8otNOTny
66a3yC9z3P1EEHfP3VeFcfe1uK+2HRF0K5hLADQdPMU9CNxXlwH3BdoA3BfQ
Uekij5emgqD7sfmNYJHHIOh+Z3Y9DvvariTovnzYVyC+ZlbLNDxy8WVIubcp
+npLKvrKxny9+e5x9lu28a+ODvNw+1R88YCvsaDP8dJka3R6aWJuled6za7e
mF+/GVmvm3fXd+9t3npw487D7buP2LgZDqewrwuvvsR2xXbIdst2zg7BDhQU
gIUJYOwE2GkE+utiqL/C5sco+v7oMDt5dgnsQqTgr0zno33pV6HEe6vVHmdW
5bbHVqbt0Rj5dd8y8qtg3P12HHe/fps9XOxkoqUeZ7tnqUe86QBfYC4B0HTw
FBej1Wpw/yPcV5cB9wXaANwX0FGt+5peSRZ51AfdP/ASdC+FfbVuuIV90Q2P
ivtyaniUUu7loi91eUd90Zcc8/XeSbYZ+9Rvjp8NxNdHl+KMr6z4mgnSva63
wnKvte3Wxs7y1q3Vm3fWd+9t3X6QKq97j3bCsXvPzX1d+seX2a7YDtlu2c7Z
IdiB2OHYQdmhM/rrwrUo+ytc+ZGdNjt5dgli7r3Y+WhT+kUs+GiReE+2PdLu
i2x7dIn8kuLu6civInH3D7Jx92yS86Ueb1a61CPcF2g0mEsANB08xTKt1sjQ
IMFATJQANjhS95kWBu6ry4D7Am1AdV9HRmb3/fAkG8+9+gHcVy+TG/ZV2H2J
izwKQfe3tUH39u4rK76sgu7LhH1dXTC7L3PD4yF9yr226EuIuCe6HQ+eSGK+
2N7YzvmqjicvXBXF19jM8tX51SDda2Vrfi0o91rZvr2+E9R6JVVeifJi49b9
R6ODDg2PbNwM7RnbIdvtyvYdXgDGDhf0P2b0F29+vMpOkp0qO2F22kLwF9X5
qITep6VfyoKP7+aVftm3PZ6dmGdfd4dGfnH3tass9XgjWOpx2sdSj3BfoIvB
XAKg6eApFmkNGdd4zAD3BffVKcB9gTagui/2gBse/OoOjT8jnUaVQfeh+5pb
yyzyWGPQvUvYl9rwmLgv54ZHNeW+RNHXm79Nuh3jfPszV46eHTtxPljVcXh0
+lxc8RWLrxsL6zeXwnKvjd37W2GHo2i9bt0Pxu1wjDm6L7YHrr/YbtnO2SHY
gdjhZlduiPqLndJwEH1/nZ0kO1V2wjz3Pgj+4p2PNqVf5IKPJ879Vij9UhPv
+XdRpu2xWOQXm3jzW2rkl7e4e2qpx112GqH7asdSj237A4U3HeALzCUAmg6e
4hQH8zUwONTclsdH4pXwn8B9NRq4L9AG4L4AScWLPD4bLfK4UGSRxyJB9zeJ
oPvZjduk+9KGfU2v2Id9FW54DNLaj0Xua0hIuZeSvsSir2Rtx0y3I4/5Oj/x
4aXrZ0aneLj96MwSF1+zgfjaCcXX3c1b9w3W6w4bDx6NO7qv3bhZMi4Au88O
FOqvHUF/LYXR97Ps9NhJslPlufdx5+OZoPNRXPNRLf0SUr/YjYpKv46NsBtI
JN47tj36jfxi0yyK/Kog7p5c6nFRXepxIVrqsVL31ba4e7zpAF9gLgHQdPAU
J4wMpmpraKTVao0MDoT/Pcj2ChohEzNWZclXLOCMxwjPJhV1AwOD7ITtj9HL
dV99MfWehl/gvjqHrpxgHLgvQFKx+/pcsMjj3PpEazNY5HGFL/J4p7pFHs1B
91OrO0TQ/QLlvlzCvk5evK5zX7YNj0eChsdfvG9R9PXuibcOfcg2znQ7nhv/
8OK101emzo7PXghWdQzC7cWKr7VAfD1IxFdgve5F1osrr7vhuPfALexrbPCV
wJ6FOxT014O1SH/dnAn1FzsZdkoXry+w02MnyU6VnXC28/E0uyh2aValX0ei
0i9z26NhtUf+fZnaHo2RX5H7WiDcVxr5VXHcPbXU4x1hqcdNvtQjewDhvgBI
wFwCoOngKY5Jq74S7cRtWGqhiE2qPwllk5FBujxtYNDWf8F9dZmagPvqHLpy
gnHgvgBJpe4r6BebWWWv4ROtrcB9rXL3JS/y6MV9lQq69xH2xcUX6b6khkdD
yv3bYYGToejr57zoK1zb8b1TF94/cznodrxw9RSP+bo2f3lqcXxu5XprfWZ5
a14nvpJar1h5sXH/YTBc3RffD9shqb+C7K8g+n6dnRI7MXZ6PPeenXDY+XiZ
dz6yy8kt/Xo7W/plSLyP2h4p96W2PWrdl0vkl1PcfZVLPd4SlnpcZydc6VKP
cF+gcWAuAdB08BTHJGVfA0k7IzdRA0J7Y+KmBqroeRQqz3TuS9yEwM7J1eu+
2A9rHP/rv/6/+Kj3NPwO1QzAfdVFL7uvIyOz7Tk03FdHIbov3dsud18FXqLZ
q/eV2dWx+Q32Ms5eyacD9xUv8ii4ryoWeZTDvtbzgu7naPdVLOzryPCoFPZl
bnikU+41RV9DcdEXX9vx+LmJDy9eOzM6fW4izLefXb62sDa9vBmE24cZX2Kr
465Q7pXUenHr9SAcTu5rfPAVtoc7tP4Kmh8XN2+x02Anw06JnVgQ/DUxF3Q+
XrzGTpudvGXplzbx3qLtkX8X9pFf/LvmpV+0+5pT4+5N7ouMu/ez1CN3XzcT
93VbcF8b7NGD+wJABHMJgKaDpzgmsUqCP5ILvyqVX1mtRVosIZFsIO1yFCvB
rE6rXveF0bYB9wU8AvcFSGzcV7FFHtm4NL18ZXZtfH7j6uLWZOC+dmc3Yvd1
8368yKO7+9p1d1/qIo/6oHtfYV+HE/fl2vAYFn39jFjeMUr6iiPuLx87O8bX
dhwZn7lwfWF0Ooj5mlramFvdbgWrOt7ZIMWXYr0esvHo0dUDbmFfEwdeuRfu
iu1Q1V8bu/fZCbDTYCfDTomd2JXpJXaS7FT5mo+Z0q8PgtKvn4WlX+KCjz/L
ln45tz36i/yyjbt3XOpxtdhSj9x9iUs9bt1lDxd7xNiDxs5qPHBfa5fgvgAQ
wFwCoOngKY6h3Jda+EVu5vXwht0TpWnZM7U8L7ivHhlwX8AjcF+A5FUBv+5r
cT1Y5DFwXwvcfd2cXtudI9xX2MPl7r48LPJIBt1buC+x4dHkvpSwL/MKj+aG
xzf48o5C0ldU9BVE3E+fvzoXdDvOht2OYb798o3b67v3btx5aBBfifViPHz4
cMIx6H7iwCtsJzr9xQ7NToCdBjuZmZWw83E26Hw8d3WOnXAQep8t/WKXxi7w
jWTBR8e2x3S1x9h9kW2PpPtK2h6d4+7zlnpM3Je3pR65+8os9Ri5L/ZwsUeM
PWip+5pegfsCIAFzCYCmg6c4hqzoUgu/qnFf0V4HhkbisyB2Hx+aru1qGT4p
AffVIwPuC3gE7guQVOe+ljYC9zUauq9rizcmV27OBO4rs8jjsn6RRxf39ZB0
X3yRR537Mi3y6Bh0z8UX7b7ChkdD2Je8wqO+4ZH95O3Dp9754Axf3pEnfSVF
X/HajmtTS5vza9s85mvr9oMc8RXOgYcPH95/8PDe/Qdj/+llJ/fFPv4grBzT
6S92AlHw19o2OzF2enzNx5HxWbH0K1nwkV3gz+zaHjOrPbpEfvFvyiryS3Rf
ZNy9fqlHNuX0Sz0+dIr8Ih4K0n3duCe4rxvs9EZD91VgqUdL9xX+TWgHeNMB
vsBcAqDp4ClOoOSXUvhVRdx9vM/gMAaDJW6WtxszcF89MuC+gEfgvgCJpfsq
tMhj6L7m1sYXNlP3tZlxXys+3dcD0n0lizwG7stpkUcedK9xX4awL9V90WFf
vOFRCfv6+XsfSg2PUcr9eyd/8f5HvwpT7g99dPHI8JXj4fKOQdIXL/oKI+5n
V260NnbSbkcl40sSXw9C63Xn3oPbd+87iS822Mdl/SVkf7FDB52Pt8LOx40d
dmJJ6H1U+hWkfvEFH4O2R3Zp7ALZZUqJ91Hbo7ra4wdR26NN5Bf/XsjIL5P7
0kR+GZZ6ZNMsXepRdV/ucfcW7ov3+d6b27jDHjF2GtcC97XJHj24LwBEMJcA
aDp4ilNSrzUwGPujqNYqWkKxlXYmesv7yiorg/uKj62VbrkbxDi5r4HBY4Xd
C+m+rkyuYvgdvzpxHe4LVA3cFyCp3n2tB+5ribuvW/buy2mRR+6+hEUe76cN
jxuZoPvJZcJ95SzyKATd27gvLr4k92UK++Li63Bew2Occn/w5PnDpy8dHRk7
cT5Y3nFkbObCNZ70xYu+wrUdd+5K3Y6q+GLj/oOHd+8H1uvWnfs7t++5ui/2
8YeU/sqUft15yE4mLP26GZV+TS+xE2anzU6eXcLRkVF2OQc/TBPvc9oeD2fa
Hv9/9t60O47rzNbEj9Infu5ru2z5H6i77G6b5a7rbnm261q9iqha1XZXudq6
1VaVJReu2yrJdvvSokjZsGRREklxnsAJ85iYMhPIBBIzwQHZ74kTw4kzxYkh
EznsvWJxgZmRESciTiQQz9rvfo2RXwL7spQ9inH3MfY1veLS6jHGvtZ2Y3H3
m2Krx2eZWz1a2Ne6xL4ah3SLCexrIxv7opsd7AvqSWEuQVC3C3exKCFLPgBI
wkuiikJfweaV3SkAK9nW5Wz8SsW+fvSr68Wyr9TnCErS+HwN7AtqtcC+IK3C
x9hz585pH3V5k8ds7GtskbGvaY99LXjsa6VN7OupiX3Nre2E7CsKujewr8xN
Hjn4uqCGfQnsSw37OheyL12Hx7Dg8eObD72U+6nrD2dvjy/cm17y2jv6SV9G
05fi+ArB1/7h092DJ2Nv/Gsq8DX57/9GH6eNNOP4S6x8lKxfi571i4ZKA6Zh
0+DpEOhAvMT7qOzR1u3RHvnlneFUcfcZWz2uyK0e+bwys6+nmdmX5r4wsK8V
j33RjUbjmfbYF92AhbMv/oUA9gV1ozCXIKjbhbtYUnmYN02M2JOGfhVV76g6
tcC+oPQC+4LaILAvSKsWs6+awL72Fjd89lXVsS96rl+oNP79zd98+atfG/BE
P/zizd9MLlZV9jVXabzxq9986Sv+mt/8/iv/8buzUysbGva1obCvqsK+lmX2
VUCTR4egezXs62ycff3eY19hh8d4weP0jUc85X5lfKEyvey1d6zvVBo86Ssy
fUXVjvFSRxF8be8fjr7+Wir2NfGLf6WP00aeC/iLdhFWPgqpX8z6Vdk6YA0f
K5s0VBowDdsre5xTyx79bo/eIrKvs0mRX3ni7u2tHmX2taywr6rCvjY07Ouj
q3e/+f0f8kn7rR+8cuHGPS37mq80fiHcCN/5wSu/Pn2O7o4g7l5mX9WQfW0c
0I3G2FeZs69aZvZl/0IA+4K6UZhLENTtwl2sVZkU+//I8NCgp6HhkYKKHbU1
imBfUHqBfUFtENgXpFU72FdZYl/PtOzr0o17AwZdvHFPZF8TpepnP/9FdbXP
/MWLj+ZWNU0e4+yLNXlU2NfEcp2zr8Qmj1nYlxh0fzXGvtSwr7NK2Bf9QK/T
arzD44Vbo5+OTFx7MH1zdI4VPHop97Or9dLa1urG7tr248192fQlVjs2GaRi
GV8cfO0cPNnaO9zcffzw5+nY19gb/0ofp43Qprzax1jlo2z98hs+7tIgaag0
YBo2K3scnaMDocO5EHZ7vHj7LOv2KEd+qezLj/wyx90XyL4eCeyLporKvmKt
HhX2xcsef/7Lt9VJ+8avfiOxr8nF6ue+oJne9CK9ZWJflZ1ndHMteexrrrpD
A5v02dd3wb4giAtzCYK6XbiLj0v6dK52sa/wbyH+ynGxL2kYdmFl08qJ7KsD
x4yVu27ltOyrwGGo7Mt9y1Cr1Ur29V169J702Bc9jC/U9pY89sUKHhX2dX9y
gc+Kf/eMXhsBBPjpa2/w1+9PlUL29Xc/+smAZ5u5fn+S1zxevTfB7TR/+w//
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
YndnX9mMONbhKxtKw75iRxfwkOnhGLpJPV2t8VlpQthMb6thXBJtSltoqL6c
ZxeOt3+2c+K0U01qmarcVjD8RggUciURHynsK4Jfucoek0dh2LxQlWkvkLQJ
7KvHBPYFtUFgX5Aqd/Zl+UPGUfRInpZ9/eLN3wx41Y6cAIB9ZWZfz93Yl6Xg
kUvKvTexr+da9nUYY19TnH1NM/Z13WdfYzH29WFh7OvC8bGv5cYhTcWJpRp3
fJ3+w/np1Y2w5vGdYVbP+9nPf7Ew9rX5mAeL5RTYV4cpwSQjODVO8oqkyGCh
TaLuV+WeS5Ivx2x48f7vHphkCX6y9Bp0vp7ZuIb2U2b4lYZ9GQeUORBdJETu
Hqd07CvRrJaffeXZhePtXyj7SjrtWuX8HsJvhEBaqNVx7Cvu8orJvQUl2FeP
CewLaoPAviBV7uyL/tpIu+SseZTAF9iXK/t6DN9Xx/m+/u2/vUXT8r+/96HY
55GmLk1gjr9+8avfFOX7itU8Lnk1j+lvXrCvDlPsWTLs/6Z97LR+ut/hV/65
FCMEGtojwi9LrJRFiYlJqT1cGdOXkmO64rMuBfuyjChjbaZoI7OFsDvtxPK2
parQPmT3kWTeReKeHTPFUjRCSDztAxm+r5KE3wiBuoV9eWuNDA8NRgTMy+VP
UYIJ9tVjAvuC2iCwL0hViryvDz5oJ/v6dwV8hezr7370E3prttJQ2dfUysZA
0Oex89lXyqz72++L7OtBkPc1F+V9le15X17g19PnRy3P+zqy5X2V+zLv6z95
pq/J5brKvma9Nqa+9Yum94/Z9J6vNFT2teCtqe/zaM/7Snnn0s0O9tVhMrhh
HKFGa5Onu0n551JCtn0MfulogmuIlxN+cbucudGXWQ5tELXH4nR0jnxk2khg
zDvSNXpM/lS4w1iA1bTb+U01kmy7MChtnr7jrHI77Vm+r5KE3wiBtGnxbc/7
aovAvnpMYF9QGwT2BanqTPb16mtvDCjgK2RfP/XeHZksqezrztg8vfWTf/l5
B7Kv1vR5XGR9HheFPo87afo87h3Wtw/U7o2m2SIVPHL2RRspos/jdG/3eeR/
7pe3n6nsixb+LmdffHrfnyqp7OvBVIneorsjdZ9HsK+ul8FrIz9LTr968iRv
w+YGJfpOBcwlbXdCnefF74cnXTNXd01xvq8Woi83sqGZvMX5vsSSPk03U/c+
j9nH4LZ2tpGk3IXT7Z9rJMqAEk472FdLFcGviGtJ7Eu3ShcK7KvHBPYFtUFg
X5CqTmNfk4vVL3/1a/SH0bt/+kgCXyH7ev/CNVrhrdPnVPb15u/ODniVZbyz
noV9zVa2E9jXfNXCvjj+cmJft0Zd2Rcve5TYl7fQi39g7OsubYS2+endiWsP
pm+Ozo1MMvY1sbg2u1pfXNta3dxb3zlsHDzf8djXfpx9eVyq+fz50ZOnzw8O
n+4ePNnaO9zYeayyLy3+UsEXLfRx2ghtijZIm33u7eN5nH3te+yLhtQ4eEbD
o0HSUGnAE5x9TS7SgTD2dXfiE5993aWDpUMOD19mX5/cLJx98Wuag31tu/i+
Kjsa9iX5vt6/yKb326fPqezr16fP+beGjX0dMPZV5exrA+yrZ5TU/01+qo09
cmZOse45FTGXVChkRD3WS5ZwMYwXLW3eV96sL7scksB0JqBi8r4couwSekzq
92F6n3mdOFzS9la0Xw63keTZhevtn+mcaI/E4bTbvq8yCr8RBAlB8oO8iFBk
X2Xh7dYUPLZLYF89JrAvqA0C+4JUHRv72tGwr8nF6ue+8EVaLt24t6GAr5B9
TZSqAx4rECK/fPbF48Qfzq7mYl+ldRp5ZvYV4q+07Os9hX2945Gf0x9cfvej
67QOfeTDa/c/ufWItn/1PmNfdycXH86u0AmZWa2X1rZWN3bXth9v7j8L2dfB
s+ahV/bI2ZcX+XUkRX7VdNavMPee/uWLuoIu7OvoKGBftNNDr+AxZF80MBoe
DZKGSgOmYdPg706W6EDocC4x9vWIDpCxrwu36JB905fCvt5T2Nf7l0f07OvW
aMi+OPjKzr4W1vKwL5739cePr4jsi89eKe9rYpFNb7oLVPZFL9JbdJvU94+0
7GvFY18LHvua9tjXGNhXzyj2vOkH6LyqPGDGk6f9mJ2s6eE9qCLmksK2zJnv
uvc1lyjBGiX1ebTsWae86Eu7Dy1/ix1ZMCENrRuL6PPoFmMnruXtx+GGcCBz
/iURh5x0NdxGkmcXrrd/lnOiPQyX0277vsom/EaIKd5GMYzUGhyMxct3N/ny
2BdX+ArYV1cL7Atqg8C+IFWtZl9jjH1t0GM4PYwvMPZ1sGJgX/OVTQ6+6NE+
7POoZV9h5Ne3fvDK9fuTnH1dvTfxl1/5K3rxb//hH8vbzzTsq66wr4qOfS3W
8rAv0folsq+PFPb1/uWRGPu6ILCvj67L7Ov8NVqB1v/w2v2Pbz66dGf86v2p
G49m70yUHsysjJcq0yu1hWpjpb5b3TrY2H+686S5G7AvqdVjM172aLF+2ZcH
//YzbvqSCx6VJo80jF2PfW3sPaXh0SBpqDRgGjYNng6BDoQOhw6KDo0OkA6T
DpYO+bTEvj667s6+PjKwL36NMrKv0ror+6rL7Cvs8/jm786Ozpc5+5qtNMI+
j3OVRjS9vcivb//glZsPJvnMv/Vgkvsh//7HP2G3hol9NcC+eli2BGzhUdLi
1+n3gsdmQXNJuhLqaZVWkGGCzVIlbsw1GsxxsCkuf7K1TLuGa45/+pU1cu6H
aF7ReEbMvNCy11Q2NctIHHehv7COt7/bSLL0anBK7Eefx4IV1TXm7KbYuYLv
q8cE9gW1QWBfkKqWsq/qTClgX42IfTVk9rXusa+fvva6/S8qUggH7k2WPvv5
L6orfOYvXnw0t5qKfU2vNiL2tVS3sC+Ov0zsSy17lNmXF3fP2dcHV+5F7OvS
7T9cvBW1egzY15kPr4atHum/9O7wp3f+fPXexzceXrwzduXe1PVHs7fHF+5P
L48tVKaW1+crm8u1Hb/V42Gs1aNc9nh09OTZ84Mg8b6xe1jf0Vu/LOCLPkIf
5Cn3tCna4PMjTcFjFHR/6Dd5pEHSUGnANGwaPB0CHQgdzkXGvh7SAdJh0sGe
CdnXh1fPKOyLThedNDp1Ifv6QGRfNx5a2BcHXxb2xa+1nn0t1miSyOyrksy+
aDl/5S7HX5JoJl+8cY+bvvhyf6rELV6SQjLsxr4aNEgaMN2GrWNf7fmawpNO
IDFdWniQNNfEWdbqTxUzl+LP/5oTG7sESe+LFynBQeavdSIFzkodHd90QV+m
dbRkRB98ZkpOe9XNp5aIzrTFmLaTrd24Ogb9jlN33LR92GkXDulq4oflA3EZ
iWYXaU674/dVeuE3gk5l3khRhGCDaZspdrDAvnpMYF9QGwT2BWnVcva1HLCv
dc6+DrXsK+HvKU+R9Wu/OVdpvPGr33zpK1/jb/3lV772H787O7WyQRvPzL4m
MrEvU+RXyL4+NrGvy3eHP9Wzr3fj7It+OPfJjeFLt+mDtKmLt8cu35u8/tBv
9Tg677d65HH3UuRXWPb4NCx7DKxfPPWLVz66468H//azsNqRJ31x09dRaPrS
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
c5StMvb1uFTfn1/bnWHsa3PcY1+V9OzL5dsA7AvqRmEuQVC3q3/vYpF8DQ4N
j4wwD9ighn7J3KursZcnsK8eE9gX1AaBfUFa3bp1q0XsixZ69B732NdMZYse
yUse+1rdeuKxr2ci+/LwV2b21dSyr1jcvcK+Zivbevbl0OpRZF+p4+6tkV8J
ZY9Ct0fa7Kd3J67en77xaO7ORClu/dpa3dhjDR/3nm4fxiofNfgrImBHz58f
+RDM42DR8sxHXszsFdi9eLi9CXzRTmnXNAAaBg2GJ30Jpq8SDZsGT4fwSdjh
8dJtOkB7waMt7CtH0H3IvkxNHmlK0MSgySyzr8oWTSQt+5KaPCrsq5mRfbGV
dexr64nAvrZohJx9Zbhtwb6gXhXmEgR1u/r2Lo7QV8zjVR4ejL0c/d9aDtld
AvvqMYF9QW0Q2BekVWvZ18IaY18rnH3tlGr7Sxr29by2l4V9SdavkH3xyC8N
+6or7Cve6nFiuR5av+zsq6i4+yjy61I88ktT9ih0e/z0Lku8v8kS72PWr9nV
8VJ1eoU1fFyqbZc399d3Dv3KRwl/CcWPEgFr+lDr6LmHwtji/XwUvC1SL7nU
UQBfQbXjIQ2DBsPaO/pJX3HT150xOpA/X71PBxV1eIwXPL4bL3hkYV+XksK+
cgTdm9gXN33RJJGbPErsq65nX2HYF2dfMvhKy7542FecfdHNRbcYjYRGNcnZ
18Ja69gXfXW05zuqb590oMKFuQRB3a5+vYsjpiXndoVQbHC4LHjDmDWsF7gX
E9hXjwnsC2qDwL4grVrKvh4x9lWjx/CZ8tYcY197SxsB+xIivwL2deTKvnRl
jwnsS2r1WG15q0enyK8r+sgvc7fHWOK9YP3yUr+mmfVrcnFtdrVe4pWPjf3a
7qHf81GHvyQCFkKwo/gkORKQl0S9jODr4BntmgZAw6DB0JBoYDQ8GuSdcZ70
FZm+wpR7OkCXgsco7OuKU9hXwU0el5Umj1WlyWNa9nWQiX3t8g0G7GvjMd1i
jH2VOfuqPcrKvkxNHsG+oK4W5hIEdbv69S4WCVf8nbjTq0eqHOMC++oxgX1B
bRDYF6SVC/uiB+HM7GtssTa5sjFd3pqr7iww9nWw0pDZ17oz+7JEfknsq7xt
ZV9S3L2VfbFWj85x9y6RXx/GI78sZY/vxsseZesXT/0ambz2YObm6NzdydKD
mZWxhQqvfCytba3Ud6te8FdDh7/C+keRgIUQTF2eqdTrub8dCXw1GPjyejtu
7NIw/GrHhQoN767f3nGGhk2DV01fp1XTl0PBo2PYV4qg+5RNHmX2FWvy+DRz
k0cd+zqS2Rfb8rMVxr4OGPuqcva1QQPOwL540L2JffGvArAvqEuFuQRB3a5+
vYtD9qW2a4xH4Pca92IC++oxgX1BbRDYF6SVyL7sD7z0UJz2Obo6U2Lsa3lj
utxg7Guds6/DcgvYF2/1KLCvZxH72vTZV+pWj25x9/bIr8xlj47Wr0t3x6/c
n7r+cPa2WPm4XJsrb3rBX3r8JRrARAL2NM7BRN7Fl5B6iXYvLfiiXXsxX5s0
mHi14+wV3t7x1iMX01f2gkdz2FeKoPs0TR4N7OtZ4exrXWVfjUO6uRY89kW3
G42Tbr3MTR7BvqCeFOYSBHW7+vUudmRf6ru9oPDwwlfAvrpaYF9QGwT2BWnV
BvY1sbwxvdqYrW4vrO8t1j32JbR6XDe3eszAvrStHpdaEHcflj3a2Zd72WOs
26M58V6wfvkNHy/cHv10ZOLqA6/ycXzh3vTSI6/nIw/+WlzfDvAXK37k0fe7
TyMDWOQBEyCYaQmRF6dekd0rCLfnpY4B+PJjvmgwNCQamF/t+GCaBnwhaO9I
B6I1fYkp9+fipi/3gkeXoHuXsC8WdK9r8jibusljOvZlafIYsi8P9tJUP1zc
OKBbjMZDt9sE2BcEKcJcgqBuV7/exU7sqzfJF3xfPSewL6gNAvuCTGop+xot
rU8s16dWG7OV7fn13cX6/rIz+yq+1WOauPtRhX25R37JZY8e+3Iqe3SwfkUN
Hy/fpe3QZlnofVD5yHo+esFfE4sR/lrZ2K00DtZ3Djf2n249fh4awHwCFodg
PgeLL4/jyOsg8HqFdi/aLG2cdlHxSh05+JpZqdEw/JiviZJf7ehH3D+iwdMh
0IHE2jvaTV/2Do9hwaMQ9sXBV+age9H0lTnovrAmjwL7WouzL9oj3Vw0DBrS
FGNfrMljS9lX276g+vVJBypemEsQ1O3q17vYhX31KvoC++o1gX1BbRDYF2TS
64K0D7y3s8bd++xrqT61uhmxr83HAfsKWz0G7KvNrR6d4+4dI78ylD0y69dl
XeK9wfrl9UC8/O75a7TO8KU7QeXjo0t3xq/cm7r+0A/+uj/D8deaj7+87K9K
Y39t+3F9j9U/bh8eSQRsX3CCmZZwNZF60aZog7RZ2jjtgnZEu/MdXxx8zSzT
kGhgNDwaJA01rHakQ6ADocOhg/q9B/fspq8o5f5y3PTlXPBYVNhXnqD77OyL
B93H2BcPun9KtxXtfX6Ns69NGm029uUS/Qf2BXWpMJcgqNvVr3cx2FdMYF9d
LbAvqA0C+4JMah37ooUewMeX6lMrmzOVLXowL3nsy2/1GLGvsNWjM/sqPO6+
ZZFflrJHU+K9g/Xrylmp8jEK/pq5NTYv4C+e/cWi75drO+XNPVb/uHO4sfe0
cfA8JGC7Ac4SOZi0hCvsxqjXc9oUbZA2SxunXfBwe9qpCL68mK8ZL+Zrgob6
0Y0HYbUjHQgdTrLpyyHlPkPBY8i+9AWPWvalhH25B90X2eQxxr6eMPZV259f
26FRTbEmj4x9ZbhhXb4HwL6gLhXmEgR1u/r1Lgb7ignsq6sF9gW1QWBfkEkt
ZV+PFtboMXxyZXOmvDW3tlNirR4D9iWUPdaON+4+X+SXU9lj3Pr1oTbx3mz9
Ehs++qH3fuXjrT9dvhsFf92dkPDXozkWfT+1vD67urFQbSytb6/Ud8ueAay2
ywnYsy2PgPkQzONgIgrzYddT/12+5pbn9WLUa/eQNlX27F60cdoF7Yh2N+5l
fEngi4ZHg/Rjvli14y06hDNBtaO2vaPG9KWk3H8YN32pHR4zFzzaw76koHua
Wu0JulebPK6yJo+PWZPHNd7kcXN8KUuTR3f21bawr2b/PulAxQtzCYK6Xf16
F4N9xQT21dUC+4LaILAvyCQx7r4V7Iu1elzZmC5vsVaPNb/VY6VlrR61cffL
lrh7a+QXL3tUI7/SlT1arF9XU6R+iZWPXs/Ha7znox/8xfDX2Kd3J66G+Itl
f7Ho+7GFyuTS2sxKfa6yWVrbWqqxAHxWArnFQsDqu0829j0I9pg5wbYPfcAl
Lt7rR7QCQ177T+kj657XixU5buzSBktenSPtgnZEu2Pga3qZBhAHXyzf3o/5
8ns7XmPgS4q4d0z6umo0fWUueOTsS1vwmBz2VYvCvljQ/ZYadH/UliaPW3S7
0U0H9gVBkjCXIKjb1a93sQC4ypIsb4k67iPIoX5mXwOBjncYxQrsq3PUkxOM
C+wLMqmlrR4fzVf9Vo/loNXjRopWj5nj7l0iv+aqO66RXznKHjWJ9ybrl5L6
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
fZ9ultnK9hQreKyPZTV9uYd9Ha/pqwn25UsqBTMV073Ei54iD4tj2HV/KPdc
knw5Zp+R93/3TCZL8JOl16Dz9cwWuK/9lBlipGFfxgElsRqjREKk89gVwb4S
zWr52VeeXTieE6cjNcvpi8h5tSwC++pD9TP7Cm/i4x1GsQL76hz15ATjAvuC
UqkdZY+pE++Ls34J+Cuyfimh9ykqH5XgLzH3Pg/+MtY/6kogtQTsw+NgXx+a
qZdU5KjavaQ6x1TgS23sqMZ8jYkxX9ZqR1vE/ZZU7dg601c85b7GTF8zLOXe
L3jMdvfxy+Ri+gL76gSFj46qLSj5WdItkKgflH8uxWCBhvaIj/yWWKlEuOHk
r3K8nBm5Q3JMlykeKpF9WUaUsTZTtJEl57xnZV/WomL7kN1HknkXjudEdzDO
E8PxiyjX91WSwL76UGBfA72FJsC+Okc9OcG4wL6gtBJRRivYV8sT7zXWr6bJ
+uUSeq+tfNQHfwW59y5tH1X8pW3+mIWABRDMRKgcrz7pl7/85fnz5xcWFugt
+vfixYtvv/22jX0JyCst9VLBV9jS0QV86Rs7JsV8GasdEyLuJdOXHnwVYvpa
5qav1qfc3+6kgscm2Neq5kky3bNkkc+d3a38cykh2z4Gv3S4wzXEywm/uF3O
3OjLLIc2iNpjcTo6R8pzxQZ53PO+HD4V7jBqTsmi8d3Ob6qRZNuF4zmJ1ko9
MRy/iHJ+XyUJ7KsPBfY10FtoAuyrc9STE4wL7AtKKxf2lafssWlMvD/kVEFn
/dJZZZKsXw6Vj0+1ofeJPR81wV9K7n0i/lIJWIi/7PWPJgKmQjAtnnr77bcd
r/7p06e167z//vsm9qVBXmbqpQNfMbsXB18q9XICX7p8+4nlIOYrqbdjtoj7
rKavZmD6OlJNX0vc9LXGTF85U+7dCx7BvjpBdiOI8ER5ZfCll3inNzco0Xcq
YC5puxPqrEZ+yz2JdrjamorzfbUQfSV3T4y/3gLfl1jRq+lm6t7nMfsY3NbO
NpKcA7J2eM2Bvix6QSR11tWcdqkT2FcfSswTC1/sE/bVkwL7gtogsC8ordpQ
9qhLvN9f3jxc3XraLutXcui9vvLREvxVWn+ktH004S+TAezaQ2P9o2wAcyBg
Wjz13nvvNa38iuuXv/wlt3vRmvQzf/HMmTN8kvz2t7/VfiqRel0wUq90dY5a
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
fuWveHLgN7/3w1/9f+9OLteNBExbAql6wEICFreBSRBMKof0OZiCwkw0LOOi
ki4PdsV4l1jYKCIvxeglptm//c4f6RyaqNfYQvW1of/4H798kp/ql7/7X371
2zMTSzXV7jW9uuFdlK/xNb/1/VfeOn1uttIw2b0ygS9DY8dYvv1jlm+/Hubb
FxDz5WL6ksBXd5m+mnjSgYoT5hIEdbtwF3eNArhlKmtMej9STvZFD7w/+tV1
lwWPxu1RqbyF0w61WmBfUKv1elyJ1q+CKh/rUyt+8Jefe7/xWG37WCT+Mtc/
ji1UPvv5Lw4o+sxfvPhwdlWTACaUQDoSsKgQshqzgekhWNwPZkFhBSw62KVa
vCzIS+rheHt8np89iXpx8DUytfSfPvcFy6kOwdfofPkzuotCV2q8VG0X+PLz
7RfoUvKYr5XNiaX62OJ6zpiv3q525MKTDlSUMJcgqNuFu7hrFNi+jL6uxBUC
5WRfEAT1ocC+oDaonaH3zVjwl5x7r7Z95PirlgN/JcZ/Df7oJ9xWdO3eBK9/
vHpv/Jvf+yG9+Lf/8I/aFpCaEkgzAdPbwJRyyIiDJaEwmYmJSxxqSYt2IzLs
MvAuqbYxhrzW/MO8M77wP3z28xxSSYH2vMjx//j7/4t7vS7fGeMn88rdsW8E
p1qMtT/1f/5TeFH4Zbp+f/JbP3iFXvy7H/3Evc4xEXzxxo4a8CXl21d4vr0f
85UffPVwtSMXnnSgooS5BEHdLtzF3aJkW5ez8QvsC4KgtAL7gtog99D7Qiof
aRlVc+8Z/jqIt3308Zdv/WoN/hovVQcGBr70la+tK/Ffn/mLF+mtqZW62gJS
S8CkJHwhCkwmYDYIpnIwAYXFaJiZiVkAl4Z0aXmXmOVlcHmFoV4s16u2d2ci
Al8kiXrRcn96mV7/n/7nk2ozx+BUb/B0r9H5Cv33L7/ytbU9OdaeO/TmKo0C
wdd6HHwJjR0PGPgS8u3HF2s0dVtd7RhC5u41fTXxpAMVJ8wlCOp24S7uFoF9
QRB0jLo9XnnnwpS4lMpbxz0oqAeVtvIxJ/sKgr9qk8sb06ss915t+9gG/EXL
O8MfDQwMvHX6nNr/8T9+d5be+uPHV6QWkNkImNYGJkMwAweTUZgCxFIsynZU
2OXzLhfkFYR6/ebMMEdeP/vFm/wHNdD+d+99QK//6rdnQuoVFjm+6Z3q4Y+v
8Fj73w+fFy+KGPD19ulz9Nb7F68VC77WtODLa+wo5Nu3I+brdvdXO3LhSQcq
SphLENTtwl3cLQL7giAIgvpBba58fDhf1bZ9VPCXjyYKxl8BAfvpa28MDAyM
TJbUAPyr9yborX/+f14PWkDGCViIv7aeWAiYOwTTcjAZhcWBmLho4JhKt3SY
ywS7JN6lRV480YsWzrt+++6f6MD5zyL1olNEJ+qf/uXn9PrtsTkp054XmfJT
zc/8P/9Mvighq7zxYJLeoqtWNPjyGzt64OuQrt1C2NixXDD4SlXtCPYFQZhL
ENTtwl3cLQL7Kkp9fvhQq4UJBkE51f7Kx0cLVbnto4e/ljYOlhs+/qq2GH99
24uQmihV1+UWkEdjC6zy7pvff4WXQIb4SyRgoQFMSsLXR4F5BEwLwXQcTEFh
AQ3TAzHnJdyIuv256o6Jd8nIK6BePNTrlb//8cjkEjd6cfYlUi++8Fyvh7Or
/ByK6V68yPFb33+FTjudfJ7rNe5dlFq8pePEIqtRpauWlnq5gi/W2PGgFANf
QWPHfPn2fWX6auJJBypOmEsQ1O3CXdwtKpZ9iSp8qB2uPjxkqJ3CBIOg/BLZ
l2MeUW785QV/LbG2j9PlrQB/7efEX+4EjIMabf9HWvi7YghYNgKmgWCiEyyJ
g+ldYbkXlXRZeJcWeamhXnTg/KSJ54SfJf66RL14kSMt/F3xtKvgS7xkxYMv
1tiRg699Br6qPvgqpLFjBvDVpRH3ofCkAxUlzCUI6nbhLu4WwfdVlPr88KFW
CxMMggpR2spHeqIvBn8tC/hr3cdfKwx/PU3CX0fGAjcH/CWyL5WAhewrwF82
AqbmgIWFkCkgmMLB2LKmp2GapbpjIlqmJezSqOVdYmGjDXmF5Y2NJyL7EnO9
AvYVUa8QfK3tNVX2pVIvXudoYV/GaZDs+BLA1zoHX1s0IWla0uQsCnw52il7
wPTVxJMOVJwwlyCo24W7uGs0MsRtWkMjWVcI1M/P5vRnKh0+/XvcA4F6U5hg
EFSUXo/LBX/lxAIS/ppR8de2Hn+te/irlgN/hSBFCsCX2JeUgZ+CgIVRYIEN
TAvBJA6WjMJSkjGVbsmkS4VdEu8yIy86NKm8kZ+0eJo983rx1xXqdSSdapl9
Kf0cTezLDL78eeIIvuaqOzMC+KLJWWl9zNftnujtKApPOlBRwlyCoG4X7uKu
UZKty9n2BfYFNAG1SphgEFSg3PFXUcFfAv7amFrV4K+ygr/W9gIDWD78FbEv
pQWkBGQUAvbcSsA0hZAmCGbkYFoUJjAxviSQMRFwreu2o8AuPe8yIa/GE6m8
MWRfUq5XwL5k6qXyLvmi6C5ZWvC1ngp8rW7SVOTgK2e+PS0u4KuXqh258KTj
ruGTfFIPnHh1+rjH0onKMZemXz3hn9uBk8PSe+Fp15756N1irko0Euv2xEHp
5D4Y4dC1h3+cmh4+eSIa3YkTJ18d1h3W9PCrJ4XVDGtFqwdHrD3W2D6NuzQO
2GUkOXdhPSfFTYz45uyfK/CrCb8RukeBr0sPtwL0lWz7AvsCmoBaJUwwCCpW
aa1frcBfc9UdQ/FjQMCc8ZeFgPG/69T+jyKEiWfg2z1gzyUCJtrARAi2IkEw
lYMFKEymYQEQs2ExC+BSMFdEugLYJfEuN+QVlTfykxaekLDCkb8eFjlqo9VU
9mW6ZMkBXzL4YhNGDbe3gK/RUgHgK0PMVw+Yvpp40nGX8FAL9qVVnrkknF2J
iMRhgnzqi0ZfbWdfEvrqHPilDMwwQP165uO3Yc5p/Wl1PJlOI8m1C4dzUij7
cvzOKfSrCb8RukgB/NLQr5B8OaAvppMQBEG9pRZ86ULHrwyVj/mDv2gZTcBf
T7iVyIa/Uqbf/92Pf0J/181XGmoLyLlKY8BrKahm4LsQMGcIFjODSX6wGAoT
aJieiVkX6bMi6bLBrjjvsiCv0OjF/1RWc71O/eif6PWZckM9n+Gp5kWO/KLM
eRdFWuaDNV2T7ePgyxvPMzfwtV4U+HIHyD0Dvpp40nFV7JEW7EurXHPJBLFk
3GB8tyBm1Gb2paEpHQG/jJRHOjjzerozwDxT5iO17TP5pDiNJNcunM5JgezL
8Tun4K8m/EboJkWE6+Tg0EjAv8ojQ9HLiQWPEARBENRFOpbgL4a/Skb8tWzH
X5maP/70tTfo77r7UyW1BeS9qRK9RSuYukCaCJjVBiZDMDsHU11heibmtqgb
8TcuwS4r71KRV0C9/EPmfyqruV7//DN2qkcmS+I55Of23mRwqr0zr16UcLkf
XJR0LR0F8FXRga/Z6nbrwJe76atnwFcTTzpukh5owb60yjWXDBRL5Q0xRBFd
mKKIkSP7sn80A/o6ebLwQ8khjZNoWucuEomlV/o3bTLwxasRdQca++S0v0vn
M+o0kly7cD0nqjJMDOfvnMK/mvAbobsUWr/0cjN9QRAEQVAXSWRf9uf3AvFX
9eXvjJbWxw3ZX8ubjvjLtf7xg4vX6O+6t0+fU1tA0ov01pnhj0xdINUcMEMU
mNYGpoFgEgcz0bAYE5OWONFSF+2mJNKl5V1m5PVMKm/kfyqL54RXOP7pAjvV
b50+J1Ivvvin+k8f8TOvvSh84Wu++6ePUrR01IGv5RaDr2ammC+wr/6SYuUA
+9Iq31zSwi+BRIUhSwIxMZrFHBOdYkCGr5WZfWWxoMXQnb18U6BkpppQebfS
0XmnIFzbOkbDSVB2pd23LntKZEQRAYvDMe0+XS+H00jcd6F5zfWcWE6mgerq
jszxO6cFX034jdBtEl1eMQlOMAiCIAjqKbU5+OuUBX+t7ZZqe4sMfz3W4K/d
GP5yj/+aXKzS33Wf+8IXVczy2S98kd6aWKxKIWDOBMwIwRw5mNgpUgPEwkWL
s3SAS8u4pC6NzrxLRl6h0Yv/qaym2Y+X2Kn+7Oe/KJ3MmnCqEy/K57w1aYXU
LR13+Wl/ysDXpgV8+Rlfp4owffUt+GriSSdZwePliZMnMzuC+kM555KG/Yh8
YFiFP0ksI04FZDYxrPiQclzlTMWXEjexwq+07Et3FugUOLOvExw2Wl12+jHp
ror/yRMn6RXDgBNftl0Pt5G470LPvlzOiXlk0go29uX4ndOSryb8RuhGlUeG
hwYjAjY4ODQM7gVBEAT1rjJUPmbGX6e8P7FORcWP637x48rmtA5/qc0f19PE
f4UEjKdLffsHr9x8MMlfoR++/NWv0Yv0likG30zAHCGYyQxmQ2GJTCx5MTAu
C+zSWrxU5BUeMv9TWXty/u5H/qm+cX+SU68bDya/FJxqNYdNe1H+/sc/cQn4
Uls6BuCLlYvSRKLpZAJfzeChonXg63aPxnyFwpOOXQIryFEN1x/KOZc0lCBm
3AnfDyvOdFjBlrckXrekXKZ0VzlT7aXyIdsMS8e+ko8uQ2Glm+1La/waPhl5
71JBLsdyQbeRuO/C+V5PuvAWV55xF47fOS36asJvBAiCIAiCOl/twV+nvL+v
TsVfDKLv6yL+WqjtLdYZ/lrR4S9t+r3dAHZ/qsTdRJLoxcnAiZSWgEk2sCQI
ZudgPg1LBGIZFhPpivu7tBYvGXmFRi9+9qSzEeZ6ffbzCae67nBRHOscJfDF
/HKbj2nyLATga9ra1ZGrReBLMn0d911evPCkY1PMJQP2laC8c0k5wRK6kOGX
hitoOYZg8ApWFF1RfjWgtGaaq5xtZliHr2woDfuKHV2AnKaHY06w1OzLGp+V
xgplelsN45LMa5YhO44kzy4cz0lMWSaG43dOy76a8BsBgiAIgqCuUKuDv055
f1yd0r31KIa/GrOVEH/tL20+XmkcCvhLH/+VWP+44XUP/MWbv+G2IhL98Pbp
c/PxPoO1jAQsAYKZOJgDDdPzsfiS4uNa2OWOvMKFn0OJeoXLnHeqv2Q91WFL
R+mi/Pr0uYVKI7nOUWnp6IEvlpBG04Ymz9zaDk0kmk40qWhqMfC1IIOvbPgr
Q759T5q+mnjSsUmqDwP7SlDuuST5csw+I+//7plMluAnS69B56ucLXBf+ynz
HEvDvowDSmI1RomESOexK4J9JZrV8rOvPLtwPCdOR2qW43dOC7+a8BsBgiAI
gqBukbv1Ky3+OuX9ZXXKvIKPv5bqkwH+mlvbWVj38NcGw1+W+K+09Y+Ji52A
WSCY2Ql2FCdLKgp7HqdSaYFYIuaSSZcCu56HQ5UOgYfYaxf1zEinzvGE2y6Z
XOeoCfhiyfYcfG144Gs9Al80nWhS0dR6ZABfafEXwJcoPOmYFD5Pql4hsC+t
8s+lGCzQ0B7xkd8SK5UIN5z8VY5XOeO0SI7pMsVDJbIvy4gy1maKNrLknPes
7MsY1ZY8ZPeRZN6F4znRHYzzxHD8zmnpVxN+I0AQBEEQ1C1KVfnojr9OeX9W
nUpaLYa/Vhszle256s7C+m6p7jV/9PBXmeMvbf2jW/9HdwKW2QamhWCMg+n8
YGYUlgDHdIvt4+pOBS6XgnfpqZdyrgqgXp7dK7HOMdbSkYGvXZo2M5UtmkKT
KxvjDuArZF+JUxTgSxKedPRSHi/BvhKVfy4lZNvH4JcOd7iGeDnhF7ernBt9
meXQBlF7LE5H50h5pm2Qxz3vy+FT4Q6j5pQsGt/t/KYaSbZdOJ6TaK3UE8Px
O6fFX034jQBBEARBUBcpFf4Kn/Hzgy8Bf62PM/y1McXw19ZcdWd+3Zh+b6t/
tBrACiRgiRBMy8HiljANDcsExxI2YoVdmZBXVqOXnXpJdi9dnaM22Z61dOTg
ayoEX6X16je+6zL3uPKDr9u9nm8vCk86WtndIUU9ZvaYCphL2u6EOquR33JP
oh2utqbifF8tRF/J3RPjr7fA9yUMM0pF0+3bZaTZxuC2draR5ByQ9pyk3Lf2
E2adEEmddTWnXeqE3wgQBEEQBHWXUuGvcLX84CvEX6MlD38tb0ytbs6o6fdB
/Jeu/lEKwE8wgOUiYJkgmDYczAzEnLCYiW4lYS4n2OWIvFJRrwx2L22dIw/4
kpLtvZaODZo8NIVGncFXIv5yB189n28vCk86WoF9ZVARc0mFQkbUo3nfnONl
3E3OvK+8WV92OSSB6SK8isn7EiGP4VQk9JhMl4LF7FQcaQq7c0VIbiPJtYv4
FvM2gFQF9gVBEARBEJRNheCvU97fUafSgC++PJyvMvzF0u83/OaPLP3eEP9l
rn90aQGZCn852sAcIZgLCit6aTrCLj3v0iGvoqmX0e6l1jmKAV80PcSWjuOs
peO6vc7RHX9lBl+9bfpq4knHILCvDCpiLikn3pz5rns/nj+uJOAn93lMeX3z
oi/tPrT8LXZkr9pbNxbR5zFhjJq1vP1MJ+M1BzLnXxJxyElXw20kuXbheE7s
B2kW2BcEQRAEQVBm5cRfp7w/ok6lB18i/uLNH6X0ez/+S65/1BnAWlMCabSB
5eZgChPLjMVSMC4n5JXb6OVY5Gi3e0l1jktenSMP+IqS7XlLx0zgy4S/OPsC
+FKFJx1nIe8rQYXMJenRXj3V0goyWrBZqsSNuUaDOQ42xZRItpZp13DN8U+/
skbO/RDNKxrPiBkLWfaayqZmGYnjLrI0UkhZbek0dxwnGPK+IAiCIAjqd9GT
uzv7kvDXKe/vqFNZwZdY/zi2WOPxX9NS/FdQ/7i6pal/DA1grSuBzADBMnOw
li5G2FWEy8uJeolFjia7l67OseTVOWZItk+FvwC+LMKTjrPAvhJUzFyKIwYN
84jBr6T3BSU5yPy1TqS4yqmj45su6Mu0jha+6IPPTMlpr7rZkRLRmbYY03ay
tRtXx6DfceqOm7YPO+1Cc6+nOScuEwPsC4IgCIIgqFClsn6J+GugCPAV4a8o
/qsRxH8JBjDe/zGNAawVBMwIwcwc7LhomH08pqPIdk4cqJemyNFm91LqHL2A
r00x4KuSD3yJ+Avgyy486TgL7CtBBc0lETJoyUFy6JLXyU+o+zOFkosd/9ha
rFouoUuhYSRZKtucmEc8z0wzXjNm8dKt4qfAbcBpXWOxYQ3wYblsPanPo+XK
GeQ0EoddqPd6unPicJ7BviBIUnl48KSnweHycY/FReWR4aFBf8hs1INDwyNJ
A8/yGagg9egECw8rUV1y3BCUV5nxVyHgK8RfXvp9GP/l1T/6BrB93v9xpfFE
G4CvGsDcCVjxECyJgxXLxNz3ZRlwK5CXuZOjg90rrHNc8+scp1ZyBXxZlhcB
vpKEJx2oKGEudbyy5ZNBfSTcxdBxSXiE7/xn9PLIkB44DA4ZWZaZUXT+8faC
enWCgX1BkKpOwF+0+PFfXv3jlFf/KPR/jALwtQYwCwFzojQ5FhsHS4PCCl6s
o8pzvE4ncz9W5GiiXnq7l1znuDnh1TmO5q5zlBY4vlyEJx2oKGEudYjiWfdR
Q8M0ue5Qnwp3MXRMij3Bd/hD+siQFTEMjagfSQIUus9ARapnJxjYFwRp1SH4
K6x/ZAawVb//ox+AHxnADldDA5jXAjKpBLIdBMyJg7WCiTnvMf/RZaBehmiv
qJmj2e4V1TnSlMgf8FUI+AL7gqDMwlzqFCUW6AF9QQbhLoaOR/7T/mBQ49XB
LCjmHwpNOKJRR2EM4keGxM90kxWpu9XbE8xlax18xBDUInUI/pL7P4YB+JEB
7GB5MzKAySWQVgLmWqxX3JKChhW6FHgIrmfMQL3CaC+1yFG1e82Kdq/lul/n
+I3vFk69XMAXTF9NPOlAxQlzqXNkpV8gX5BRuIuhY1FgdBkaiX467jEZFHpy
VAARQYv46CMbj3pU3RZC1aXq7QmWvDHMLqhf1SH4q/ryd6L+j54BbCYygHkJ
YFELyCfl7WfmEshcBKxYCNY6INaiQaY4RRbqZS5yTLZ7FdHPEeArp/CkAxUl
zKWOEg/8j7U+PJGUQw/1vXAXQ8chkUd0OJuwwwStySaBPwBPtF69PcEybguC
+kQdgr+a8QD80ADmJ4AFLSC/9f1XYhn4DgQsVRJ+qyFYBy7pzklK6kXLalDk
SJevFNm9trV2r0L6OQJ85RGedKCihLkEQd0u3MXQMShOI5Ie2IPHfzsc0L4b
75wXNM6zbzDNzrXvA0Acu3p7gpmEiQdBgToHf1Vf/s5oKWYAi7eA3Pvm9344
MDCw3IiXQMZDwAokYD0MwdKdBAl52ahXLNqLFTluHnKLAV2++XbZvQC+MgtP
OlBRwlyCoG4X7mKo/ZKNOAnP7BnRhCkSfHBoeMgdTSSahpQV0oAPqCXq7QmW
sF6n+tsgqM1Ki79CVlA4/ooMYEECGGsBWWYGsJe/+zcDAwPf+N4PF+sHS5ux
LpB2Aqb0gswCwXqAg2U5Xr3Ry4l60QWiy0QXq1TbpwvHqFd1my5lq+1eAF95
hCcdqChhLkFQtwt3MdRuaaq43Mq+Ur2b0DnPFU0kgyxljTirKLPI8oiRDA4O
jZTBxFqqXp9grgcNQX2vtPgrNIDdfvHFVhjAvASwoAXkCjOADQwMvPydvwlL
IKMukBYCthsnYAVBsC7iYBkPzWj0cqVefrRXfZ8uFl0ybv2iizjFqFcL7V4A
XzmFJx2oKGEuQVC3C3cx1GZZE7K0T+4Z0IQAJhhsClYVW+e1Ck2I/4/vTtgx
AEXr1OsTTCuUO0KQXpnxV0sNYKwF5FL969/6/sDAwP/27R/4JZBeF8iS3wVS
S8BivSDXHAhYNlLUaSgs1yHsu5Y32qkXXZSwkyNdLF7kSJePLuKER70Kb+YI
8FWU8KQDFSXMJQjqduEuhtorw5O8zbaSHk0IpEP5iFCp1lr2NWQAX4AULVXP
TzDLKjB9QZAsevbvNPwVEjBOTqISyCAEbKG2t5iagFkhWFYnWPuBWJGDTGv0
EtLs9dQriPaaYdFerMiRW7/oUrbI7gXwVYjwpAMVJcwlCOp24S6G2qrk8CT1
8T01mnCMd2ot+wrwh1jj6CWjg361Ur0/wVTB9AVBNnUm/vpfX/7OwMDAf/7m
93gJpN8FkhOwNVcClhKCZS+HzIzI2rAvxeV15Ii8XKhXSaResU6OvMiRAcxT
rZkheagXwJcoPOlARQlzCYK6XbiLoXYqU0hSWjSRCAtSsIJ87EvjChJXgEun
cPXBBMuzNwjqX3Ua/hrw8FdYAhmFgAUx+CEBM1VBaqPAJAJmg2Dt4mBt4V2K
xUtBXvbyxmTq5QXa0wUKOzl6dq8qt34BfHWy8KQDFSXMJQjqduEuhtooFzKh
PsOnRROJjfFSdGLMw74AK9qufphgpmMGSYWgBGXAXy0iYKc8YHJvZvX+XOXh
fFUkYJNBDP5MRSZgixusF+Ry43Bl68nq9lNnG5jGCda9HKyu8K4syEtj9Hqy
zHs4ulKvNbpw92fLdBELt34BfBUrPOlARQlzCYK6XbiLofbJjUwYo5rSogkj
TkiBJpLJgrJCMtlKs38ohfpjgqX8PARBkToBf3HwdfLr37w7tTwyvXJvtvzA
RMDEHDDeC7K2v1g/WNp4vLx5aLCBaSCYphzSyMEiFNYhNEwLu8y8yxV5KUav
x3Ri6fQ6Ui+6ZHTh6PLRRaRLWZT16/aLLwJ8FS486UBFCXMJgrpduIuhtskZ
GUgP8sdZkpa4MfPuC7EFQSnUJxNMuyugLwhy1LHjL86+bo2Xbk8s3plcYgRs
ZvW+QsAmEghYVAjJbGBSGpgWgunMYKofTI/C9tsR4VU3ky4Zdu37BM/Cu2zI
S4myL9X26MSGPRzt1Ivbve5Or9Dlo4tIl7KQykeRegF8FSg86UBFCXMJgrpd
uIuhdskBCOjZhPXpX5crXmAUedLGdKBLaAJo3yR4RaHqmwnm/GEIgrR6XVEq
/JWHgHHw9b/89cvXR+dvji1EBGx65Z6OgIVJ+FOrjemIgAmFkL4NLEoDKwuc
xwLBjBxMQWEKDVOwWByOOS2xz8pbVgegwK447zIjL7G2UTZ6aaLsnanX1DKn
XnQR6VLSBc3JvlLZvQC+UglPOlBRwlyCoG4X7mKoPXLkATpuZPtoVOUmvmmj
T0IWvRswCDemrm7wEVk+kfgulFH9NMGU9zGVICilsuGv27kNYJx9XXkwc/Xh
7LVHczdEAsZLIB0IWBQF5tvA/I6QLA1MqIU0lUMmcbDnAl8y0jA3OGZcEjeo
kK4jcYRm3qVxeQnIiyV6BUavfd/oFTZwLDemVjeFHo5m6jW5dGtikS4cXT66
iHQp6YLmsX7lBF+3PB33LdW5wpMOVJQwlyCo24W7GGqLnK0wOqogxDgNDoet
E8sjw0NRS8X4hvWfoI+In3AlBiLMGBJ2P2RkHLFPxPYvDBmuryLVXxNMHgbm
EgSlV/vxFwdfX/6rr396b+ry/WlOwK6LBGxyyYGAbUytRoWQs9WdKA/fTwOL
QbBVFYJZOJgehT1flzFUwMTcyJiFbukYl0y6tLBL5V2uyMszes2v7cjljSsb
E8v1ZOrleb3oktGFu+ZRL7qUdEHpsmZgXxnqHFXwddx3UqdrEoIgCILiOu5f
TVBPK0UVmM4FY8kwHxrWW19cYs+d3TIJG7Obf5w/A2VX302w2FHD9gVB2ZQZ
f4n8IRX7+suv/vUnt8cu3p24NDIZErBrIQEbL92aWOQE7O70ysjMqpKEvz6+
xKLABBuY1xEySgMLIVjoBPPLIaVg/P+/vXvfjeO6Dziuh9JjCCgKtGiAEEWB
AEVegy8hiZJokxQlSrxfl1fxusuLSJGSZVtxgta160ixY8d2CjRIWyA9l5kz
Z2bOzJzZPSR3l98P5o/EJHdnZ8c0+MXvnHV2MEcKi2uYK4i5s5j34X7A7wpK
Vzp2OXtXvH29WdhYkrzkoNfP4gKaQa93X3//+Vd//Oyr7zyr12FcvcRbuffq
nXhb645+sc7xalz3H1gAgK5z3f9pQj+rtQGScwlYep7GtIXhi+K//4vy02BR
zSh9Be4TSA3q+P6IPANaRVA38gZj7AsII9MTPEPEWc0BMD30NfCrX2+dvN0+
/Wz31Tu7gB3aBczeB6xiDOwHOQYW74cfrYVUEcyaBPvvr/8U7Qn2zU9/tTtY
cQqrqmG5LGYfZTkrc5Q++LdVscv6uMZ4xMvay8skr/+QyUttYh+tbbQHvQqX
N154Vq/z34i3Uryh4m1dP7zwbF+mehG+rsB1/4EFAOg61/2fJvSxent/F+1/
pJag5dcSlm9Unv6Z6IfiH6mZDNIPZh6t9Edk0qj5M6jtht5g1Z8oCsBP5+sf
KwuY8It//tXy7svVg1cbh69fnLzdOfvcLmCtNgpYdjewfARTyyHVnmDxxvhe
HSyXwv4vV6IqypXnkX/YKHPFpcsZu/R8l+5d6REvuX199KGN6eQVrW18nyQv
OejlrF6/+7244OYzHJ0rHE31Em/ii5efijdUvK1Luyc+o191x70IXx0yf+m8
BzrDvQT0OtoXbh7GZXCpuMGA3tN2/rIL2NmdOyVDX//4y3+Z3WguvDha3nu5
2ny1cfTmxctPMwXMcwbszb//ITcGZq+FlBEs2hVfLYeMN8bXw2DuDpZJYfka
lmpiqSxW2MfK0lY6cDkzlyldudgVzXfp3pUd8bIWNlrJS65tFJdIXCg7eXVa
vY7erDbPxRsq3lbx5k6t7t5Sb3fAcS92tu8QvQKhcC8BvY72hf5Tvg1SzSEh
IIsbDOhLQfKXcwBM+Pt/+uXTxc3nK9vTa3tzm83F7aOVvdPV5nlRATOfBXn8
2ZcncQGLtgJzjYG5IphcDmnvCaaHwVwdTK+LjFNYUsP+Rxen9z//r2lQH/7s
KFRBjkzmUqWrOHbp+S7du/4Y9y454qW2r5cf2qgXNnonL/MBju++Ehf8WH2G
Y3n1Wmueizdxcft4brMl3lbx5j5d2HCOfp3ducO413WhVyAU7iWg19G+0H/s
z81rXHxIAsQHn8/OAypwgwH96vT0NPgAmB76+rt/+MXI9MrjuTWrgLUWt49X
9k7XWuebx2+2Tz+rLGByM/z0GJjcD78ogtkfDZkbBrM7mF4XGaUwvUXYD3+J
atiPcQ378a9mPMxqYtbxZ7uPlR3vrbpltqY3R5S5TOlyxK54PWPcu8ze9WbE
64tv4oWNVvLK7+jlGPSKq9ehZ/Xaas2s70+u7Ii3Vby5I9PLw88WMqNfdT/M
kfAVFr0CoXAvAb2O9oV+VP0hfIQJdIAbDOhnneSv/EdACnfu3Ln/eOrh07mP
ni+OTq+Mz61NLG5OruzMrO/PbbUWd45X9lUBK58BsxZCJp8Iaa2FfP1vH0wE
sz8aMtoTLO5g1qJIvTnYn10pzNQwuZwwmg374S9JE/uTylNJGbMSmapk0fFj
5kh9swlc+khnrqR06cmufOzS812qdyV716sRL7l9vXjhjuSVWduoBr3yW9m3
3vzOZ9ZLVq/GzsTS1vj8unhbxZsr3mLxRpvRr7bHvQhfAdErEAr3EtDraF/o
T0Ufwqe7BBsxoUPcYEBfy+cv/3Zxll4CeevWLf0/7j0avf94OipgMyvj8+sT
S1uTDVnA5nUBS1ZBqs+CPPt879W7/fPfHFx80VSb4afGwNK7gdlrIe1JMBPB
9DCYs4PpdZFyJCwzFWZqmApi0XiYNSFmypg+vvY7vkrqVhy4osaVZK4vv/uv
pHSlYtfPUezS8126d33zg713/Wdx7zLJK7udl8egl7js4uL7VK+xmcbHk0uP
JuaGHk+Lt9i86XcY9+oO9AqEwr0E9DraF/qX/tw8K1EM8jmLCIgbDOhnHa5/
zBQw497w6ND49KOJuY8nl8ZmGk+sAqZXQUY74R++3jp5W7gQMt4PP7MW0p4E
s5dDpjvYd/kOlqQwayrM1LBoNizdxPTxpYljViIrO5Jvjh/k2+iwMpdVusxk
Vz52RfNd3+uyl+pd+YWNajuvTPKKBr0KljeKiy/ego2j16upfb2sWa+oes0P
jc/It9WlVjIlfF0GegVC4V4Ceh3tCwAAwKnD/FVUwO6OPh8an3k0Ma8LWDQD
trKjd8Jf2D5a3n3ZOHi1LgvYJ6kCpsbAsruBqbWQMoLZu+KbCJZeEZnqYHpd
ZJLCrKmwdA1T9emnVBOLspg54j5WdURp6w/Rg0SBSzUuk7n0NvXyBL4pi112
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
AAAAAAAAAAAAAAAAAAAAAAAAAACu0/8DNzYrRg==
    "], {{0, 448}, {1620, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->{540., 148.5},
  ImageSizeRaw->{1620, 448},
  PlotRange->{{0, 1620}, {0, 448}}]], "Output",
 CellChangeTimes->{3.7741884329942784`*^9},
 CellLabel->
  "Out[708]=",ExpressionUUID->"762eb69a-7683-417a-9ded-b8b098de16a6"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"ClearAll", "[", 
  RowBox[{"endPoint", ",", "funcName", ",", "permit"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"endPoint", "=", "\"\<live-coding\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"funcName", "=", "\"\<gauge-grid\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"permit", "=", "\"\<Public\>\""}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"makeCD", "[", 
  RowBox[{"args", ",", " ", 
   RowBox[{"funcWid", "[", "\"\<FBrnXpZX\>\"", "]"}], ",", "frmt", ",", 
   "endPoint", ",", "funcName", ",", "permit"}], "]"}]}], "Input",
 CellChangeTimes->{{3.774024211766733*^9, 3.7740242474837255`*^9}},
 CellLabel->
  "In[709]:=",ExpressionUUID->"39443aab-17fb-41ca-b0d0-096d80bf5e57"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"CloudObject", "[", 
   TemplateBox[{
    "\"https://www.wolframcloud.com/obj/mitch/live-coding/gauge-grid\"",
     "https://www.wolframcloud.com/obj/mitch/live-coding/gauge-grid"},
    "HyperlinkURL"], "]"}],
  CloudObject["https://www.wolframcloud.com/obj/mitch/live-coding/gauge-grid"],
  SelectWithContents->True]], "Output",
 CellChangeTimes->{3.774188448323279*^9},
 CellLabel->
  "Out[713]=",ExpressionUUID->"3dac28b4-cfcf-446a-a38b-a49a33dd7c6f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"url", "=", 
  RowBox[{"URLBuild", "[", 
   RowBox[{
    RowBox[{"makeCD", "[", 
     RowBox[{"args", ",", " ", 
      RowBox[{"funcWid", "[", "\"\<FBrnXpZX\>\"", "]"}], ",", "frmt", ",", 
      "endPoint", ",", "funcName", ",", "permit"}], "]"}], ",", "params"}], 
   "]"}]}], "\n", 
 RowBox[{
  RowBox[{"session", "=", 
   RowBox[{"StartWebSession", "[", "\"\<Chrome\>\"", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"WebExecute", "[", 
   RowBox[{"session", ",", 
    RowBox[{"{", 
     RowBox[{"\"\<OpenPage\>\"", "\[Rule]", "url"}], "}"}]}], "]"}], 
  ";"}]}], "Input",
 CellChangeTimes->{3.774024272158733*^9, 3.7741884627113686`*^9},
 CellLabel->
  "In[714]:=",ExpressionUUID->"5e39e300-f22b-4ed8-88f0-d8b6fe42ca4c"],

Cell[BoxData["\<\"https://www.wolframcloud.com/obj/mitch/live-coding/gauge-\
grid?reading=53&rows=6\"\>"], "Output",
 CellChangeTimes->{3.7741884739563446`*^9},
 CellLabel->
  "Out[714]=",ExpressionUUID->"7363b03d-2ad0-4fe0-a955-a89053711d62"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Upcoming sessions", "Chapter",
 CellChangeTimes->{{3.7638952926466093`*^9, 3.7638952984445906`*^9}, {
  3.7639024836480412`*^9, 3.7639024948250484`*^9}, {3.773237263330803*^9, 
  3.773237277552941*^9}},ExpressionUUID->"a8231bc6-a2be-43b8-b5ad-\
045d367a75d2"],

Cell["\<\
- Add NodeJS (+ Express) to the mix
- Introducing global state management of API requests and responses in React
- User managment
- Security
- Encryption
- AWS serverless (NodeJS)
- Sockets between React/Node and WC
- Making WC read, write, listen, and speak\
\>", "Text",
 CellChangeTimes->{{3.763895311183606*^9, 3.763895404183589*^9}, {
  3.7638955300315895`*^9, 3.763895581598591*^9}, {3.763902220666043*^9, 
  3.763902252925053*^9}, {3.763902357468041*^9, 3.7639024548940425`*^9}, {
  3.7639024981630635`*^9, 3.7639026050470424`*^9}, {3.763998374709749*^9, 
  3.7639983804727407`*^9}, {3.7730598740551395`*^9, 3.773059928816169*^9}, {
  3.7732372166076655`*^9, 
  3.773237238754826*^9}},ExpressionUUID->"da94c342-84e8-4745-9feb-\
29a8dc81f6a8"]
}, Open  ]]
}, Open  ]]
},
WindowToolbars->"RulerBar",
WindowSize->{881, 884},
WindowMargins->{{Automatic, 0}, {47, Automatic}},
Magnification:>1.25 Inherited,
FrontEndVersion->"12.0 for Microsoft Windows (64-bit) (March 17, 2019)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 534, 11, 346, "Title",ExpressionUUID->"7d907abe-a0ba-4b39-905d-46d65bf1926e"],
Cell[CellGroupData[{
Cell[1139, 37, 162, 3, 86, "Chapter",ExpressionUUID->"cbb3bda8-dc2b-4eac-8dfb-a802d8b0bec1"],
Cell[1304, 42, 216, 6, 71, "Text",ExpressionUUID->"4f1d6671-dc53-4a50-bed1-bbc2202ae343"],
Cell[CellGroupData[{
Cell[1545, 52, 308, 6, 55, "Input",ExpressionUUID->"721224c1-4e5a-403f-9de2-be954c80dcbb"],
Cell[1856, 60, 545, 7, 40, "Output",ExpressionUUID->"682ead1a-f060-4c23-a60c-a10152501725"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2438, 72, 260, 5, 55, "Input",ExpressionUUID->"fa87c054-4986-427c-970b-da9bebd5f4c6"],
Cell[2701, 79, 505, 7, 40, "Output",ExpressionUUID->"2d54e654-6749-4a94-8136-8ea862e9454a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3243, 91, 1137, 23, 128, "Input",ExpressionUUID->"bf085ee1-349b-415e-bf4b-e8df1a01ea50"],
Cell[4383, 116, 318, 6, 40, "Output",ExpressionUUID->"1a796059-7345-4236-926a-c6644cc2f7e6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[4738, 127, 153, 3, 83, "Section",ExpressionUUID->"aadec40a-3368-4723-89fd-8eb251f38546"],
Cell[4894, 132, 2055, 38, 565, "Text",ExpressionUUID->"61070079-5b9c-44ad-ba6d-a20bd75cf098"]
}, Closed]],
Cell[CellGroupData[{
Cell[6986, 175, 161, 3, 64, "Section",ExpressionUUID->"c94a9a1d-f6a8-4105-87a9-29514bdfea20"],
Cell[7150, 180, 5245, 74, 1335, "Text",ExpressionUUID->"4ffdfe0e-774a-401d-ba25-ab0a9cd91077"]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[12444, 260, 290, 4, 86, "Chapter",ExpressionUUID->"d40c6ba1-9bcf-48d5-b198-46dd20d72e26"],
Cell[12737, 266, 2614, 51, 368, "Input",ExpressionUUID->"725d77f7-93a5-4ad3-bc6a-c4bd3716c6e5"],
Cell[CellGroupData[{
Cell[15376, 321, 1522, 40, 180, "Input",ExpressionUUID->"370f31d8-63d6-4ae1-b568-0a8fbf6f63f1"],
Cell[16901, 363, 845, 11, 40, "Output",ExpressionUUID->"c81b73da-42cf-4ea9-914a-1afeda0c5a3f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[17783, 379, 845, 19, 132, "Input",ExpressionUUID->"a23c238a-f39c-4cda-9ce2-ca353ef5b2e0"],
Cell[18631, 400, 1062, 22, 70, "Output",ExpressionUUID->"3f0d46be-6bd0-4ba7-be26-3f55ad4356e0"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[19742, 428, 410, 6, 145, "Chapter",ExpressionUUID->"0493cc2b-5455-4cf2-8c5b-23605cbe9aff"],
Cell[CellGroupData[{
Cell[20177, 438, 163, 3, 79, "Subchapter",ExpressionUUID->"1bd1934c-c8be-4b54-93f4-3118a6d0fb6d"],
Cell[CellGroupData[{
Cell[20365, 445, 190, 3, 67, "Subsection",ExpressionUUID->"48f51a77-e5a5-44f2-b150-475e96dee4e4"],
Cell[20558, 450, 538, 9, 71, "Text",ExpressionUUID->"4ae43a17-c9e7-4bd3-a4b9-39952928628f"],
Cell[21099, 461, 927, 19, 265, "Text",ExpressionUUID->"e420b43f-c97e-449f-9672-3b777dd62622"],
Cell[CellGroupData[{
Cell[22051, 484, 992, 23, 156, "Input",ExpressionUUID->"583a8907-5751-405b-8574-27bd41cc8683"],
Cell[23046, 509, 321, 5, 40, "Output",ExpressionUUID->"42540ee8-f59b-4922-a76e-67909875a5e2"],
Cell[23370, 516, 2195, 61, 130, "Output",ExpressionUUID->"f14ce2fa-62e0-4922-9492-962b10d3c6f8"],
Cell[25568, 579, 998, 30, 60, "Output",ExpressionUUID->"73b28a2e-f792-41e4-8e32-132cac9d5388"],
Cell[26569, 611, 2240, 61, 130, "Output",ExpressionUUID->"21309614-b8f4-41dd-b159-7631df16c466"]
}, Open  ]],
Cell[28824, 675, 2034, 48, 276, "Input",ExpressionUUID->"30bb4b9f-bc98-4728-be09-63fdf6cc06f3"],
Cell[30861, 725, 10198, 207, 1668, "Input",ExpressionUUID->"04657f2b-2ff6-4fc0-bde5-44e4141397b3"],
Cell[CellGroupData[{
Cell[41084, 936, 341, 8, 35, "Input",ExpressionUUID->"6e704d22-87cf-4543-b4b4-0788fe00712f"],
Cell[41428, 946, 14895, 246, 162, "Output",ExpressionUUID->"0f956120-8984-4419-9e6e-0e8dc8a94791"]
}, Open  ]],
Cell[CellGroupData[{
Cell[56360, 1197, 245, 6, 35, "Input",ExpressionUUID->"bdc99fad-6c7c-4118-87e5-1c8af55d37b7"],
Cell[56608, 1205, 1492, 25, 43, "Output",ExpressionUUID->"a3e6e098-6478-4424-9ebd-660fefdc7c04"]
}, Open  ]],
Cell[CellGroupData[{
Cell[58137, 1235, 975, 24, 84, "Input",ExpressionUUID->"f0352c38-d467-48a5-80bb-5dcf9d324d62"],
Cell[59115, 1261, 1400, 20, 65, "Output",ExpressionUUID->"17222bab-0c27-4875-9abd-895a380a2f8c"]
}, Open  ]],
Cell[60530, 1284, 249, 6, 43, "Text",ExpressionUUID->"3b9d5772-fd6b-4224-a6e0-aa512e2f1b90"],
Cell[CellGroupData[{
Cell[60804, 1294, 246, 5, 35, "Input",ExpressionUUID->"70bce0ab-06e7-4bad-a0f0-5bee0237b848"],
Cell[61053, 1301, 185, 3, 40, "Output",ExpressionUUID->"1e5d190c-0cc0-42dc-b0ca-7ed5ace01cf8"]
}, Open  ]],
Cell[CellGroupData[{
Cell[61275, 1309, 392, 7, 35, "Input",ExpressionUUID->"0c40a55a-b5ae-4f94-a0cd-1ae36998850b"],
Cell[61670, 1318, 271, 4, 40, "Output",ExpressionUUID->"8e17304c-3345-4175-91bf-0b157d38ac85"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[62014, 1330, 753, 10, 145, "Chapter",ExpressionUUID->"662f0697-6bd2-47b5-ad9c-5b9db247263c"],
Cell[CellGroupData[{
Cell[62792, 1344, 162, 3, 56, "Subsubsection",ExpressionUUID->"226732a0-a3f9-493c-96f6-45d69aad94c8"],
Cell[62957, 1349, 229, 4, 43, "Text",ExpressionUUID->"1af7bef8-8291-45d3-9da0-74b411a7a5bf"],
Cell[63189, 1355, 1424, 28, 277, "Input",ExpressionUUID->"3c2fd98c-5145-4599-a4c1-ca76a25d1b07"]
}, Open  ]],
Cell[CellGroupData[{
Cell[64650, 1388, 223, 4, 56, "Subsubsection",ExpressionUUID->"b91d6c81-1862-4a68-9f0b-9430c8b42d0e"],
Cell[CellGroupData[{
Cell[64898, 1396, 139, 3, 35, "Input",ExpressionUUID->"71550abf-13c2-4977-8dd5-e8681f9cb319"],
Cell[65040, 1401, 14400, 291, 86, "Output",ExpressionUUID->"c3527e7e-f0a5-47d5-bba6-11d959958d9d"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[79489, 1698, 233, 4, 56, "Subsubsection",ExpressionUUID->"44c9280d-574e-4231-91d9-2920c6c05ef5"],
Cell[CellGroupData[{
Cell[79747, 1706, 806, 18, 108, "Input",ExpressionUUID->"7b8e4f9d-f30a-4468-8d39-6e62b0740fb2"],
Cell[80556, 1726, 30079, 567, 145, "Output",ExpressionUUID->"f4167fe8-6393-49b9-a9bd-5d11b51326cf"]
}, Open  ]],
Cell[CellGroupData[{
Cell[110672, 2298, 517, 12, 60, "Input",ExpressionUUID->"26f794f9-bde1-4708-8312-c09b9d2f11ff"],
Cell[111192, 2312, 14121, 287, 86, "Output",ExpressionUUID->"5c416452-1891-44d0-ab3f-18b7789f2966"]
}, Open  ]],
Cell[CellGroupData[{
Cell[125350, 2604, 1253, 32, 180, "Input",ExpressionUUID->"1097e129-3d42-42cd-8668-86c670ae09c1"],
Cell[126606, 2638, 55556, 1130, 706, "Output",ExpressionUUID->"ee5054bf-dec7-4fff-9e67-b196eec9733c"],
Cell[182165, 3770, 207, 4, 40, "Output",ExpressionUUID->"13bc2af0-c43f-4d6b-823e-70f666954586"],
Cell[182375, 3776, 9072, 208, 189, "Output",ExpressionUUID->"4f05685b-5820-4a4d-b193-f224284a9a31"],
Cell[191450, 3986, 208, 4, 40, "Output",ExpressionUUID->"43498fcd-4ad3-40ba-a7f6-817300f4194e"],
Cell[191661, 3992, 10204, 206, 246, "Output",ExpressionUUID->"0b930479-a24d-44b9-ac5c-6d1cdecda4bb"],
Cell[201868, 4200, 206, 4, 40, "Output",ExpressionUUID->"cc1bba48-5fdb-476c-b7b2-6572dd227c29"]
}, Open  ]],
Cell[CellGroupData[{
Cell[202111, 4209, 153, 3, 35, "Input",ExpressionUUID->"77add106-d63a-4f3d-87d5-87876f7915f0"],
Cell[202267, 4214, 20517, 422, 418, "Output",ExpressionUUID->"6d3fa00d-2261-4c6e-95e9-3f255549260f"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[222833, 4642, 166, 3, 55, "Subsubsection",ExpressionUUID->"5ed54710-577f-4046-9914-8467bd4666dc"],
Cell[CellGroupData[{
Cell[223024, 4649, 367, 9, 35, "Input",ExpressionUUID->"e37ca69b-521f-4da7-a8c7-c330df07eb74"],
Cell[223394, 4660, 78608, 1595, 740, "Output",ExpressionUUID->"dd4b958a-a266-4a87-8d7d-5127b201eb83"]
}, Open  ]],
Cell[CellGroupData[{
Cell[302039, 6260, 456, 13, 35, "Input",ExpressionUUID->"05f6cc10-7ffe-43ba-924e-6711533c37d1"],
Cell[302498, 6275, 80069, 1605, 740, "Output",ExpressionUUID->"19ced1f9-7b1d-4702-a56c-1308ec5580d9"]
}, Open  ]],
Cell[382582, 7883, 387, 10, 35, "Input",ExpressionUUID->"7ef3cd4f-2f4b-4397-89cd-046ec2eb8143"],
Cell[CellGroupData[{
Cell[382994, 7897, 2285, 64, 202, "Input",ExpressionUUID->"2c2c08bb-5101-43a7-93fa-fc1dbed34be3"],
Cell[385282, 7963, 2936, 74, 173, "Output",ExpressionUUID->"73418c24-ac22-41e8-af5f-4c5fe358127c"],
Cell[388221, 8039, 2576, 71, 120, "Output",ExpressionUUID->"939ada98-232f-4a5d-8d8b-73262c32d9f6"],
Cell[390800, 8112, 11076, 202, 133, "Output",ExpressionUUID->"dee30ace-b33a-48f0-b8b8-db0e7dd2f78d"],
Cell[401879, 8316, 1128, 41, 40, "Output",ExpressionUUID->"64318e6a-66c9-49a6-b31a-7daee42e648a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[403044, 8362, 888, 23, 60, "Input",ExpressionUUID->"54bc293a-55ff-44b1-ba0c-32b0be8c84d4"],
Cell[403935, 8387, 450, 15, 40, "Output",ExpressionUUID->"8fb89fe7-0475-43b1-83d3-d9744b4b629d"],
Cell[404388, 8404, 450, 15, 40, "Output",ExpressionUUID->"54aeff55-7041-44b7-93a2-d6772c169560"]
}, Open  ]],
Cell[CellGroupData[{
Cell[404875, 8424, 1559, 40, 155, "Input",ExpressionUUID->"4a73e747-24c1-41bf-abf4-c8836e6f2529"],
Cell[406437, 8466, 1455, 53, 40, "Output",ExpressionUUID->"0f00bc76-cba7-45de-ae4a-25cc1d1bd2e4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[407929, 8524, 343, 10, 35, "Input",ExpressionUUID->"aaab5a3c-19f0-4a4d-886e-fe36f31c895d"],
Cell[408275, 8536, 10967, 200, 136, "Output",ExpressionUUID->"479e088b-9264-40ad-a2de-82984f4a3add"]
}, Open  ]],
Cell[CellGroupData[{
Cell[419279, 8741, 4035, 94, 392, "Input",ExpressionUUID->"55aa9a47-fc2d-4a11-962b-6bfd575ebd0b"],
Cell[423317, 8837, 2573, 88, 168, "Output",ExpressionUUID->"74ea5497-2fe8-43da-93bf-34d068cb6667"],
Cell[425893, 8927, 182, 3, 40, "Output",ExpressionUUID->"2411946d-5840-454f-a306-fe248a045f21"]
}, Open  ]],
Cell[CellGroupData[{
Cell[426112, 8935, 726, 18, 131, "Input",ExpressionUUID->"429d0a26-f02e-461b-9984-580f4da81f17"],
Cell[426841, 8955, 2791, 94, 165, "Output",ExpressionUUID->"091fa4c7-688d-4691-8f55-55069d2f7644"]
}, Open  ]],
Cell[429647, 9052, 236, 4, 42, "Text",ExpressionUUID->"ef11ce72-9815-4f83-bf1e-dcc5741f630b"],
Cell[CellGroupData[{
Cell[429908, 9060, 1185, 32, 107, "Input",ExpressionUUID->"dd3d2102-3cf3-45ae-89b4-09ac6e71ed3b"],
Cell[431096, 9094, 17698, 473, 65, "Output",ExpressionUUID->"52f4358a-4b1b-4c27-a1c5-9740b2e3ee8f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[448831, 9572, 2066, 43, 345, "Input",ExpressionUUID->"2eb8ab95-3257-46d8-922c-334c89da5974"],
Cell[450900, 9617, 219677, 3178, 177, "Output",ExpressionUUID->"6964a171-aa2d-4c94-92a9-8a52fd8f9467"]
}, Open  ]],
Cell[670592, 12798, 172, 3, 42, "Text",ExpressionUUID->"ffc6aa8c-d493-498a-9106-e738ec2f27ec"],
Cell[CellGroupData[{
Cell[670789, 12805, 2217, 47, 250, "Input",ExpressionUUID->"fa39ca60-7f2d-4a0d-89ea-28e2b954f882"],
Cell[673009, 12854, 9949, 230, 183, "Output",ExpressionUUID->"16c70d5d-0237-4df2-8926-0e811a15c0db"]
}, Open  ]],
Cell[CellGroupData[{
Cell[682995, 13089, 3247, 77, 487, "Input",ExpressionUUID->"b5ed8e83-3a83-473b-b68a-7e6014e1f42d"],
Cell[686245, 13168, 91609, 1507, 190, "Output",ExpressionUUID->"3dc9fba1-0311-4496-8e98-380407289120"]
}, Open  ]],
Cell[CellGroupData[{
Cell[777891, 14680, 4642, 107, 748, "Input",ExpressionUUID->"3842b88a-197e-45c4-b4ee-241ac5786d38"],
Cell[782536, 14789, 163, 3, 40, "Output",ExpressionUUID->"1e104de4-32bc-4aae-86b4-c5c75316762e"],
Cell[782702, 14794, 95701, 1574, 207, "Output",ExpressionUUID->"762eb69a-7683-417a-9ded-b8b098de16a6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[878440, 16373, 793, 20, 155, "Input",ExpressionUUID->"39443aab-17fb-41ca-b0d0-096d80bf5e57"],
Cell[879236, 16395, 498, 11, 43, "Output",ExpressionUUID->"3dac28b4-cfcf-446a-a38b-a49a33dd7c6f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[879771, 16411, 766, 21, 83, "Input",ExpressionUUID->"5e39e300-f22b-4ed8-88f0-d8b6fe42ca4c"],
Cell[880540, 16434, 243, 4, 40, "Output",ExpressionUUID->"7363b03d-2ad0-4fe0-a955-a89053711d62"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[880844, 16445, 265, 4, 83, "Chapter",ExpressionUUID->"a8231bc6-a2be-43b8-b5ad-045d367a75d2"],
Cell[881112, 16451, 759, 17, 235, "Text",ExpressionUUID->"da94c342-84e8-4745-9feb-29a8dc81f6a8"]
}, Open  ]]
}, Open  ]]
}
]
*)

