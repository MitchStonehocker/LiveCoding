(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[   1343127,      27000]
NotebookOptionsPosition[   1316136,      26554]
NotebookOutlinePosition[   1316510,      26570]
CellTagsIndexPosition[   1316467,      26567]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["\<\
Building WolframCloud APIs for JavaScript (React, Node, AWS)

Livecoding Session 2\
\>", "Title",
 CellChangeTimes->{{3.7638898877493024`*^9, 3.763889938762308*^9}, {
  3.7638899734873037`*^9, 3.763889994907301*^9}, {3.7647562659747314`*^9, 
  3.764756281453726*^9}, {3.773063878620057*^9, 3.7730638977200856`*^9}, {
  3.7732444445448933`*^9, 3.7732444546978936`*^9}, {3.7733253046821012`*^9, 
  3.773325304807078*^9}},ExpressionUUID->"7d907abe-a0ba-4b39-905d-\
46d65bf1926e"],

Cell[CellGroupData[{

Cell["Overview", "Section",
 CellChangeTimes->{{3.764756563582971*^9, 
  3.764756565220968*^9}},ExpressionUUID->"aadec40a-3368-4723-89fd-\
8eb251f38546"],

Cell["\<\
Assumptions:
- Familiarity with Mathematica.  
- Familiarity of JS is helpful but not required for this presentation.

A few words about:
- Introduction and background for React (https://reactjs.org/) / Axios and \
Node (https://nodejs.org/en/) / Express.
- Wolfram setup, we will use the following tools:
\t- Mathematica desktop (wolfram.com/) & Wolfram Cloud (wolframcloud.com - \
free sign up.  You can use Wolfram Cloud (WC) alone if you like)
- Other than Wolfram setup:
\t- npm (https://www.npmjs.com/) 
\t- git (https://git-scm.com/)
\t- GitHub (https://github.com/)
\t- AWS (free tier: https://aws.amazon.com/console/)
\t- AWS-CLI (https://aws.amazon.com/cli/)
\t- AWS Amplify (https://aws.amazon.com/amplify/)
\t- create-react-app (https://facebook.github.io/create-react-app/)
\t- Chrome browser (google.com/chrome).  We will use chrome developer tools.  \
Other browsers and their browser tools may not be sufficient for what we will \
doing)
\t- Postman (getpostman.com/ for validating and testing APIs) \
\>", "Text",
 CellChangeTimes->{{3.763890011612302*^9, 3.7638901696143055`*^9}, {
   3.763890200718302*^9, 3.7638902611903043`*^9}, 3.764756403943945*^9, {
   3.7647565533949785`*^9, 3.764756557441941*^9}, {3.764756840776133*^9, 
   3.764756841297163*^9}, {3.764757171913148*^9, 3.764757183439116*^9}, {
   3.764757372949869*^9, 3.7647573743968663`*^9}, {3.764757413359903*^9, 
   3.7647574358868675`*^9}, {3.7647574930818973`*^9, 
   3.7647574986978655`*^9}, {3.7647575428068686`*^9, 
   3.7647575515239162`*^9}, {3.764757605406885*^9, 3.7647576177608685`*^9}, {
   3.765994705983547*^9, 3.7659947241623526`*^9}, {3.772980054888672*^9, 
   3.7729800636716423`*^9}, {3.772992965596657*^9, 3.7729929935746317`*^9}, {
   3.7729931157593164`*^9, 3.7729933743705482`*^9}, {3.7729934104615884`*^9, 
   3.772993510872326*^9}, {3.7729939744644995`*^9, 3.772993976561745*^9}, {
   3.773232226841055*^9, 3.7732322335620775`*^9}, {3.773232270260056*^9, 
   3.773232301914174*^9}},ExpressionUUID->"61070079-5b9c-44ad-ba6d-\
a20bd75cf098"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Introduction", "Section",
 CellChangeTimes->{{3.7647565738499856`*^9, 
  3.7647565760699434`*^9}},ExpressionUUID->"c94a9a1d-f6a8-4105-87a9-\
29514bdfea20"],

Cell[TextData[{
 "Motivating principle: separation of duties for people and software \
supporting the goals of modular design principles.  Easy to understand \
separating people by expertise in front-end, back-end and quantitative \
capabilities and code production.\n\nThis is the first of three (or more) \
live-coding walk-through\[CloseCurlyQuote]s that show an approach to \
integrating Mathematica to a browser front-end (ReactJS) and a serverless \
back-end (Node JS and AWS).\n\nReactJS is a JavaScript (JS) library widely \
used to make single page applications (SPAs).   \[OpenCurlyQuote]Hooks\
\[CloseCurlyQuote] were introduced in the recently released version 16.8 \
(https://reactjs.org/docs/hooks-intro.html).  Using hooks allows React \
developers to ",
 StyleBox["write JS applications using 100% functional methods",
  FontSlant->"Italic"],
 " - eliminating the need for JS classes.  There are many advantages to this \
new capability and we will focus on the implications for APIs between React \
and the Wolfram Cloud (WC) and between AWS and WC.\n\nWe will show JS and JSX \
(https://reactjs.org/docs/introducing-jsx.html) with respect to how the API \
requests (req) and responses (res) are managed.  The JS browser app is a bear \
bones deployment with minimal styling and organization considerations.  \n\n\
We will iterate from the simplest possible API (that I can think of) to ever \
more complex patterns.  There are JS and React considerations that impact the \
WC side of the API.  A number of these considerations will be presented, \
discussed and dealt with.  In every instance the goal is to produce \
Mathematica side code that is simultaneously used for presentation in a \
browser and analytical use is Mathematica. \n\nSome requests and \
considerations:\n- You will see the URL I use (my WC account) and API \
end-points I am using.  I've made these public for these live coding \
sessions.  It's ok during the live coding session to use my APIs if you can't \
make yours work, but please setup your own WC account, make your own APIs and \
use them.\n\nThe general development pattern:\n1.0) Three parts to \
APIFunction[...]:\n\t1.1) inputs\n\t1.2) functions\n\t1.3) output format\n\
2.0) Test by passing an association of API inputs <|key -> value, ...|>\n3.0) \
Two\[CloseCurlyQuote]ish parts to CloudDeploy[...]:\n\t3.1) the api function \
(1 above)\n\t3.2) options:\n\t\t3.2.1) the path and api name\n\t\t3.2.2) \
permissions\n4.0) Test:\n\t4.1) to a browser with StartWebSession[...] and \
WebExecute[...]\n\t4.2) to postman\n5.0) Connect to:\n\t5.1) front-end \
(React)\n\t5.2) backend (Node)\n\t\t5.2.1) test serverless api between AWS \
(via Node) and WC \n\nHere are a couple web sites that are built on this \
pattern where the front-end is a Single Page Application (SPA) using React, \
the back-end is serverless and built on NodeJS - AWS, and everything \
computational is done with Wolfram (Wolfram Cloud):\n\t- \
https://www.aitoconsulting.org/options-pub\n\t- \
https://www.christyhealth.org/ "
}], "Text",
 CellChangeTimes->{{3.7638925113235245`*^9, 3.763892602952525*^9}, {
   3.7638926449898577`*^9, 3.763892679550857*^9}, {3.7638927610188594`*^9, 
   3.763892870950164*^9}, {3.763892919391177*^9, 3.7638929197561655`*^9}, {
   3.763892955061165*^9, 3.7638929800851707`*^9}, {3.763893021724162*^9, 
   3.7638930466791625`*^9}, {3.763893083743539*^9, 3.763893241971854*^9}, {
   3.763893325857852*^9, 3.7638933827108536`*^9}, {3.763893503539854*^9, 
   3.763893729315853*^9}, {3.7638937626608524`*^9, 3.763893772730853*^9}, {
   3.763893813032853*^9, 3.763893829265854*^9}, {3.763893938532851*^9, 
   3.763894148194852*^9}, {3.7638942514368525`*^9, 3.7638943385438538`*^9}, {
   3.763901766635436*^9, 3.7639019780990415`*^9}, {3.763902013962042*^9, 
   3.763902198031045*^9}, {3.7647564315139456`*^9, 3.764756431692975*^9}, {
   3.764756465136969*^9, 3.7647565251609664`*^9}, {3.7647566636861153`*^9, 
   3.764756769370118*^9}, {3.7647568109481173`*^9, 3.764756823416159*^9}, {
   3.764756881883115*^9, 3.7647568877021427`*^9}, {3.7647569634591217`*^9, 
   3.7647570924251404`*^9}, {3.76475766166391*^9, 3.7647576621639104`*^9}, {
   3.764757730854865*^9, 3.7647577487108665`*^9}, {3.7647577840658665`*^9, 
   3.7647579290088663`*^9}, {3.764757988805909*^9, 3.7647580408408937`*^9}, {
   3.7649622307181253`*^9, 3.7649622315621276`*^9}, {3.7649626531221275`*^9, 
   3.7649626773441277`*^9}, {3.772993077615311*^9, 3.7729931022412853`*^9}, {
   3.7729935878615055`*^9, 3.77299362437051*^9}, {3.7729936643474936`*^9, 
   3.7729936649064684`*^9}, {3.7729937384994183`*^9, 3.772993739050414*^9}, {
   3.7729937745017257`*^9, 3.772993794516692*^9}, {3.7729938280945597`*^9, 
   3.7729938590646877`*^9}, {3.7729939121487713`*^9, 3.772993943128764*^9}, {
   3.7729939959827538`*^9, 3.7729940407840967`*^9}, {3.772994093559266*^9, 
   3.772994160221322*^9}, {3.77299464254669*^9, 3.7729946757376604`*^9}, {
   3.7729947195446897`*^9, 3.772994853649682*^9}, {3.772994884498707*^9, 
   3.7729951249580517`*^9}, {3.7730641663149085`*^9, 
   3.7730644514901915`*^9}, {3.773232313741212*^9, 3.7732324943412533`*^9}, 
   3.773232538264116*^9},ExpressionUUID->"4ffdfe0e-774a-401d-ba25-\
ab0a9cd91077"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
API-5) JSON: more complicated structures from external sources\
\>", "Chapter",
 CellChangeTimes->{{3.7638903241703033`*^9, 3.763890345648301*^9}, {
  3.763890378189311*^9, 3.7638903783533*^9}, {3.7638906160813036`*^9, 
  3.7638906258263035`*^9}, {3.7639758091081314`*^9, 3.763975817676131*^9}, {
  3.76397767792791*^9, 3.7639776785389123`*^9}, {3.763990565566147*^9, 
  3.763990571003147*^9}, {3.7649697076923995`*^9, 3.764969708067398*^9}, {
  3.77332648026637*^9, 
  3.7733265064833994`*^9}},ExpressionUUID->"6338c18a-e908-4bd3-bb68-\
42fb45001ed5"],

Cell[CellGroupData[{

Cell["get data from outside MM", "Subsubsection",
 CellChangeTimes->{{3.7639842717261066`*^9, 
  3.7639842833811073`*^9}},ExpressionUUID->"7d88993f-c247-4bae-b611-\
fcec715e8ebe"],

Cell[TextData[{
 "A good source of semi structured JSON for development and testing is ",
 StyleBox["https://jsonplaceholder.typicode.com",
  FontSlant->"Italic",
  FontColor->RGBColor[0.6, 0.4, 0.2]],
 "\n{ posts, comments, albums, photos, todos, users }\n\nNote the different \
import results given the use of \[OpenCurlyDoubleQuote]JSON\
\[CloseCurlyDoubleQuote] or \[OpenCurlyDoubleQuote]RawJSON\
\[CloseCurlyDoubleQuote]."
}], "Text",
 CellChangeTimes->{{3.7639777335359125`*^9, 3.76397774544191*^9}, {
  3.763983664349107*^9, 3.7639837448461123`*^9}, {3.7649662841519547`*^9, 
  3.764966305033959*^9}, {3.764966455162956*^9, 3.7649664725369596`*^9}, {
  3.773233302163672*^9, 
  3.7732333324606547`*^9}},ExpressionUUID->"c1d404f4-65d4-42b2-96b9-\
bcbc5026beea"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Import", "[", 
   RowBox[{
   "\"\<https://jsonplaceholder.typicode.com/users\>\"", ",", 
    "\"\<JSON\>\""}], "]"}], "[", 
  RowBox[{"[", 
   RowBox[{"1", ";;", "3"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.763984035788107*^9, 3.7639841066041055`*^9}, {
   3.763984156393108*^9, 3.763984209345105*^9}, 3.7730555288736444`*^9, {
   3.773055587468629*^9, 3.7730555991626406`*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"308076bd-c2f5-471a-a7d9-8b93835f41ca"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\<\"id\"\>", "\[Rule]", "1"}], ",", 
     RowBox[{"\<\"name\"\>", "\[Rule]", "\<\"Leanne Graham\"\>"}], ",", 
     RowBox[{"\<\"username\"\>", "\[Rule]", "\<\"Bret\"\>"}], ",", 
     RowBox[{"\<\"email\"\>", "\[Rule]", "\<\"Sincere@april.biz\"\>"}], ",", 
     RowBox[{"\<\"address\"\>", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\<\"street\"\>", "\[Rule]", "\<\"Kulas Light\"\>"}], ",", 
        RowBox[{"\<\"suite\"\>", "\[Rule]", "\<\"Apt. 556\"\>"}], ",", 
        RowBox[{"\<\"city\"\>", "\[Rule]", "\<\"Gwenborough\"\>"}], ",", 
        RowBox[{"\<\"zipcode\"\>", "\[Rule]", "\<\"92998-3874\"\>"}], ",", 
        RowBox[{"\<\"geo\"\>", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"\<\"lat\"\>", "\[Rule]", "\<\"-37.3159\"\>"}], ",", 
           RowBox[{"\<\"lng\"\>", "\[Rule]", "\<\"81.1496\"\>"}]}], "}"}]}]}],
        "}"}]}], ",", 
     RowBox[{"\<\"phone\"\>", "\[Rule]", "\<\"1-770-736-8031 x56442\"\>"}], 
     ",", 
     RowBox[{"\<\"website\"\>", "\[Rule]", "\<\"hildegard.org\"\>"}], ",", 
     RowBox[{"\<\"company\"\>", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\<\"name\"\>", "\[Rule]", "\<\"Romaguera-Crona\"\>"}], ",", 
        RowBox[{"\<\"catchPhrase\"\>", 
         "\[Rule]", "\<\"Multi-layered client-server neural-net\"\>"}], ",", 
        RowBox[{"\<\"bs\"\>", 
         "\[Rule]", "\<\"harness real-time e-markets\"\>"}]}], "}"}]}]}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\<\"id\"\>", "\[Rule]", "2"}], ",", 
     RowBox[{"\<\"name\"\>", "\[Rule]", "\<\"Ervin Howell\"\>"}], ",", 
     RowBox[{"\<\"username\"\>", "\[Rule]", "\<\"Antonette\"\>"}], ",", 
     RowBox[{"\<\"email\"\>", "\[Rule]", "\<\"Shanna@melissa.tv\"\>"}], ",", 
     RowBox[{"\<\"address\"\>", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\<\"street\"\>", "\[Rule]", "\<\"Victor Plains\"\>"}], ",", 
        RowBox[{"\<\"suite\"\>", "\[Rule]", "\<\"Suite 879\"\>"}], ",", 
        RowBox[{"\<\"city\"\>", "\[Rule]", "\<\"Wisokyburgh\"\>"}], ",", 
        RowBox[{"\<\"zipcode\"\>", "\[Rule]", "\<\"90566-7771\"\>"}], ",", 
        RowBox[{"\<\"geo\"\>", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"\<\"lat\"\>", "\[Rule]", "\<\"-43.9509\"\>"}], ",", 
           RowBox[{"\<\"lng\"\>", "\[Rule]", "\<\"-34.4618\"\>"}]}], 
          "}"}]}]}], "}"}]}], ",", 
     RowBox[{"\<\"phone\"\>", "\[Rule]", "\<\"010-692-6593 x09125\"\>"}], ",", 
     RowBox[{"\<\"website\"\>", "\[Rule]", "\<\"anastasia.net\"\>"}], ",", 
     RowBox[{"\<\"company\"\>", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\<\"name\"\>", "\[Rule]", "\<\"Deckow-Crist\"\>"}], ",", 
        RowBox[{"\<\"catchPhrase\"\>", 
         "\[Rule]", "\<\"Proactive didactic contingency\"\>"}], ",", 
        RowBox[{"\<\"bs\"\>", 
         "\[Rule]", "\<\"synergize scalable supply-chains\"\>"}]}], "}"}]}]}],
     "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\<\"id\"\>", "\[Rule]", "3"}], ",", 
     RowBox[{"\<\"name\"\>", "\[Rule]", "\<\"Clementine Bauch\"\>"}], ",", 
     RowBox[{"\<\"username\"\>", "\[Rule]", "\<\"Samantha\"\>"}], ",", 
     RowBox[{"\<\"email\"\>", "\[Rule]", "\<\"Nathan@yesenia.net\"\>"}], ",", 
     RowBox[{"\<\"address\"\>", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\<\"street\"\>", "\[Rule]", "\<\"Douglas Extension\"\>"}], 
        ",", 
        RowBox[{"\<\"suite\"\>", "\[Rule]", "\<\"Suite 847\"\>"}], ",", 
        RowBox[{"\<\"city\"\>", "\[Rule]", "\<\"McKenziehaven\"\>"}], ",", 
        RowBox[{"\<\"zipcode\"\>", "\[Rule]", "\<\"59590-4157\"\>"}], ",", 
        RowBox[{"\<\"geo\"\>", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"\<\"lat\"\>", "\[Rule]", "\<\"-68.6102\"\>"}], ",", 
           RowBox[{"\<\"lng\"\>", "\[Rule]", "\<\"-47.0653\"\>"}]}], 
          "}"}]}]}], "}"}]}], ",", 
     RowBox[{"\<\"phone\"\>", "\[Rule]", "\<\"1-463-123-4447\"\>"}], ",", 
     RowBox[{"\<\"website\"\>", "\[Rule]", "\<\"ramiro.info\"\>"}], ",", 
     RowBox[{"\<\"company\"\>", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\<\"name\"\>", "\[Rule]", "\<\"Romaguera-Jacobson\"\>"}], 
        ",", 
        RowBox[{"\<\"catchPhrase\"\>", 
         "\[Rule]", "\<\"Face to face bifurcated interface\"\>"}], ",", 
        RowBox[{"\<\"bs\"\>", 
         "\[Rule]", "\<\"e-enable strategic applications\"\>"}]}], "}"}]}]}], 
    "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.7730555317096386`*^9, {3.773055593930605*^9, 3.773055613656783*^9}, 
   3.773076110997133*^9, 3.773501551763791*^9, 3.7735017450619426`*^9, 
   3.773501963187971*^9},
 CellLabel->"Out[1]=",ExpressionUUID->"de32ffab-7baa-4266-b8b7-fe8cef9dce26"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Import", "[", 
   RowBox[{
   "\"\<https://jsonplaceholder.typicode.com/users\>\"", ",", 
    "\"\<RawJSON\>\""}], "]"}], "[", 
  RowBox[{"[", 
   RowBox[{"1", ";;", "3"}], "]"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"%", "//", "Dataset"}]}], "Input",
 CellChangeTimes->{{3.763984035788107*^9, 3.7639841066041055`*^9}, {
   3.763984156393108*^9, 3.763984209345105*^9}, 3.7730555288736444`*^9, {
   3.7730556058896027`*^9, 3.773055609280671*^9}},
 CellLabel->"In[2]:=",ExpressionUUID->"01232c45-7620-4f0b-b6f3-f844fe1d473c"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"id\"\>", "\[Rule]", "1"}], ",", 
     RowBox[{"\<\"name\"\>", "\[Rule]", "\<\"Leanne Graham\"\>"}], ",", 
     RowBox[{"\<\"username\"\>", "\[Rule]", "\<\"Bret\"\>"}], ",", 
     RowBox[{"\<\"email\"\>", "\[Rule]", "\<\"Sincere@april.biz\"\>"}], ",", 
     RowBox[{"\<\"address\"\>", "\[Rule]", 
      RowBox[{"\[LeftAssociation]", 
       RowBox[{
        RowBox[{"\<\"street\"\>", "\[Rule]", "\<\"Kulas Light\"\>"}], ",", 
        RowBox[{"\<\"suite\"\>", "\[Rule]", "\<\"Apt. 556\"\>"}], ",", 
        RowBox[{"\<\"city\"\>", "\[Rule]", "\<\"Gwenborough\"\>"}], ",", 
        RowBox[{"\<\"zipcode\"\>", "\[Rule]", "\<\"92998-3874\"\>"}], ",", 
        RowBox[{"\<\"geo\"\>", "\[Rule]", 
         RowBox[{"\[LeftAssociation]", 
          RowBox[{
           RowBox[{"\<\"lat\"\>", "\[Rule]", "\<\"-37.3159\"\>"}], ",", 
           RowBox[{"\<\"lng\"\>", "\[Rule]", "\<\"81.1496\"\>"}]}], 
          "\[RightAssociation]"}]}]}], "\[RightAssociation]"}]}], ",", 
     RowBox[{"\<\"phone\"\>", "\[Rule]", "\<\"1-770-736-8031 x56442\"\>"}], 
     ",", 
     RowBox[{"\<\"website\"\>", "\[Rule]", "\<\"hildegard.org\"\>"}], ",", 
     RowBox[{"\<\"company\"\>", "\[Rule]", 
      RowBox[{"\[LeftAssociation]", 
       RowBox[{
        RowBox[{"\<\"name\"\>", "\[Rule]", "\<\"Romaguera-Crona\"\>"}], ",", 
        RowBox[{"\<\"catchPhrase\"\>", 
         "\[Rule]", "\<\"Multi-layered client-server neural-net\"\>"}], ",", 
        RowBox[{"\<\"bs\"\>", 
         "\[Rule]", "\<\"harness real-time e-markets\"\>"}]}], 
       "\[RightAssociation]"}]}]}], "\[RightAssociation]"}], ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"id\"\>", "\[Rule]", "2"}], ",", 
     RowBox[{"\<\"name\"\>", "\[Rule]", "\<\"Ervin Howell\"\>"}], ",", 
     RowBox[{"\<\"username\"\>", "\[Rule]", "\<\"Antonette\"\>"}], ",", 
     RowBox[{"\<\"email\"\>", "\[Rule]", "\<\"Shanna@melissa.tv\"\>"}], ",", 
     RowBox[{"\<\"address\"\>", "\[Rule]", 
      RowBox[{"\[LeftAssociation]", 
       RowBox[{
        RowBox[{"\<\"street\"\>", "\[Rule]", "\<\"Victor Plains\"\>"}], ",", 
        RowBox[{"\<\"suite\"\>", "\[Rule]", "\<\"Suite 879\"\>"}], ",", 
        RowBox[{"\<\"city\"\>", "\[Rule]", "\<\"Wisokyburgh\"\>"}], ",", 
        RowBox[{"\<\"zipcode\"\>", "\[Rule]", "\<\"90566-7771\"\>"}], ",", 
        RowBox[{"\<\"geo\"\>", "\[Rule]", 
         RowBox[{"\[LeftAssociation]", 
          RowBox[{
           RowBox[{"\<\"lat\"\>", "\[Rule]", "\<\"-43.9509\"\>"}], ",", 
           RowBox[{"\<\"lng\"\>", "\[Rule]", "\<\"-34.4618\"\>"}]}], 
          "\[RightAssociation]"}]}]}], "\[RightAssociation]"}]}], ",", 
     RowBox[{"\<\"phone\"\>", "\[Rule]", "\<\"010-692-6593 x09125\"\>"}], ",", 
     RowBox[{"\<\"website\"\>", "\[Rule]", "\<\"anastasia.net\"\>"}], ",", 
     RowBox[{"\<\"company\"\>", "\[Rule]", 
      RowBox[{"\[LeftAssociation]", 
       RowBox[{
        RowBox[{"\<\"name\"\>", "\[Rule]", "\<\"Deckow-Crist\"\>"}], ",", 
        RowBox[{"\<\"catchPhrase\"\>", 
         "\[Rule]", "\<\"Proactive didactic contingency\"\>"}], ",", 
        RowBox[{"\<\"bs\"\>", 
         "\[Rule]", "\<\"synergize scalable supply-chains\"\>"}]}], 
       "\[RightAssociation]"}]}]}], "\[RightAssociation]"}], ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"id\"\>", "\[Rule]", "3"}], ",", 
     RowBox[{"\<\"name\"\>", "\[Rule]", "\<\"Clementine Bauch\"\>"}], ",", 
     RowBox[{"\<\"username\"\>", "\[Rule]", "\<\"Samantha\"\>"}], ",", 
     RowBox[{"\<\"email\"\>", "\[Rule]", "\<\"Nathan@yesenia.net\"\>"}], ",", 
     RowBox[{"\<\"address\"\>", "\[Rule]", 
      RowBox[{"\[LeftAssociation]", 
       RowBox[{
        RowBox[{"\<\"street\"\>", "\[Rule]", "\<\"Douglas Extension\"\>"}], 
        ",", 
        RowBox[{"\<\"suite\"\>", "\[Rule]", "\<\"Suite 847\"\>"}], ",", 
        RowBox[{"\<\"city\"\>", "\[Rule]", "\<\"McKenziehaven\"\>"}], ",", 
        RowBox[{"\<\"zipcode\"\>", "\[Rule]", "\<\"59590-4157\"\>"}], ",", 
        RowBox[{"\<\"geo\"\>", "\[Rule]", 
         RowBox[{"\[LeftAssociation]", 
          RowBox[{
           RowBox[{"\<\"lat\"\>", "\[Rule]", "\<\"-68.6102\"\>"}], ",", 
           RowBox[{"\<\"lng\"\>", "\[Rule]", "\<\"-47.0653\"\>"}]}], 
          "\[RightAssociation]"}]}]}], "\[RightAssociation]"}]}], ",", 
     RowBox[{"\<\"phone\"\>", "\[Rule]", "\<\"1-463-123-4447\"\>"}], ",", 
     RowBox[{"\<\"website\"\>", "\[Rule]", "\<\"ramiro.info\"\>"}], ",", 
     RowBox[{"\<\"company\"\>", "\[Rule]", 
      RowBox[{"\[LeftAssociation]", 
       RowBox[{
        RowBox[{"\<\"name\"\>", "\[Rule]", "\<\"Romaguera-Jacobson\"\>"}], 
        ",", 
        RowBox[{"\<\"catchPhrase\"\>", 
         "\[Rule]", "\<\"Face to face bifurcated interface\"\>"}], ",", 
        RowBox[{"\<\"bs\"\>", 
         "\[Rule]", "\<\"e-enable strategic applications\"\>"}]}], 
       "\[RightAssociation]"}]}]}], "\[RightAssociation]"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.7639840397001123`*^9, 3.7639841074591074`*^9}, {
   3.763984163867113*^9, 3.76398417905011*^9}, 3.7639842108441105`*^9, 
   3.764966231264984*^9, 3.7649678604637594`*^9, 3.766004157712716*^9, {
   3.7730555184156094`*^9, 3.7730555331716394`*^9}, {3.77305560991361*^9, 
   3.773055615111757*^9}, 3.773076112523102*^9, 3.7735015537457905`*^9, 
   3.77350174699294*^9, 3.7735019645589733`*^9},
 CellLabel->"Out[2]=",ExpressionUUID->"9e5a5a87-7bbd-44e2-ab84-a5aaaf99e25c"],

Cell[BoxData[
 TemplateBox[{TagBox[
    DynamicModuleBox[{
     TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
      Data`UnorderedAssociation[
       "RowCount" -> 3, "Length" -> 3, "InitialType" -> TypeSystem`Vector[
          
          TypeSystem`Struct[{
           "id", "name", "username", "email", "address", "phone", "website", 
            "company"}, {
            TypeSystem`Atom[Integer], 
            TypeSystem`Atom[String], 
            TypeSystem`Atom[String], 
            TypeSystem`Atom[String], 
            TypeSystem`Struct[{"street", "suite", "city", "zipcode", "geo"}, {
              TypeSystem`Atom[String], 
              TypeSystem`Atom[String], 
              TypeSystem`Atom[String], 
              TypeSystem`Atom[String], 
              TypeSystem`Struct[{"lat", "lng"}, {
                TypeSystem`Atom[String], 
                TypeSystem`Atom[String]}]}], 
            TypeSystem`Atom[String], 
            TypeSystem`Atom[String], 
            TypeSystem`Struct[{"name", "catchPhrase", "bs"}, {
              TypeSystem`Atom[String], 
              TypeSystem`Atom[String], 
              TypeSystem`Atom[String]}]}], 3], "Shape" -> 
        TypeSystem`PackageScope`HeaderShape[
          
          Association[{All, "id"} -> 1, {All, "name"} -> 1, {All, "username"} -> 
           1, {All, "email"} -> 1, {All, "address"} -> 
           Association[{All, "address", "street"} -> 
             1, {All, "address", "suite"} -> 1, {All, "address", "city"} -> 
             1, {All, "address", "zipcode"} -> 1, {All, "address", "geo"} -> 
             Association[{All, "address", "geo", "lat"} -> 
               1, {All, "address", "geo", "lng"} -> 1]], {All, "phone"} -> 
           1, {All, "website"} -> 1, {All, "company"} -> 
           Association[{All, "company", "name"} -> 
             1, {All, "company", "catchPhrase"} -> 1, {All, "company", "bs"} -> 
             1]], 
          TypeSystem`PackageScope`Limited[
           TypeSystem`PackageScope`ColumnShape[
            TypeSystem`PackageScope`RowShape[
             Association[
             "id" -> TypeSystem`PackageScope`AtomShape[34], "name" -> 
              TypeSystem`PackageScope`AtomShape[153.60000000000002`], 
              "username" -> TypeSystem`PackageScope`AtomShape[86.4], "email" -> 
              TypeSystem`PackageScope`AtomShape[172.8], "address" -> 
              TypeSystem`PackageScope`RowShape[
                Association[
                "street" -> 
                 TypeSystem`PackageScope`AtomShape[163.20000000000002`], 
                 "suite" -> TypeSystem`PackageScope`AtomShape[86.4], "city" -> 
                 TypeSystem`PackageScope`AtomShape[124.80000000000001`], 
                 "zipcode" -> 
                 TypeSystem`PackageScope`AtomShape[96.00000000000001], "geo" -> 
                 TypeSystem`PackageScope`RowShape[
                   Association[
                   "lat" -> TypeSystem`PackageScope`AtomShape[
                    76.80000000000001], "lng" -> 
                    TypeSystem`PackageScope`AtomShape[76.80000000000001]]]]], 
              "phone" -> TypeSystem`PackageScope`AtomShape[
               201.60000000000002`], "website" -> 
              TypeSystem`PackageScope`AtomShape[124.80000000000001`], 
              "company" -> TypeSystem`PackageScope`RowShape[
                Association[
                "name" -> TypeSystem`PackageScope`AtomShape[172.8], 
                 "catchPhrase" -> 
                 TypeSystem`PackageScope`AtomShape[364.80000000000007`], "bs" -> 
                 TypeSystem`PackageScope`AtomShape[307.20000000000005`]]]]]], 
           3, {}]], "InitialData" -> 
        TypeSystem`PackageScope`CacheHandle[1907415228], "Type" -> 
        TypeSystem`Vector[
          
          TypeSystem`Struct[{
           "id", "name", "username", "email", "address", "phone", "website", 
            "company"}, {
            TypeSystem`Atom[Integer], 
            TypeSystem`Atom[String], 
            TypeSystem`Atom[String], 
            TypeSystem`Atom[String], 
            TypeSystem`Struct[{"street", "suite", "city", "zipcode", "geo"}, {
              TypeSystem`Atom[String], 
              TypeSystem`Atom[String], 
              TypeSystem`Atom[String], 
              TypeSystem`Atom[String], 
              TypeSystem`Struct[{"lat", "lng"}, {
                TypeSystem`Atom[String], 
                TypeSystem`Atom[String]}]}], 
            TypeSystem`Atom[String], 
            TypeSystem`Atom[String], 
            TypeSystem`Struct[{"name", "catchPhrase", "bs"}, {
              TypeSystem`Atom[String], 
              TypeSystem`Atom[String], 
              TypeSystem`Atom[String]}]}], 3], "HandleQ" -> True, "RowTarget" -> 
        20, "Data" -> TypeSystem`PackageScope`CacheHandle[1907415228]], 
      TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
      TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 1, 
      TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
      DynamicModule[{
        TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
           Style[
            Grid[{{
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"id\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"id\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 481566757][{
                    All, "id"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[481566757][
                  GeneralUtilities`Slice[All, "id"]], "Mouse"], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"name\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"name\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 481566757][{
                    All, "name"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[481566757][
                  GeneralUtilities`Slice[All, "name"]], "Mouse"], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"username\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"username\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 481566757][{
                    All, "username"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[481566757][
                  GeneralUtilities`Slice[All, "username"]], "Mouse"], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"email\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"email\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 481566757][{
                    All, "email"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[481566757][
                  GeneralUtilities`Slice[All, "email"]], "Mouse"], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"address\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"address\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 481566757][{
                    All, "address"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[481566757][
                  GeneralUtilities`Slice[All, "address"]], "Mouse"], 
                Background -> GrayLevel[0.95], 
                Alignment -> {Center, Baseline}], SpanFromLeft, SpanFromLeft, 
               SpanFromLeft, SpanFromLeft, SpanFromLeft, 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"phone\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"phone\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 481566757][{
                    All, "phone"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[481566757][
                  GeneralUtilities`Slice[All, "phone"]], "Mouse"], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"website\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"website\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 481566757][{
                    All, "website"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[481566757][
                  GeneralUtilities`Slice[All, "website"]], "Mouse"], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"company\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"company\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 481566757][{
                    All, "company"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[481566757][
                  GeneralUtilities`Slice[All, "company"]], "Mouse"], 
                Background -> GrayLevel[0.95], 
                Alignment -> {Center, Baseline}], SpanFromLeft, 
               SpanFromLeft}, {
              SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"street\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"street\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 481566757][{
                    All, "address", "street"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[481566757][
                  GeneralUtilities`Slice[All, "address", "street"]], "Mouse"],
                 Background -> GrayLevel[0.95], 
                Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"suite\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"suite\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 481566757][{
                    All, "address", "suite"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[481566757][
                  GeneralUtilities`Slice[All, "address", "suite"]], "Mouse"], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"city\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"city\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 481566757][{
                    All, "address", "city"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[481566757][
                  GeneralUtilities`Slice[All, "address", "city"]], "Mouse"], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"zipcode\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"zipcode\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 481566757][{
                    All, "address", "zipcode"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[481566757][
                  GeneralUtilities`Slice[All, "address", "zipcode"]], 
                 "Mouse"], Background -> GrayLevel[0.95], 
                Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"geo\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"geo\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 481566757][{
                    All, "address", "geo"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[481566757][
                  GeneralUtilities`Slice[All, "address", "geo"]], "Mouse"], 
                Background -> GrayLevel[0.95], 
                Alignment -> {Center, Baseline}], SpanFromLeft, SpanFromAbove,
                SpanFromAbove, 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"name\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"name\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 481566757][{
                    All, "company", "name"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[481566757][
                  GeneralUtilities`Slice[All, "company", "name"]], "Mouse"], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"catchPhrase\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"catchPhrase\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 481566757][{
                    All, "company", "catchPhrase"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[481566757][
                  GeneralUtilities`Slice[All, "company", "catchPhrase"]], 
                 "Mouse"], Background -> GrayLevel[0.95], 
                Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"bs\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"bs\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 481566757][{
                    All, "company", "bs"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[481566757][
                  GeneralUtilities`Slice[All, "company", "bs"]], "Mouse"], 
                Background -> GrayLevel[0.95], 
                Alignment -> {Left, Baseline}]}, {
              SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
               SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"lat\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"lat\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 481566757][{
                    All, "address", "geo", "lat"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[481566757][
                  GeneralUtilities`Slice[All, "address", "geo", "lat"]], 
                 "Mouse"], Background -> GrayLevel[0.95], 
                Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"lng\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"lng\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 481566757][{
                    All, "address", "geo", "lng"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[481566757][
                  GeneralUtilities`Slice[All, "address", "geo", "lng"]], 
                 "Mouse"], Background -> GrayLevel[0.95], 
                Alignment -> {Left, Baseline}], SpanFromAbove, SpanFromAbove, 
               SpanFromAbove, SpanFromAbove, SpanFromAbove}, {
               Pane[
                Annotation[
                 RawBoxes["1"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[481566757][
                  GeneralUtilities`Slice[1, 
                   Key["id"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Leanne Graham", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[481566757][
                  GeneralUtilities`Slice[1, 
                   Key["name"]]], "Mouse"], 
                ImageSize -> {{153.60000000000002`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Bret", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[481566757][
                  GeneralUtilities`Slice[1, 
                   Key["username"]]], "Mouse"], 
                ImageSize -> {{86.4, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Sincere@april.biz", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[481566757][
                  GeneralUtilities`Slice[1, 
                   Key["email"]]], "Mouse"], 
                ImageSize -> {{172.8, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Kulas Light", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[481566757][
                  GeneralUtilities`Slice[1, 
                   Key["address"], 
                   Key["street"]]], "Mouse"], 
                ImageSize -> {{163.20000000000002`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Apt. 556", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[481566757][
                  GeneralUtilities`Slice[1, 
                   Key["address"], 
                   Key["suite"]]], "Mouse"], 
                ImageSize -> {{86.4, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Gwenborough", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[481566757][
                  GeneralUtilities`Slice[1, 
                   Key["address"], 
                   Key["city"]]], "Mouse"], 
                ImageSize -> {{124.80000000000001`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["92998-3874", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[481566757][
                  GeneralUtilities`Slice[1, 
                   Key["address"], 
                   Key["zipcode"]]], "Mouse"], 
                ImageSize -> {{96.00000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["-37.3159", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[481566757][
                  GeneralUtilities`Slice[1, 
                   Key["address"], 
                   Key["geo"], 
                   Key["lat"]]], "Mouse"], 
                ImageSize -> {{76.80000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["81.1496", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[481566757][
                  GeneralUtilities`Slice[1, 
                   Key["address"], 
                   Key["geo"], 
                   Key["lng"]]], "Mouse"], 
                ImageSize -> {{76.80000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["1-770-736-8031 x56442", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[481566757][
                  GeneralUtilities`Slice[1, 
                   Key["phone"]]], "Mouse"], 
                ImageSize -> {{201.60000000000002`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["hildegard.org", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[481566757][
                  GeneralUtilities`Slice[1, 
                   Key["website"]]], "Mouse"], 
                ImageSize -> {{124.80000000000001`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Romaguera-Crona", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[481566757][
                  GeneralUtilities`Slice[1, 
                   Key["company"], 
                   Key["name"]]], "Mouse"], 
                ImageSize -> {{172.8, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Multi-layered client-server neural-net", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[481566757][
                  GeneralUtilities`Slice[1, 
                   Key["company"], 
                   Key["catchPhrase"]]], "Mouse"], 
                ImageSize -> {{364.80000000000007`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["harness real-time e-markets", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[481566757][
                  GeneralUtilities`Slice[1, 
                   Key["company"], 
                   Key["bs"]]], "Mouse"], 
                ImageSize -> {{307.20000000000005`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["2"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[481566757][
                  GeneralUtilities`Slice[2, 
                   Key["id"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Ervin Howell", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[481566757][
                  GeneralUtilities`Slice[2, 
                   Key["name"]]], "Mouse"], 
                ImageSize -> {{153.60000000000002`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Antonette", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[481566757][
                  GeneralUtilities`Slice[2, 
                   Key["username"]]], "Mouse"], 
                ImageSize -> {{86.4, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Shanna@melissa.tv", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[481566757][
                  GeneralUtilities`Slice[2, 
                   Key["email"]]], "Mouse"], 
                ImageSize -> {{172.8, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Victor Plains", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[481566757][
                  GeneralUtilities`Slice[2, 
                   Key["address"], 
                   Key["street"]]], "Mouse"], 
                ImageSize -> {{163.20000000000002`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Suite 879", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[481566757][
                  GeneralUtilities`Slice[2, 
                   Key["address"], 
                   Key["suite"]]], "Mouse"], 
                ImageSize -> {{86.4, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Wisokyburgh", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[481566757][
                  GeneralUtilities`Slice[2, 
                   Key["address"], 
                   Key["city"]]], "Mouse"], 
                ImageSize -> {{124.80000000000001`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["90566-7771", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[481566757][
                  GeneralUtilities`Slice[2, 
                   Key["address"], 
                   Key["zipcode"]]], "Mouse"], 
                ImageSize -> {{96.00000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["-43.9509", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[481566757][
                  GeneralUtilities`Slice[2, 
                   Key["address"], 
                   Key["geo"], 
                   Key["lat"]]], "Mouse"], 
                ImageSize -> {{76.80000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["-34.4618", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[481566757][
                  GeneralUtilities`Slice[2, 
                   Key["address"], 
                   Key["geo"], 
                   Key["lng"]]], "Mouse"], 
                ImageSize -> {{76.80000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["010-692-6593 x09125", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[481566757][
                  GeneralUtilities`Slice[2, 
                   Key["phone"]]], "Mouse"], 
                ImageSize -> {{201.60000000000002`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["anastasia.net", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[481566757][
                  GeneralUtilities`Slice[2, 
                   Key["website"]]], "Mouse"], 
                ImageSize -> {{124.80000000000001`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Deckow-Crist", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[481566757][
                  GeneralUtilities`Slice[2, 
                   Key["company"], 
                   Key["name"]]], "Mouse"], 
                ImageSize -> {{172.8, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Proactive didactic contingency", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[481566757][
                  GeneralUtilities`Slice[2, 
                   Key["company"], 
                   Key["catchPhrase"]]], "Mouse"], 
                ImageSize -> {{364.80000000000007`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["synergize scalable supply-chains", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[481566757][
                  GeneralUtilities`Slice[2, 
                   Key["company"], 
                   Key["bs"]]], "Mouse"], 
                ImageSize -> {{307.20000000000005`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["3"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[481566757][
                  GeneralUtilities`Slice[3, 
                   Key["id"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Clementine Bauch", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[481566757][
                  GeneralUtilities`Slice[3, 
                   Key["name"]]], "Mouse"], 
                ImageSize -> {{153.60000000000002`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Samantha", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[481566757][
                  GeneralUtilities`Slice[3, 
                   Key["username"]]], "Mouse"], 
                ImageSize -> {{86.4, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Nathan@yesenia.net", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[481566757][
                  GeneralUtilities`Slice[3, 
                   Key["email"]]], "Mouse"], 
                ImageSize -> {{172.8, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Douglas Extension", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[481566757][
                  GeneralUtilities`Slice[3, 
                   Key["address"], 
                   Key["street"]]], "Mouse"], 
                ImageSize -> {{163.20000000000002`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Suite 847", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[481566757][
                  GeneralUtilities`Slice[3, 
                   Key["address"], 
                   Key["suite"]]], "Mouse"], 
                ImageSize -> {{86.4, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["McKenziehaven", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[481566757][
                  GeneralUtilities`Slice[3, 
                   Key["address"], 
                   Key["city"]]], "Mouse"], 
                ImageSize -> {{124.80000000000001`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["59590-4157", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[481566757][
                  GeneralUtilities`Slice[3, 
                   Key["address"], 
                   Key["zipcode"]]], "Mouse"], 
                ImageSize -> {{96.00000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["-68.6102", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[481566757][
                  GeneralUtilities`Slice[3, 
                   Key["address"], 
                   Key["geo"], 
                   Key["lat"]]], "Mouse"], 
                ImageSize -> {{76.80000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["-47.0653", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[481566757][
                  GeneralUtilities`Slice[3, 
                   Key["address"], 
                   Key["geo"], 
                   Key["lng"]]], "Mouse"], 
                ImageSize -> {{76.80000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["1-463-123-4447", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[481566757][
                  GeneralUtilities`Slice[3, 
                   Key["phone"]]], "Mouse"], 
                ImageSize -> {{201.60000000000002`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["ramiro.info", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[481566757][
                  GeneralUtilities`Slice[3, 
                   Key["website"]]], "Mouse"], 
                ImageSize -> {{124.80000000000001`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Romaguera-Jacobson", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[481566757][
                  GeneralUtilities`Slice[3, 
                   Key["company"], 
                   Key["name"]]], "Mouse"], 
                ImageSize -> {{172.8, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Face to face bifurcated interface", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[481566757][
                  GeneralUtilities`Slice[3, 
                   Key["company"], 
                   Key["catchPhrase"]]], "Mouse"], 
                ImageSize -> {{364.80000000000007`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["e-enable strategic applications", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[481566757][
                  GeneralUtilities`Slice[3, 
                   Key["company"], 
                   Key["bs"]]], "Mouse"], 
                ImageSize -> {{307.20000000000005`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}}, BaseStyle -> {ContextMenu -> {
                 MenuItem["Copy position to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Copy data to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], Delimiter, 
                 MenuItem["Paste position in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Paste data in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic]}, FontFamily -> "Verdana", 
               FontSize -> 12}, Alignment -> Left, RowMinHeight -> 1.5, 
             Dividers -> All, FrameStyle -> GrayLevel[0.85], 
             BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
            LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False,
             ShowAutoStyles -> False]], 
         TypeSystem`NestedGrid`PackagePrivate`initialQ = True, 
         TypeSystem`NestedGrid`PackagePrivate`self = $Failed}, 
        Dynamic[
         TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
         TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
            Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
            Module[{
             TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
              TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
              TypeSystem`NestedGrid`PackagePrivate`LookupCacheValue[
                TypeSystem`NestedGrid`PackagePrivate`$state$$["Data"]]}, 
             TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = 
              If[TypeSystem`NestedGrid`PackagePrivate`tmpData$ === 
                TypeSystem`NestedGrid`PackagePrivate`$NotCached, 
                TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$grid$$, 481566757][
                TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
               Not[
                FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
               TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
               TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
          TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
          TypeSystem`NestedGrid`PackagePrivate`$pos$$; If[
            FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
            TypeSystem`SparseGrid[
             TypeSystem`H["(data no longer present)"]], 
            If[GeneralUtilities`$DebugMode, 
             Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
               TypeSystem`NestedGrid`PackagePrivate`formatState[
               TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                TypeSystem`NestedGrid`PackagePrivate`$pos$$]}], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
         TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$pos$$}], 
        DynamicModuleValues :> {}], 
      TypeSystem`NestedGrid`PackagePrivate`$posCell$$, 
      TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
        TypeSystem`NestedGrid`PackagePrivate`alignBar[
        TypeSystem`NestedGrid`PackagePrivate`$state$$][
         TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
          TypeSystem`PackageScope`Pathbar[
          TypeSystem`NestedGrid`PackagePrivate`$path$$, 
           TypeSystem`NestedGrid`PackagePrivate`updateState[
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
            TypeSystem`NestedGrid`PackagePrivate`$path$$, 
            TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$grid$$, 481566757]]]], 
        TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
      TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Framed[
        Dynamic[
         Replace[
          MouseAnnotation[Null], {
          TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[481566757][Null] -> 
           "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[481566757][
             Pattern[TypeSystem`NestedGrid`PackagePrivate`path, 
              Blank[]]] :> (
            TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
             TypeSystem`NestedGrid`PackagePrivate`path; 
            TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
             TypeSystem`NestedGrid`PackagePrivate`path, 
              TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
           Spacer[10], Blank[] :> Spacer[10]}], TrackedSymbols :> {}], 
        FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
        Top, ImageSize -> {Automatic, 14}]}, 
     DynamicBox[
      ToBoxes[
       Column[
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, {
          TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
          TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`alignBar[
           TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}, {
         TypeSystem`NestedGrid`PackagePrivate`$topBar$$, 
          TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
          TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`alignBar[
           TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}], Spacings -> 
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, 
          0, {{}, {0, 0.05, 0}}]], StandardForm], 
      ImageSizeCache -> {2431., {98.5, 105.5}}, 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     BaseStyle -> {LineBreakWithin -> False}, Deinitialization :> 
     TypeSystem`NestedGrid`PackagePrivate`deleteState[
      TypeSystem`NestedGrid`PackagePrivate`$state$$], 
     DynamicModuleValues :> {}, Initialization :> 
     Block[{$ContextPath = $ContextPath}, 
       Needs["TypeSystem`"]]], Deploy, DefaultBaseStyle -> "Deploy"]},
  "CopyTag",
  DisplayFunction->(#& ),
  InterpretationFunction->("Dataset[<>]"& )]], "Output",
 CellChangeTimes->{{3.7639840397001123`*^9, 3.7639841074591074`*^9}, {
   3.763984163867113*^9, 3.76398417905011*^9}, 3.7639842108441105`*^9, 
   3.764966231264984*^9, 3.7649678604637594`*^9, 3.766004157712716*^9, {
   3.7730555184156094`*^9, 3.7730555331716394`*^9}, {3.77305560991361*^9, 
   3.773055615111757*^9}, 3.773076112523102*^9, 3.7735015537457905`*^9, 
   3.77350174699294*^9, 3.7735019647140074`*^9},
 CellLabel->"Out[3]=",ExpressionUUID->"e5d0f627-372d-4912-a10f-dee6aea83047"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"ClearAll", "[", 
  RowBox[{"choices", ",", "get"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"choices", "=", 
  RowBox[{"Sort", "[", 
   RowBox[{"{", 
    RowBox[{
    "\"\<posts\>\"", ",", "\"\<comments\>\"", ",", "\"\<albums\>\"", ",", 
     "\"\<photos\>\"", ",", "\"\<todos\>\"", ",", "\"\<users\>\""}], "}"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"get", "[", "it_String", "]"}], ":=", 
  RowBox[{"Import", "[", 
   RowBox[{
    RowBox[{"\"\<https://jsonplaceholder.typicode.com/\>\"", "<>", "it"}], 
    ",", "\"\<RawJSON\>\""}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.763983312549301*^9, 3.7639833193873*^9}, {
   3.7639833623163166`*^9, 3.7639834394571075`*^9}, {3.7639837733901052`*^9, 
   3.763983776781107*^9}, {3.7639839200371246`*^9, 3.7639839560871067`*^9}, 
   3.763984014286107*^9, 3.7639842443151083`*^9, {3.763993962012494*^9, 
   3.763993963370494*^9}, {3.7649665056809564`*^9, 3.764966565686982*^9}, {
   3.7649666378140173`*^9, 3.7649666381970177`*^9}},
 Background->RGBColor[0.88, 1, 0.88],
 CellLabel->"In[1]:=",ExpressionUUID->"132c48c3-530d-4b09-916a-f6f11865fc2f"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"albums\"\>", ",", "\<\"comments\"\>", ",", "\<\"photos\"\>", 
   ",", "\<\"posts\"\>", ",", "\<\"todos\"\>", ",", "\<\"users\"\>"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.764966566259042*^9, 3.7649678683257847`*^9, 
  3.7651178381225386`*^9, 3.766004185144368*^9, 3.7730556578022556`*^9, 
  3.773076114614132*^9, 3.7732333586716547`*^9, 3.773422677946003*^9, 
  3.77350136930591*^9, 3.7735015275707903`*^9, 3.773501790046161*^9, 
  3.773501966893705*^9, 3.773581030050898*^9, 3.7735832445725265`*^9},
 CellLabel->"Out[2]=",ExpressionUUID->"7213bca9-d683-4f39-b3da-75c9b21c24f9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"get", "[", "\"\<users\>\"", "]"}], "//", "Dataset"}]], "Input",
 CellChangeTimes->{{3.7639939729704957`*^9, 3.763993975615493*^9}, {
   3.764966574297019*^9, 3.7649665772260075`*^9}, {3.7730557205562553`*^9, 
   3.7730557443632555`*^9}, {3.773422687004007*^9, 3.7734226901940045`*^9}, 
   3.773581052532855*^9},
 CellLabel->"In[10]:=",ExpressionUUID->"ef0e9ed7-1caf-49ee-ad48-c380878680ee"],

Cell[BoxData[
 TemplateBox[{TagBox[
    DynamicModuleBox[{
     TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
      Data`UnorderedAssociation[
       "RowCount" -> 10, "Length" -> 10, "InitialType" -> TypeSystem`Vector[
          
          TypeSystem`Struct[{
           "id", "name", "username", "email", "address", "phone", "website", 
            "company"}, {
            TypeSystem`Atom[Integer], 
            TypeSystem`Atom[String], 
            TypeSystem`Atom[String], 
            TypeSystem`Atom[String], 
            TypeSystem`Struct[{"street", "suite", "city", "zipcode", "geo"}, {
              TypeSystem`Atom[String], 
              TypeSystem`Atom[String], 
              TypeSystem`Atom[String], 
              TypeSystem`Atom[String], 
              TypeSystem`Struct[{"lat", "lng"}, {
                TypeSystem`Atom[String], 
                TypeSystem`Atom[String]}]}], 
            TypeSystem`Atom[String], 
            TypeSystem`Atom[String], 
            TypeSystem`Struct[{"name", "catchPhrase", "bs"}, {
              TypeSystem`Atom[String], 
              TypeSystem`Atom[String], 
              TypeSystem`Atom[String]}]}], 10], "Shape" -> 
        TypeSystem`PackageScope`HeaderShape[
          
          Association[{All, "id"} -> 1, {All, "name"} -> 1, {All, "username"} -> 
           1, {All, "email"} -> 1, {All, "address"} -> 
           Association[{All, "address", "street"} -> 
             1, {All, "address", "suite"} -> 1, {All, "address", "city"} -> 
             1, {All, "address", "zipcode"} -> 1, {All, "address", "geo"} -> 
             Association[{All, "address", "geo", "lat"} -> 
               1, {All, "address", "geo", "lng"} -> 1]], {All, "phone"} -> 
           1, {All, "website"} -> 1, {All, "company"} -> 
           Association[{All, "company", "name"} -> 
             1, {All, "company", "catchPhrase"} -> 1, {All, "company", "bs"} -> 
             1]], 
          TypeSystem`PackageScope`Limited[
           TypeSystem`PackageScope`ColumnShape[
            TypeSystem`PackageScope`RowShape[
             Association[
             "id" -> TypeSystem`PackageScope`AtomShape[34], "name" -> 
              TypeSystem`PackageScope`AtomShape[230.40000000000003`], 
              "username" -> 
              TypeSystem`PackageScope`AtomShape[153.60000000000002`], "email" -> 
              TypeSystem`PackageScope`AtomShape[230.40000000000003`], 
              "address" -> TypeSystem`PackageScope`RowShape[
                Association[
                "street" -> 
                 TypeSystem`PackageScope`AtomShape[163.20000000000002`], 
                 "suite" -> TypeSystem`PackageScope`AtomShape[86.4], "city" -> 
                 TypeSystem`PackageScope`AtomShape[134.40000000000003`], 
                 "zipcode" -> 
                 TypeSystem`PackageScope`AtomShape[96.00000000000001], "geo" -> 
                 TypeSystem`PackageScope`RowShape[
                   Association[
                   "lat" -> TypeSystem`PackageScope`AtomShape[
                    76.80000000000001], "lng" -> 
                    TypeSystem`PackageScope`AtomShape[86.4]]]]], "phone" -> 
              TypeSystem`PackageScope`AtomShape[201.60000000000002`], 
              "website" -> 
              TypeSystem`PackageScope`AtomShape[124.80000000000001`], 
              "company" -> TypeSystem`PackageScope`RowShape[
                Association[
                "name" -> TypeSystem`PackageScope`AtomShape[
                  163.20000000000002`], "catchPhrase" -> 
                 TypeSystem`PackageScope`AtomShape[364.80000000000007`], "bs" -> 
                 TypeSystem`PackageScope`AtomShape[307.20000000000005`]]]]]], 
           10, {}]], "InitialData" -> 
        TypeSystem`PackageScope`CacheHandle[1148584841], "Type" -> 
        TypeSystem`Vector[
          
          TypeSystem`Struct[{
           "id", "name", "username", "email", "address", "phone", "website", 
            "company"}, {
            TypeSystem`Atom[Integer], 
            TypeSystem`Atom[String], 
            TypeSystem`Atom[String], 
            TypeSystem`Atom[String], 
            TypeSystem`Struct[{"street", "suite", "city", "zipcode", "geo"}, {
              TypeSystem`Atom[String], 
              TypeSystem`Atom[String], 
              TypeSystem`Atom[String], 
              TypeSystem`Atom[String], 
              TypeSystem`Struct[{"lat", "lng"}, {
                TypeSystem`Atom[String], 
                TypeSystem`Atom[String]}]}], 
            TypeSystem`Atom[String], 
            TypeSystem`Atom[String], 
            TypeSystem`Struct[{"name", "catchPhrase", "bs"}, {
              TypeSystem`Atom[String], 
              TypeSystem`Atom[String], 
              TypeSystem`Atom[String]}]}], 10], "HandleQ" -> True, 
        "RowTarget" -> 20, "Data" -> 
        TypeSystem`PackageScope`CacheHandle[1148584841]], 
      TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
      TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 1, 
      TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
      DynamicModule[{
        TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
           Style[
            Grid[{{
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"id\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"id\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 175591896][{
                    All, "id"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[175591896][
                  GeneralUtilities`Slice[All, "id"]], "Mouse"], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"name\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"name\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 175591896][{
                    All, "name"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[175591896][
                  GeneralUtilities`Slice[All, "name"]], "Mouse"], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"username\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"username\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 175591896][{
                    All, "username"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[175591896][
                  GeneralUtilities`Slice[All, "username"]], "Mouse"], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"email\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"email\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 175591896][{
                    All, "email"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[175591896][
                  GeneralUtilities`Slice[All, "email"]], "Mouse"], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"address\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"address\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 175591896][{
                    All, "address"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[175591896][
                  GeneralUtilities`Slice[All, "address"]], "Mouse"], 
                Background -> GrayLevel[0.95], 
                Alignment -> {Center, Baseline}], SpanFromLeft, SpanFromLeft, 
               SpanFromLeft, SpanFromLeft, SpanFromLeft, 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"phone\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"phone\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 175591896][{
                    All, "phone"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[175591896][
                  GeneralUtilities`Slice[All, "phone"]], "Mouse"], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"website\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"website\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 175591896][{
                    All, "website"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[175591896][
                  GeneralUtilities`Slice[All, "website"]], "Mouse"], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"company\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"company\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 175591896][{
                    All, "company"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[175591896][
                  GeneralUtilities`Slice[All, "company"]], "Mouse"], 
                Background -> GrayLevel[0.95], 
                Alignment -> {Center, Baseline}], SpanFromLeft, 
               SpanFromLeft}, {
              SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"street\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"street\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 175591896][{
                    All, "address", "street"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[175591896][
                  GeneralUtilities`Slice[All, "address", "street"]], "Mouse"],
                 Background -> GrayLevel[0.95], 
                Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"suite\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"suite\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 175591896][{
                    All, "address", "suite"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[175591896][
                  GeneralUtilities`Slice[All, "address", "suite"]], "Mouse"], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"city\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"city\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 175591896][{
                    All, "address", "city"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[175591896][
                  GeneralUtilities`Slice[All, "address", "city"]], "Mouse"], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"zipcode\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"zipcode\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 175591896][{
                    All, "address", "zipcode"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[175591896][
                  GeneralUtilities`Slice[All, "address", "zipcode"]], 
                 "Mouse"], Background -> GrayLevel[0.95], 
                Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"geo\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"geo\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 175591896][{
                    All, "address", "geo"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[175591896][
                  GeneralUtilities`Slice[All, "address", "geo"]], "Mouse"], 
                Background -> GrayLevel[0.95], 
                Alignment -> {Center, Baseline}], SpanFromLeft, SpanFromAbove,
                SpanFromAbove, 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"name\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"name\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 175591896][{
                    All, "company", "name"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[175591896][
                  GeneralUtilities`Slice[All, "company", "name"]], "Mouse"], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"catchPhrase\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"catchPhrase\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 175591896][{
                    All, "company", "catchPhrase"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[175591896][
                  GeneralUtilities`Slice[All, "company", "catchPhrase"]], 
                 "Mouse"], Background -> GrayLevel[0.95], 
                Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"bs\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"bs\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 175591896][{
                    All, "company", "bs"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[175591896][
                  GeneralUtilities`Slice[All, "company", "bs"]], "Mouse"], 
                Background -> GrayLevel[0.95], 
                Alignment -> {Left, Baseline}]}, {
              SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
               SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"lat\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"lat\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 175591896][{
                    All, "address", "geo", "lat"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[175591896][
                  GeneralUtilities`Slice[All, "address", "geo", "lat"]], 
                 "Mouse"], Background -> GrayLevel[0.95], 
                Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"lng\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"lng\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 175591896][{
                    All, "address", "geo", "lng"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[175591896][
                  GeneralUtilities`Slice[All, "address", "geo", "lng"]], 
                 "Mouse"], Background -> GrayLevel[0.95], 
                Alignment -> {Left, Baseline}], SpanFromAbove, SpanFromAbove, 
               SpanFromAbove, SpanFromAbove, SpanFromAbove}, {
               Pane[
                Annotation[
                 RawBoxes["1"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[175591896][
                  GeneralUtilities`Slice[1, 
                   Key["id"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Leanne Graham", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[175591896][
                  GeneralUtilities`Slice[1, 
                   Key["name"]]], "Mouse"], 
                ImageSize -> {{230.40000000000003`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Bret", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[175591896][
                  GeneralUtilities`Slice[1, 
                   Key["username"]]], "Mouse"], 
                ImageSize -> {{153.60000000000002`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Sincere@april.biz", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[175591896][
                  GeneralUtilities`Slice[1, 
                   Key["email"]]], "Mouse"], 
                ImageSize -> {{230.40000000000003`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Kulas Light", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[175591896][
                  GeneralUtilities`Slice[1, 
                   Key["address"], 
                   Key["street"]]], "Mouse"], 
                ImageSize -> {{163.20000000000002`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Apt. 556", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[175591896][
                  GeneralUtilities`Slice[1, 
                   Key["address"], 
                   Key["suite"]]], "Mouse"], 
                ImageSize -> {{86.4, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Gwenborough", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[175591896][
                  GeneralUtilities`Slice[1, 
                   Key["address"], 
                   Key["city"]]], "Mouse"], 
                ImageSize -> {{134.40000000000003`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["92998-3874", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[175591896][
                  GeneralUtilities`Slice[1, 
                   Key["address"], 
                   Key["zipcode"]]], "Mouse"], 
                ImageSize -> {{96.00000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["-37.3159", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[175591896][
                  GeneralUtilities`Slice[1, 
                   Key["address"], 
                   Key["geo"], 
                   Key["lat"]]], "Mouse"], 
                ImageSize -> {{76.80000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["81.1496", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[175591896][
                  GeneralUtilities`Slice[1, 
                   Key["address"], 
                   Key["geo"], 
                   Key["lng"]]], "Mouse"], 
                ImageSize -> {{86.4, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["1-770-736-8031 x56442", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[175591896][
                  GeneralUtilities`Slice[1, 
                   Key["phone"]]], "Mouse"], 
                ImageSize -> {{201.60000000000002`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["hildegard.org", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[175591896][
                  GeneralUtilities`Slice[1, 
                   Key["website"]]], "Mouse"], 
                ImageSize -> {{124.80000000000001`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Romaguera-Crona", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[175591896][
                  GeneralUtilities`Slice[1, 
                   Key["company"], 
                   Key["name"]]], "Mouse"], 
                ImageSize -> {{163.20000000000002`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Multi-layered client-server neural-net", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[175591896][
                  GeneralUtilities`Slice[1, 
                   Key["company"], 
                   Key["catchPhrase"]]], "Mouse"], 
                ImageSize -> {{364.80000000000007`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["harness real-time e-markets", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[175591896][
                  GeneralUtilities`Slice[1, 
                   Key["company"], 
                   Key["bs"]]], "Mouse"], 
                ImageSize -> {{307.20000000000005`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["2"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[175591896][
                  GeneralUtilities`Slice[2, 
                   Key["id"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Ervin Howell", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[175591896][
                  GeneralUtilities`Slice[2, 
                   Key["name"]]], "Mouse"], 
                ImageSize -> {{230.40000000000003`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Antonette", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[175591896][
                  GeneralUtilities`Slice[2, 
                   Key["username"]]], "Mouse"], 
                ImageSize -> {{153.60000000000002`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Shanna@melissa.tv", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[175591896][
                  GeneralUtilities`Slice[2, 
                   Key["email"]]], "Mouse"], 
                ImageSize -> {{230.40000000000003`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Victor Plains", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[175591896][
                  GeneralUtilities`Slice[2, 
                   Key["address"], 
                   Key["street"]]], "Mouse"], 
                ImageSize -> {{163.20000000000002`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Suite 879", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[175591896][
                  GeneralUtilities`Slice[2, 
                   Key["address"], 
                   Key["suite"]]], "Mouse"], 
                ImageSize -> {{86.4, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Wisokyburgh", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[175591896][
                  GeneralUtilities`Slice[2, 
                   Key["address"], 
                   Key["city"]]], "Mouse"], 
                ImageSize -> {{134.40000000000003`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["90566-7771", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[175591896][
                  GeneralUtilities`Slice[2, 
                   Key["address"], 
                   Key["zipcode"]]], "Mouse"], 
                ImageSize -> {{96.00000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["-43.9509", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[175591896][
                  GeneralUtilities`Slice[2, 
                   Key["address"], 
                   Key["geo"], 
                   Key["lat"]]], "Mouse"], 
                ImageSize -> {{76.80000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["-34.4618", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[175591896][
                  GeneralUtilities`Slice[2, 
                   Key["address"], 
                   Key["geo"], 
                   Key["lng"]]], "Mouse"], 
                ImageSize -> {{86.4, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["010-692-6593 x09125", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[175591896][
                  GeneralUtilities`Slice[2, 
                   Key["phone"]]], "Mouse"], 
                ImageSize -> {{201.60000000000002`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["anastasia.net", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[175591896][
                  GeneralUtilities`Slice[2, 
                   Key["website"]]], "Mouse"], 
                ImageSize -> {{124.80000000000001`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Deckow-Crist", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[175591896][
                  GeneralUtilities`Slice[2, 
                   Key["company"], 
                   Key["name"]]], "Mouse"], 
                ImageSize -> {{163.20000000000002`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Proactive didactic contingency", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[175591896][
                  GeneralUtilities`Slice[2, 
                   Key["company"], 
                   Key["catchPhrase"]]], "Mouse"], 
                ImageSize -> {{364.80000000000007`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["synergize scalable supply-chains", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[175591896][
                  GeneralUtilities`Slice[2, 
                   Key["company"], 
                   Key["bs"]]], "Mouse"], 
                ImageSize -> {{307.20000000000005`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["3"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[175591896][
                  GeneralUtilities`Slice[3, 
                   Key["id"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Clementine Bauch", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[175591896][
                  GeneralUtilities`Slice[3, 
                   Key["name"]]], "Mouse"], 
                ImageSize -> {{230.40000000000003`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Samantha", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[175591896][
                  GeneralUtilities`Slice[3, 
                   Key["username"]]], "Mouse"], 
                ImageSize -> {{153.60000000000002`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Nathan@yesenia.net", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[175591896][
                  GeneralUtilities`Slice[3, 
                   Key["email"]]], "Mouse"], 
                ImageSize -> {{230.40000000000003`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Douglas Extension", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[175591896][
                  GeneralUtilities`Slice[3, 
                   Key["address"], 
                   Key["street"]]], "Mouse"], 
                ImageSize -> {{163.20000000000002`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Suite 847", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[175591896][
                  GeneralUtilities`Slice[3, 
                   Key["address"], 
                   Key["suite"]]], "Mouse"], 
                ImageSize -> {{86.4, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["McKenziehaven", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[175591896][
                  GeneralUtilities`Slice[3, 
                   Key["address"], 
                   Key["city"]]], "Mouse"], 
                ImageSize -> {{134.40000000000003`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["59590-4157", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[175591896][
                  GeneralUtilities`Slice[3, 
                   Key["address"], 
                   Key["zipcode"]]], "Mouse"], 
                ImageSize -> {{96.00000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["-68.6102", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[175591896][
                  GeneralUtilities`Slice[3, 
                   Key["address"], 
                   Key["geo"], 
                   Key["lat"]]], "Mouse"], 
                ImageSize -> {{76.80000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["-47.0653", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[175591896][
                  GeneralUtilities`Slice[3, 
                   Key["address"], 
                   Key["geo"], 
                   Key["lng"]]], "Mouse"], 
                ImageSize -> {{86.4, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["1-463-123-4447", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[175591896][
                  GeneralUtilities`Slice[3, 
                   Key["phone"]]], "Mouse"], 
                ImageSize -> {{201.60000000000002`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["ramiro.info", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[175591896][
                  GeneralUtilities`Slice[3, 
                   Key["website"]]], "Mouse"], 
                ImageSize -> {{124.80000000000001`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Romaguera-Jacobson", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[175591896][
                  GeneralUtilities`Slice[3, 
                   Key["company"], 
                   Key["name"]]], "Mouse"], 
                ImageSize -> {{163.20000000000002`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Face to face bifurcated interface", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[175591896][
                  GeneralUtilities`Slice[3, 
                   Key["company"], 
                   Key["catchPhrase"]]], "Mouse"], 
                ImageSize -> {{364.80000000000007`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["e-enable strategic applications", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[175591896][
                  GeneralUtilities`Slice[3, 
                   Key["company"], 
                   Key["bs"]]], "Mouse"], 
                ImageSize -> {{307.20000000000005`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["4"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[175591896][
                  GeneralUtilities`Slice[4, 
                   Key["id"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Patricia Lebsack", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[175591896][
                  GeneralUtilities`Slice[4, 
                   Key["name"]]], "Mouse"], 
                ImageSize -> {{230.40000000000003`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Karianne", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[175591896][
                  GeneralUtilities`Slice[4, 
                   Key["username"]]], "Mouse"], 
                ImageSize -> {{153.60000000000002`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Julianne.OConner@kory.org", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[175591896][
                  GeneralUtilities`Slice[4, 
                   Key["email"]]], "Mouse"], 
                ImageSize -> {{230.40000000000003`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Hoeger Mall", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[175591896][
                  GeneralUtilities`Slice[4, 
                   Key["address"], 
                   Key["street"]]], "Mouse"], 
                ImageSize -> {{163.20000000000002`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Apt. 692", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[175591896][
                  GeneralUtilities`Slice[4, 
                   Key["address"], 
                   Key["suite"]]], "Mouse"], 
                ImageSize -> {{86.4, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["South Elvis", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[175591896][
                  GeneralUtilities`Slice[4, 
                   Key["address"], 
                   Key["city"]]], "Mouse"], 
                ImageSize -> {{134.40000000000003`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["53919-4257", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[175591896][
                  GeneralUtilities`Slice[4, 
                   Key["address"], 
                   Key["zipcode"]]], "Mouse"], 
                ImageSize -> {{96.00000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["29.4572", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[175591896][
                  GeneralUtilities`Slice[4, 
                   Key["address"], 
                   Key["geo"], 
                   Key["lat"]]], "Mouse"], 
                ImageSize -> {{76.80000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["-164.2990", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[175591896][
                  GeneralUtilities`Slice[4, 
                   Key["address"], 
                   Key["geo"], 
                   Key["lng"]]], "Mouse"], 
                ImageSize -> {{86.4, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["493-170-9623 x156", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[175591896][
                  GeneralUtilities`Slice[4, 
                   Key["phone"]]], "Mouse"], 
                ImageSize -> {{201.60000000000002`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["kale.biz", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[175591896][
                  GeneralUtilities`Slice[4, 
                   Key["website"]]], "Mouse"], 
                ImageSize -> {{124.80000000000001`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Robel-Corkery", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[175591896][
                  GeneralUtilities`Slice[4, 
                   Key["company"], 
                   Key["name"]]], "Mouse"], 
                ImageSize -> {{163.20000000000002`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Multi-tiered zero tolerance productivity", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[175591896][
                  GeneralUtilities`Slice[4, 
                   Key["company"], 
                   Key["catchPhrase"]]], "Mouse"], 
                ImageSize -> {{364.80000000000007`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["transition cutting-edge web services", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[175591896][
                  GeneralUtilities`Slice[4, 
                   Key["company"], 
                   Key["bs"]]], "Mouse"], 
                ImageSize -> {{307.20000000000005`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["5"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[175591896][
                  GeneralUtilities`Slice[5, 
                   Key["id"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Chelsey Dietrich", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[175591896][
                  GeneralUtilities`Slice[5, 
                   Key["name"]]], "Mouse"], 
                ImageSize -> {{230.40000000000003`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Kamren", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[175591896][
                  GeneralUtilities`Slice[5, 
                   Key["username"]]], "Mouse"], 
                ImageSize -> {{153.60000000000002`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Lucio_Hettinger@annie.ca", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[175591896][
                  GeneralUtilities`Slice[5, 
                   Key["email"]]], "Mouse"], 
                ImageSize -> {{230.40000000000003`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Skiles Walks", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[175591896][
                  GeneralUtilities`Slice[5, 
                   Key["address"], 
                   Key["street"]]], "Mouse"], 
                ImageSize -> {{163.20000000000002`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Suite 351", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[175591896][
                  GeneralUtilities`Slice[5, 
                   Key["address"], 
                   Key["suite"]]], "Mouse"], 
                ImageSize -> {{86.4, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Roscoeview", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[175591896][
                  GeneralUtilities`Slice[5, 
                   Key["address"], 
                   Key["city"]]], "Mouse"], 
                ImageSize -> {{134.40000000000003`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["33263", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[175591896][
                  GeneralUtilities`Slice[5, 
                   Key["address"], 
                   Key["zipcode"]]], "Mouse"], 
                ImageSize -> {{96.00000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["-31.8129", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[175591896][
                  GeneralUtilities`Slice[5, 
                   Key["address"], 
                   Key["geo"], 
                   Key["lat"]]], "Mouse"], 
                ImageSize -> {{76.80000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["62.5342", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[175591896][
                  GeneralUtilities`Slice[5, 
                   Key["address"], 
                   Key["geo"], 
                   Key["lng"]]], "Mouse"], 
                ImageSize -> {{86.4, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["(254)954-1289", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[175591896][
                  GeneralUtilities`Slice[5, 
                   Key["phone"]]], "Mouse"], 
                ImageSize -> {{201.60000000000002`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["demarco.info", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[175591896][
                  GeneralUtilities`Slice[5, 
                   Key["website"]]], "Mouse"], 
                ImageSize -> {{124.80000000000001`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Keebler LLC", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[175591896][
                  GeneralUtilities`Slice[5, 
                   Key["company"], 
                   Key["name"]]], "Mouse"], 
                ImageSize -> {{163.20000000000002`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["User-centric fault-tolerant solution", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[175591896][
                  GeneralUtilities`Slice[5, 
                   Key["company"], 
                   Key["catchPhrase"]]], "Mouse"], 
                ImageSize -> {{364.80000000000007`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["revolutionize end-to-end systems", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[175591896][
                  GeneralUtilities`Slice[5, 
                   Key["company"], 
                   Key["bs"]]], "Mouse"], 
                ImageSize -> {{307.20000000000005`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["6"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[175591896][
                  GeneralUtilities`Slice[6, 
                   Key["id"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Mrs. Dennis Schulist", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[175591896][
                  GeneralUtilities`Slice[6, 
                   Key["name"]]], "Mouse"], 
                ImageSize -> {{230.40000000000003`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Leopoldo_Corkery", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[175591896][
                  GeneralUtilities`Slice[6, 
                   Key["username"]]], "Mouse"], 
                ImageSize -> {{153.60000000000002`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Karley_Dach@jasper.info", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[175591896][
                  GeneralUtilities`Slice[6, 
                   Key["email"]]], "Mouse"], 
                ImageSize -> {{230.40000000000003`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Norberto Crossing", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[175591896][
                  GeneralUtilities`Slice[6, 
                   Key["address"], 
                   Key["street"]]], "Mouse"], 
                ImageSize -> {{163.20000000000002`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Apt. 950", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[175591896][
                  GeneralUtilities`Slice[6, 
                   Key["address"], 
                   Key["suite"]]], "Mouse"], 
                ImageSize -> {{86.4, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["South Christy", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[175591896][
                  GeneralUtilities`Slice[6, 
                   Key["address"], 
                   Key["city"]]], "Mouse"], 
                ImageSize -> {{134.40000000000003`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["23505-1337", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[175591896][
                  GeneralUtilities`Slice[6, 
                   Key["address"], 
                   Key["zipcode"]]], "Mouse"], 
                ImageSize -> {{96.00000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["-71.4197", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[175591896][
                  GeneralUtilities`Slice[6, 
                   Key["address"], 
                   Key["geo"], 
                   Key["lat"]]], "Mouse"], 
                ImageSize -> {{76.80000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["71.7478", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[175591896][
                  GeneralUtilities`Slice[6, 
                   Key["address"], 
                   Key["geo"], 
                   Key["lng"]]], "Mouse"], 
                ImageSize -> {{86.4, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["1-477-935-8478 x6430", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[175591896][
                  GeneralUtilities`Slice[6, 
                   Key["phone"]]], "Mouse"], 
                ImageSize -> {{201.60000000000002`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["ola.org", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[175591896][
                  GeneralUtilities`Slice[6, 
                   Key["website"]]], "Mouse"], 
                ImageSize -> {{124.80000000000001`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Considine-Lockman", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[175591896][
                  GeneralUtilities`Slice[6, 
                   Key["company"], 
                   Key["name"]]], "Mouse"], 
                ImageSize -> {{163.20000000000002`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Synchronised bottom-line interface", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[175591896][
                  GeneralUtilities`Slice[6, 
                   Key["company"], 
                   Key["catchPhrase"]]], "Mouse"], 
                ImageSize -> {{364.80000000000007`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["e-enable innovative applications", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[175591896][
                  GeneralUtilities`Slice[6, 
                   Key["company"], 
                   Key["bs"]]], "Mouse"], 
                ImageSize -> {{307.20000000000005`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["7"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[175591896][
                  GeneralUtilities`Slice[7, 
                   Key["id"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Kurtis Weissnat", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[175591896][
                  GeneralUtilities`Slice[7, 
                   Key["name"]]], "Mouse"], 
                ImageSize -> {{230.40000000000003`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Elwyn.Skiles", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[175591896][
                  GeneralUtilities`Slice[7, 
                   Key["username"]]], "Mouse"], 
                ImageSize -> {{153.60000000000002`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Telly.Hoeger@billy.biz", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[175591896][
                  GeneralUtilities`Slice[7, 
                   Key["email"]]], "Mouse"], 
                ImageSize -> {{230.40000000000003`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Rex Trail", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[175591896][
                  GeneralUtilities`Slice[7, 
                   Key["address"], 
                   Key["street"]]], "Mouse"], 
                ImageSize -> {{163.20000000000002`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Suite 280", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[175591896][
                  GeneralUtilities`Slice[7, 
                   Key["address"], 
                   Key["suite"]]], "Mouse"], 
                ImageSize -> {{86.4, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Howemouth", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[175591896][
                  GeneralUtilities`Slice[7, 
                   Key["address"], 
                   Key["city"]]], "Mouse"], 
                ImageSize -> {{134.40000000000003`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["58804-1099", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[175591896][
                  GeneralUtilities`Slice[7, 
                   Key["address"], 
                   Key["zipcode"]]], "Mouse"], 
                ImageSize -> {{96.00000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["24.8918", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[175591896][
                  GeneralUtilities`Slice[7, 
                   Key["address"], 
                   Key["geo"], 
                   Key["lat"]]], "Mouse"], 
                ImageSize -> {{76.80000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["21.8984", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[175591896][
                  GeneralUtilities`Slice[7, 
                   Key["address"], 
                   Key["geo"], 
                   Key["lng"]]], "Mouse"], 
                ImageSize -> {{86.4, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["210.067.6132", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[175591896][
                  GeneralUtilities`Slice[7, 
                   Key["phone"]]], "Mouse"], 
                ImageSize -> {{201.60000000000002`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["elvis.io", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[175591896][
                  GeneralUtilities`Slice[7, 
                   Key["website"]]], "Mouse"], 
                ImageSize -> {{124.80000000000001`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Johns Group", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[175591896][
                  GeneralUtilities`Slice[7, 
                   Key["company"], 
                   Key["name"]]], "Mouse"], 
                ImageSize -> {{163.20000000000002`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Configurable multimedia task-force", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[175591896][
                  GeneralUtilities`Slice[7, 
                   Key["company"], 
                   Key["catchPhrase"]]], "Mouse"], 
                ImageSize -> {{364.80000000000007`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["generate enterprise e-tailers", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[175591896][
                  GeneralUtilities`Slice[7, 
                   Key["company"], 
                   Key["bs"]]], "Mouse"], 
                ImageSize -> {{307.20000000000005`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["8"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[175591896][
                  GeneralUtilities`Slice[8, 
                   Key["id"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Nicholas Runolfsdottir V", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[175591896][
                  GeneralUtilities`Slice[8, 
                   Key["name"]]], "Mouse"], 
                ImageSize -> {{230.40000000000003`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Maxime_Nienow", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[175591896][
                  GeneralUtilities`Slice[8, 
                   Key["username"]]], "Mouse"], 
                ImageSize -> {{153.60000000000002`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Sherwood@rosamond.me", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[175591896][
                  GeneralUtilities`Slice[8, 
                   Key["email"]]], "Mouse"], 
                ImageSize -> {{230.40000000000003`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Ellsworth Summit", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[175591896][
                  GeneralUtilities`Slice[8, 
                   Key["address"], 
                   Key["street"]]], "Mouse"], 
                ImageSize -> {{163.20000000000002`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Suite 729", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[175591896][
                  GeneralUtilities`Slice[8, 
                   Key["address"], 
                   Key["suite"]]], "Mouse"], 
                ImageSize -> {{86.4, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Aliyaview", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[175591896][
                  GeneralUtilities`Slice[8, 
                   Key["address"], 
                   Key["city"]]], "Mouse"], 
                ImageSize -> {{134.40000000000003`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["45169", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[175591896][
                  GeneralUtilities`Slice[8, 
                   Key["address"], 
                   Key["zipcode"]]], "Mouse"], 
                ImageSize -> {{96.00000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["-14.3990", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[175591896][
                  GeneralUtilities`Slice[8, 
                   Key["address"], 
                   Key["geo"], 
                   Key["lat"]]], "Mouse"], 
                ImageSize -> {{76.80000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["-120.7677", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[175591896][
                  GeneralUtilities`Slice[8, 
                   Key["address"], 
                   Key["geo"], 
                   Key["lng"]]], "Mouse"], 
                ImageSize -> {{86.4, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["586.493.6943 x140", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[175591896][
                  GeneralUtilities`Slice[8, 
                   Key["phone"]]], "Mouse"], 
                ImageSize -> {{201.60000000000002`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["jacynthe.com", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[175591896][
                  GeneralUtilities`Slice[8, 
                   Key["website"]]], "Mouse"], 
                ImageSize -> {{124.80000000000001`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Abernathy Group", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[175591896][
                  GeneralUtilities`Slice[8, 
                   Key["company"], 
                   Key["name"]]], "Mouse"], 
                ImageSize -> {{163.20000000000002`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Implemented secondary concept", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[175591896][
                  GeneralUtilities`Slice[8, 
                   Key["company"], 
                   Key["catchPhrase"]]], "Mouse"], 
                ImageSize -> {{364.80000000000007`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["e-enable extensible e-tailers", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[175591896][
                  GeneralUtilities`Slice[8, 
                   Key["company"], 
                   Key["bs"]]], "Mouse"], 
                ImageSize -> {{307.20000000000005`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["9"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[175591896][
                  GeneralUtilities`Slice[9, 
                   Key["id"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Glenna Reichert", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[175591896][
                  GeneralUtilities`Slice[9, 
                   Key["name"]]], "Mouse"], 
                ImageSize -> {{230.40000000000003`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Delphine", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[175591896][
                  GeneralUtilities`Slice[9, 
                   Key["username"]]], "Mouse"], 
                ImageSize -> {{153.60000000000002`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Chaim_McDermott@dana.io", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[175591896][
                  GeneralUtilities`Slice[9, 
                   Key["email"]]], "Mouse"], 
                ImageSize -> {{230.40000000000003`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Dayna Park", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[175591896][
                  GeneralUtilities`Slice[9, 
                   Key["address"], 
                   Key["street"]]], "Mouse"], 
                ImageSize -> {{163.20000000000002`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Suite 449", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[175591896][
                  GeneralUtilities`Slice[9, 
                   Key["address"], 
                   Key["suite"]]], "Mouse"], 
                ImageSize -> {{86.4, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Bartholomebury", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[175591896][
                  GeneralUtilities`Slice[9, 
                   Key["address"], 
                   Key["city"]]], "Mouse"], 
                ImageSize -> {{134.40000000000003`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["76495-3109", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[175591896][
                  GeneralUtilities`Slice[9, 
                   Key["address"], 
                   Key["zipcode"]]], "Mouse"], 
                ImageSize -> {{96.00000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["24.6463", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[175591896][
                  GeneralUtilities`Slice[9, 
                   Key["address"], 
                   Key["geo"], 
                   Key["lat"]]], "Mouse"], 
                ImageSize -> {{76.80000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["-168.8889", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[175591896][
                  GeneralUtilities`Slice[9, 
                   Key["address"], 
                   Key["geo"], 
                   Key["lng"]]], "Mouse"], 
                ImageSize -> {{86.4, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["(775)976-6794 x41206", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[175591896][
                  GeneralUtilities`Slice[9, 
                   Key["phone"]]], "Mouse"], 
                ImageSize -> {{201.60000000000002`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["conrad.com", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[175591896][
                  GeneralUtilities`Slice[9, 
                   Key["website"]]], "Mouse"], 
                ImageSize -> {{124.80000000000001`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Yost and Sons", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[175591896][
                  GeneralUtilities`Slice[9, 
                   Key["company"], 
                   Key["name"]]], "Mouse"], 
                ImageSize -> {{163.20000000000002`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Switchable contextually-based project", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[175591896][
                  GeneralUtilities`Slice[9, 
                   Key["company"], 
                   Key["catchPhrase"]]], "Mouse"], 
                ImageSize -> {{364.80000000000007`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["aggregate real-time technologies", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[175591896][
                  GeneralUtilities`Slice[9, 
                   Key["company"], 
                   Key["bs"]]], "Mouse"], 
                ImageSize -> {{307.20000000000005`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["10"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[175591896][
                  GeneralUtilities`Slice[10, 
                   Key["id"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Clementina DuBuque", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[175591896][
                  GeneralUtilities`Slice[10, 
                   Key["name"]]], "Mouse"], 
                ImageSize -> {{230.40000000000003`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Moriah.Stanton", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[175591896][
                  GeneralUtilities`Slice[10, 
                   Key["username"]]], "Mouse"], 
                ImageSize -> {{153.60000000000002`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Rey.Padberg@karina.biz", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[175591896][
                  GeneralUtilities`Slice[10, 
                   Key["email"]]], "Mouse"], 
                ImageSize -> {{230.40000000000003`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Kattie Turnpike", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[175591896][
                  GeneralUtilities`Slice[10, 
                   Key["address"], 
                   Key["street"]]], "Mouse"], 
                ImageSize -> {{163.20000000000002`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Suite 198", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[175591896][
                  GeneralUtilities`Slice[10, 
                   Key["address"], 
                   Key["suite"]]], "Mouse"], 
                ImageSize -> {{86.4, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Lebsackbury", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[175591896][
                  GeneralUtilities`Slice[10, 
                   Key["address"], 
                   Key["city"]]], "Mouse"], 
                ImageSize -> {{134.40000000000003`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["31428-2261", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[175591896][
                  GeneralUtilities`Slice[10, 
                   Key["address"], 
                   Key["zipcode"]]], "Mouse"], 
                ImageSize -> {{96.00000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["-38.2386", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[175591896][
                  GeneralUtilities`Slice[10, 
                   Key["address"], 
                   Key["geo"], 
                   Key["lat"]]], "Mouse"], 
                ImageSize -> {{76.80000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["57.2232", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[175591896][
                  GeneralUtilities`Slice[10, 
                   Key["address"], 
                   Key["geo"], 
                   Key["lng"]]], "Mouse"], 
                ImageSize -> {{86.4, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["024-648-3804", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[175591896][
                  GeneralUtilities`Slice[10, 
                   Key["phone"]]], "Mouse"], 
                ImageSize -> {{201.60000000000002`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["ambrose.net", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[175591896][
                  GeneralUtilities`Slice[10, 
                   Key["website"]]], "Mouse"], 
                ImageSize -> {{124.80000000000001`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Hoeger LLC", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[175591896][
                  GeneralUtilities`Slice[10, 
                   Key["company"], 
                   Key["name"]]], "Mouse"], 
                ImageSize -> {{163.20000000000002`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Centralized empowering task-force", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[175591896][
                  GeneralUtilities`Slice[10, 
                   Key["company"], 
                   Key["catchPhrase"]]], "Mouse"], 
                ImageSize -> {{364.80000000000007`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["target end-to-end models", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[175591896][
                  GeneralUtilities`Slice[10, 
                   Key["company"], 
                   Key["bs"]]], "Mouse"], 
                ImageSize -> {{307.20000000000005`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}}, BaseStyle -> {ContextMenu -> {
                 MenuItem["Copy position to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Copy data to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], Delimiter, 
                 MenuItem["Paste position in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Paste data in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic]}, FontFamily -> "Verdana", 
               FontSize -> 12}, Alignment -> Left, RowMinHeight -> 1.5, 
             Dividers -> All, FrameStyle -> GrayLevel[0.85], 
             BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
            LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False,
             ShowAutoStyles -> False]], 
         TypeSystem`NestedGrid`PackagePrivate`initialQ = True, 
         TypeSystem`NestedGrid`PackagePrivate`self = $Failed}, 
        Dynamic[
         TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
         TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
            Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
            
            Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
              TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
              TypeSystem`NestedGrid`PackagePrivate`LookupCacheValue[
                TypeSystem`NestedGrid`PackagePrivate`$state$$["Data"]]}, 
             TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = 
              If[TypeSystem`NestedGrid`PackagePrivate`tmpData$ === 
                TypeSystem`NestedGrid`PackagePrivate`$NotCached, 
                TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$grid$$, 175591896][
                TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
               Not[
                FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
               TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
               TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
          TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
          TypeSystem`NestedGrid`PackagePrivate`$pos$$; If[
            FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
            TypeSystem`SparseGrid[
             TypeSystem`H["(data no longer present)"]], 
            If[GeneralUtilities`$DebugMode, 
             Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
               TypeSystem`NestedGrid`PackagePrivate`formatState[
               TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                TypeSystem`NestedGrid`PackagePrivate`$pos$$]}], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
         TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$pos$$}], 
        DynamicModuleValues :> {}], 
      TypeSystem`NestedGrid`PackagePrivate`$posCell$$, 
      TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
        TypeSystem`NestedGrid`PackagePrivate`alignBar[
        TypeSystem`NestedGrid`PackagePrivate`$state$$][
         TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
          TypeSystem`PackageScope`Pathbar[
          TypeSystem`NestedGrid`PackagePrivate`$path$$, 
           TypeSystem`NestedGrid`PackagePrivate`updateState[
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
            TypeSystem`NestedGrid`PackagePrivate`$path$$, 
            TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$grid$$, 175591896]]]], 
        TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
      TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Framed[
        Dynamic[
         Replace[
          MouseAnnotation[Null], {
          TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[175591896][Null] -> 
           "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[175591896][
             Pattern[TypeSystem`NestedGrid`PackagePrivate`path, 
              Blank[]]] :> (
            TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
             TypeSystem`NestedGrid`PackagePrivate`path; 
            TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
             TypeSystem`NestedGrid`PackagePrivate`path, 
              TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
           Spacer[10], Blank[] :> Spacer[10]}], TrackedSymbols :> {}], 
        FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
        Top, ImageSize -> {Automatic, 14}]}, 
     DynamicBox[
      ToBoxes[
       Column[
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, {
          TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
          TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`alignBar[
           TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}, {
         TypeSystem`NestedGrid`PackagePrivate`$topBar$$, 
          TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
          TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`alignBar[
           TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}], Spacings -> 
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, 
          0, {{}, {0, 0.05, 0}}]], StandardForm], 
      ImageSizeCache -> {2645., {203.5, 210.5}}, 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     BaseStyle -> {LineBreakWithin -> False}, Deinitialization :> 
     TypeSystem`NestedGrid`PackagePrivate`deleteState[
      TypeSystem`NestedGrid`PackagePrivate`$state$$], 
     DynamicModuleValues :> {}, Initialization :> 
     Block[{$ContextPath = $ContextPath}, 
       Needs["TypeSystem`"]]], Deploy, DefaultBaseStyle -> "Deploy"]},
  "CopyTag",
  DisplayFunction->(#& ),
  InterpretationFunction->("Dataset[<>]"& )]], "Output",
 CellChangeTimes->{
  3.7639939791844926`*^9, 3.76496624684999*^9, 3.764966578377019*^9, 
   3.764967870586791*^9, 3.764968516140914*^9, 3.7651178396495743`*^9, 
   3.7660041994684024`*^9, 3.766004341081478*^9, 3.7730556678832865`*^9, {
   3.7730557214972224`*^9, 3.7730557451442566`*^9}, 3.7730761163241158`*^9, 
   3.7732333604276557`*^9, {3.773422679489003*^9, 3.773422692170035*^9}, 
   3.7735015291517906`*^9, 3.7735017921381636`*^9, {3.773581032210372*^9, 
   3.773581053989853*^9}},
 CellLabel->"Out[10]=",ExpressionUUID->"b7111219-cb05-474a-9c1e-ec25be719f11"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Dataset", "[", 
     RowBox[{"get", "[", "\"\<users\>\"", "]"}], "]"}], "[", 
    RowBox[{
     RowBox[{"RandomSample", "[", 
      RowBox[{"#", ",", "3"}], "]"}], "&"}], "]"}], "[", 
   RowBox[{
    RowBox[{"SortBy", "[", 
     RowBox[{"#", ",", "\"\<id\>\""}], "]"}], "&"}], "]"}], "[", 
  RowBox[{"All", ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\"\<id\>\"", ",", "\"\<name\>\""}], "}"}], ",", 
      RowBox[{"Query", "[", 
       RowBox[{"\"\<address\>\"", ",", "\"\<geo\>\""}], "]"}]}], "}"}], "/*", 
    RowBox[{"Apply", "[", "Join", "]"}]}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"%", "//", "Normal"}]}], "Input",
 CellChangeTimes->{{3.773581627080882*^9, 3.7735816697799053`*^9}, {
  3.77358182917692*^9, 3.7735818466801195`*^9}, {3.773583051340732*^9, 
  3.773583053925707*^9}},
 CellLabel->
  "In[101]:=",ExpressionUUID->"136f66f9-b9b7-4086-b118-ad97288df040"],

Cell[BoxData[
 TemplateBox[{TagBox[
    DynamicModuleBox[{
     TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
      Data`UnorderedAssociation[
       "RowCount" -> 3, "Length" -> 3, "InitialType" -> TypeSystem`Vector[
          TypeSystem`Struct[{"id", "name", "lat", "lng"}, {
            TypeSystem`Atom[Integer], 
            TypeSystem`Atom[String], 
            TypeSystem`Atom[String], 
            TypeSystem`Atom[String]}], 3], "Shape" -> 
        TypeSystem`PackageScope`HeaderShape[
          
          Association[{All, "id"} -> 1, {All, "name"} -> 1, {All, "lat"} -> 
           1, {All, "lng"} -> 1], 
          TypeSystem`PackageScope`Limited[
           TypeSystem`PackageScope`ColumnShape[
            TypeSystem`PackageScope`RowShape[
             Association[
             "id" -> TypeSystem`PackageScope`AtomShape[34], "name" -> 
              TypeSystem`PackageScope`AtomShape[172.8], "lat" -> 
              TypeSystem`PackageScope`AtomShape[76.80000000000001], "lng" -> 
              TypeSystem`PackageScope`AtomShape[86.4]]]], 3, {}]], 
        "InitialData" -> TypeSystem`PackageScope`CacheHandle[162243407], 
        "Type" -> TypeSystem`Vector[
          TypeSystem`Struct[{"id", "name", "lat", "lng"}, {
            TypeSystem`Atom[Integer], 
            TypeSystem`Atom[String], 
            TypeSystem`Atom[String], 
            TypeSystem`Atom[String]}], 3], "HandleQ" -> True, "RowTarget" -> 
        20, "Data" -> TypeSystem`PackageScope`CacheHandle[162243407]], 
      TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
      TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 1, 
      TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
      DynamicModule[{
        TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
           Style[
            Grid[{{
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"id\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"id\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 935604806][{
                    All, "id"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[935604806][
                  GeneralUtilities`Slice[All, "id"]], "Mouse"], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"name\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"name\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 935604806][{
                    All, "name"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[935604806][
                  GeneralUtilities`Slice[All, "name"]], "Mouse"], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"lat\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"lat\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 935604806][{
                    All, "lat"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[935604806][
                  GeneralUtilities`Slice[All, "lat"]], "Mouse"], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"lng\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"lng\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 935604806][{
                    All, "lng"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[935604806][
                  GeneralUtilities`Slice[All, "lng"]], "Mouse"], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["4"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[935604806][
                  GeneralUtilities`Slice[1, 
                   Key["id"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Patricia Lebsack", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[935604806][
                  GeneralUtilities`Slice[1, 
                   Key["name"]]], "Mouse"], 
                ImageSize -> {{172.8, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["29.4572", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[935604806][
                  GeneralUtilities`Slice[1, 
                   Key["lat"]]], "Mouse"], 
                ImageSize -> {{76.80000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["-164.2990", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[935604806][
                  GeneralUtilities`Slice[1, 
                   Key["lng"]]], "Mouse"], 
                ImageSize -> {{86.4, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["5"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[935604806][
                  GeneralUtilities`Slice[2, 
                   Key["id"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Chelsey Dietrich", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[935604806][
                  GeneralUtilities`Slice[2, 
                   Key["name"]]], "Mouse"], 
                ImageSize -> {{172.8, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["-31.8129", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[935604806][
                  GeneralUtilities`Slice[2, 
                   Key["lat"]]], "Mouse"], 
                ImageSize -> {{76.80000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["62.5342", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[935604806][
                  GeneralUtilities`Slice[2, 
                   Key["lng"]]], "Mouse"], 
                ImageSize -> {{86.4, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["10"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[935604806][
                  GeneralUtilities`Slice[3, 
                   Key["id"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Clementina DuBuque", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[935604806][
                  GeneralUtilities`Slice[3, 
                   Key["name"]]], "Mouse"], 
                ImageSize -> {{172.8, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["-38.2386", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[935604806][
                  GeneralUtilities`Slice[3, 
                   Key["lat"]]], "Mouse"], 
                ImageSize -> {{76.80000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["57.2232", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[935604806][
                  GeneralUtilities`Slice[3, 
                   Key["lng"]]], "Mouse"], 
                ImageSize -> {{86.4, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}}, BaseStyle -> {ContextMenu -> {
                 MenuItem["Copy position to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Copy data to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], Delimiter, 
                 MenuItem["Paste position in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Paste data in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic]}, FontFamily -> "Verdana", 
               FontSize -> 12}, Alignment -> Left, RowMinHeight -> 1.5, 
             Dividers -> All, FrameStyle -> GrayLevel[0.85], 
             BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
            LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False,
             ShowAutoStyles -> False]], 
         TypeSystem`NestedGrid`PackagePrivate`initialQ = True, 
         TypeSystem`NestedGrid`PackagePrivate`self = $Failed}, 
        Dynamic[
         TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
         TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
            Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
            
            Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
              TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
              TypeSystem`NestedGrid`PackagePrivate`LookupCacheValue[
                TypeSystem`NestedGrid`PackagePrivate`$state$$["Data"]]}, 
             TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = 
              If[TypeSystem`NestedGrid`PackagePrivate`tmpData$ === 
                TypeSystem`NestedGrid`PackagePrivate`$NotCached, 
                TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$grid$$, 935604806][
                TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
               Not[
                FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
               TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
               TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
          TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
          TypeSystem`NestedGrid`PackagePrivate`$pos$$; If[
            FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
            TypeSystem`SparseGrid[
             TypeSystem`H["(data no longer present)"]], 
            If[GeneralUtilities`$DebugMode, 
             Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
               TypeSystem`NestedGrid`PackagePrivate`formatState[
               TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                TypeSystem`NestedGrid`PackagePrivate`$pos$$]}], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
         TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$pos$$}], 
        DynamicModuleValues :> {}], 
      TypeSystem`NestedGrid`PackagePrivate`$posCell$$, 
      TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
        TypeSystem`NestedGrid`PackagePrivate`alignBar[
        TypeSystem`NestedGrid`PackagePrivate`$state$$][
         TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
          TypeSystem`PackageScope`Pathbar[
          TypeSystem`NestedGrid`PackagePrivate`$path$$, 
           TypeSystem`NestedGrid`PackagePrivate`updateState[
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
            TypeSystem`NestedGrid`PackagePrivate`$path$$, 
            TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$grid$$, 935604806]]]], 
        TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
      TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Framed[
        Dynamic[
         Replace[
          MouseAnnotation[Null], {
          TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[935604806][Null] -> 
           "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[935604806][
             Pattern[TypeSystem`NestedGrid`PackagePrivate`path, 
              Blank[]]] :> (
            TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
             TypeSystem`NestedGrid`PackagePrivate`path; 
            TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
             TypeSystem`NestedGrid`PackagePrivate`path, 
              TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
           Spacer[10], Blank[] :> Spacer[10]}], TrackedSymbols :> {}], 
        FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
        Top, ImageSize -> {Automatic, 14}]}, 
     DynamicBox[
      ToBoxes[
       Column[
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, {
          TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
          TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`alignBar[
           TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}, {
         TypeSystem`NestedGrid`PackagePrivate`$topBar$$, 
          TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
          TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`alignBar[
           TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}], Spacings -> 
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, 
          0, {{}, {0, 0.05, 0}}]], StandardForm], 
      ImageSizeCache -> {420., {67.5, 74.5}}, 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     BaseStyle -> {LineBreakWithin -> False}, Deinitialization :> 
     TypeSystem`NestedGrid`PackagePrivate`deleteState[
      TypeSystem`NestedGrid`PackagePrivate`$state$$], 
     DynamicModuleValues :> {}, Initialization :> 
     Block[{$ContextPath = $ContextPath}, 
       Needs["TypeSystem`"]]], Deploy, DefaultBaseStyle -> "Deploy"]},
  "CopyTag",
  DisplayFunction->(#& ),
  InterpretationFunction->("Dataset[<>]"& )]], "Output",
 CellChangeTimes->{{3.7735816488548856`*^9, 3.773581670482918*^9}, 
   3.773581717514882*^9, {3.773581831393883*^9, 3.7735818474811172`*^9}, 
   3.7735825359368763`*^9, 3.7735830547267447`*^9},
 CellLabel->
  "Out[101]=",ExpressionUUID->"a8c51ff6-5b45-4632-8ab7-e43519e6cb07"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"id\"\>", "\[Rule]", "4"}], ",", 
     RowBox[{"\<\"name\"\>", "\[Rule]", "\<\"Patricia Lebsack\"\>"}], ",", 
     RowBox[{"\<\"lat\"\>", "\[Rule]", "\<\"29.4572\"\>"}], ",", 
     RowBox[{"\<\"lng\"\>", "\[Rule]", "\<\"-164.2990\"\>"}]}], 
    "\[RightAssociation]"}], ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"id\"\>", "\[Rule]", "5"}], ",", 
     RowBox[{"\<\"name\"\>", "\[Rule]", "\<\"Chelsey Dietrich\"\>"}], ",", 
     RowBox[{"\<\"lat\"\>", "\[Rule]", "\<\"-31.8129\"\>"}], ",", 
     RowBox[{"\<\"lng\"\>", "\[Rule]", "\<\"62.5342\"\>"}]}], 
    "\[RightAssociation]"}], ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"id\"\>", "\[Rule]", "10"}], ",", 
     RowBox[{"\<\"name\"\>", "\[Rule]", "\<\"Clementina DuBuque\"\>"}], ",", 
     RowBox[{"\<\"lat\"\>", "\[Rule]", "\<\"-38.2386\"\>"}], ",", 
     RowBox[{"\<\"lng\"\>", "\[Rule]", "\<\"57.2232\"\>"}]}], 
    "\[RightAssociation]"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.7735816488548856`*^9, 3.773581670482918*^9}, 
   3.773581717514882*^9, {3.773581831393883*^9, 3.7735818474811172`*^9}, 
   3.7735825359368763`*^9, 3.773583054797736*^9},
 CellLabel->
  "Out[102]=",ExpressionUUID->"17a3b5e8-67a6-4e37-bc47-3f227750bb1a"]
}, Open  ]],

Cell["Illustration of various ways to query data from the dataset.", "Text",
 CellChangeTimes->{{3.773233392119681*^9, 
  3.773233413066683*^9}},ExpressionUUID->"ed23a14c-a1d9-4c99-9ff7-\
c9eb810109e0"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
building an API that makes a call to an external endpoint for data needed by \
the API.\
\>", "Subsubsection",
 CellChangeTimes->{{3.7639843915791063`*^9, 3.763984413687107*^9}, 
   3.7660824016194696`*^9, {3.773233454897735*^9, 
   3.7732334707127347`*^9}},ExpressionUUID->"c53d79d8-fb2c-4604-b137-\
ec768127222b"],

Cell["This breaks with #n", "Text",
 CellChangeTimes->{{3.7735821434522667`*^9, 
  3.7735821725762663`*^9}},ExpressionUUID->"7a839197-c670-47fa-8e31-\
9fce38584c36"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Dataset", "[", 
     RowBox[{"get", "[", "\"\<users\>\"", "]"}], "]"}], "[", 
    RowBox[{
     RowBox[{"RandomSample", "[", 
      RowBox[{"#", ",", "3"}], "]"}], "&"}], "]"}], "[", 
   RowBox[{
    RowBox[{"SortBy", "[", 
     RowBox[{"#", ",", "\"\<id\>\""}], "]"}], "&"}], "]"}], "[", 
  RowBox[{"All", ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\"\<id\>\"", ",", "\"\<name\>\""}], "}"}], ",", 
      RowBox[{"Query", "[", 
       RowBox[{"\"\<address\>\"", ",", "\"\<geo\>\""}], "]"}]}], "}"}], "/*", 
    RowBox[{"Apply", "[", "Join", "]"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.773582377290612*^9, 3.773582386746612*^9}, 
   3.7735830661947565`*^9, {3.7735833838812428`*^9, 
   3.7735833945972357`*^9}},ExpressionUUID->"d2a734b4-605e-4f00-b396-\
d71eb4e451af"],

Cell[BoxData[
 TemplateBox[{TagBox[
    DynamicModuleBox[{
     TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
      Data`UnorderedAssociation[
       "RowCount" -> 3, "Length" -> 3, "InitialType" -> TypeSystem`Vector[
          TypeSystem`Struct[{"id", "name", "lat", "lng"}, {
            TypeSystem`Atom[Integer], 
            TypeSystem`Atom[String], 
            TypeSystem`Atom[String], 
            TypeSystem`Atom[String]}], 3], "Shape" -> 
        TypeSystem`PackageScope`HeaderShape[
          
          Association[{All, "id"} -> 1, {All, "name"} -> 1, {All, "lat"} -> 
           1, {All, "lng"} -> 1], 
          TypeSystem`PackageScope`Limited[
           TypeSystem`PackageScope`ColumnShape[
            TypeSystem`PackageScope`RowShape[
             Association[
             "id" -> TypeSystem`PackageScope`AtomShape[34], "name" -> 
              TypeSystem`PackageScope`AtomShape[230.40000000000003`], "lat" -> 
              TypeSystem`PackageScope`AtomShape[76.80000000000001], "lng" -> 
              TypeSystem`PackageScope`AtomShape[86.4]]]], 3, {}]], 
        "InitialData" -> TypeSystem`PackageScope`CacheHandle[1887383043], 
        "Type" -> TypeSystem`Vector[
          TypeSystem`Struct[{"id", "name", "lat", "lng"}, {
            TypeSystem`Atom[Integer], 
            TypeSystem`Atom[String], 
            TypeSystem`Atom[String], 
            TypeSystem`Atom[String]}], 3], "HandleQ" -> True, "RowTarget" -> 
        20, "Data" -> TypeSystem`PackageScope`CacheHandle[1887383043]], 
      TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
      TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 1, 
      TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
      DynamicModule[{
        TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
           Style[
            Grid[{{
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"id\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"id\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1339838859][{All, "id"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1339838859][
                  GeneralUtilities`Slice[All, "id"]], "Mouse"], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"name\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"name\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1339838859][{All, "name"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1339838859][
                  GeneralUtilities`Slice[All, "name"]], "Mouse"], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"lat\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"lat\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1339838859][{All, "lat"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1339838859][
                  GeneralUtilities`Slice[All, "lat"]], "Mouse"], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"lng\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"lng\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1339838859][{All, "lng"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1339838859][
                  GeneralUtilities`Slice[All, "lng"]], "Mouse"], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["5"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1339838859][
                  GeneralUtilities`Slice[1, 
                   Key["id"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Chelsey Dietrich", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1339838859][
                  GeneralUtilities`Slice[1, 
                   Key["name"]]], "Mouse"], 
                ImageSize -> {{230.40000000000003`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["-31.8129", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1339838859][
                  GeneralUtilities`Slice[1, 
                   Key["lat"]]], "Mouse"], 
                ImageSize -> {{76.80000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["62.5342", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1339838859][
                  GeneralUtilities`Slice[1, 
                   Key["lng"]]], "Mouse"], 
                ImageSize -> {{86.4, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["6"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1339838859][
                  GeneralUtilities`Slice[2, 
                   Key["id"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Mrs. Dennis Schulist", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1339838859][
                  GeneralUtilities`Slice[2, 
                   Key["name"]]], "Mouse"], 
                ImageSize -> {{230.40000000000003`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["-71.4197", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1339838859][
                  GeneralUtilities`Slice[2, 
                   Key["lat"]]], "Mouse"], 
                ImageSize -> {{76.80000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["71.7478", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1339838859][
                  GeneralUtilities`Slice[2, 
                   Key["lng"]]], "Mouse"], 
                ImageSize -> {{86.4, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["8"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1339838859][
                  GeneralUtilities`Slice[3, 
                   Key["id"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Nicholas Runolfsdottir V", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1339838859][
                  GeneralUtilities`Slice[3, 
                   Key["name"]]], "Mouse"], 
                ImageSize -> {{230.40000000000003`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["-14.3990", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1339838859][
                  GeneralUtilities`Slice[3, 
                   Key["lat"]]], "Mouse"], 
                ImageSize -> {{76.80000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["-120.7677", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1339838859][
                  GeneralUtilities`Slice[3, 
                   Key["lng"]]], "Mouse"], 
                ImageSize -> {{86.4, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}}, BaseStyle -> {ContextMenu -> {
                 MenuItem["Copy position to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Copy data to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], Delimiter, 
                 MenuItem["Paste position in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Paste data in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic]}, FontFamily -> "Verdana", 
               FontSize -> 12}, Alignment -> Left, RowMinHeight -> 1.5, 
             Dividers -> All, FrameStyle -> GrayLevel[0.85], 
             BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
            LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False,
             ShowAutoStyles -> False]], 
         TypeSystem`NestedGrid`PackagePrivate`initialQ = True, 
         TypeSystem`NestedGrid`PackagePrivate`self = $Failed}, 
        Dynamic[
         TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
         TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
            Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
            
            Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
              TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
              TypeSystem`NestedGrid`PackagePrivate`LookupCacheValue[
                TypeSystem`NestedGrid`PackagePrivate`$state$$["Data"]]}, 
             TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = 
              If[TypeSystem`NestedGrid`PackagePrivate`tmpData$ === 
                TypeSystem`NestedGrid`PackagePrivate`$NotCached, 
                TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1339838859][
                TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
               Not[
                FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
               TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
               TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
          TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
          TypeSystem`NestedGrid`PackagePrivate`$pos$$; If[
            FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
            TypeSystem`SparseGrid[
             TypeSystem`H["(data no longer present)"]], 
            If[GeneralUtilities`$DebugMode, 
             Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
               TypeSystem`NestedGrid`PackagePrivate`formatState[
               TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                TypeSystem`NestedGrid`PackagePrivate`$pos$$]}], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
         TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$pos$$}], 
        DynamicModuleValues :> {}], 
      TypeSystem`NestedGrid`PackagePrivate`$posCell$$, 
      TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
        TypeSystem`NestedGrid`PackagePrivate`alignBar[
        TypeSystem`NestedGrid`PackagePrivate`$state$$][
         TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
          TypeSystem`PackageScope`Pathbar[
          TypeSystem`NestedGrid`PackagePrivate`$path$$, 
           TypeSystem`NestedGrid`PackagePrivate`updateState[
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
            TypeSystem`NestedGrid`PackagePrivate`$path$$, 
            TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1339838859]]]], 
        TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
      TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Framed[
        Dynamic[
         Replace[
          MouseAnnotation[Null], {
          TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1339838859][Null] -> 
           "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1339838859][
             Pattern[TypeSystem`NestedGrid`PackagePrivate`path, 
              Blank[]]] :> (
            TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
             TypeSystem`NestedGrid`PackagePrivate`path; 
            TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
             TypeSystem`NestedGrid`PackagePrivate`path, 
              TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
           Spacer[10], Blank[] :> Spacer[10]}], TrackedSymbols :> {}], 
        FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
        Top, ImageSize -> {Automatic, 14}]}, 
     DynamicBox[
      ToBoxes[
       Column[
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, {
          TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
          TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`alignBar[
           TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}, {
         TypeSystem`NestedGrid`PackagePrivate`$topBar$$, 
          TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
          TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`alignBar[
           TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}], Spacings -> 
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, 
          0, {{}, {0, 0.05, 0}}]], StandardForm], 
      ImageSizeCache -> {478., {67.5, 74.5}}, 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     BaseStyle -> {LineBreakWithin -> False}, Deinitialization :> 
     TypeSystem`NestedGrid`PackagePrivate`deleteState[
      TypeSystem`NestedGrid`PackagePrivate`$state$$], 
     DynamicModuleValues :> {}, Initialization :> 
     Block[{$ContextPath = $ContextPath}, 
       Needs["TypeSystem`"]]], Deploy, DefaultBaseStyle -> "Deploy"]},
  "CopyTag",
  DisplayFunction->(#& ),
  InterpretationFunction->("Dataset[<>]"& )]], "Output",
 CellChangeTimes->{{3.7735823816496115`*^9, 3.7735823875766106`*^9}, 
   3.77358306768974*^9},
 CellLabel->
  "Out[103]=",ExpressionUUID->"698f3954-cb61-4833-899b-bbdb5664f055"]
}, Open  ]],

Cell["This works with #n", "Text",
 CellChangeTimes->{{3.7735821434522667`*^9, 3.7735821725762663`*^9}, {
  3.773582359814604*^9, 
  3.773582394824576*^9}},ExpressionUUID->"3a06bec2-37da-42a4-87ef-\
8fa35d9fa8fd"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Dataset", "[", 
   RowBox[{"SortBy", "[", 
    RowBox[{
     RowBox[{"RandomSample", "[", 
      RowBox[{
       RowBox[{"get", "[", "\"\<users\>\"", "]"}], ",", "3"}], "]"}], ",", 
     "\"\<id\>\""}], "]"}], "]"}], "[", 
  RowBox[{"All", ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\"\<id\>\"", ",", "\"\<name\>\""}], "}"}], ",", 
      RowBox[{"Query", "[", 
       RowBox[{"\"\<address\>\"", ",", "\"\<geo\>\""}], "]"}]}], "}"}], "/*", 
    RowBox[{"Apply", "[", "Join", "]"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7735822276633196`*^9, 3.773582325170603*^9}, 
   3.773582378555579*^9, 3.773583071826706*^9, {3.773583389035205*^9, 
   3.7735833910772114`*^9}},ExpressionUUID->"1e6a13eb-5934-4755-a6ce-\
824470391a9b"],

Cell[BoxData[
 TemplateBox[{TagBox[
    DynamicModuleBox[{
     TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
      Data`UnorderedAssociation[
       "RowCount" -> 3, "Length" -> 3, "InitialType" -> TypeSystem`Vector[
          TypeSystem`Struct[{"id", "name", "lat", "lng"}, {
            TypeSystem`Atom[Integer], 
            TypeSystem`Atom[String], 
            TypeSystem`Atom[String], 
            TypeSystem`Atom[String]}], 3], "Shape" -> 
        TypeSystem`PackageScope`HeaderShape[
          
          Association[{All, "id"} -> 1, {All, "name"} -> 1, {All, "lat"} -> 
           1, {All, "lng"} -> 1], 
          TypeSystem`PackageScope`Limited[
           TypeSystem`PackageScope`ColumnShape[
            TypeSystem`PackageScope`RowShape[
             Association[
             "id" -> TypeSystem`PackageScope`AtomShape[34], "name" -> 
              TypeSystem`PackageScope`AtomShape[192.00000000000003`], "lat" -> 
              TypeSystem`PackageScope`AtomShape[76.80000000000001], "lng" -> 
              TypeSystem`PackageScope`AtomShape[86.4]]]], 3, {}]], 
        "InitialData" -> TypeSystem`PackageScope`CacheHandle[1722112003], 
        "Type" -> TypeSystem`Vector[
          TypeSystem`Struct[{"id", "name", "lat", "lng"}, {
            TypeSystem`Atom[Integer], 
            TypeSystem`Atom[String], 
            TypeSystem`Atom[String], 
            TypeSystem`Atom[String]}], 3], "HandleQ" -> True, "RowTarget" -> 
        20, "Data" -> TypeSystem`PackageScope`CacheHandle[1722112003]], 
      TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
      TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 1, 
      TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
      DynamicModule[{
        TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
           Style[
            Grid[{{
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"id\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"id\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    2075242569][{All, "id"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2075242569][
                  GeneralUtilities`Slice[All, "id"]], "Mouse"], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"name\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"name\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    2075242569][{All, "name"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2075242569][
                  GeneralUtilities`Slice[All, "name"]], "Mouse"], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"lat\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"lat\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    2075242569][{All, "lat"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2075242569][
                  GeneralUtilities`Slice[All, "lat"]], "Mouse"], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"lng\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"lng\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    2075242569][{All, "lng"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2075242569][
                  GeneralUtilities`Slice[All, "lng"]], "Mouse"], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["4"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2075242569][
                  GeneralUtilities`Slice[1, 
                   Key["id"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Patricia Lebsack", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2075242569][
                  GeneralUtilities`Slice[1, 
                   Key["name"]]], "Mouse"], 
                ImageSize -> {{192.00000000000003`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["29.4572", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2075242569][
                  GeneralUtilities`Slice[1, 
                   Key["lat"]]], "Mouse"], 
                ImageSize -> {{76.80000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["-164.2990", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2075242569][
                  GeneralUtilities`Slice[1, 
                   Key["lng"]]], "Mouse"], 
                ImageSize -> {{86.4, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["5"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2075242569][
                  GeneralUtilities`Slice[2, 
                   Key["id"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Chelsey Dietrich", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2075242569][
                  GeneralUtilities`Slice[2, 
                   Key["name"]]], "Mouse"], 
                ImageSize -> {{192.00000000000003`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["-31.8129", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2075242569][
                  GeneralUtilities`Slice[2, 
                   Key["lat"]]], "Mouse"], 
                ImageSize -> {{76.80000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["62.5342", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2075242569][
                  GeneralUtilities`Slice[2, 
                   Key["lng"]]], "Mouse"], 
                ImageSize -> {{86.4, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["6"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2075242569][
                  GeneralUtilities`Slice[3, 
                   Key["id"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Mrs. Dennis Schulist", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2075242569][
                  GeneralUtilities`Slice[3, 
                   Key["name"]]], "Mouse"], 
                ImageSize -> {{192.00000000000003`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["-71.4197", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2075242569][
                  GeneralUtilities`Slice[3, 
                   Key["lat"]]], "Mouse"], 
                ImageSize -> {{76.80000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["71.7478", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2075242569][
                  GeneralUtilities`Slice[3, 
                   Key["lng"]]], "Mouse"], 
                ImageSize -> {{86.4, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}}, BaseStyle -> {ContextMenu -> {
                 MenuItem["Copy position to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Copy data to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], Delimiter, 
                 MenuItem["Paste position in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Paste data in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic]}, FontFamily -> "Verdana", 
               FontSize -> 12}, Alignment -> Left, RowMinHeight -> 1.5, 
             Dividers -> All, FrameStyle -> GrayLevel[0.85], 
             BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
            LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False,
             ShowAutoStyles -> False]], 
         TypeSystem`NestedGrid`PackagePrivate`initialQ = True, 
         TypeSystem`NestedGrid`PackagePrivate`self = $Failed}, 
        Dynamic[
         TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
         TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
            Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
            
            Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
              TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
              TypeSystem`NestedGrid`PackagePrivate`LookupCacheValue[
                TypeSystem`NestedGrid`PackagePrivate`$state$$["Data"]]}, 
             TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = 
              If[TypeSystem`NestedGrid`PackagePrivate`tmpData$ === 
                TypeSystem`NestedGrid`PackagePrivate`$NotCached, 
                TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$grid$$, 2075242569][
                TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
               Not[
                FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
               TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
               TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
          TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
          TypeSystem`NestedGrid`PackagePrivate`$pos$$; If[
            FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
            TypeSystem`SparseGrid[
             TypeSystem`H["(data no longer present)"]], 
            If[GeneralUtilities`$DebugMode, 
             Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
               TypeSystem`NestedGrid`PackagePrivate`formatState[
               TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                TypeSystem`NestedGrid`PackagePrivate`$pos$$]}], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
         TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$pos$$}], 
        DynamicModuleValues :> {}], 
      TypeSystem`NestedGrid`PackagePrivate`$posCell$$, 
      TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
        TypeSystem`NestedGrid`PackagePrivate`alignBar[
        TypeSystem`NestedGrid`PackagePrivate`$state$$][
         TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
          TypeSystem`PackageScope`Pathbar[
          TypeSystem`NestedGrid`PackagePrivate`$path$$, 
           TypeSystem`NestedGrid`PackagePrivate`updateState[
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
            TypeSystem`NestedGrid`PackagePrivate`$path$$, 
            TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$grid$$, 2075242569]]]], 
        TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
      TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Framed[
        Dynamic[
         Replace[
          MouseAnnotation[Null], {
          TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2075242569][Null] -> 
           "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2075242569][
             Pattern[TypeSystem`NestedGrid`PackagePrivate`path, 
              Blank[]]] :> (
            TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
             TypeSystem`NestedGrid`PackagePrivate`path; 
            TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
             TypeSystem`NestedGrid`PackagePrivate`path, 
              TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
           Spacer[10], Blank[] :> Spacer[10]}], TrackedSymbols :> {}], 
        FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
        Top, ImageSize -> {Automatic, 14}]}, 
     DynamicBox[
      ToBoxes[
       Column[
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, {
          TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
          TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`alignBar[
           TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}, {
         TypeSystem`NestedGrid`PackagePrivate`$topBar$$, 
          TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
          TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`alignBar[
           TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}], Spacings -> 
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, 
          0, {{}, {0, 0.05, 0}}]], StandardForm], 
      ImageSizeCache -> {440., {67.5, 74.5}}, 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     BaseStyle -> {LineBreakWithin -> False}, Deinitialization :> 
     TypeSystem`NestedGrid`PackagePrivate`deleteState[
      TypeSystem`NestedGrid`PackagePrivate`$state$$], 
     DynamicModuleValues :> {}, Initialization :> 
     Block[{$ContextPath = $ContextPath}, 
       Needs["TypeSystem`"]]], Deploy, DefaultBaseStyle -> "Deploy"]},
  "CopyTag",
  DisplayFunction->(#& ),
  InterpretationFunction->("Dataset[<>]"& )]], "Output",
 CellChangeTimes->{{3.7735822347203264`*^9, 3.7735823270416*^9}, 
   3.7735823910415783`*^9, 3.773583073254702*^9},
 CellLabel->
  "Out[104]=",ExpressionUUID->"f054e8a5-b0e9-4c1b-a3fc-71473c0f1ec9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"ClearAll", "[", "api", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"api", "=", " ", 
    RowBox[{"APIFunction", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"\"\<it\>\"", "\[Rule]", "\"\<String\>\""}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"\"\<n\>\"", "\[Rule]", "\"\<Integer\>\""}]}], 
       "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{"Function", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"Dataset", "[", 
          RowBox[{"SortBy", "[", 
           RowBox[{
            RowBox[{"RandomSample", "[", 
             RowBox[{
              RowBox[{"get", "[", "\"\<users\>\"", "]"}], ",", "#n"}], "]"}], 
            ",", "\"\<id\>\""}], "]"}], "]"}], "[", 
         RowBox[{"All", ",", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"\"\<id\>\"", ",", "\"\<name\>\""}], "}"}], ",", 
             RowBox[{"Query", "[", 
              RowBox[{"\"\<address\>\"", ",", "\"\<geo\>\""}], "]"}]}], "}"}],
            "/*", 
           RowBox[{"Apply", "[", "Join", "]"}]}]}], "]"}], "//", "Normal"}], 
       "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", " ", 
      "\"\<JSON\>\""}], "\[IndentingNewLine]", "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"api", "[", 
  RowBox[{"<|", 
   RowBox[{
    RowBox[{"\"\<it\>\"", "\[Rule]", "\"\<users\>\""}], ",", 
    RowBox[{"\"\<n\>\"", "\[Rule]", "4"}]}], "|>"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"%", "//", "Dataset"}]}], "Input",
 CellChangeTimes->{{3.763901121307186*^9, 3.763901256902187*^9}, {
   3.763916236533563*^9, 3.7639162926155634`*^9}, {3.763919066994918*^9, 
   3.7639190671439037`*^9}, {3.7639844482761064`*^9, 
   3.7639845702051067`*^9}, {3.7639942414674144`*^9, 3.763994245901416*^9}, 
   3.7649670201258574`*^9, {3.7651184626485662`*^9, 3.765118492360566*^9}, {
   3.765118549570565*^9, 3.765118587600589*^9}, {3.7651186323445425`*^9, 
   3.7651186434305415`*^9}, {3.7660047231484385`*^9, 3.766004736968464*^9}, {
   3.7660047786134377`*^9, 3.766004885987438*^9}, {3.766005054717438*^9, 
   3.7660051413264365`*^9}, {3.766005313152477*^9, 3.766005334076437*^9}, {
   3.773055909312334*^9, 3.7730559095272975`*^9}, {3.7730656404884524`*^9, 
   3.7730656718194985`*^9}, 3.77358101591969*^9, {3.7735811373998165`*^9, 
   3.773581140084814*^9}, {3.773581786144885*^9, 3.773581815236912*^9}, {
   3.77358185412116*^9, 3.7735818743031206`*^9}, {3.7735819687397413`*^9, 
   3.7735819692026987`*^9}, {3.773582337345581*^9, 3.773582347583603*^9}, 
   3.7735830773937035`*^9, {3.7735834387332516`*^9, 3.7735834721072187`*^9}},
 CellLabel->"In[13]:=",ExpressionUUID->"9bb93b02-e45c-48c1-8986-4b572b999a93"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"id\"\>", "\[Rule]", "3"}], ",", 
     RowBox[{"\<\"name\"\>", "\[Rule]", "\<\"Clementine Bauch\"\>"}], ",", 
     RowBox[{"\<\"lat\"\>", "\[Rule]", "\<\"-68.6102\"\>"}], ",", 
     RowBox[{"\<\"lng\"\>", "\[Rule]", "\<\"-47.0653\"\>"}]}], 
    "\[RightAssociation]"}], ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"id\"\>", "\[Rule]", "4"}], ",", 
     RowBox[{"\<\"name\"\>", "\[Rule]", "\<\"Patricia Lebsack\"\>"}], ",", 
     RowBox[{"\<\"lat\"\>", "\[Rule]", "\<\"29.4572\"\>"}], ",", 
     RowBox[{"\<\"lng\"\>", "\[Rule]", "\<\"-164.2990\"\>"}]}], 
    "\[RightAssociation]"}], ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"id\"\>", "\[Rule]", "7"}], ",", 
     RowBox[{"\<\"name\"\>", "\[Rule]", "\<\"Kurtis Weissnat\"\>"}], ",", 
     RowBox[{"\<\"lat\"\>", "\[Rule]", "\<\"24.8918\"\>"}], ",", 
     RowBox[{"\<\"lng\"\>", "\[Rule]", "\<\"21.8984\"\>"}]}], 
    "\[RightAssociation]"}], ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"id\"\>", "\[Rule]", "9"}], ",", 
     RowBox[{"\<\"name\"\>", "\[Rule]", "\<\"Glenna Reichert\"\>"}], ",", 
     RowBox[{"\<\"lat\"\>", "\[Rule]", "\<\"24.6463\"\>"}], ",", 
     RowBox[{"\<\"lng\"\>", "\[Rule]", "\<\"-168.8889\"\>"}]}], 
    "\[RightAssociation]"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.7730656727984734`*^9, 3.773076124301095*^9, 3.7732334844257717`*^9, 
   3.7734227145500245`*^9, 3.7735810217667084`*^9, {3.77358179545792*^9, 
   3.7735818170208826`*^9}, {3.773581856046118*^9, 3.773581875126142*^9}, 
   3.7735820265204096`*^9, 3.773582349241612*^9, 3.773582417486596*^9, 
   3.773583079010705*^9, {3.773583454028246*^9, 3.773583473281251*^9}},
 CellLabel->"Out[15]=",ExpressionUUID->"9a6c57aa-fa78-41ca-946b-33e10667b618"],

Cell[BoxData[
 TemplateBox[{TagBox[
    DynamicModuleBox[{
     TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
      Data`UnorderedAssociation[
       "RowCount" -> 4, "Length" -> 4, "InitialType" -> TypeSystem`Vector[
          TypeSystem`Struct[{"id", "name", "lat", "lng"}, {
            TypeSystem`Atom[Integer], 
            TypeSystem`Atom[String], 
            TypeSystem`Atom[String], 
            TypeSystem`Atom[String]}], 4], "Shape" -> 
        TypeSystem`PackageScope`HeaderShape[
          
          Association[{All, "id"} -> 1, {All, "name"} -> 1, {All, "lat"} -> 
           1, {All, "lng"} -> 1], 
          TypeSystem`PackageScope`Limited[
           TypeSystem`PackageScope`ColumnShape[
            TypeSystem`PackageScope`RowShape[
             Association[
             "id" -> TypeSystem`PackageScope`AtomShape[34], "name" -> 
              TypeSystem`PackageScope`AtomShape[153.60000000000002`], "lat" -> 
              TypeSystem`PackageScope`AtomShape[76.80000000000001], "lng" -> 
              TypeSystem`PackageScope`AtomShape[86.4]]]], 4, {}]], 
        "InitialData" -> TypeSystem`PackageScope`CacheHandle[624039813], 
        "Type" -> TypeSystem`Vector[
          TypeSystem`Struct[{"id", "name", "lat", "lng"}, {
            TypeSystem`Atom[Integer], 
            TypeSystem`Atom[String], 
            TypeSystem`Atom[String], 
            TypeSystem`Atom[String]}], 4], "HandleQ" -> True, "RowTarget" -> 
        20, "Data" -> TypeSystem`PackageScope`CacheHandle[624039813]], 
      TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
      TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 1, 
      TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
      DynamicModule[{
        TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
           Style[
            Grid[{{
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"id\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"id\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 284904349][{
                    All, "id"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[284904349][
                  GeneralUtilities`Slice[All, "id"]], "Mouse"], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"name\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"name\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 284904349][{
                    All, "name"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[284904349][
                  GeneralUtilities`Slice[All, "name"]], "Mouse"], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"lat\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"lat\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 284904349][{
                    All, "lat"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[284904349][
                  GeneralUtilities`Slice[All, "lat"]], "Mouse"], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"lng\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"lng\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 284904349][{
                    All, "lng"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[284904349][
                  GeneralUtilities`Slice[All, "lng"]], "Mouse"], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["3"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[284904349][
                  GeneralUtilities`Slice[1, 
                   Key["id"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Clementine Bauch", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[284904349][
                  GeneralUtilities`Slice[1, 
                   Key["name"]]], "Mouse"], 
                ImageSize -> {{153.60000000000002`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["-68.6102", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[284904349][
                  GeneralUtilities`Slice[1, 
                   Key["lat"]]], "Mouse"], 
                ImageSize -> {{76.80000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["-47.0653", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[284904349][
                  GeneralUtilities`Slice[1, 
                   Key["lng"]]], "Mouse"], 
                ImageSize -> {{86.4, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["4"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[284904349][
                  GeneralUtilities`Slice[2, 
                   Key["id"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Patricia Lebsack", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[284904349][
                  GeneralUtilities`Slice[2, 
                   Key["name"]]], "Mouse"], 
                ImageSize -> {{153.60000000000002`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["29.4572", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[284904349][
                  GeneralUtilities`Slice[2, 
                   Key["lat"]]], "Mouse"], 
                ImageSize -> {{76.80000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["-164.2990", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[284904349][
                  GeneralUtilities`Slice[2, 
                   Key["lng"]]], "Mouse"], 
                ImageSize -> {{86.4, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["7"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[284904349][
                  GeneralUtilities`Slice[3, 
                   Key["id"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Kurtis Weissnat", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[284904349][
                  GeneralUtilities`Slice[3, 
                   Key["name"]]], "Mouse"], 
                ImageSize -> {{153.60000000000002`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["24.8918", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[284904349][
                  GeneralUtilities`Slice[3, 
                   Key["lat"]]], "Mouse"], 
                ImageSize -> {{76.80000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["21.8984", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[284904349][
                  GeneralUtilities`Slice[3, 
                   Key["lng"]]], "Mouse"], 
                ImageSize -> {{86.4, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["9"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[284904349][
                  GeneralUtilities`Slice[4, 
                   Key["id"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Glenna Reichert", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[284904349][
                  GeneralUtilities`Slice[4, 
                   Key["name"]]], "Mouse"], 
                ImageSize -> {{153.60000000000002`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["24.6463", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[284904349][
                  GeneralUtilities`Slice[4, 
                   Key["lat"]]], "Mouse"], 
                ImageSize -> {{76.80000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["-168.8889", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[284904349][
                  GeneralUtilities`Slice[4, 
                   Key["lng"]]], "Mouse"], 
                ImageSize -> {{86.4, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}}, BaseStyle -> {ContextMenu -> {
                 MenuItem["Copy position to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Copy data to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], Delimiter, 
                 MenuItem["Paste position in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Paste data in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic]}, FontFamily -> "Verdana", 
               FontSize -> 12}, Alignment -> Left, RowMinHeight -> 1.5, 
             Dividers -> All, FrameStyle -> GrayLevel[0.85], 
             BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
            LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False,
             ShowAutoStyles -> False]], 
         TypeSystem`NestedGrid`PackagePrivate`initialQ = True, 
         TypeSystem`NestedGrid`PackagePrivate`self = $Failed}, 
        Dynamic[
         TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
         TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
            Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
            
            Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
              TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
              TypeSystem`NestedGrid`PackagePrivate`LookupCacheValue[
                TypeSystem`NestedGrid`PackagePrivate`$state$$["Data"]]}, 
             TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = 
              If[TypeSystem`NestedGrid`PackagePrivate`tmpData$ === 
                TypeSystem`NestedGrid`PackagePrivate`$NotCached, 
                TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$grid$$, 284904349][
                TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
               Not[
                FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
               TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
               TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
          TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
          TypeSystem`NestedGrid`PackagePrivate`$pos$$; If[
            FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
            TypeSystem`SparseGrid[
             TypeSystem`H["(data no longer present)"]], 
            If[GeneralUtilities`$DebugMode, 
             Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
               TypeSystem`NestedGrid`PackagePrivate`formatState[
               TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                TypeSystem`NestedGrid`PackagePrivate`$pos$$]}], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
         TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$pos$$}], 
        DynamicModuleValues :> {}], 
      TypeSystem`NestedGrid`PackagePrivate`$posCell$$, 
      TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
        TypeSystem`NestedGrid`PackagePrivate`alignBar[
        TypeSystem`NestedGrid`PackagePrivate`$state$$][
         TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
          TypeSystem`PackageScope`Pathbar[
          TypeSystem`NestedGrid`PackagePrivate`$path$$, 
           TypeSystem`NestedGrid`PackagePrivate`updateState[
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
            TypeSystem`NestedGrid`PackagePrivate`$path$$, 
            TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$grid$$, 284904349]]]], 
        TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
      TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Framed[
        Dynamic[
         Replace[
          MouseAnnotation[Null], {
          TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[284904349][Null] -> 
           "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[284904349][
             Pattern[TypeSystem`NestedGrid`PackagePrivate`path, 
              Blank[]]] :> (
            TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
             TypeSystem`NestedGrid`PackagePrivate`path; 
            TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
             TypeSystem`NestedGrid`PackagePrivate`path, 
              TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
           Spacer[10], Blank[] :> Spacer[10]}], TrackedSymbols :> {}], 
        FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
        Top, ImageSize -> {Automatic, 14}]}, 
     DynamicBox[
      ToBoxes[
       Column[
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, {
          TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
          TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`alignBar[
           TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}, {
         TypeSystem`NestedGrid`PackagePrivate`$topBar$$, 
          TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
          TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`alignBar[
           TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}], Spacings -> 
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, 
          0, {{}, {0, 0.05, 0}}]], StandardForm], 
      ImageSizeCache -> {401., {82.5, 89.5}}, 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     BaseStyle -> {LineBreakWithin -> False}, Deinitialization :> 
     TypeSystem`NestedGrid`PackagePrivate`deleteState[
      TypeSystem`NestedGrid`PackagePrivate`$state$$], 
     DynamicModuleValues :> {}, Initialization :> 
     Block[{$ContextPath = $ContextPath}, 
       Needs["TypeSystem`"]]], Deploy, DefaultBaseStyle -> "Deploy"]},
  "CopyTag",
  DisplayFunction->(#& ),
  InterpretationFunction->("Dataset[<>]"& )]], "Output",
 CellChangeTimes->{
  3.7730656727984734`*^9, 3.773076124301095*^9, 3.7732334844257717`*^9, 
   3.7734227145500245`*^9, 3.7735810217667084`*^9, {3.77358179545792*^9, 
   3.7735818170208826`*^9}, {3.773581856046118*^9, 3.773581875126142*^9}, 
   3.7735820265204096`*^9, 3.773582349241612*^9, 3.773582417486596*^9, 
   3.773583079010705*^9, {3.773583454028246*^9, 3.773583473397206*^9}},
 CellLabel->"Out[16]=",ExpressionUUID->"7258e522-9a72-4e91-898c-1568d2ccb2cc"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"ClearAll", "[", "cd", "]"}], "\[IndentingNewLine]", 
 RowBox[{"cd", "=", 
  RowBox[{"CloudDeploy", "[", "\[IndentingNewLine]", 
   RowBox[{
   "api", ",", "\[IndentingNewLine]", "\"\</live-coding/placeholder/\>\"", 
    ",", "\[IndentingNewLine]", 
    RowBox[{"Permissions", "\[Rule]", "\"\<Public\>\""}]}], 
   "\[IndentingNewLine]", "]"}]}]}], "Input",
 CellChangeTimes->{{3.763901121307186*^9, 3.7639012201341887`*^9}, {
  3.7639846636741133`*^9, 3.763984667449107*^9}, {3.773055886137292*^9, 
  3.7730558926663246`*^9}},
 CellLabel->
  "In[109]:=",ExpressionUUID->"3438e09c-226a-4225-9ccb-9970caf3747c"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"CloudObject", "[", 
   TemplateBox[{
    "\"https://www.wolframcloud.com/obj/mitch/live-coding/placeholder\"",
     "https://www.wolframcloud.com/obj/mitch/live-coding/placeholder"},
    "HyperlinkURL"], "]"}],
  CloudObject[
  "https://www.wolframcloud.com/obj/mitch/live-coding/placeholder"],
  SelectWithContents->True]], "Output",
 CellChangeTimes->{3.7639012678211875`*^9, 3.7639163103045645`*^9, 
  3.763984684008109*^9, 3.7639942612774143`*^9, 3.764966767967106*^9, 
  3.7649670448598633`*^9, 3.764967882419758*^9, 3.764968560263881*^9, 
  3.765118049561544*^9, 3.765118518050603*^9, 3.765118600928566*^9, 
  3.765118653302579*^9, 3.766082431479292*^9, 3.77305594086932*^9, 
  3.773065677443525*^9, 3.7730761263081317`*^9, 3.773233488212745*^9, 
  3.773422716975005*^9, 3.7735818865961547`*^9, 3.7735824223166122`*^9, 
  3.7735830808757067`*^9},
 CellLabel->
  "Out[110]=",ExpressionUUID->"96da50b9-9509-478d-ad9f-0af18396f676"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"ClearAll", "[", 
  RowBox[{"url", ",", "session"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"url", "=", 
  RowBox[{"URLBuild", "[", 
   RowBox[{"cd", ",", 
    RowBox[{"<|", 
     RowBox[{
      RowBox[{"\"\<it\>\"", "\[Rule]", "\"\<users\>\""}], ",", 
      RowBox[{"\"\<n\>\"", "\[Rule]", "4"}]}], "|>"}]}], "]"}]}], "\n", 
 RowBox[{
  RowBox[{"session", "=", 
   RowBox[{"StartWebSession", "[", "\"\<Chrome\>\"", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"WebExecute", "[", 
   RowBox[{"session", ",", 
    RowBox[{"{", 
     RowBox[{"\"\<OpenPage\>\"", "\[Rule]", "url"}], "}"}]}], "]"}], 
  ";"}]}], "Input",
 CellChangeTimes->{
  3.7649668134711266`*^9, {3.7730558952003093`*^9, 3.7730559038873177`*^9}},
 CellLabel->
  "In[111]:=",ExpressionUUID->"dec401f9-cb66-464c-a4c2-21c17147987c"],

Cell[BoxData["\<\"https://www.wolframcloud.com/obj/mitch/live-coding/\
placeholder?it=users&n=4\"\>"], "Output",
 CellChangeTimes->{{3.764966817670134*^9, 3.7649668446756263`*^9}, 
   3.764967047384863*^9, 3.7649678883277917`*^9, 3.76496856977588*^9, 
   3.76511805196854*^9, 3.765118602346567*^9, 3.7660824335172787`*^9, 
   3.7730559427302876`*^9, 3.773065678768532*^9, 3.773076128002119*^9, 
   3.773233489748743*^9, 3.773422717956005*^9, 3.773581888855118*^9, 
   3.7735824236095796`*^9, 3.773583083756706*^9},
 CellLabel->
  "Out[112]=",ExpressionUUID->"06f5176b-2511-4e09-b019-0323279a946f"]
}, Open  ]],

Cell["\<\
We can send the whole dataset to the front-end and let the front-end guys \
figure it out, or set up controls in the front-end and send from the quant \
API only what is wanted.  This later approach is like GraphQL; query only \
what you want and minimize the quantity of data being transported via HTTP.\
\>", "Text",
 CellChangeTimes->{{3.763994383676416*^9, 3.763994482989416*^9}, {
  3.77323353371712*^9, 
  3.7732336616768255`*^9}},ExpressionUUID->"6bf67c9a-61e3-4dca-89c5-\
3998af09b4b2"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["API-6) Compute word counts", "Chapter",
 CellChangeTimes->{{3.763995362167555*^9, 3.7639953689385543`*^9}, {
  3.76399829084374*^9, 3.76399831346874*^9}, {3.7733268825331125`*^9, 
  3.773326908509113*^9}},ExpressionUUID->"cc83e60b-6516-44a9-b6e4-\
a238f47e5bb7"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Dataset", "[", " ", 
  RowBox[{"get", "[", "\"\<posts\>\"", "]"}], " ", "]"}]], "Input",
 CellChangeTimes->{{3.763990815720146*^9, 3.763990844933161*^9}, {
   3.763990980708146*^9, 3.763991009993146*^9}, 3.7639965069559555`*^9, {
   3.7649686420465403`*^9, 3.764968647714547*^9}, {3.764968748278586*^9, 
   3.764968752105568*^9}},
 CellLabel->"In[5]:=",ExpressionUUID->"64a4bb46-427a-46c9-a3b7-cac7178b8af5"],

Cell[BoxData[
 TemplateBox[{TagBox[
    DynamicModuleBox[{
     TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
      Data`UnorderedAssociation[
       "RowCount" -> 20, "Length" -> 100, "InitialType" -> TypeSystem`Vector[
          TypeSystem`Struct[{"userId", "id", "title", "body"}, {
            TypeSystem`Atom[Integer], 
            TypeSystem`Atom[Integer], 
            TypeSystem`Atom[String], 
            TypeSystem`Atom[String]}], 100], "Shape" -> 
        TypeSystem`PackageScope`HeaderShape[
          
          Association[{All, "userId"} -> 1, {All, "id"} -> 1, {All, "title"} -> 
           1, {All, "body"} -> 1], 
          TypeSystem`PackageScope`Limited[
           TypeSystem`PackageScope`ColumnShape[
            TypeSystem`PackageScope`RowShape[
             Association[
             "userId" -> TypeSystem`PackageScope`AtomShape[34], "id" -> 
              TypeSystem`PackageScope`AtomShape[34], "title" -> 
              TypeSystem`PackageScope`AtomShape[480.00000000000006`], "body" -> 
              TypeSystem`PackageScope`AtomShape[480.00000000000006`]]]], 
           20, {}]], "InitialData" -> 
        TypeSystem`PackageScope`CacheHandle[907248269], "Type" -> 
        TypeSystem`Vector[
          TypeSystem`Struct[{"userId", "id", "title", "body"}, {
            TypeSystem`Atom[Integer], 
            TypeSystem`Atom[Integer], 
            TypeSystem`Atom[String], 
            TypeSystem`Atom[String]}], 100], "HandleQ" -> True, "RowTarget" -> 
        20, "Data" -> TypeSystem`PackageScope`CacheHandle[907248269]], 
      TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
      TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 1, 
      TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
      DynamicModule[{
        TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
           Style[
            Grid[{{
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"userId\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"userId\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1236136345][{All, "userId"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1236136345][
                  GeneralUtilities`Slice[All, "userId"]], "Mouse"], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"id\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"id\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1236136345][{All, "id"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1236136345][
                  GeneralUtilities`Slice[All, "id"]], "Mouse"], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"title\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"title\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1236136345][{All, "title"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1236136345][
                  GeneralUtilities`Slice[All, "title"]], "Mouse"], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"body\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"body\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1236136345][{All, "body"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1236136345][
                  GeneralUtilities`Slice[All, "body"]], "Mouse"], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["1"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1236136345][
                  GeneralUtilities`Slice[1, 
                   Key["userId"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["1"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1236136345][
                  GeneralUtilities`Slice[1, 
                   Key["id"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                "sunt aut facere repellat provident occaecati excepturi optio \
reprehenderit", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1236136345][
                  GeneralUtilities`Slice[1, 
                   Key["title"]]], "Mouse"], 
                ImageSize -> {{480.00000000000006`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["quia et suscipit \[DescendingEllipsis] ", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1236136345][
                  GeneralUtilities`Slice[1, 
                   Key["body"]]], "Mouse"], 
                ImageSize -> {{480.00000000000006`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["1"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1236136345][
                  GeneralUtilities`Slice[2, 
                   Key["userId"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["2"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1236136345][
                  GeneralUtilities`Slice[2, 
                   Key["id"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["qui est esse", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1236136345][
                  GeneralUtilities`Slice[2, 
                   Key["title"]]], "Mouse"], 
                ImageSize -> {{480.00000000000006`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["est rerum tempore vitae \[DescendingEllipsis] ", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1236136345][
                  GeneralUtilities`Slice[2, 
                   Key["body"]]], "Mouse"], 
                ImageSize -> {{480.00000000000006`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["1"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1236136345][
                  GeneralUtilities`Slice[3, 
                   Key["userId"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["3"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1236136345][
                  GeneralUtilities`Slice[3, 
                   Key["id"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                "ea molestias quasi exercitationem repellat qui ipsa sit aut", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1236136345][
                  GeneralUtilities`Slice[3, 
                   Key["title"]]], "Mouse"], 
                ImageSize -> {{480.00000000000006`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["et iusto sed quo iure \[DescendingEllipsis] ", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1236136345][
                  GeneralUtilities`Slice[3, 
                   Key["body"]]], "Mouse"], 
                ImageSize -> {{480.00000000000006`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["1"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1236136345][
                  GeneralUtilities`Slice[4, 
                   Key["userId"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["4"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1236136345][
                  GeneralUtilities`Slice[4, 
                   Key["id"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["eum et est occaecati", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1236136345][
                  GeneralUtilities`Slice[4, 
                   Key["title"]]], "Mouse"], 
                ImageSize -> {{480.00000000000006`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                "ullam et saepe reiciendis voluptatem adipisci \
\[DescendingEllipsis] ", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1236136345][
                  GeneralUtilities`Slice[4, 
                   Key["body"]]], "Mouse"], 
                ImageSize -> {{480.00000000000006`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["1"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1236136345][
                  GeneralUtilities`Slice[5, 
                   Key["userId"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["5"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1236136345][
                  GeneralUtilities`Slice[5, 
                   Key["id"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["nesciunt quas odio", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1236136345][
                  GeneralUtilities`Slice[5, 
                   Key["title"]]], "Mouse"], 
                ImageSize -> {{480.00000000000006`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                "repudiandae veniam quaerat sunt sed \[DescendingEllipsis] ", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1236136345][
                  GeneralUtilities`Slice[5, 
                   Key["body"]]], "Mouse"], 
                ImageSize -> {{480.00000000000006`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["1"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1236136345][
                  GeneralUtilities`Slice[6, 
                   Key["userId"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["6"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1236136345][
                  GeneralUtilities`Slice[6, 
                   Key["id"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["dolorem eum magni eos aperiam quia", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1236136345][
                  GeneralUtilities`Slice[6, 
                   Key["title"]]], "Mouse"], 
                ImageSize -> {{480.00000000000006`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                "ut aspernatur corporis harum nihil quis provident sequi \
\[DescendingEllipsis] ", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1236136345][
                  GeneralUtilities`Slice[6, 
                   Key["body"]]], "Mouse"], 
                ImageSize -> {{480.00000000000006`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["1"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1236136345][
                  GeneralUtilities`Slice[7, 
                   Key["userId"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["7"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1236136345][
                  GeneralUtilities`Slice[7, 
                   Key["id"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["magnam facilis autem", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1236136345][
                  GeneralUtilities`Slice[7, 
                   Key["title"]]], "Mouse"], 
                ImageSize -> {{480.00000000000006`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                "dolore placeat quibusdam ea quo vitae \[DescendingEllipsis] \
", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1236136345][
                  GeneralUtilities`Slice[7, 
                   Key["body"]]], "Mouse"], 
                ImageSize -> {{480.00000000000006`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["1"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1236136345][
                  GeneralUtilities`Slice[8, 
                   Key["userId"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["8"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1236136345][
                  GeneralUtilities`Slice[8, 
                   Key["id"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["dolorem dolore est ipsam", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1236136345][
                  GeneralUtilities`Slice[8, 
                   Key["title"]]], "Mouse"], 
                ImageSize -> {{480.00000000000006`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                "dignissimos aperiam dolorem qui eum \[DescendingEllipsis] ", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1236136345][
                  GeneralUtilities`Slice[8, 
                   Key["body"]]], "Mouse"], 
                ImageSize -> {{480.00000000000006`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["1"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1236136345][
                  GeneralUtilities`Slice[9, 
                   Key["userId"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["9"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1236136345][
                  GeneralUtilities`Slice[9, 
                   Key["id"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                "nesciunt iure omnis dolorem tempora et accusantium", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1236136345][
                  GeneralUtilities`Slice[9, 
                   Key["title"]]], "Mouse"], 
                ImageSize -> {{480.00000000000006`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                "consectetur animi nesciunt iure dolore \[DescendingEllipsis] \
", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1236136345][
                  GeneralUtilities`Slice[9, 
                   Key["body"]]], "Mouse"], 
                ImageSize -> {{480.00000000000006`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["1"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1236136345][
                  GeneralUtilities`Slice[10, 
                   Key["userId"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["10"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1236136345][
                  GeneralUtilities`Slice[10, 
                   Key["id"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["optio molestias id quia eum", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1236136345][
                  GeneralUtilities`Slice[10, 
                   Key["title"]]], "Mouse"], 
                ImageSize -> {{480.00000000000006`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                "quo et expedita modi cum officia vel magni \
\[DescendingEllipsis] ", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1236136345][
                  GeneralUtilities`Slice[10, 
                   Key["body"]]], "Mouse"], 
                ImageSize -> {{480.00000000000006`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["2"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1236136345][
                  GeneralUtilities`Slice[11, 
                   Key["userId"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["11"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1236136345][
                  GeneralUtilities`Slice[11, 
                   Key["id"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["et ea vero quia laudantium autem", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1236136345][
                  GeneralUtilities`Slice[11, 
                   Key["title"]]], "Mouse"], 
                ImageSize -> {{480.00000000000006`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                "delectus reiciendis molestiae occaecati non minima eveniet \
qui voluptatibus \[DescendingEllipsis] ", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1236136345][
                  GeneralUtilities`Slice[11, 
                   Key["body"]]], "Mouse"], 
                ImageSize -> {{480.00000000000006`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["2"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1236136345][
                  GeneralUtilities`Slice[12, 
                   Key["userId"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["12"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1236136345][
                  GeneralUtilities`Slice[12, 
                   Key["id"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["in quibusdam tempore odit est dolorem", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1236136345][
                  GeneralUtilities`Slice[12, 
                   Key["title"]]], "Mouse"], 
                ImageSize -> {{480.00000000000006`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["itaque id aut magnam \[DescendingEllipsis] ", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1236136345][
                  GeneralUtilities`Slice[12, 
                   Key["body"]]], "Mouse"], 
                ImageSize -> {{480.00000000000006`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["2"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1236136345][
                  GeneralUtilities`Slice[13, 
                   Key["userId"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["13"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1236136345][
                  GeneralUtilities`Slice[13, 
                   Key["id"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                "dolorum ut in voluptas mollitia et saepe quo animi", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1236136345][
                  GeneralUtilities`Slice[13, 
                   Key["title"]]], "Mouse"], 
                ImageSize -> {{480.00000000000006`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                "aut dicta possimus sint mollitia voluptas commodi quo \
doloremque \[DescendingEllipsis] ", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1236136345][
                  GeneralUtilities`Slice[13, 
                   Key["body"]]], "Mouse"], 
                ImageSize -> {{480.00000000000006`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["2"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1236136345][
                  GeneralUtilities`Slice[14, 
                   Key["userId"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["14"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1236136345][
                  GeneralUtilities`Slice[14, 
                   Key["id"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["voluptatem eligendi optio", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1236136345][
                  GeneralUtilities`Slice[14, 
                   Key["title"]]], "Mouse"], 
                ImageSize -> {{480.00000000000006`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                "fuga et accusamus dolorum perferendis illo voluptas \
\[DescendingEllipsis] ", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1236136345][
                  GeneralUtilities`Slice[14, 
                   Key["body"]]], "Mouse"], 
                ImageSize -> {{480.00000000000006`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["2"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1236136345][
                  GeneralUtilities`Slice[15, 
                   Key["userId"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["15"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1236136345][
                  GeneralUtilities`Slice[15, 
                   Key["id"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["eveniet quod temporibus", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1236136345][
                  GeneralUtilities`Slice[15, 
                   Key["title"]]], "Mouse"], 
                ImageSize -> {{480.00000000000006`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                "reprehenderit quos placeat \[DescendingEllipsis] ", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1236136345][
                  GeneralUtilities`Slice[15, 
                   Key["body"]]], "Mouse"], 
                ImageSize -> {{480.00000000000006`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["2"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1236136345][
                  GeneralUtilities`Slice[16, 
                   Key["userId"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["16"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1236136345][
                  GeneralUtilities`Slice[16, 
                   Key["id"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                "sint suscipit perspiciatis velit dolorum rerum ipsa \
laboriosam odio", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1236136345][
                  GeneralUtilities`Slice[16, 
                   Key["title"]]], "Mouse"], 
                ImageSize -> {{480.00000000000006`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                "suscipit nam nisi quo aperiam aut \[DescendingEllipsis] ", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1236136345][
                  GeneralUtilities`Slice[16, 
                   Key["body"]]], "Mouse"], 
                ImageSize -> {{480.00000000000006`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["2"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1236136345][
                  GeneralUtilities`Slice[17, 
                   Key["userId"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["17"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1236136345][
                  GeneralUtilities`Slice[17, 
                   Key["id"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                "fugit voluptas sed molestias voluptatem provident", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1236136345][
                  GeneralUtilities`Slice[17, 
                   Key["title"]]], "Mouse"], 
                ImageSize -> {{480.00000000000006`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                "eos voluptas et aut odit natus earum \[DescendingEllipsis] ", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1236136345][
                  GeneralUtilities`Slice[17, 
                   Key["body"]]], "Mouse"], 
                ImageSize -> {{480.00000000000006`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["2"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1236136345][
                  GeneralUtilities`Slice[18, 
                   Key["userId"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["18"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1236136345][
                  GeneralUtilities`Slice[18, 
                   Key["id"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["voluptate et itaque vero tempora molestiae", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1236136345][
                  GeneralUtilities`Slice[18, 
                   Key["title"]]], "Mouse"], 
                ImageSize -> {{480.00000000000006`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["eveniet quo quis \[DescendingEllipsis] ", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1236136345][
                  GeneralUtilities`Slice[18, 
                   Key["body"]]], "Mouse"], 
                ImageSize -> {{480.00000000000006`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["2"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1236136345][
                  GeneralUtilities`Slice[19, 
                   Key["userId"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["19"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1236136345][
                  GeneralUtilities`Slice[19, 
                   Key["id"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["adipisci placeat illum aut reiciendis qui", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1236136345][
                  GeneralUtilities`Slice[19, 
                   Key["title"]]], "Mouse"], 
                ImageSize -> {{480.00000000000006`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                "illum quis cupiditate provident sit magnam \
\[DescendingEllipsis] ", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1236136345][
                  GeneralUtilities`Slice[19, 
                   Key["body"]]], "Mouse"], 
                ImageSize -> {{480.00000000000006`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["2"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1236136345][
                  GeneralUtilities`Slice[20, 
                   Key["userId"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["20"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1236136345][
                  GeneralUtilities`Slice[20, 
                   Key["id"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["doloribus ad provident suscipit at", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1236136345][
                  GeneralUtilities`Slice[20, 
                   Key["title"]]], "Mouse"], 
                ImageSize -> {{480.00000000000006`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                "qui consequuntur ducimus possimus quisquam amet similique \
\[DescendingEllipsis] ", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1236136345][
                  GeneralUtilities`Slice[20, 
                   Key["body"]]], "Mouse"], 
                ImageSize -> {{480.00000000000006`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Deploy[
                 Mouseover[
                  Row[{
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.5]]], 
                    GrayLevel[0.5], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{0.56, 
                    1.031}, {6.429, 1.031}, {6.429, 60.967}, {0.56, 
                    60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{6.192899999999999, 
                    30.980699999999995`}, {42.4399, 0.7526999999999973}, {
                    42.4399, 8.209699999999994}, {16.432899999999997`, 
                    30.982699999999994`}, {42.4119, 53.6547}, {42.4399, 
                    61.244699999999995`}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{0.56, 
                    1.031}, {6.429, 1.031}, {6.429, 60.967}, {0.56, 
                    60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{6.192899999999999, 
                    30.980699999999995`}, {42.4399, 0.7526999999999973}, {
                    42.4399, 8.209699999999994}, {16.432899999999997`, 
                    30.982699999999994`}, {42.4119, 53.6547}, {42.4399, 
                    61.244699999999995`}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ + 
                    100 (-20), {1, 100 - -20 + 1}])}], 
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.3]]], 
                    GrayLevel[0.3], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5499, 30.980699999999995`}, {
                    36.7969, 0.7526999999999973}, {36.7969, 
                    8.209699999999994}, {10.7899, 30.982699999999994`}, {
                    36.7689, 53.6547}, {36.7969, 61.244699999999995`}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5499, 30.980699999999995`}, {
                    36.7969, 0.7526999999999973}, {36.7969, 
                    8.209699999999994}, {10.7899, 30.982699999999994`}, {
                    36.7689, 53.6547}, {36.7969, 61.244699999999995`}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ - 20, {
                    1, 100 - -20 + 1}])}], 
                    Pane[
                    Row[{"showing ", 1, "\[Dash]", 20, " of ", 
                    Style[
                    100, FontColor -> GrayLevel[0], FontWeight -> "Medium"]}, 
                    BaseStyle -> {
                    FontSize -> 8., FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]}], 150, ContentPadding -> False, 
                    Alignment -> {Center, Center}], 
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.3]]], 
                    GrayLevel[0.3], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5778000000000001, 
                    53.654399999999995`}, {26.5568, 30.982399999999995`}, {
                    0.5498000000000001, 8.209399999999995}, {
                    0.5498000000000001, 0.7523999999999944}, {
                    36.796800000000005`, 30.980399999999992`}, {
                    0.5498000000000001, 61.2454}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5778000000000001, 
                    53.654399999999995`}, {26.5568, 30.982399999999995`}, {
                    0.5498000000000001, 8.209399999999995}, {
                    0.5498000000000001, 0.7523999999999944}, {
                    36.796800000000005`, 30.980399999999992`}, {
                    0.5498000000000001, 61.2454}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ + 20, {
                    1, 100 - 20 + 1}])}], 
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.5]]], 
                    GrayLevel[0.5], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    36.571, 1.031}, {42.440999999999995`, 1.031}, {
                    42.440999999999995`, 60.967}, {36.571, 60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5598000000000001, 
                    53.788500000000006`}, {26.5668, 31.015500000000007`}, {
                    0.5878000000000001, 8.343500000000006}, {
                    0.5598000000000001, 0.7525000000000048}, {36.8068, 
                    31.017500000000005`}, {0.5598000000000001, 
                    61.24450000000001}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    36.571, 1.031}, {42.440999999999995`, 1.031}, {
                    42.440999999999995`, 60.967}, {36.571, 60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5598000000000001, 
                    53.788500000000006`}, {26.5668, 31.015500000000007`}, {
                    0.5878000000000001, 8.343500000000006}, {
                    0.5598000000000001, 0.7525000000000048}, {36.8068, 
                    31.017500000000005`}, {0.5598000000000001, 
                    61.24450000000001}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ + 
                    100 20, {1, 100 - 20 + 1}])}]}, "   "], 
                  Row[{
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.5]]], 
                    GrayLevel[0.5], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{0.56, 
                    1.031}, {6.429, 1.031}, {6.429, 60.967}, {0.56, 
                    60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{6.192899999999999, 
                    30.980699999999995`}, {42.4399, 0.7526999999999973}, {
                    42.4399, 8.209699999999994}, {16.432899999999997`, 
                    30.982699999999994`}, {42.4119, 53.6547}, {42.4399, 
                    61.244699999999995`}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{0.56, 
                    1.031}, {6.429, 1.031}, {6.429, 60.967}, {0.56, 
                    60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{6.192899999999999, 
                    30.980699999999995`}, {42.4399, 0.7526999999999973}, {
                    42.4399, 8.209699999999994}, {16.432899999999997`, 
                    30.982699999999994`}, {42.4119, 53.6547}, {42.4399, 
                    61.244699999999995`}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ + 
                    100 (-20), {1, 100 - -20 + 1}])}], 
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.3]]], 
                    GrayLevel[0.3], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5499, 30.980699999999995`}, {
                    36.7969, 0.7526999999999973}, {36.7969, 
                    8.209699999999994}, {10.7899, 30.982699999999994`}, {
                    36.7689, 53.6547}, {36.7969, 61.244699999999995`}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5499, 30.980699999999995`}, {
                    36.7969, 0.7526999999999973}, {36.7969, 
                    8.209699999999994}, {10.7899, 30.982699999999994`}, {
                    36.7689, 53.6547}, {36.7969, 61.244699999999995`}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ - 20, {
                    1, 100 - -20 + 1}])}], 
                    Pane[
                    Row[{"showing ", 1, "\[Dash]", 20, " of ", 
                    Style[
                    100, FontColor -> GrayLevel[0], FontWeight -> "Medium"]}, 
                    BaseStyle -> {
                    FontSize -> 8., FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]}], 150, ContentPadding -> False, 
                    Alignment -> {Center, Center}], 
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.3]]], 
                    GrayLevel[0.3], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5778000000000001, 
                    53.654399999999995`}, {26.5568, 30.982399999999995`}, {
                    0.5498000000000001, 8.209399999999995}, {
                    0.5498000000000001, 0.7523999999999944}, {
                    36.796800000000005`, 30.980399999999992`}, {
                    0.5498000000000001, 61.2454}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5778000000000001, 
                    53.654399999999995`}, {26.5568, 30.982399999999995`}, {
                    0.5498000000000001, 8.209399999999995}, {
                    0.5498000000000001, 0.7523999999999944}, {
                    36.796800000000005`, 30.980399999999992`}, {
                    0.5498000000000001, 61.2454}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ + 20, {
                    1, 100 - 20 + 1}])}], 
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.5]]], 
                    GrayLevel[0.5], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    36.571, 1.031}, {42.440999999999995`, 1.031}, {
                    42.440999999999995`, 60.967}, {36.571, 60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5598000000000001, 
                    53.788500000000006`}, {26.5668, 31.015500000000007`}, {
                    0.5878000000000001, 8.343500000000006}, {
                    0.5598000000000001, 0.7525000000000048}, {36.8068, 
                    31.017500000000005`}, {0.5598000000000001, 
                    61.24450000000001}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    36.571, 1.031}, {42.440999999999995`, 1.031}, {
                    42.440999999999995`, 60.967}, {36.571, 60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5598000000000001, 
                    53.788500000000006`}, {26.5668, 31.015500000000007`}, {
                    0.5878000000000001, 8.343500000000006}, {
                    0.5598000000000001, 0.7525000000000048}, {36.8068, 
                    31.017500000000005`}, {0.5598000000000001, 
                    61.24450000000001}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ + 
                    100 20, {1, 100 - 20 + 1}])}]}, "   "]]], Background -> 
                GrayLevel[0.98], Alignment -> {Left, Top}, 
                BaseStyle -> {ContextMenu -> {
                    MenuItem["Hide", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1236136345},
                     1, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 10 rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1236136345},
                     10, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 30 rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1236136345},
                     30, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 100 rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1236136345},
                     100, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show all", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1236136345},
                     100000000, {}]], MenuEvaluator -> Automatic]}}], 
               SpanFromLeft, SpanFromLeft, SpanFromLeft}}, 
             BaseStyle -> {ContextMenu -> {
                 MenuItem["Copy position to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Copy data to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], Delimiter, 
                 MenuItem["Paste position in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Paste data in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic]}, FontFamily -> "Verdana", 
               FontSize -> 12}, Alignment -> Left, RowMinHeight -> 1.5, 
             Dividers -> All, FrameStyle -> GrayLevel[0.85], 
             BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
            LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False,
             ShowAutoStyles -> False]], 
         TypeSystem`NestedGrid`PackagePrivate`initialQ = True, 
         TypeSystem`NestedGrid`PackagePrivate`self = $Failed}, 
        Dynamic[
         TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
         TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
            Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
            
            Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
              TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
              TypeSystem`NestedGrid`PackagePrivate`LookupCacheValue[
                TypeSystem`NestedGrid`PackagePrivate`$state$$["Data"]]}, 
             TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = 
              If[TypeSystem`NestedGrid`PackagePrivate`tmpData$ === 
                TypeSystem`NestedGrid`PackagePrivate`$NotCached, 
                TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1236136345][
                TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
               Not[
                FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
               TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
               TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
          TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
          TypeSystem`NestedGrid`PackagePrivate`$pos$$; If[
            FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
            TypeSystem`SparseGrid[
             TypeSystem`H["(data no longer present)"]], 
            If[GeneralUtilities`$DebugMode, 
             Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
               TypeSystem`NestedGrid`PackagePrivate`formatState[
               TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                TypeSystem`NestedGrid`PackagePrivate`$pos$$]}], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
         TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$pos$$}], 
        DynamicModuleValues :> {}], 
      TypeSystem`NestedGrid`PackagePrivate`$posCell$$, 
      TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
        TypeSystem`NestedGrid`PackagePrivate`alignBar[
        TypeSystem`NestedGrid`PackagePrivate`$state$$][
         TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
          TypeSystem`PackageScope`Pathbar[
          TypeSystem`NestedGrid`PackagePrivate`$path$$, 
           TypeSystem`NestedGrid`PackagePrivate`updateState[
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
            TypeSystem`NestedGrid`PackagePrivate`$path$$, 
            TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1236136345]]]], 
        TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
      TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Framed[
        Dynamic[
         Replace[
          MouseAnnotation[Null], {
          TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1236136345][Null] -> 
           "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1236136345][
             Pattern[TypeSystem`NestedGrid`PackagePrivate`path, 
              Blank[]]] :> (
            TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
             TypeSystem`NestedGrid`PackagePrivate`path; 
            TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
             TypeSystem`NestedGrid`PackagePrivate`path, 
              TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
           Spacer[10], Blank[] :> Spacer[10]}], TrackedSymbols :> {}], 
        FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
        Top, ImageSize -> {Automatic, 14}]}, 
     DynamicBox[
      ToBoxes[
       Column[
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, {
          TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
          TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`alignBar[
           TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}, {
         TypeSystem`NestedGrid`PackagePrivate`$topBar$$, 
          TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
          TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`alignBar[
           TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}], Spacings -> 
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, 
          0, {{}, {0, 0.05, 0}}]], StandardForm], 
      ImageSizeCache -> {1276., {338., 345.}}, 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     BaseStyle -> {LineBreakWithin -> False}, Deinitialization :> 
     TypeSystem`NestedGrid`PackagePrivate`deleteState[
      TypeSystem`NestedGrid`PackagePrivate`$state$$], 
     DynamicModuleValues :> {}, Initialization :> 
     Block[{$ContextPath = $ContextPath}, 
       Needs["TypeSystem`"]]], Deploy, DefaultBaseStyle -> "Deploy"]},
  "CopyTag",
  DisplayFunction->(#& ),
  InterpretationFunction->("Dataset[<>]"& )]], "Output",
 CellChangeTimes->{{3.763990822749146*^9, 3.7639908476431465`*^9}, {
   3.763990985592147*^9, 3.7639910112401457`*^9}, 3.763996508985955*^9, 
   3.7649679357158604`*^9, {3.7649686367835393`*^9, 3.764968650510541*^9}, 
   3.7649687555585775`*^9, 3.7651187694988194`*^9, 3.7730560146255074`*^9, 
   3.773076137955098*^9, 3.7735830196327405`*^9, {3.773583254542326*^9, 
   3.7735832708073807`*^9}},
 CellLabel->"Out[5]=",ExpressionUUID->"033e728a-b689-44ab-bc3f-c698e703c87a"]
}, Open  ]],

Cell["\<\
Requirement: WordCount[ ] all the words in the body of posts.

Start with...\
\>", "Text",
 CellChangeTimes->{{3.773056031783495*^9, 3.773056036638494*^9}, {
  3.7730560721200705`*^9, 3.773056104760023*^9}, {3.7730561441360493`*^9, 
  3.773056148313026*^9}},ExpressionUUID->"17cab103-6d96-43b6-ba30-\
7247d3ba8a52"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Dataset", "[", " ", 
   RowBox[{"get", "[", "\"\<posts\>\"", "]"}], " ", "]"}], "[", 
  RowBox[{"All", ",", 
   RowBox[{"{", "\"\<body\>\"", "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.773063804200059*^9, 3.7730638405050564`*^9}, {
  3.7735831453805947`*^9, 3.773583168264783*^9}},
 CellLabel->"In[6]:=",ExpressionUUID->"dd5a541b-33a7-454b-8781-95fe8a9a024e"],

Cell[BoxData[
 TemplateBox[{TagBox[
    DynamicModuleBox[{
     TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
      Data`UnorderedAssociation[
       "RowCount" -> 20, "Length" -> 100, "InitialType" -> TypeSystem`Vector[
          TypeSystem`Struct[{"body"}, {
            TypeSystem`Atom[String]}], 100], "Shape" -> 
        TypeSystem`PackageScope`HeaderShape[
          Association[{All, "body"} -> 1], 
          TypeSystem`PackageScope`Limited[
           TypeSystem`PackageScope`ColumnShape[
            TypeSystem`PackageScope`RowShape[
             Association[
             "body" -> TypeSystem`PackageScope`AtomShape[
               480.00000000000006`]]]], 20, {}]], "InitialData" -> 
        TypeSystem`PackageScope`CacheHandle[424404807], "Type" -> 
        TypeSystem`Vector[
          TypeSystem`Struct[{"body"}, {
            TypeSystem`Atom[String]}], 100], "HandleQ" -> True, "RowTarget" -> 
        20, "Data" -> TypeSystem`PackageScope`CacheHandle[424404807]], 
      TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
      TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 1, 
      TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
      DynamicModule[{
        TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
           Style[
            Grid[{{
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"body\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"body\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1667424463][{All, "body"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1667424463][
                  GeneralUtilities`Slice[All, "body"]], "Mouse"], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["quia et suscipit \[DescendingEllipsis] ", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1667424463][
                  GeneralUtilities`Slice[1, 
                   Key["body"]]], "Mouse"], 
                ImageSize -> {{480.00000000000006`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["est rerum tempore vitae \[DescendingEllipsis] ", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1667424463][
                  GeneralUtilities`Slice[2, 
                   Key["body"]]], "Mouse"], 
                ImageSize -> {{480.00000000000006`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["et iusto sed quo iure \[DescendingEllipsis] ", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1667424463][
                  GeneralUtilities`Slice[3, 
                   Key["body"]]], "Mouse"], 
                ImageSize -> {{480.00000000000006`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                "ullam et saepe reiciendis voluptatem adipisci \
\[DescendingEllipsis] ", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1667424463][
                  GeneralUtilities`Slice[4, 
                   Key["body"]]], "Mouse"], 
                ImageSize -> {{480.00000000000006`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                "repudiandae veniam quaerat sunt sed \[DescendingEllipsis] ", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1667424463][
                  GeneralUtilities`Slice[5, 
                   Key["body"]]], "Mouse"], 
                ImageSize -> {{480.00000000000006`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                "ut aspernatur corporis harum nihil quis provident sequi \
\[DescendingEllipsis] ", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1667424463][
                  GeneralUtilities`Slice[6, 
                   Key["body"]]], "Mouse"], 
                ImageSize -> {{480.00000000000006`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                "dolore placeat quibusdam ea quo vitae \[DescendingEllipsis] \
", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1667424463][
                  GeneralUtilities`Slice[7, 
                   Key["body"]]], "Mouse"], 
                ImageSize -> {{480.00000000000006`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                "dignissimos aperiam dolorem qui eum \[DescendingEllipsis] ", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1667424463][
                  GeneralUtilities`Slice[8, 
                   Key["body"]]], "Mouse"], 
                ImageSize -> {{480.00000000000006`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                "consectetur animi nesciunt iure dolore \[DescendingEllipsis] \
", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1667424463][
                  GeneralUtilities`Slice[9, 
                   Key["body"]]], "Mouse"], 
                ImageSize -> {{480.00000000000006`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                "quo et expedita modi cum officia vel magni \
\[DescendingEllipsis] ", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1667424463][
                  GeneralUtilities`Slice[10, 
                   Key["body"]]], "Mouse"], 
                ImageSize -> {{480.00000000000006`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                "delectus reiciendis molestiae occaecati non minima eveniet \
qui voluptatibus \[DescendingEllipsis] ", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1667424463][
                  GeneralUtilities`Slice[11, 
                   Key["body"]]], "Mouse"], 
                ImageSize -> {{480.00000000000006`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["itaque id aut magnam \[DescendingEllipsis] ", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1667424463][
                  GeneralUtilities`Slice[12, 
                   Key["body"]]], "Mouse"], 
                ImageSize -> {{480.00000000000006`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                "aut dicta possimus sint mollitia voluptas commodi quo \
doloremque \[DescendingEllipsis] ", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1667424463][
                  GeneralUtilities`Slice[13, 
                   Key["body"]]], "Mouse"], 
                ImageSize -> {{480.00000000000006`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                "fuga et accusamus dolorum perferendis illo voluptas \
\[DescendingEllipsis] ", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1667424463][
                  GeneralUtilities`Slice[14, 
                   Key["body"]]], "Mouse"], 
                ImageSize -> {{480.00000000000006`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                "reprehenderit quos placeat \[DescendingEllipsis] ", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1667424463][
                  GeneralUtilities`Slice[15, 
                   Key["body"]]], "Mouse"], 
                ImageSize -> {{480.00000000000006`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                "suscipit nam nisi quo aperiam aut \[DescendingEllipsis] ", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1667424463][
                  GeneralUtilities`Slice[16, 
                   Key["body"]]], "Mouse"], 
                ImageSize -> {{480.00000000000006`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                "eos voluptas et aut odit natus earum \[DescendingEllipsis] ", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1667424463][
                  GeneralUtilities`Slice[17, 
                   Key["body"]]], "Mouse"], 
                ImageSize -> {{480.00000000000006`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["eveniet quo quis \[DescendingEllipsis] ", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1667424463][
                  GeneralUtilities`Slice[18, 
                   Key["body"]]], "Mouse"], 
                ImageSize -> {{480.00000000000006`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                "illum quis cupiditate provident sit magnam \
\[DescendingEllipsis] ", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1667424463][
                  GeneralUtilities`Slice[19, 
                   Key["body"]]], "Mouse"], 
                ImageSize -> {{480.00000000000006`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                "qui consequuntur ducimus possimus quisquam amet similique \
\[DescendingEllipsis] ", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1667424463][
                  GeneralUtilities`Slice[20, 
                   Key["body"]]], "Mouse"], 
                ImageSize -> {{480.00000000000006`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Deploy[
                 Mouseover[
                  Row[{
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.5]]], 
                    GrayLevel[0.5], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{0.56, 
                    1.031}, {6.429, 1.031}, {6.429, 60.967}, {0.56, 
                    60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{6.192899999999999, 
                    30.980699999999995`}, {42.4399, 0.7526999999999973}, {
                    42.4399, 8.209699999999994}, {16.432899999999997`, 
                    30.982699999999994`}, {42.4119, 53.6547}, {42.4399, 
                    61.244699999999995`}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{0.56, 
                    1.031}, {6.429, 1.031}, {6.429, 60.967}, {0.56, 
                    60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{6.192899999999999, 
                    30.980699999999995`}, {42.4399, 0.7526999999999973}, {
                    42.4399, 8.209699999999994}, {16.432899999999997`, 
                    30.982699999999994`}, {42.4119, 53.6547}, {42.4399, 
                    61.244699999999995`}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ + 
                    100 (-20), {1, 100 - -20 + 1}])}], 
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.3]]], 
                    GrayLevel[0.3], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5499, 30.980699999999995`}, {
                    36.7969, 0.7526999999999973}, {36.7969, 
                    8.209699999999994}, {10.7899, 30.982699999999994`}, {
                    36.7689, 53.6547}, {36.7969, 61.244699999999995`}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5499, 30.980699999999995`}, {
                    36.7969, 0.7526999999999973}, {36.7969, 
                    8.209699999999994}, {10.7899, 30.982699999999994`}, {
                    36.7689, 53.6547}, {36.7969, 61.244699999999995`}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ - 20, {
                    1, 100 - -20 + 1}])}], 
                    Pane[
                    Row[{"showing ", 1, "\[Dash]", 20, " of ", 
                    Style[
                    100, FontColor -> GrayLevel[0], FontWeight -> "Medium"]}, 
                    BaseStyle -> {
                    FontSize -> 8., FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]}], 150, ContentPadding -> False, 
                    Alignment -> {Center, Center}], 
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.3]]], 
                    GrayLevel[0.3], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5778000000000001, 
                    53.654399999999995`}, {26.5568, 30.982399999999995`}, {
                    0.5498000000000001, 8.209399999999995}, {
                    0.5498000000000001, 0.7523999999999944}, {
                    36.796800000000005`, 30.980399999999992`}, {
                    0.5498000000000001, 61.2454}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5778000000000001, 
                    53.654399999999995`}, {26.5568, 30.982399999999995`}, {
                    0.5498000000000001, 8.209399999999995}, {
                    0.5498000000000001, 0.7523999999999944}, {
                    36.796800000000005`, 30.980399999999992`}, {
                    0.5498000000000001, 61.2454}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ + 20, {
                    1, 100 - 20 + 1}])}], 
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.5]]], 
                    GrayLevel[0.5], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    36.571, 1.031}, {42.440999999999995`, 1.031}, {
                    42.440999999999995`, 60.967}, {36.571, 60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5598000000000001, 
                    53.788500000000006`}, {26.5668, 31.015500000000007`}, {
                    0.5878000000000001, 8.343500000000006}, {
                    0.5598000000000001, 0.7525000000000048}, {36.8068, 
                    31.017500000000005`}, {0.5598000000000001, 
                    61.24450000000001}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    36.571, 1.031}, {42.440999999999995`, 1.031}, {
                    42.440999999999995`, 60.967}, {36.571, 60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5598000000000001, 
                    53.788500000000006`}, {26.5668, 31.015500000000007`}, {
                    0.5878000000000001, 8.343500000000006}, {
                    0.5598000000000001, 0.7525000000000048}, {36.8068, 
                    31.017500000000005`}, {0.5598000000000001, 
                    61.24450000000001}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ + 
                    100 20, {1, 100 - 20 + 1}])}]}, "   "], 
                  Row[{
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.5]]], 
                    GrayLevel[0.5], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{0.56, 
                    1.031}, {6.429, 1.031}, {6.429, 60.967}, {0.56, 
                    60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{6.192899999999999, 
                    30.980699999999995`}, {42.4399, 0.7526999999999973}, {
                    42.4399, 8.209699999999994}, {16.432899999999997`, 
                    30.982699999999994`}, {42.4119, 53.6547}, {42.4399, 
                    61.244699999999995`}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{0.56, 
                    1.031}, {6.429, 1.031}, {6.429, 60.967}, {0.56, 
                    60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{6.192899999999999, 
                    30.980699999999995`}, {42.4399, 0.7526999999999973}, {
                    42.4399, 8.209699999999994}, {16.432899999999997`, 
                    30.982699999999994`}, {42.4119, 53.6547}, {42.4399, 
                    61.244699999999995`}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ + 
                    100 (-20), {1, 100 - -20 + 1}])}], 
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.3]]], 
                    GrayLevel[0.3], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5499, 30.980699999999995`}, {
                    36.7969, 0.7526999999999973}, {36.7969, 
                    8.209699999999994}, {10.7899, 30.982699999999994`}, {
                    36.7689, 53.6547}, {36.7969, 61.244699999999995`}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5499, 30.980699999999995`}, {
                    36.7969, 0.7526999999999973}, {36.7969, 
                    8.209699999999994}, {10.7899, 30.982699999999994`}, {
                    36.7689, 53.6547}, {36.7969, 61.244699999999995`}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ - 20, {
                    1, 100 - -20 + 1}])}], 
                    Pane[
                    Row[{"showing ", 1, "\[Dash]", 20, " of ", 
                    Style[
                    100, FontColor -> GrayLevel[0], FontWeight -> "Medium"]}, 
                    BaseStyle -> {
                    FontSize -> 8., FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]}], 150, ContentPadding -> False, 
                    Alignment -> {Center, Center}], 
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.3]]], 
                    GrayLevel[0.3], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5778000000000001, 
                    53.654399999999995`}, {26.5568, 30.982399999999995`}, {
                    0.5498000000000001, 8.209399999999995}, {
                    0.5498000000000001, 0.7523999999999944}, {
                    36.796800000000005`, 30.980399999999992`}, {
                    0.5498000000000001, 61.2454}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5778000000000001, 
                    53.654399999999995`}, {26.5568, 30.982399999999995`}, {
                    0.5498000000000001, 8.209399999999995}, {
                    0.5498000000000001, 0.7523999999999944}, {
                    36.796800000000005`, 30.980399999999992`}, {
                    0.5498000000000001, 61.2454}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ + 20, {
                    1, 100 - 20 + 1}])}], 
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.5]]], 
                    GrayLevel[0.5], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    36.571, 1.031}, {42.440999999999995`, 1.031}, {
                    42.440999999999995`, 60.967}, {36.571, 60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5598000000000001, 
                    53.788500000000006`}, {26.5668, 31.015500000000007`}, {
                    0.5878000000000001, 8.343500000000006}, {
                    0.5598000000000001, 0.7525000000000048}, {36.8068, 
                    31.017500000000005`}, {0.5598000000000001, 
                    61.24450000000001}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    36.571, 1.031}, {42.440999999999995`, 1.031}, {
                    42.440999999999995`, 60.967}, {36.571, 60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5598000000000001, 
                    53.788500000000006`}, {26.5668, 31.015500000000007`}, {
                    0.5878000000000001, 8.343500000000006}, {
                    0.5598000000000001, 0.7525000000000048}, {36.8068, 
                    31.017500000000005`}, {0.5598000000000001, 
                    61.24450000000001}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ + 
                    100 20, {1, 100 - 20 + 1}])}]}, "   "]]], Background -> 
                GrayLevel[0.98], Alignment -> {Left, Top}, 
                BaseStyle -> {ContextMenu -> {
                    MenuItem["Hide", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1667424463},
                     1, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 10 rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1667424463},
                     10, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 30 rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1667424463},
                     30, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 100 rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1667424463},
                     100, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show all", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1667424463},
                     100000000, {}]], MenuEvaluator -> Automatic]}}]}}, 
             BaseStyle -> {ContextMenu -> {
                 MenuItem["Copy position to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Copy data to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], Delimiter, 
                 MenuItem["Paste position in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Paste data in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic]}, FontFamily -> "Verdana", 
               FontSize -> 12}, Alignment -> Left, RowMinHeight -> 1.5, 
             Dividers -> All, FrameStyle -> GrayLevel[0.85], 
             BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
            LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False,
             ShowAutoStyles -> False]], 
         TypeSystem`NestedGrid`PackagePrivate`initialQ = True, 
         TypeSystem`NestedGrid`PackagePrivate`self = $Failed}, 
        Dynamic[
         TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
         TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
            Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
            
            Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
              TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
              TypeSystem`NestedGrid`PackagePrivate`LookupCacheValue[
                TypeSystem`NestedGrid`PackagePrivate`$state$$["Data"]]}, 
             TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = 
              If[TypeSystem`NestedGrid`PackagePrivate`tmpData$ === 
                TypeSystem`NestedGrid`PackagePrivate`$NotCached, 
                TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1667424463][
                TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
               Not[
                FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
               TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
               TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
          TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
          TypeSystem`NestedGrid`PackagePrivate`$pos$$; If[
            FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
            TypeSystem`SparseGrid[
             TypeSystem`H["(data no longer present)"]], 
            If[GeneralUtilities`$DebugMode, 
             Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
               TypeSystem`NestedGrid`PackagePrivate`formatState[
               TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                TypeSystem`NestedGrid`PackagePrivate`$pos$$]}], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
         TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$pos$$}], 
        DynamicModuleValues :> {}], 
      TypeSystem`NestedGrid`PackagePrivate`$posCell$$, 
      TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
        TypeSystem`NestedGrid`PackagePrivate`alignBar[
        TypeSystem`NestedGrid`PackagePrivate`$state$$][
         TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
          TypeSystem`PackageScope`Pathbar[
          TypeSystem`NestedGrid`PackagePrivate`$path$$, 
           TypeSystem`NestedGrid`PackagePrivate`updateState[
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
            TypeSystem`NestedGrid`PackagePrivate`$path$$, 
            TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1667424463]]]], 
        TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
      TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Framed[
        Dynamic[
         Replace[
          MouseAnnotation[Null], {
          TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1667424463][Null] -> 
           "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1667424463][
             Pattern[TypeSystem`NestedGrid`PackagePrivate`path, 
              Blank[]]] :> (
            TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
             TypeSystem`NestedGrid`PackagePrivate`path; 
            TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
             TypeSystem`NestedGrid`PackagePrivate`path, 
              TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
           Spacer[10], Blank[] :> Spacer[10]}], TrackedSymbols :> {}], 
        FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
        Top, ImageSize -> {Automatic, 14}]}, 
     DynamicBox[
      ToBoxes[
       Column[
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, {
          TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
          TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`alignBar[
           TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}, {
         TypeSystem`NestedGrid`PackagePrivate`$topBar$$, 
          TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
          TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`alignBar[
           TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}], Spacings -> 
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, 
          0, {{}, {0, 0.05, 0}}]], StandardForm], 
      ImageSizeCache -> {619., {338., 345.}}, 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     BaseStyle -> {LineBreakWithin -> False}, Deinitialization :> 
     TypeSystem`NestedGrid`PackagePrivate`deleteState[
      TypeSystem`NestedGrid`PackagePrivate`$state$$], 
     DynamicModuleValues :> {}, Initialization :> 
     Block[{$ContextPath = $ContextPath}, 
       Needs["TypeSystem`"]]], Deploy, DefaultBaseStyle -> "Deploy"]},
  "CopyTag",
  DisplayFunction->(#& ),
  InterpretationFunction->("Dataset[<>]"& )]], "Output",
 CellChangeTimes->{{3.773063805074096*^9, 3.7730638415640945`*^9}, 
   3.773076142370095*^9, {3.7735831482825947`*^9, 3.7735831696077824`*^9}, 
   3.7735832772803617`*^9},
 CellLabel->"Out[6]=",ExpressionUUID->"398d45c9-1129-4729-81ba-12cc35c0fc35"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"Dataset", "[", " ", 
   RowBox[{"get", "[", "\"\<posts\>\"", "]"}], " ", "]"}], "[", 
  RowBox[{"Union", ",", "\"\<body\>\"", ",", "Head"}], "]"}]], "Input",Express\
ionUUID->"eda86b97-100a-4618-9d27-1c357e2bde77"],

Cell["Finish with...", "Text",
 CellChangeTimes->{{3.77305615707905*^9, 
  3.7730561614470296`*^9}},ExpressionUUID->"fba2f950-e855-4652-8cc8-\
500b5cc6aa06"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"<|", 
     RowBox[{
      RowBox[{"\"\<word\>\"", "\[Rule]", 
       RowBox[{"#", "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], ",", 
      RowBox[{"\"\<count\>\"", "\[Rule]", 
       RowBox[{"#", "[", 
        RowBox[{"[", "2", "]"}], "]"}]}]}], "|>"}], "&"}], "/@", 
   RowBox[{"Transpose", "[", " ", 
    RowBox[{"Normal", "[", " ", 
     RowBox[{
      RowBox[{"Dataset", "[", " ", 
       RowBox[{"get", "[", "\"\<posts\>\"", "]"}], " ", "]"}], "[", 
      RowBox[{
       RowBox[{
       "StringJoin", "/*", "WordCounts", "/*", "Sort", "/*", "Reverse", "/*", 
        RowBox[{"Query", "[", 
         RowBox[{"{", 
          RowBox[{"Keys", ",", "Values"}], "}"}], "]"}]}], ",", 
       "\"\<body\>\""}], "]"}], " ", "]"}], " ", "]"}]}], "//", 
  "Short"}]], "Input",
 CellChangeTimes->{{3.7735840528438187`*^9, 3.773584181645839*^9}, {
  3.7735842192588177`*^9, 3.7735843349519024`*^9}, {3.7735843722999325`*^9, 
  3.773584458121947*^9}},
 CellLabel->
  "In[705]:=",ExpressionUUID->"0c6ca9d8-8273-4c7d-bccb-b3f5b791739f"],

Cell[BoxData[
 TagBox[
  RowBox[{"{", 
   RowBox[{
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{"\<\"word\"\>", "\[Rule]", "\<\"et\"\>"}], ",", 
      RowBox[{"\<\"count\"\>", "\[Rule]", "109"}]}], "\[RightAssociation]"}], 
    ",", 
    RowBox[{"\[LeftSkeleton]", "279", "\[RightSkeleton]"}], ",", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{"\<\"word\"\>", "\[Rule]", "\<\"quiacupiditate\"\>"}], ",", 
      RowBox[{"\<\"count\"\>", "\[Rule]", "1"}]}], "\[RightAssociation]"}]}], 
   "}"}],
  Short]], "Output",
 CellChangeTimes->{{3.7735840658557796`*^9, 3.7735841825317874`*^9}, {
   3.7735842215208173`*^9, 3.7735843359709044`*^9}, 3.7735843746529045`*^9, {
   3.773584416807903*^9, 3.773584428601939*^9}, 3.7735844600799446`*^9, 
   3.7735930405688925`*^9},
 CellLabel->
  "Out[705]//Short=",ExpressionUUID->"6bc98e99-b459-4e88-8ac7-ee71798db631"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Take", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"<|", 
      RowBox[{
       RowBox[{"\"\<word\>\"", "\[Rule]", 
        RowBox[{"#", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], ",", 
       RowBox[{"\"\<count\>\"", "\[Rule]", 
        RowBox[{"#", "[", 
         RowBox[{"[", "2", "]"}], "]"}]}]}], "|>"}], "&"}], "/@", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"Dataset", "[", " ", 
              RowBox[{"get", "[", "\"\<posts\>\"", "]"}], " ", "]"}], "[", 
             RowBox[{"All", ",", "\"\<body\>\""}], "]"}], "//", "Normal"}], "//",
            "StringJoin"}], "//", "WordCounts"}], "//", "Sort"}], "//", 
        "Reverse"}], "//", 
       RowBox[{"Query", "[", 
        RowBox[{"{", 
         RowBox[{"Keys", ",", "Values"}], "}"}], "]"}]}], "//", "Transpose"}],
      ")"}]}], ",", "\[IndentingNewLine]", "10"}], "]"}]], "Input",
 CellChangeTimes->{{3.763995225795556*^9, 3.7639952328205557`*^9}, 
   3.763995309986555*^9, {3.7639955017720156`*^9, 3.763995893949298*^9}, {
   3.7639959378542986`*^9, 3.7639960456999545`*^9}, 3.763996209110954*^9, 
   3.763996250705954*^9, {3.763996343092957*^9, 3.7639963461829557`*^9}, {
   3.764968764033538*^9, 3.764968766342574*^9}, {3.766083119812396*^9, 
   3.766083122576406*^9}, {3.7735935069111834`*^9, 3.7735935182072144`*^9}},
 CellLabel->
  "In[722]:=",ExpressionUUID->"9d8b3959-2e32-453c-bef6-6fe2ae131214"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"word\"\>", "\[Rule]", "\<\"et\"\>"}], ",", 
     RowBox[{"\<\"count\"\>", "\[Rule]", "109"}]}], "\[RightAssociation]"}], 
   ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"word\"\>", "\[Rule]", "\<\"qui\"\>"}], ",", 
     RowBox[{"\<\"count\"\>", "\[Rule]", "57"}]}], "\[RightAssociation]"}], 
   ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"word\"\>", "\[Rule]", "\<\"aut\"\>"}], ",", 
     RowBox[{"\<\"count\"\>", "\[Rule]", "56"}]}], "\[RightAssociation]"}], 
   ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"word\"\>", "\[Rule]", "\<\"ut\"\>"}], ",", 
     RowBox[{"\<\"count\"\>", "\[Rule]", "49"}]}], "\[RightAssociation]"}], 
   ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"word\"\>", "\[Rule]", "\<\"est\"\>"}], ",", 
     RowBox[{"\<\"count\"\>", "\[Rule]", "39"}]}], "\[RightAssociation]"}], 
   ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"word\"\>", "\[Rule]", "\<\"quia\"\>"}], ",", 
     RowBox[{"\<\"count\"\>", "\[Rule]", "36"}]}], "\[RightAssociation]"}], 
   ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"word\"\>", "\[Rule]", "\<\"voluptatem\"\>"}], ",", 
     RowBox[{"\<\"count\"\>", "\[Rule]", "35"}]}], "\[RightAssociation]"}], 
   ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"word\"\>", "\[Rule]", "\<\"molestiae\"\>"}], ",", 
     RowBox[{"\<\"count\"\>", "\[Rule]", "33"}]}], "\[RightAssociation]"}], 
   ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"word\"\>", "\[Rule]", "\<\"rerum\"\>"}], ",", 
     RowBox[{"\<\"count\"\>", "\[Rule]", "31"}]}], "\[RightAssociation]"}], 
   ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"word\"\>", "\[Rule]", "\<\"omnis\"\>"}], ",", 
     RowBox[{"\<\"count\"\>", "\[Rule]", "30"}]}], "\[RightAssociation]"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.7649687737855453`*^9, 3.7651187750698557`*^9, 
  3.7660831249113812`*^9, 3.7730561854472094`*^9, 3.7730761464641333`*^9, 
  3.7735833068093615`*^9, 3.7735935194461823`*^9},
 CellLabel->
  "Out[722]=",ExpressionUUID->"11f48aee-67a6-491f-a214-27a9d0994f82"]
}, Open  ]],

Cell[CellGroupData[{

Cell["build word count API", "Subsubsection",
 CellChangeTimes->{{3.763996551541955*^9, 
  3.763996556086956*^9}},ExpressionUUID->"5de9546f-7886-44bd-a320-\
bce3fc23c8a7"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"ClearAll", "[", "api", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"api", "=", " ", 
   RowBox[{"APIFunction", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"\"\<part\>\"", "\[Rule]", "\"\<String\>\""}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"\"\<n\>\"", "\[Rule]", "\"\<Integer\>\""}]}], 
      "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"Function", "[", "\[IndentingNewLine]", 
      RowBox[{"Take", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"<|", 
           RowBox[{
            RowBox[{"\"\<word\>\"", "\[Rule]", 
             RowBox[{"#", "[", 
              RowBox[{"[", "1", "]"}], "]"}]}], ",", 
            RowBox[{"\"\<count\>\"", "\[Rule]", 
             RowBox[{"#", "[", 
              RowBox[{"[", "2", "]"}], "]"}]}]}], "|>"}], "&"}], "/@", 
         RowBox[{"Transpose", "[", " ", 
          RowBox[{"Normal", "[", " ", 
           RowBox[{
            RowBox[{"Dataset", "[", " ", 
             RowBox[{"get", "[", "\"\<posts\>\"", "]"}], " ", "]"}], "[", 
            RowBox[{
             RowBox[{
             "StringJoin", "/*", "WordCounts", "/*", "Sort", "/*", "Reverse", 
              "/*", 
              RowBox[{"Query", "[", 
               RowBox[{"{", 
                RowBox[{"Keys", ",", "Values"}], "}"}], "]"}]}], ",", 
             "#part"}], "]"}], " ", "]"}], " ", "]"}]}], ",", 
        "\[IndentingNewLine]", "#n"}], "]"}], "\[IndentingNewLine]", "]"}], 
     ",", "\[IndentingNewLine]", " ", "\"\<JSON\>\""}], "\[IndentingNewLine]",
     "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"api", "[", 
  RowBox[{"<|", 
   RowBox[{
    RowBox[{"\"\<part\>\"", "\[Rule]", "\"\<body\>\""}], ",", 
    RowBox[{"\"\<n\>\"", "\[Rule]", "10"}]}], "|>"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"%", "//", "Dataset"}]}], "Input",
 CellChangeTimes->{{3.763901121307186*^9, 3.763901256902187*^9}, {
   3.763916236533563*^9, 3.7639162926155634`*^9}, {3.763919066994918*^9, 
   3.7639190671439037`*^9}, {3.7639844482761064`*^9, 
   3.7639845702051067`*^9}, {3.7639942414674144`*^9, 3.763994245901416*^9}, {
   3.763996576020953*^9, 3.763996627055953*^9}, {3.7639966904399543`*^9, 
   3.763996721484954*^9}, 3.7649687965092587`*^9, {3.773056246227211*^9, 
   3.773056246518174*^9}, 3.7735844701479397`*^9, {3.773593647666206*^9, 
   3.7735936828921976`*^9}},
 CellLabel->
  "In[731]:=",ExpressionUUID->"33316fcb-ee85-4eb1-8cbe-de517b8327cb"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"word\"\>", "\[Rule]", "\<\"et\"\>"}], ",", 
     RowBox[{"\<\"count\"\>", "\[Rule]", "109"}]}], "\[RightAssociation]"}], 
   ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"word\"\>", "\[Rule]", "\<\"qui\"\>"}], ",", 
     RowBox[{"\<\"count\"\>", "\[Rule]", "57"}]}], "\[RightAssociation]"}], 
   ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"word\"\>", "\[Rule]", "\<\"aut\"\>"}], ",", 
     RowBox[{"\<\"count\"\>", "\[Rule]", "56"}]}], "\[RightAssociation]"}], 
   ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"word\"\>", "\[Rule]", "\<\"ut\"\>"}], ",", 
     RowBox[{"\<\"count\"\>", "\[Rule]", "49"}]}], "\[RightAssociation]"}], 
   ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"word\"\>", "\[Rule]", "\<\"est\"\>"}], ",", 
     RowBox[{"\<\"count\"\>", "\[Rule]", "39"}]}], "\[RightAssociation]"}], 
   ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"word\"\>", "\[Rule]", "\<\"quia\"\>"}], ",", 
     RowBox[{"\<\"count\"\>", "\[Rule]", "36"}]}], "\[RightAssociation]"}], 
   ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"word\"\>", "\[Rule]", "\<\"voluptatem\"\>"}], ",", 
     RowBox[{"\<\"count\"\>", "\[Rule]", "35"}]}], "\[RightAssociation]"}], 
   ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"word\"\>", "\[Rule]", "\<\"molestiae\"\>"}], ",", 
     RowBox[{"\<\"count\"\>", "\[Rule]", "33"}]}], "\[RightAssociation]"}], 
   ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"word\"\>", "\[Rule]", "\<\"rerum\"\>"}], ",", 
     RowBox[{"\<\"count\"\>", "\[Rule]", "31"}]}], "\[RightAssociation]"}], 
   ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"word\"\>", "\[Rule]", "\<\"omnis\"\>"}], ",", 
     RowBox[{"\<\"count\"\>", "\[Rule]", "30"}]}], "\[RightAssociation]"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.7639967126209564`*^9, 3.7639967224229536`*^9}, 
   3.764968852221259*^9, 3.7651188843078623`*^9, 3.7660832142531414`*^9, 
   3.7730562481981907`*^9, 3.773076147460094*^9, 3.773233721443843*^9, 
   3.7735844807419395`*^9, {3.7735936700631948`*^9, 3.7735936839242315`*^9}},
 CellLabel->
  "Out[733]=",ExpressionUUID->"4777b3b8-fab8-487a-a63c-82b916989a78"],

Cell[BoxData[
 TemplateBox[{TagBox[
    DynamicModuleBox[{
     TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
      Data`UnorderedAssociation[
       "RowCount" -> 10, "Length" -> 10, "InitialType" -> TypeSystem`Vector[
          TypeSystem`Struct[{"word", "count"}, {
            TypeSystem`Atom[String], 
            TypeSystem`Atom[Integer]}], 10], "Shape" -> 
        TypeSystem`PackageScope`HeaderShape[
          Association[{All, "word"} -> 1, {All, "count"} -> 1], 
          TypeSystem`PackageScope`Limited[
           TypeSystem`PackageScope`ColumnShape[
            TypeSystem`PackageScope`RowShape[
             Association[
             "word" -> TypeSystem`PackageScope`AtomShape[96.00000000000001], 
              "count" -> TypeSystem`PackageScope`AtomShape[34]]]], 10, {}]], 
        "InitialData" -> TypeSystem`PackageScope`CacheHandle[1723877147], 
        "Type" -> TypeSystem`Vector[
          TypeSystem`Struct[{"word", "count"}, {
            TypeSystem`Atom[String], 
            TypeSystem`Atom[Integer]}], 10], "HandleQ" -> True, "RowTarget" -> 
        20, "Data" -> TypeSystem`PackageScope`CacheHandle[1723877147]], 
      TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
      TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 1, 
      TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
      DynamicModule[{
        TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
           Style[
            Grid[{{
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"word\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"word\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1482407769][{All, "word"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1482407769][
                  GeneralUtilities`Slice[All, "word"]], "Mouse"], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"count\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"count\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1482407769][{All, "count"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1482407769][
                  GeneralUtilities`Slice[All, "count"]], "Mouse"], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["et", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1482407769][
                  GeneralUtilities`Slice[1, 
                   Key["word"]]], "Mouse"], 
                ImageSize -> {{96.00000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["109"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1482407769][
                  GeneralUtilities`Slice[1, 
                   Key["count"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["qui", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1482407769][
                  GeneralUtilities`Slice[2, 
                   Key["word"]]], "Mouse"], 
                ImageSize -> {{96.00000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["57"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1482407769][
                  GeneralUtilities`Slice[2, 
                   Key["count"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["aut", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1482407769][
                  GeneralUtilities`Slice[3, 
                   Key["word"]]], "Mouse"], 
                ImageSize -> {{96.00000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["56"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1482407769][
                  GeneralUtilities`Slice[3, 
                   Key["count"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["ut", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1482407769][
                  GeneralUtilities`Slice[4, 
                   Key["word"]]], "Mouse"], 
                ImageSize -> {{96.00000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["49"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1482407769][
                  GeneralUtilities`Slice[4, 
                   Key["count"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["est", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1482407769][
                  GeneralUtilities`Slice[5, 
                   Key["word"]]], "Mouse"], 
                ImageSize -> {{96.00000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["39"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1482407769][
                  GeneralUtilities`Slice[5, 
                   Key["count"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["quia", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1482407769][
                  GeneralUtilities`Slice[6, 
                   Key["word"]]], "Mouse"], 
                ImageSize -> {{96.00000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["36"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1482407769][
                  GeneralUtilities`Slice[6, 
                   Key["count"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["voluptatem", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1482407769][
                  GeneralUtilities`Slice[7, 
                   Key["word"]]], "Mouse"], 
                ImageSize -> {{96.00000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["35"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1482407769][
                  GeneralUtilities`Slice[7, 
                   Key["count"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["molestiae", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1482407769][
                  GeneralUtilities`Slice[8, 
                   Key["word"]]], "Mouse"], 
                ImageSize -> {{96.00000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["33"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1482407769][
                  GeneralUtilities`Slice[8, 
                   Key["count"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["rerum", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1482407769][
                  GeneralUtilities`Slice[9, 
                   Key["word"]]], "Mouse"], 
                ImageSize -> {{96.00000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["31"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1482407769][
                  GeneralUtilities`Slice[9, 
                   Key["count"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["omnis", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1482407769][
                  GeneralUtilities`Slice[10, 
                   Key["word"]]], "Mouse"], 
                ImageSize -> {{96.00000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["30"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1482407769][
                  GeneralUtilities`Slice[10, 
                   Key["count"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}}, BaseStyle -> {ContextMenu -> {
                 MenuItem["Copy position to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Copy data to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], Delimiter, 
                 MenuItem["Paste position in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Paste data in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic]}, FontFamily -> "Verdana", 
               FontSize -> 12}, Alignment -> Left, RowMinHeight -> 1.5, 
             Dividers -> All, FrameStyle -> GrayLevel[0.85], 
             BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
            LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False,
             ShowAutoStyles -> False]], 
         TypeSystem`NestedGrid`PackagePrivate`initialQ = True, 
         TypeSystem`NestedGrid`PackagePrivate`self = $Failed}, 
        Dynamic[
         TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
         TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
            Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
            
            Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
              TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
              TypeSystem`NestedGrid`PackagePrivate`LookupCacheValue[
                TypeSystem`NestedGrid`PackagePrivate`$state$$["Data"]]}, 
             TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = 
              If[TypeSystem`NestedGrid`PackagePrivate`tmpData$ === 
                TypeSystem`NestedGrid`PackagePrivate`$NotCached, 
                TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1482407769][
                TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
               Not[
                FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
               TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
               TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
          TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
          TypeSystem`NestedGrid`PackagePrivate`$pos$$; If[
            FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
            TypeSystem`SparseGrid[
             TypeSystem`H["(data no longer present)"]], 
            If[GeneralUtilities`$DebugMode, 
             Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
               TypeSystem`NestedGrid`PackagePrivate`formatState[
               TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                TypeSystem`NestedGrid`PackagePrivate`$pos$$]}], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
         TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$pos$$}], 
        DynamicModuleValues :> {}], 
      TypeSystem`NestedGrid`PackagePrivate`$posCell$$, 
      TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
        TypeSystem`NestedGrid`PackagePrivate`alignBar[
        TypeSystem`NestedGrid`PackagePrivate`$state$$][
         TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
          TypeSystem`PackageScope`Pathbar[
          TypeSystem`NestedGrid`PackagePrivate`$path$$, 
           TypeSystem`NestedGrid`PackagePrivate`updateState[
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
            TypeSystem`NestedGrid`PackagePrivate`$path$$, 
            TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1482407769]]]], 
        TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
      TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Framed[
        Dynamic[
         Replace[
          MouseAnnotation[Null], {
          TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1482407769][Null] -> 
           "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1482407769][
             Pattern[TypeSystem`NestedGrid`PackagePrivate`path, 
              Blank[]]] :> (
            TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
             TypeSystem`NestedGrid`PackagePrivate`path; 
            TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
             TypeSystem`NestedGrid`PackagePrivate`path, 
              TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
           Spacer[10], Blank[] :> Spacer[10]}], TrackedSymbols :> {}], 
        FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
        Top, ImageSize -> {Automatic, 14}]}, 
     DynamicBox[
      ToBoxes[
       Column[
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, {
          TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
          TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`alignBar[
           TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}, {
         TypeSystem`NestedGrid`PackagePrivate`$topBar$$, 
          TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
          TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`alignBar[
           TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}], Spacings -> 
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, 
          0, {{}, {0, 0.05, 0}}]], StandardForm], 
      ImageSizeCache -> {164., {172.5, 179.5}}, 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     BaseStyle -> {LineBreakWithin -> False}, Deinitialization :> 
     TypeSystem`NestedGrid`PackagePrivate`deleteState[
      TypeSystem`NestedGrid`PackagePrivate`$state$$], 
     DynamicModuleValues :> {}, Initialization :> 
     Block[{$ContextPath = $ContextPath}, 
       Needs["TypeSystem`"]]], Deploy, DefaultBaseStyle -> "Deploy"]},
  "CopyTag",
  DisplayFunction->(#& ),
  InterpretationFunction->("Dataset[<>]"& )]], "Output",
 CellChangeTimes->{{3.7639967126209564`*^9, 3.7639967224229536`*^9}, 
   3.764968852221259*^9, 3.7651188843078623`*^9, 3.7660832142531414`*^9, 
   3.7730562481981907`*^9, 3.773076147460094*^9, 3.773233721443843*^9, 
   3.7735844807419395`*^9, {3.7735936700631948`*^9, 3.773593684035233*^9}},
 CellLabel->
  "Out[734]=",ExpressionUUID->"b607c5dd-fc24-4b4b-8c63-861e227144c0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"ClearAll", "[", "cd", "]"}], "\[IndentingNewLine]", 
 RowBox[{"cd", "=", 
  RowBox[{"CloudDeploy", "[", "\[IndentingNewLine]", 
   RowBox[{
   "api", ",", "\[IndentingNewLine]", "\"\</live-coding/wordcount/\>\"", ",", 
    "\[IndentingNewLine]", 
    RowBox[{"Permissions", "\[Rule]", "\"\<Public\>\""}]}], 
   "\[IndentingNewLine]", "]"}]}]}], "Input",
 CellChangeTimes->{{3.763901121307186*^9, 3.7639012201341887`*^9}, {
  3.7639846636741133`*^9, 3.763984667449107*^9}, {3.763996673689954*^9, 
  3.763996675592955*^9}, {3.773056206787223*^9, 3.7730562233261757`*^9}},
 CellLabel->
  "In[735]:=",ExpressionUUID->"17cdb4f6-85f9-4f0f-980f-ca0d35b15b37"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"CloudObject", "[", 
   TemplateBox[{
    "\"https://www.wolframcloud.com/obj/mitch/live-coding/wordcount\"",
     "https://www.wolframcloud.com/obj/mitch/live-coding/wordcount"},
    "HyperlinkURL"], "]"}],
  CloudObject["https://www.wolframcloud.com/obj/mitch/live-coding/wordcount"],
  SelectWithContents->True]], "Output",
 CellChangeTimes->{3.7639967347389565`*^9, 3.764968898617294*^9, 
  3.7651189186858325`*^9, 3.766083217921033*^9, 3.773056274566629*^9, 
  3.773076149180131*^9, 3.773233724130827*^9, 3.7735844974969378`*^9, 
  3.773593697793194*^9},
 CellLabel->
  "Out[736]=",ExpressionUUID->"f565e25a-c85b-41e6-b61a-ae2dfa30e048"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"ClearAll", "[", 
  RowBox[{"url", ",", "session"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"url", "=", 
  RowBox[{"URLBuild", "[", 
   RowBox[{"cd", ",", 
    RowBox[{"<|", 
     RowBox[{
      RowBox[{"\"\<part\>\"", "\[Rule]", "\"\<body\>\""}], ",", 
      RowBox[{"\"\<n\>\"", "\[Rule]", "10"}]}], "|>"}]}], "]"}]}], "\n", 
 RowBox[{
  RowBox[{"session", "=", 
   RowBox[{"StartWebSession", "[", "\"\<Chrome\>\"", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"WebExecute", "[", 
   RowBox[{"session", ",", 
    RowBox[{"{", 
     RowBox[{"\"\<OpenPage\>\"", "\[Rule]", "url"}], "}"}]}], "]"}], 
  ";"}]}], "Input",
 CellChangeTimes->{
  3.764968914526291*^9, {3.7730562141341763`*^9, 3.773056241012204*^9}, {
   3.773593701112281*^9, 3.773593701661307*^9}},
 CellLabel->
  "In[737]:=",ExpressionUUID->"85bb7909-3400-4d34-9952-09c79eb91989"],

Cell[BoxData["\<\"https://www.wolframcloud.com/obj/mitch/live-coding/\
wordcount?part=body&n=10\"\>"], "Output",
 CellChangeTimes->{3.7649689186782928`*^9, 3.7651189193558207`*^9, 
  3.7660832194009748`*^9, 3.773056276807598*^9, 3.773076150426133*^9, 
  3.773233727919832*^9, 3.773584498951937*^9, 3.7735937026132812`*^9},
 CellLabel->
  "Out[738]=",ExpressionUUID->"ccf8e3c2-0950-4e38-9532-738b1e69b763"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Let\[CloseCurlyQuote]s step back for a minute", "Subchapter",
 CellChangeTimes->{{3.763990692256147*^9, 
  3.763990702889147*^9}},ExpressionUUID->"e9587de0-486a-4a5c-91b2-\
efba721c9384"],

Cell["\<\
- We develop with Dataset[]\[CloseCurlyQuote]s in MM such that when \
normalized (Normal@Dataset[...]) they can be used directly as JSON API \
endpoint results!  (See Al Calvitti and Andreas Lauschke live-coding sessions \
and Al Calvitti upcoming book  to get more ideas about how far this can go.)
- We can be computationally imaginative and efficient in MM taking our MM \
work to the API end point for hand-off to the front-end and back-end guys.
- We can separate work and responsibilities within an organization with \
transparent hand-off points.
- We comply with separation of duties (and responsibilities)
- We separate the project plan tasking timelines because can stub the \
handoffs and let each group build as they can and as they need filling in the \
stubs when ready.  This eases project dependence pressures and hence the risk \
of project stalling roadblocks\
\>", "Text",
 CellChangeTimes->{{3.7639907145041447`*^9, 3.7639908107021475`*^9}, {
   3.763990860194145*^9, 3.7639909719531465`*^9}, 3.7639943390084167`*^9, {
   3.76399732706853*^9, 3.763997349483528*^9}, {3.7639973967395267`*^9, 
   3.763997396935526*^9}, {3.76399781956374*^9, 3.7639980475847425`*^9}, {
   3.7730563349119024`*^9, 3.7730563355959024`*^9}, {3.773056485643035*^9, 
   3.7730565247100005`*^9}, {3.7730814816837873`*^9, 
   3.7730814850618105`*^9}, {3.773233763425233*^9, 3.773233765422228*^9}, {
   3.7732338000012026`*^9, 
   3.7732340388385334`*^9}},ExpressionUUID->"6b1a3c32-5c16-4176-b092-\
5d989478ae65"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["API-7) Put data to & Get data from WC", "Chapter",
 CellChangeTimes->{{3.7639984148667436`*^9, 3.7639984461567416`*^9}, {
  3.7730568211975675`*^9, 
  3.7730568513955336`*^9}},ExpressionUUID->"ff531a9c-458c-4bc6-be60-\
da392c72e86b"],

Cell["\<\
It\[CloseCurlyQuote]s possible to use WC as a data repository.  We show how \
this can be done.  First find your CloudBase, make sure this is right for you.\
\>", "Text",
 CellChangeTimes->{{3.773234063891535*^9, 3.773234114644599*^9}, {
  3.7732341828385797`*^9, 3.7732341932075624`*^9}, {3.7732347172129555`*^9, 
  3.7732347775868597`*^9}},ExpressionUUID->"2ea49dfa-c37e-4495-a6a7-\
f544354b95f6"],

Cell[CellGroupData[{

Cell[BoxData["$CloudBase"], "Input",
 CellChangeTimes->{{3.773234746442797*^9, 3.7732347522528877`*^9}},
 CellLabel->"In[91]:=",ExpressionUUID->"87950d2b-3006-4cff-afa7-c5efdbb51ff2"],

Cell[BoxData["\<\"https://www.wolframcloud.com/\"\>"], "Output",
 CellChangeTimes->{3.7732347529928675`*^9, 3.7735845484313755`*^9, 
  3.773584838313429*^9},
 CellLabel->"Out[91]=",ExpressionUUID->"bce19a65-e4cc-4932-b925-ad8c56be7312"]
}, Open  ]],

Cell["\<\
Open the URL and sign in.  Click the \[OpenCurlyQuote]Cloud Files\
\[CloseCurlyQuote] link.  This is where we will store our data.\
\>", "Text",
 CellChangeTimes->{{3.7732348209759417`*^9, 3.773234867404976*^9}, {
  3.773234906741269*^9, 
  3.773234920852271*^9}},ExpressionUUID->"0c2bd655-cb95-4ae9-8703-\
c6428c5aaf9b"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"ClearAll", "[", "todoDS", "]"}], "\[IndentingNewLine]", 
 RowBox[{"todoDS", "=", 
  RowBox[{"Dataset", "[", 
   RowBox[{"get", "[", "\"\<todos\>\"", "]"}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.7732341629485645`*^9, 3.773234219699398*^9}},
 CellLabel->"In[92]:=",ExpressionUUID->"74ec7d9f-b6ce-436e-8e6d-d6cb1675782d"],

Cell[BoxData[
 TemplateBox[{TagBox[
    DynamicModuleBox[{
     TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
      Data`UnorderedAssociation[
       "RowCount" -> 20, "Length" -> 200, "InitialType" -> TypeSystem`Vector[
          TypeSystem`Struct[{"userId", "id", "title", "completed"}, {
            TypeSystem`Atom[Integer], 
            TypeSystem`Atom[Integer], 
            TypeSystem`Atom[String], 
            TypeSystem`Atom[TypeSystem`Boolean]}], 200], "Shape" -> 
        TypeSystem`PackageScope`HeaderShape[
          
          Association[{All, "userId"} -> 1, {All, "id"} -> 1, {All, "title"} -> 
           1, {All, "completed"} -> 1], 
          TypeSystem`PackageScope`Limited[
           TypeSystem`PackageScope`ColumnShape[
            TypeSystem`PackageScope`RowShape[
             Association[
             "userId" -> TypeSystem`PackageScope`AtomShape[34], "id" -> 
              TypeSystem`PackageScope`AtomShape[34], "title" -> 
              TypeSystem`PackageScope`AtomShape[480.00000000000006`], 
              "completed" -> TypeSystem`PackageScope`AtomShape[36]]]], 
           20, {}]], "InitialData" -> 
        TypeSystem`PackageScope`CacheHandle[1716454495], "Type" -> 
        TypeSystem`Vector[
          TypeSystem`Struct[{"userId", "id", "title", "completed"}, {
            TypeSystem`Atom[Integer], 
            TypeSystem`Atom[Integer], 
            TypeSystem`Atom[String], 
            TypeSystem`Atom[TypeSystem`Boolean]}], 200], "HandleQ" -> True, 
        "RowTarget" -> 20, "Data" -> 
        TypeSystem`PackageScope`CacheHandle[1716454495]], 
      TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
      TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 1, 
      TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
      DynamicModule[{
        TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
           Style[
            Grid[{{
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"userId\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"userId\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 438994960][{
                    All, "userId"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[438994960][
                  GeneralUtilities`Slice[All, "userId"]], "Mouse"], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"id\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"id\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 438994960][{
                    All, "id"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[438994960][
                  GeneralUtilities`Slice[All, "id"]], "Mouse"], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"title\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"title\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 438994960][{
                    All, "title"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[438994960][
                  GeneralUtilities`Slice[All, "title"]], "Mouse"], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"completed\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"completed\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 438994960][{
                    All, "completed"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[438994960][
                  GeneralUtilities`Slice[All, "completed"]], "Mouse"], 
                Background -> GrayLevel[0.95], 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["1"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[438994960][
                  GeneralUtilities`Slice[1, 
                   Key["userId"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["1"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[438994960][
                  GeneralUtilities`Slice[1, 
                   Key["id"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["delectus aut autem", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[438994960][
                  GeneralUtilities`Slice[1, 
                   Key["title"]]], "Mouse"], 
                ImageSize -> {{480.00000000000006`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["False"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[438994960][
                  GeneralUtilities`Slice[1, 
                   Key["completed"]]], "Mouse"], 
                ImageSize -> {{36, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["1"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[438994960][
                  GeneralUtilities`Slice[2, 
                   Key["userId"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["2"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[438994960][
                  GeneralUtilities`Slice[2, 
                   Key["id"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["quis ut nam facilis et officia qui", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[438994960][
                  GeneralUtilities`Slice[2, 
                   Key["title"]]], "Mouse"], 
                ImageSize -> {{480.00000000000006`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["False"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[438994960][
                  GeneralUtilities`Slice[2, 
                   Key["completed"]]], "Mouse"], 
                ImageSize -> {{36, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["1"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[438994960][
                  GeneralUtilities`Slice[3, 
                   Key["userId"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["3"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[438994960][
                  GeneralUtilities`Slice[3, 
                   Key["id"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["fugiat veniam minus", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[438994960][
                  GeneralUtilities`Slice[3, 
                   Key["title"]]], "Mouse"], 
                ImageSize -> {{480.00000000000006`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["False"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[438994960][
                  GeneralUtilities`Slice[3, 
                   Key["completed"]]], "Mouse"], 
                ImageSize -> {{36, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["1"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[438994960][
                  GeneralUtilities`Slice[4, 
                   Key["userId"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["4"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[438994960][
                  GeneralUtilities`Slice[4, 
                   Key["id"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["et porro tempora", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[438994960][
                  GeneralUtilities`Slice[4, 
                   Key["title"]]], "Mouse"], 
                ImageSize -> {{480.00000000000006`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["True"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[438994960][
                  GeneralUtilities`Slice[4, 
                   Key["completed"]]], "Mouse"], 
                ImageSize -> {{36, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["1"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[438994960][
                  GeneralUtilities`Slice[5, 
                   Key["userId"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["5"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[438994960][
                  GeneralUtilities`Slice[5, 
                   Key["id"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                "laboriosam mollitia et enim quasi adipisci quia provident \
illum", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[438994960][
                  GeneralUtilities`Slice[5, 
                   Key["title"]]], "Mouse"], 
                ImageSize -> {{480.00000000000006`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["False"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[438994960][
                  GeneralUtilities`Slice[5, 
                   Key["completed"]]], "Mouse"], 
                ImageSize -> {{36, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["1"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[438994960][
                  GeneralUtilities`Slice[6, 
                   Key["userId"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["6"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[438994960][
                  GeneralUtilities`Slice[6, 
                   Key["id"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                "qui ullam ratione quibusdam voluptatem quia omnis", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[438994960][
                  GeneralUtilities`Slice[6, 
                   Key["title"]]], "Mouse"], 
                ImageSize -> {{480.00000000000006`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["False"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[438994960][
                  GeneralUtilities`Slice[6, 
                   Key["completed"]]], "Mouse"], 
                ImageSize -> {{36, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["1"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[438994960][
                  GeneralUtilities`Slice[7, 
                   Key["userId"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["7"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[438994960][
                  GeneralUtilities`Slice[7, 
                   Key["id"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["illo expedita consequatur quia in", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[438994960][
                  GeneralUtilities`Slice[7, 
                   Key["title"]]], "Mouse"], 
                ImageSize -> {{480.00000000000006`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["False"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[438994960][
                  GeneralUtilities`Slice[7, 
                   Key["completed"]]], "Mouse"], 
                ImageSize -> {{36, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["1"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[438994960][
                  GeneralUtilities`Slice[8, 
                   Key["userId"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["8"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[438994960][
                  GeneralUtilities`Slice[8, 
                   Key["id"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["quo adipisci enim quam ut ab", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[438994960][
                  GeneralUtilities`Slice[8, 
                   Key["title"]]], "Mouse"], 
                ImageSize -> {{480.00000000000006`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["True"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[438994960][
                  GeneralUtilities`Slice[8, 
                   Key["completed"]]], "Mouse"], 
                ImageSize -> {{36, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["1"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[438994960][
                  GeneralUtilities`Slice[9, 
                   Key["userId"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["9"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[438994960][
                  GeneralUtilities`Slice[9, 
                   Key["id"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["molestiae perspiciatis ipsa", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[438994960][
                  GeneralUtilities`Slice[9, 
                   Key["title"]]], "Mouse"], 
                ImageSize -> {{480.00000000000006`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["False"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[438994960][
                  GeneralUtilities`Slice[9, 
                   Key["completed"]]], "Mouse"], 
                ImageSize -> {{36, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["1"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[438994960][
                  GeneralUtilities`Slice[10, 
                   Key["userId"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["10"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[438994960][
                  GeneralUtilities`Slice[10, 
                   Key["id"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["illo est ratione doloremque quia maiores aut", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[438994960][
                  GeneralUtilities`Slice[10, 
                   Key["title"]]], "Mouse"], 
                ImageSize -> {{480.00000000000006`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["True"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[438994960][
                  GeneralUtilities`Slice[10, 
                   Key["completed"]]], "Mouse"], 
                ImageSize -> {{36, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["1"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[438994960][
                  GeneralUtilities`Slice[11, 
                   Key["userId"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["11"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[438994960][
                  GeneralUtilities`Slice[11, 
                   Key["id"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["vero rerum temporibus dolor", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[438994960][
                  GeneralUtilities`Slice[11, 
                   Key["title"]]], "Mouse"], 
                ImageSize -> {{480.00000000000006`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["True"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[438994960][
                  GeneralUtilities`Slice[11, 
                   Key["completed"]]], "Mouse"], 
                ImageSize -> {{36, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["1"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[438994960][
                  GeneralUtilities`Slice[12, 
                   Key["userId"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["12"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[438994960][
                  GeneralUtilities`Slice[12, 
                   Key["id"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["ipsa repellendus fugit nisi", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[438994960][
                  GeneralUtilities`Slice[12, 
                   Key["title"]]], "Mouse"], 
                ImageSize -> {{480.00000000000006`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["True"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[438994960][
                  GeneralUtilities`Slice[12, 
                   Key["completed"]]], "Mouse"], 
                ImageSize -> {{36, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["1"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[438994960][
                  GeneralUtilities`Slice[13, 
                   Key["userId"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["13"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[438994960][
                  GeneralUtilities`Slice[13, 
                   Key["id"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["et doloremque nulla", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[438994960][
                  GeneralUtilities`Slice[13, 
                   Key["title"]]], "Mouse"], 
                ImageSize -> {{480.00000000000006`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["False"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[438994960][
                  GeneralUtilities`Slice[13, 
                   Key["completed"]]], "Mouse"], 
                ImageSize -> {{36, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["1"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[438994960][
                  GeneralUtilities`Slice[14, 
                   Key["userId"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["14"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[438994960][
                  GeneralUtilities`Slice[14, 
                   Key["id"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["repellendus sunt dolores architecto voluptatum", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[438994960][
                  GeneralUtilities`Slice[14, 
                   Key["title"]]], "Mouse"], 
                ImageSize -> {{480.00000000000006`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["True"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[438994960][
                  GeneralUtilities`Slice[14, 
                   Key["completed"]]], "Mouse"], 
                ImageSize -> {{36, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["1"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[438994960][
                  GeneralUtilities`Slice[15, 
                   Key["userId"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["15"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[438994960][
                  GeneralUtilities`Slice[15, 
                   Key["id"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["ab voluptatum amet voluptas", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[438994960][
                  GeneralUtilities`Slice[15, 
                   Key["title"]]], "Mouse"], 
                ImageSize -> {{480.00000000000006`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["True"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[438994960][
                  GeneralUtilities`Slice[15, 
                   Key["completed"]]], "Mouse"], 
                ImageSize -> {{36, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["1"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[438994960][
                  GeneralUtilities`Slice[16, 
                   Key["userId"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["16"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[438994960][
                  GeneralUtilities`Slice[16, 
                   Key["id"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["accusamus eos facilis sint et aut voluptatem", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[438994960][
                  GeneralUtilities`Slice[16, 
                   Key["title"]]], "Mouse"], 
                ImageSize -> {{480.00000000000006`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["True"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[438994960][
                  GeneralUtilities`Slice[16, 
                   Key["completed"]]], "Mouse"], 
                ImageSize -> {{36, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["1"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[438994960][
                  GeneralUtilities`Slice[17, 
                   Key["userId"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["17"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[438994960][
                  GeneralUtilities`Slice[17, 
                   Key["id"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["quo laboriosam deleniti aut qui", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[438994960][
                  GeneralUtilities`Slice[17, 
                   Key["title"]]], "Mouse"], 
                ImageSize -> {{480.00000000000006`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["True"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[438994960][
                  GeneralUtilities`Slice[17, 
                   Key["completed"]]], "Mouse"], 
                ImageSize -> {{36, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["1"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[438994960][
                  GeneralUtilities`Slice[18, 
                   Key["userId"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["18"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[438994960][
                  GeneralUtilities`Slice[18, 
                   Key["id"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["dolorum est consequatur ea mollitia in culpa", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[438994960][
                  GeneralUtilities`Slice[18, 
                   Key["title"]]], "Mouse"], 
                ImageSize -> {{480.00000000000006`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["False"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[438994960][
                  GeneralUtilities`Slice[18, 
                   Key["completed"]]], "Mouse"], 
                ImageSize -> {{36, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["1"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[438994960][
                  GeneralUtilities`Slice[19, 
                   Key["userId"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["19"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[438994960][
                  GeneralUtilities`Slice[19, 
                   Key["id"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                "molestiae ipsa aut voluptatibus pariatur dolor nihil", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[438994960][
                  GeneralUtilities`Slice[19, 
                   Key["title"]]], "Mouse"], 
                ImageSize -> {{480.00000000000006`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["True"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[438994960][
                  GeneralUtilities`Slice[19, 
                   Key["completed"]]], "Mouse"], 
                ImageSize -> {{36, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["1"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[438994960][
                  GeneralUtilities`Slice[20, 
                   Key["userId"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["20"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[438994960][
                  GeneralUtilities`Slice[20, 
                   Key["id"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["ullam nobis libero sapiente ad optio sint", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[438994960][
                  GeneralUtilities`Slice[20, 
                   Key["title"]]], "Mouse"], 
                ImageSize -> {{480.00000000000006`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["True"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[438994960][
                  GeneralUtilities`Slice[20, 
                   Key["completed"]]], "Mouse"], 
                ImageSize -> {{36, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Deploy[
                 Mouseover[
                  Row[{
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.5]]], 
                    GrayLevel[0.5], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{0.56, 
                    1.031}, {6.429, 1.031}, {6.429, 60.967}, {0.56, 
                    60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{6.192899999999999, 
                    30.980699999999995`}, {42.4399, 0.7526999999999973}, {
                    42.4399, 8.209699999999994}, {16.432899999999997`, 
                    30.982699999999994`}, {42.4119, 53.6547}, {42.4399, 
                    61.244699999999995`}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{0.56, 
                    1.031}, {6.429, 1.031}, {6.429, 60.967}, {0.56, 
                    60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{6.192899999999999, 
                    30.980699999999995`}, {42.4399, 0.7526999999999973}, {
                    42.4399, 8.209699999999994}, {16.432899999999997`, 
                    30.982699999999994`}, {42.4119, 53.6547}, {42.4399, 
                    61.244699999999995`}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ + 
                    200 (-20), {1, 200 - -20 + 1}])}], 
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.3]]], 
                    GrayLevel[0.3], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5499, 30.980699999999995`}, {
                    36.7969, 0.7526999999999973}, {36.7969, 
                    8.209699999999994}, {10.7899, 30.982699999999994`}, {
                    36.7689, 53.6547}, {36.7969, 61.244699999999995`}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5499, 30.980699999999995`}, {
                    36.7969, 0.7526999999999973}, {36.7969, 
                    8.209699999999994}, {10.7899, 30.982699999999994`}, {
                    36.7689, 53.6547}, {36.7969, 61.244699999999995`}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ - 20, {
                    1, 200 - -20 + 1}])}], 
                    Pane[
                    Row[{"showing ", 1, "\[Dash]", 20, " of ", 
                    Style[
                    200, FontColor -> GrayLevel[0], FontWeight -> "Medium"]}, 
                    BaseStyle -> {
                    FontSize -> 8., FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]}], 150, ContentPadding -> False, 
                    Alignment -> {Center, Center}], 
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.3]]], 
                    GrayLevel[0.3], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5778000000000001, 
                    53.654399999999995`}, {26.5568, 30.982399999999995`}, {
                    0.5498000000000001, 8.209399999999995}, {
                    0.5498000000000001, 0.7523999999999944}, {
                    36.796800000000005`, 30.980399999999992`}, {
                    0.5498000000000001, 61.2454}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5778000000000001, 
                    53.654399999999995`}, {26.5568, 30.982399999999995`}, {
                    0.5498000000000001, 8.209399999999995}, {
                    0.5498000000000001, 0.7523999999999944}, {
                    36.796800000000005`, 30.980399999999992`}, {
                    0.5498000000000001, 61.2454}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ + 20, {
                    1, 200 - 20 + 1}])}], 
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.5]]], 
                    GrayLevel[0.5], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    36.571, 1.031}, {42.440999999999995`, 1.031}, {
                    42.440999999999995`, 60.967}, {36.571, 60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5598000000000001, 
                    53.788500000000006`}, {26.5668, 31.015500000000007`}, {
                    0.5878000000000001, 8.343500000000006}, {
                    0.5598000000000001, 0.7525000000000048}, {36.8068, 
                    31.017500000000005`}, {0.5598000000000001, 
                    61.24450000000001}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    36.571, 1.031}, {42.440999999999995`, 1.031}, {
                    42.440999999999995`, 60.967}, {36.571, 60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5598000000000001, 
                    53.788500000000006`}, {26.5668, 31.015500000000007`}, {
                    0.5878000000000001, 8.343500000000006}, {
                    0.5598000000000001, 0.7525000000000048}, {36.8068, 
                    31.017500000000005`}, {0.5598000000000001, 
                    61.24450000000001}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ + 
                    200 20, {1, 200 - 20 + 1}])}]}, "   "], 
                  Row[{
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.5]]], 
                    GrayLevel[0.5], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{0.56, 
                    1.031}, {6.429, 1.031}, {6.429, 60.967}, {0.56, 
                    60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{6.192899999999999, 
                    30.980699999999995`}, {42.4399, 0.7526999999999973}, {
                    42.4399, 8.209699999999994}, {16.432899999999997`, 
                    30.982699999999994`}, {42.4119, 53.6547}, {42.4399, 
                    61.244699999999995`}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{0.56, 
                    1.031}, {6.429, 1.031}, {6.429, 60.967}, {0.56, 
                    60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{6.192899999999999, 
                    30.980699999999995`}, {42.4399, 0.7526999999999973}, {
                    42.4399, 8.209699999999994}, {16.432899999999997`, 
                    30.982699999999994`}, {42.4119, 53.6547}, {42.4399, 
                    61.244699999999995`}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ + 
                    200 (-20), {1, 200 - -20 + 1}])}], 
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.3]]], 
                    GrayLevel[0.3], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5499, 30.980699999999995`}, {
                    36.7969, 0.7526999999999973}, {36.7969, 
                    8.209699999999994}, {10.7899, 30.982699999999994`}, {
                    36.7689, 53.6547}, {36.7969, 61.244699999999995`}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5499, 30.980699999999995`}, {
                    36.7969, 0.7526999999999973}, {36.7969, 
                    8.209699999999994}, {10.7899, 30.982699999999994`}, {
                    36.7689, 53.6547}, {36.7969, 61.244699999999995`}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ - 20, {
                    1, 200 - -20 + 1}])}], 
                    Pane[
                    Row[{"showing ", 1, "\[Dash]", 20, " of ", 
                    Style[
                    200, FontColor -> GrayLevel[0], FontWeight -> "Medium"]}, 
                    BaseStyle -> {
                    FontSize -> 8., FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]}], 150, ContentPadding -> False, 
                    Alignment -> {Center, Center}], 
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.3]]], 
                    GrayLevel[0.3], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5778000000000001, 
                    53.654399999999995`}, {26.5568, 30.982399999999995`}, {
                    0.5498000000000001, 8.209399999999995}, {
                    0.5498000000000001, 0.7523999999999944}, {
                    36.796800000000005`, 30.980399999999992`}, {
                    0.5498000000000001, 61.2454}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5778000000000001, 
                    53.654399999999995`}, {26.5568, 30.982399999999995`}, {
                    0.5498000000000001, 8.209399999999995}, {
                    0.5498000000000001, 0.7523999999999944}, {
                    36.796800000000005`, 30.980399999999992`}, {
                    0.5498000000000001, 61.2454}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ + 20, {
                    1, 200 - 20 + 1}])}], 
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.5]]], 
                    GrayLevel[0.5], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    36.571, 1.031}, {42.440999999999995`, 1.031}, {
                    42.440999999999995`, 60.967}, {36.571, 60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5598000000000001, 
                    53.788500000000006`}, {26.5668, 31.015500000000007`}, {
                    0.5878000000000001, 8.343500000000006}, {
                    0.5598000000000001, 0.7525000000000048}, {36.8068, 
                    31.017500000000005`}, {0.5598000000000001, 
                    61.24450000000001}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    36.571, 1.031}, {42.440999999999995`, 1.031}, {
                    42.440999999999995`, 60.967}, {36.571, 60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5598000000000001, 
                    53.788500000000006`}, {26.5668, 31.015500000000007`}, {
                    0.5878000000000001, 8.343500000000006}, {
                    0.5598000000000001, 0.7525000000000048}, {36.8068, 
                    31.017500000000005`}, {0.5598000000000001, 
                    61.24450000000001}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ + 
                    200 20, {1, 200 - 20 + 1}])}]}, "   "]]], Background -> 
                GrayLevel[0.98], Alignment -> {Left, Top}, 
                BaseStyle -> {ContextMenu -> {
                    MenuItem["Hide", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 438994960}, 
                    1, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 10 rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 438994960}, 
                    10, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 30 rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 438994960}, 
                    30, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 100 rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 438994960}, 
                    100, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show all", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 438994960}, 
                    100000000, {}]], MenuEvaluator -> Automatic]}}], 
               SpanFromLeft, SpanFromLeft, SpanFromLeft}}, 
             BaseStyle -> {ContextMenu -> {
                 MenuItem["Copy position to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Copy data to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], Delimiter, 
                 MenuItem["Paste position in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Paste data in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic]}, FontFamily -> "Verdana", 
               FontSize -> 12}, Alignment -> Left, RowMinHeight -> 1.5, 
             Dividers -> All, FrameStyle -> GrayLevel[0.85], 
             BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
            LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False,
             ShowAutoStyles -> False]], 
         TypeSystem`NestedGrid`PackagePrivate`initialQ = True, 
         TypeSystem`NestedGrid`PackagePrivate`self = $Failed}, 
        Dynamic[
         TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
         TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
            Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
            
            Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
              TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
              TypeSystem`NestedGrid`PackagePrivate`LookupCacheValue[
                TypeSystem`NestedGrid`PackagePrivate`$state$$["Data"]]}, 
             TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = 
              If[TypeSystem`NestedGrid`PackagePrivate`tmpData$ === 
                TypeSystem`NestedGrid`PackagePrivate`$NotCached, 
                TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$grid$$, 438994960][
                TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
               Not[
                FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
               TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
               TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
          TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
          TypeSystem`NestedGrid`PackagePrivate`$pos$$; If[
            FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
            TypeSystem`SparseGrid[
             TypeSystem`H["(data no longer present)"]], 
            If[GeneralUtilities`$DebugMode, 
             Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
               TypeSystem`NestedGrid`PackagePrivate`formatState[
               TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                TypeSystem`NestedGrid`PackagePrivate`$pos$$]}], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
         TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$pos$$}], 
        DynamicModuleValues :> {}], 
      TypeSystem`NestedGrid`PackagePrivate`$posCell$$, 
      TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
        TypeSystem`NestedGrid`PackagePrivate`alignBar[
        TypeSystem`NestedGrid`PackagePrivate`$state$$][
         TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
          TypeSystem`PackageScope`Pathbar[
          TypeSystem`NestedGrid`PackagePrivate`$path$$, 
           TypeSystem`NestedGrid`PackagePrivate`updateState[
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
            TypeSystem`NestedGrid`PackagePrivate`$path$$, 
            TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$grid$$, 438994960]]]], 
        TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
      TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Framed[
        Dynamic[
         Replace[
          MouseAnnotation[Null], {
          TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[438994960][Null] -> 
           "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[438994960][
             Pattern[TypeSystem`NestedGrid`PackagePrivate`path, 
              Blank[]]] :> (
            TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
             TypeSystem`NestedGrid`PackagePrivate`path; 
            TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
             TypeSystem`NestedGrid`PackagePrivate`path, 
              TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
           Spacer[10], Blank[] :> Spacer[10]}], TrackedSymbols :> {}], 
        FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
        Top, ImageSize -> {Automatic, 14}]}, 
     DynamicBox[
      ToBoxes[
       Column[
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, {
          TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
          TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`alignBar[
           TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}, {
         TypeSystem`NestedGrid`PackagePrivate`$topBar$$, 
          TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
          TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`alignBar[
           TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}], Spacings -> 
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, 
          0, {{}, {0, 0.05, 0}}]], StandardForm], 
      ImageSizeCache -> {712., {338., 345.}}, 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     BaseStyle -> {LineBreakWithin -> False}, Deinitialization :> 
     TypeSystem`NestedGrid`PackagePrivate`deleteState[
      TypeSystem`NestedGrid`PackagePrivate`$state$$], 
     DynamicModuleValues :> {}, Initialization :> 
     Block[{$ContextPath = $ContextPath}, 
       Needs["TypeSystem`"]]], Deploy, DefaultBaseStyle -> "Deploy"]},
  "CopyTag",
  DisplayFunction->(#& ),
  InterpretationFunction->("Dataset[<>]"& )]], "Output",
 CellChangeTimes->{{3.773234169085574*^9, 3.7732341743615975`*^9}, {
   3.7732342096593523`*^9, 3.77323422044536*^9}, 3.7734227285644712`*^9, 
   3.7735848452184496`*^9},
 CellLabel->"Out[93]=",ExpressionUUID->"70614cd3-877e-4455-a1d2-6fc53e8f756e"]
}, Open  ]],

Cell["CloudPut the dataset to a location in your Wolfram Cloud.", "Text",
 CellChangeTimes->{{3.77332799187011*^9, 
  3.7733280195961237`*^9}},ExpressionUUID->"622b3c15-e26e-4771-b225-\
af6208be3d6d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CloudPut", "[", 
  RowBox[{"todoDS", ",", 
   RowBox[{"CloudObject", "[", 
    RowBox[{"\"\<data/todos\>\"", ",", 
     RowBox[{"Permissions", "\[Rule]", "\"\<Public\>\""}]}], "]"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.773234932951233*^9, 3.773234954353322*^9}, {
  3.7732350454142237`*^9, 3.7732350855144253`*^9}, {3.7732351697141795`*^9, 
  3.773235170250182*^9}, {3.7732352572132635`*^9, 3.7732352574242744`*^9}},
 CellLabel->"In[94]:=",ExpressionUUID->"967e0ea2-1af6-43f1-a9db-4c6a097860bf"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"CloudObject", "[", 
   TemplateBox[{
    "\"https://www.wolframcloud.com/obj/mitch/data/todos\"",
     "https://www.wolframcloud.com/obj/mitch/data/todos"},
    "HyperlinkURL"], "]"}],
  CloudObject["https://www.wolframcloud.com/obj/mitch/data/todos"],
  SelectWithContents->True]], "Output",
 CellChangeTimes->{3.773235112479437*^9, 3.773235176520177*^9, 
  3.7732352614302635`*^9, 3.7734227318164816`*^9, 3.7735848640684514`*^9},
 CellLabel->"Out[94]=",ExpressionUUID->"3f9e9811-e63b-4953-889d-f8bb0213dc65"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"ClearAll", "[", "todoDS", "]"}], "\[IndentingNewLine]", 
 RowBox[{"todoDS", "=", 
  RowBox[{"CloudGet", "[", "\"\<data/todos\>\"", "]"}]}]}], "Input",
 CellChangeTimes->{{3.7732352189655514`*^9, 3.7732352664562798`*^9}},
 CellLabel->"In[95]:=",ExpressionUUID->"9fe8e36c-a27a-460c-8c15-34d575363e51"],

Cell[BoxData[
 TemplateBox[{TagBox[
    DynamicModuleBox[{
     TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
      Data`UnorderedAssociation[
       "RowCount" -> 20, "Length" -> 200, "InitialType" -> TypeSystem`Vector[
          TypeSystem`Struct[{"userId", "id", "title", "completed"}, {
            TypeSystem`Atom[Integer], 
            TypeSystem`Atom[Integer], 
            TypeSystem`Atom[String], 
            TypeSystem`Atom[TypeSystem`Boolean]}], 200], "Shape" -> 
        TypeSystem`PackageScope`HeaderShape[
          
          Association[{All, "userId"} -> 1, {All, "id"} -> 1, {All, "title"} -> 
           1, {All, "completed"} -> 1], 
          TypeSystem`PackageScope`Limited[
           TypeSystem`PackageScope`ColumnShape[
            TypeSystem`PackageScope`RowShape[
             Association[
             "userId" -> TypeSystem`PackageScope`AtomShape[34], "id" -> 
              TypeSystem`PackageScope`AtomShape[34], "title" -> 
              TypeSystem`PackageScope`AtomShape[480.00000000000006`], 
              "completed" -> TypeSystem`PackageScope`AtomShape[36]]]], 
           20, {}]], "InitialData" -> 
        TypeSystem`PackageScope`CacheHandle[1241582484], "Type" -> 
        TypeSystem`Vector[
          TypeSystem`Struct[{"userId", "id", "title", "completed"}, {
            TypeSystem`Atom[Integer], 
            TypeSystem`Atom[Integer], 
            TypeSystem`Atom[String], 
            TypeSystem`Atom[TypeSystem`Boolean]}], 200], "HandleQ" -> True, 
        "RowTarget" -> 20, "Data" -> 
        TypeSystem`PackageScope`CacheHandle[1241582484]], 
      TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
      TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 1, 
      TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
      DynamicModule[{
        TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
           Style[
            Grid[{{
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"userId\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"userId\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 675842410][{
                    All, "userId"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[675842410][
                  GeneralUtilities`Slice[All, "userId"]], "Mouse"], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"id\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"id\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 675842410][{
                    All, "id"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[675842410][
                  GeneralUtilities`Slice[All, "id"]], "Mouse"], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"title\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"title\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 675842410][{
                    All, "title"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[675842410][
                  GeneralUtilities`Slice[All, "title"]], "Mouse"], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"completed\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"completed\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 675842410][{
                    All, "completed"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[675842410][
                  GeneralUtilities`Slice[All, "completed"]], "Mouse"], 
                Background -> GrayLevel[0.95], 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["1"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[675842410][
                  GeneralUtilities`Slice[1, 
                   Key["userId"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["1"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[675842410][
                  GeneralUtilities`Slice[1, 
                   Key["id"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["delectus aut autem", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[675842410][
                  GeneralUtilities`Slice[1, 
                   Key["title"]]], "Mouse"], 
                ImageSize -> {{480.00000000000006`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["False"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[675842410][
                  GeneralUtilities`Slice[1, 
                   Key["completed"]]], "Mouse"], 
                ImageSize -> {{36, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["1"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[675842410][
                  GeneralUtilities`Slice[2, 
                   Key["userId"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["2"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[675842410][
                  GeneralUtilities`Slice[2, 
                   Key["id"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["quis ut nam facilis et officia qui", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[675842410][
                  GeneralUtilities`Slice[2, 
                   Key["title"]]], "Mouse"], 
                ImageSize -> {{480.00000000000006`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["False"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[675842410][
                  GeneralUtilities`Slice[2, 
                   Key["completed"]]], "Mouse"], 
                ImageSize -> {{36, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["1"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[675842410][
                  GeneralUtilities`Slice[3, 
                   Key["userId"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["3"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[675842410][
                  GeneralUtilities`Slice[3, 
                   Key["id"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["fugiat veniam minus", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[675842410][
                  GeneralUtilities`Slice[3, 
                   Key["title"]]], "Mouse"], 
                ImageSize -> {{480.00000000000006`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["False"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[675842410][
                  GeneralUtilities`Slice[3, 
                   Key["completed"]]], "Mouse"], 
                ImageSize -> {{36, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["1"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[675842410][
                  GeneralUtilities`Slice[4, 
                   Key["userId"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["4"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[675842410][
                  GeneralUtilities`Slice[4, 
                   Key["id"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["et porro tempora", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[675842410][
                  GeneralUtilities`Slice[4, 
                   Key["title"]]], "Mouse"], 
                ImageSize -> {{480.00000000000006`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["True"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[675842410][
                  GeneralUtilities`Slice[4, 
                   Key["completed"]]], "Mouse"], 
                ImageSize -> {{36, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["1"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[675842410][
                  GeneralUtilities`Slice[5, 
                   Key["userId"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["5"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[675842410][
                  GeneralUtilities`Slice[5, 
                   Key["id"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                "laboriosam mollitia et enim quasi adipisci quia provident \
illum", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[675842410][
                  GeneralUtilities`Slice[5, 
                   Key["title"]]], "Mouse"], 
                ImageSize -> {{480.00000000000006`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["False"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[675842410][
                  GeneralUtilities`Slice[5, 
                   Key["completed"]]], "Mouse"], 
                ImageSize -> {{36, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["1"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[675842410][
                  GeneralUtilities`Slice[6, 
                   Key["userId"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["6"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[675842410][
                  GeneralUtilities`Slice[6, 
                   Key["id"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                "qui ullam ratione quibusdam voluptatem quia omnis", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[675842410][
                  GeneralUtilities`Slice[6, 
                   Key["title"]]], "Mouse"], 
                ImageSize -> {{480.00000000000006`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["False"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[675842410][
                  GeneralUtilities`Slice[6, 
                   Key["completed"]]], "Mouse"], 
                ImageSize -> {{36, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["1"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[675842410][
                  GeneralUtilities`Slice[7, 
                   Key["userId"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["7"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[675842410][
                  GeneralUtilities`Slice[7, 
                   Key["id"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["illo expedita consequatur quia in", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[675842410][
                  GeneralUtilities`Slice[7, 
                   Key["title"]]], "Mouse"], 
                ImageSize -> {{480.00000000000006`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["False"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[675842410][
                  GeneralUtilities`Slice[7, 
                   Key["completed"]]], "Mouse"], 
                ImageSize -> {{36, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["1"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[675842410][
                  GeneralUtilities`Slice[8, 
                   Key["userId"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["8"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[675842410][
                  GeneralUtilities`Slice[8, 
                   Key["id"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["quo adipisci enim quam ut ab", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[675842410][
                  GeneralUtilities`Slice[8, 
                   Key["title"]]], "Mouse"], 
                ImageSize -> {{480.00000000000006`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["True"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[675842410][
                  GeneralUtilities`Slice[8, 
                   Key["completed"]]], "Mouse"], 
                ImageSize -> {{36, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["1"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[675842410][
                  GeneralUtilities`Slice[9, 
                   Key["userId"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["9"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[675842410][
                  GeneralUtilities`Slice[9, 
                   Key["id"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["molestiae perspiciatis ipsa", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[675842410][
                  GeneralUtilities`Slice[9, 
                   Key["title"]]], "Mouse"], 
                ImageSize -> {{480.00000000000006`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["False"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[675842410][
                  GeneralUtilities`Slice[9, 
                   Key["completed"]]], "Mouse"], 
                ImageSize -> {{36, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["1"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[675842410][
                  GeneralUtilities`Slice[10, 
                   Key["userId"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["10"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[675842410][
                  GeneralUtilities`Slice[10, 
                   Key["id"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["illo est ratione doloremque quia maiores aut", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[675842410][
                  GeneralUtilities`Slice[10, 
                   Key["title"]]], "Mouse"], 
                ImageSize -> {{480.00000000000006`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["True"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[675842410][
                  GeneralUtilities`Slice[10, 
                   Key["completed"]]], "Mouse"], 
                ImageSize -> {{36, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["1"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[675842410][
                  GeneralUtilities`Slice[11, 
                   Key["userId"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["11"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[675842410][
                  GeneralUtilities`Slice[11, 
                   Key["id"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["vero rerum temporibus dolor", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[675842410][
                  GeneralUtilities`Slice[11, 
                   Key["title"]]], "Mouse"], 
                ImageSize -> {{480.00000000000006`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["True"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[675842410][
                  GeneralUtilities`Slice[11, 
                   Key["completed"]]], "Mouse"], 
                ImageSize -> {{36, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["1"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[675842410][
                  GeneralUtilities`Slice[12, 
                   Key["userId"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["12"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[675842410][
                  GeneralUtilities`Slice[12, 
                   Key["id"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["ipsa repellendus fugit nisi", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[675842410][
                  GeneralUtilities`Slice[12, 
                   Key["title"]]], "Mouse"], 
                ImageSize -> {{480.00000000000006`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["True"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[675842410][
                  GeneralUtilities`Slice[12, 
                   Key["completed"]]], "Mouse"], 
                ImageSize -> {{36, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["1"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[675842410][
                  GeneralUtilities`Slice[13, 
                   Key["userId"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["13"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[675842410][
                  GeneralUtilities`Slice[13, 
                   Key["id"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["et doloremque nulla", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[675842410][
                  GeneralUtilities`Slice[13, 
                   Key["title"]]], "Mouse"], 
                ImageSize -> {{480.00000000000006`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["False"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[675842410][
                  GeneralUtilities`Slice[13, 
                   Key["completed"]]], "Mouse"], 
                ImageSize -> {{36, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["1"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[675842410][
                  GeneralUtilities`Slice[14, 
                   Key["userId"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["14"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[675842410][
                  GeneralUtilities`Slice[14, 
                   Key["id"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["repellendus sunt dolores architecto voluptatum", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[675842410][
                  GeneralUtilities`Slice[14, 
                   Key["title"]]], "Mouse"], 
                ImageSize -> {{480.00000000000006`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["True"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[675842410][
                  GeneralUtilities`Slice[14, 
                   Key["completed"]]], "Mouse"], 
                ImageSize -> {{36, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["1"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[675842410][
                  GeneralUtilities`Slice[15, 
                   Key["userId"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["15"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[675842410][
                  GeneralUtilities`Slice[15, 
                   Key["id"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["ab voluptatum amet voluptas", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[675842410][
                  GeneralUtilities`Slice[15, 
                   Key["title"]]], "Mouse"], 
                ImageSize -> {{480.00000000000006`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["True"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[675842410][
                  GeneralUtilities`Slice[15, 
                   Key["completed"]]], "Mouse"], 
                ImageSize -> {{36, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["1"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[675842410][
                  GeneralUtilities`Slice[16, 
                   Key["userId"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["16"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[675842410][
                  GeneralUtilities`Slice[16, 
                   Key["id"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["accusamus eos facilis sint et aut voluptatem", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[675842410][
                  GeneralUtilities`Slice[16, 
                   Key["title"]]], "Mouse"], 
                ImageSize -> {{480.00000000000006`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["True"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[675842410][
                  GeneralUtilities`Slice[16, 
                   Key["completed"]]], "Mouse"], 
                ImageSize -> {{36, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["1"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[675842410][
                  GeneralUtilities`Slice[17, 
                   Key["userId"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["17"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[675842410][
                  GeneralUtilities`Slice[17, 
                   Key["id"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["quo laboriosam deleniti aut qui", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[675842410][
                  GeneralUtilities`Slice[17, 
                   Key["title"]]], "Mouse"], 
                ImageSize -> {{480.00000000000006`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["True"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[675842410][
                  GeneralUtilities`Slice[17, 
                   Key["completed"]]], "Mouse"], 
                ImageSize -> {{36, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["1"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[675842410][
                  GeneralUtilities`Slice[18, 
                   Key["userId"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["18"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[675842410][
                  GeneralUtilities`Slice[18, 
                   Key["id"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["dolorum est consequatur ea mollitia in culpa", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[675842410][
                  GeneralUtilities`Slice[18, 
                   Key["title"]]], "Mouse"], 
                ImageSize -> {{480.00000000000006`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["False"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[675842410][
                  GeneralUtilities`Slice[18, 
                   Key["completed"]]], "Mouse"], 
                ImageSize -> {{36, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["1"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[675842410][
                  GeneralUtilities`Slice[19, 
                   Key["userId"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["19"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[675842410][
                  GeneralUtilities`Slice[19, 
                   Key["id"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                "molestiae ipsa aut voluptatibus pariatur dolor nihil", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[675842410][
                  GeneralUtilities`Slice[19, 
                   Key["title"]]], "Mouse"], 
                ImageSize -> {{480.00000000000006`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["True"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[675842410][
                  GeneralUtilities`Slice[19, 
                   Key["completed"]]], "Mouse"], 
                ImageSize -> {{36, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["1"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[675842410][
                  GeneralUtilities`Slice[20, 
                   Key["userId"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["20"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[675842410][
                  GeneralUtilities`Slice[20, 
                   Key["id"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["ullam nobis libero sapiente ad optio sint", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[675842410][
                  GeneralUtilities`Slice[20, 
                   Key["title"]]], "Mouse"], 
                ImageSize -> {{480.00000000000006`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["True"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[675842410][
                  GeneralUtilities`Slice[20, 
                   Key["completed"]]], "Mouse"], 
                ImageSize -> {{36, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Deploy[
                 Mouseover[
                  Row[{
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.5]]], 
                    GrayLevel[0.5], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{0.56, 
                    1.031}, {6.429, 1.031}, {6.429, 60.967}, {0.56, 
                    60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{6.192899999999999, 
                    30.980699999999995`}, {42.4399, 0.7526999999999973}, {
                    42.4399, 8.209699999999994}, {16.432899999999997`, 
                    30.982699999999994`}, {42.4119, 53.6547}, {42.4399, 
                    61.244699999999995`}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{0.56, 
                    1.031}, {6.429, 1.031}, {6.429, 60.967}, {0.56, 
                    60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{6.192899999999999, 
                    30.980699999999995`}, {42.4399, 0.7526999999999973}, {
                    42.4399, 8.209699999999994}, {16.432899999999997`, 
                    30.982699999999994`}, {42.4119, 53.6547}, {42.4399, 
                    61.244699999999995`}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ + 
                    200 (-20), {1, 200 - -20 + 1}])}], 
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.3]]], 
                    GrayLevel[0.3], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5499, 30.980699999999995`}, {
                    36.7969, 0.7526999999999973}, {36.7969, 
                    8.209699999999994}, {10.7899, 30.982699999999994`}, {
                    36.7689, 53.6547}, {36.7969, 61.244699999999995`}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5499, 30.980699999999995`}, {
                    36.7969, 0.7526999999999973}, {36.7969, 
                    8.209699999999994}, {10.7899, 30.982699999999994`}, {
                    36.7689, 53.6547}, {36.7969, 61.244699999999995`}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ - 20, {
                    1, 200 - -20 + 1}])}], 
                    Pane[
                    Row[{"showing ", 1, "\[Dash]", 20, " of ", 
                    Style[
                    200, FontColor -> GrayLevel[0], FontWeight -> "Medium"]}, 
                    BaseStyle -> {
                    FontSize -> 8., FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]}], 150, ContentPadding -> False, 
                    Alignment -> {Center, Center}], 
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.3]]], 
                    GrayLevel[0.3], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5778000000000001, 
                    53.654399999999995`}, {26.5568, 30.982399999999995`}, {
                    0.5498000000000001, 8.209399999999995}, {
                    0.5498000000000001, 0.7523999999999944}, {
                    36.796800000000005`, 30.980399999999992`}, {
                    0.5498000000000001, 61.2454}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5778000000000001, 
                    53.654399999999995`}, {26.5568, 30.982399999999995`}, {
                    0.5498000000000001, 8.209399999999995}, {
                    0.5498000000000001, 0.7523999999999944}, {
                    36.796800000000005`, 30.980399999999992`}, {
                    0.5498000000000001, 61.2454}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ + 20, {
                    1, 200 - 20 + 1}])}], 
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.5]]], 
                    GrayLevel[0.5], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    36.571, 1.031}, {42.440999999999995`, 1.031}, {
                    42.440999999999995`, 60.967}, {36.571, 60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5598000000000001, 
                    53.788500000000006`}, {26.5668, 31.015500000000007`}, {
                    0.5878000000000001, 8.343500000000006}, {
                    0.5598000000000001, 0.7525000000000048}, {36.8068, 
                    31.017500000000005`}, {0.5598000000000001, 
                    61.24450000000001}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    36.571, 1.031}, {42.440999999999995`, 1.031}, {
                    42.440999999999995`, 60.967}, {36.571, 60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5598000000000001, 
                    53.788500000000006`}, {26.5668, 31.015500000000007`}, {
                    0.5878000000000001, 8.343500000000006}, {
                    0.5598000000000001, 0.7525000000000048}, {36.8068, 
                    31.017500000000005`}, {0.5598000000000001, 
                    61.24450000000001}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ + 
                    200 20, {1, 200 - 20 + 1}])}]}, "   "], 
                  Row[{
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.5]]], 
                    GrayLevel[0.5], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{0.56, 
                    1.031}, {6.429, 1.031}, {6.429, 60.967}, {0.56, 
                    60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{6.192899999999999, 
                    30.980699999999995`}, {42.4399, 0.7526999999999973}, {
                    42.4399, 8.209699999999994}, {16.432899999999997`, 
                    30.982699999999994`}, {42.4119, 53.6547}, {42.4399, 
                    61.244699999999995`}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{0.56, 
                    1.031}, {6.429, 1.031}, {6.429, 60.967}, {0.56, 
                    60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{6.192899999999999, 
                    30.980699999999995`}, {42.4399, 0.7526999999999973}, {
                    42.4399, 8.209699999999994}, {16.432899999999997`, 
                    30.982699999999994`}, {42.4119, 53.6547}, {42.4399, 
                    61.244699999999995`}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ + 
                    200 (-20), {1, 200 - -20 + 1}])}], 
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.3]]], 
                    GrayLevel[0.3], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5499, 30.980699999999995`}, {
                    36.7969, 0.7526999999999973}, {36.7969, 
                    8.209699999999994}, {10.7899, 30.982699999999994`}, {
                    36.7689, 53.6547}, {36.7969, 61.244699999999995`}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5499, 30.980699999999995`}, {
                    36.7969, 0.7526999999999973}, {36.7969, 
                    8.209699999999994}, {10.7899, 30.982699999999994`}, {
                    36.7689, 53.6547}, {36.7969, 61.244699999999995`}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ - 20, {
                    1, 200 - -20 + 1}])}], 
                    Pane[
                    Row[{"showing ", 1, "\[Dash]", 20, " of ", 
                    Style[
                    200, FontColor -> GrayLevel[0], FontWeight -> "Medium"]}, 
                    BaseStyle -> {
                    FontSize -> 8., FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]}], 150, ContentPadding -> False, 
                    Alignment -> {Center, Center}], 
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.3]]], 
                    GrayLevel[0.3], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5778000000000001, 
                    53.654399999999995`}, {26.5568, 30.982399999999995`}, {
                    0.5498000000000001, 8.209399999999995}, {
                    0.5498000000000001, 0.7523999999999944}, {
                    36.796800000000005`, 30.980399999999992`}, {
                    0.5498000000000001, 61.2454}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5778000000000001, 
                    53.654399999999995`}, {26.5568, 30.982399999999995`}, {
                    0.5498000000000001, 8.209399999999995}, {
                    0.5498000000000001, 0.7523999999999944}, {
                    36.796800000000005`, 30.980399999999992`}, {
                    0.5498000000000001, 61.2454}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ + 20, {
                    1, 200 - 20 + 1}])}], 
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.5]]], 
                    GrayLevel[0.5], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    36.571, 1.031}, {42.440999999999995`, 1.031}, {
                    42.440999999999995`, 60.967}, {36.571, 60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5598000000000001, 
                    53.788500000000006`}, {26.5668, 31.015500000000007`}, {
                    0.5878000000000001, 8.343500000000006}, {
                    0.5598000000000001, 0.7525000000000048}, {36.8068, 
                    31.017500000000005`}, {0.5598000000000001, 
                    61.24450000000001}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    36.571, 1.031}, {42.440999999999995`, 1.031}, {
                    42.440999999999995`, 60.967}, {36.571, 60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5598000000000001, 
                    53.788500000000006`}, {26.5668, 31.015500000000007`}, {
                    0.5878000000000001, 8.343500000000006}, {
                    0.5598000000000001, 0.7525000000000048}, {36.8068, 
                    31.017500000000005`}, {0.5598000000000001, 
                    61.24450000000001}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ + 
                    200 20, {1, 200 - 20 + 1}])}]}, "   "]]], Background -> 
                GrayLevel[0.98], Alignment -> {Left, Top}, 
                BaseStyle -> {ContextMenu -> {
                    MenuItem["Hide", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 675842410}, 
                    1, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 10 rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 675842410}, 
                    10, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 30 rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 675842410}, 
                    30, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 100 rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 675842410}, 
                    100, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show all", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 675842410}, 
                    100000000, {}]], MenuEvaluator -> Automatic]}}], 
               SpanFromLeft, SpanFromLeft, SpanFromLeft}}, 
             BaseStyle -> {ContextMenu -> {
                 MenuItem["Copy position to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Copy data to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], Delimiter, 
                 MenuItem["Paste position in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Paste data in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic]}, FontFamily -> "Verdana", 
               FontSize -> 12}, Alignment -> Left, RowMinHeight -> 1.5, 
             Dividers -> All, FrameStyle -> GrayLevel[0.85], 
             BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
            LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False,
             ShowAutoStyles -> False]], 
         TypeSystem`NestedGrid`PackagePrivate`initialQ = True, 
         TypeSystem`NestedGrid`PackagePrivate`self = $Failed}, 
        Dynamic[
         TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
         TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
            Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
            
            Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
              TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
              TypeSystem`NestedGrid`PackagePrivate`LookupCacheValue[
                TypeSystem`NestedGrid`PackagePrivate`$state$$["Data"]]}, 
             TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = 
              If[TypeSystem`NestedGrid`PackagePrivate`tmpData$ === 
                TypeSystem`NestedGrid`PackagePrivate`$NotCached, 
                TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$grid$$, 675842410][
                TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
               Not[
                FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
               TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
               TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
          TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
          TypeSystem`NestedGrid`PackagePrivate`$pos$$; If[
            FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
            TypeSystem`SparseGrid[
             TypeSystem`H["(data no longer present)"]], 
            If[GeneralUtilities`$DebugMode, 
             Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
               TypeSystem`NestedGrid`PackagePrivate`formatState[
               TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                TypeSystem`NestedGrid`PackagePrivate`$pos$$]}], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
         TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$pos$$}], 
        DynamicModuleValues :> {}], 
      TypeSystem`NestedGrid`PackagePrivate`$posCell$$, 
      TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
        TypeSystem`NestedGrid`PackagePrivate`alignBar[
        TypeSystem`NestedGrid`PackagePrivate`$state$$][
         TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
          TypeSystem`PackageScope`Pathbar[
          TypeSystem`NestedGrid`PackagePrivate`$path$$, 
           TypeSystem`NestedGrid`PackagePrivate`updateState[
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
            TypeSystem`NestedGrid`PackagePrivate`$path$$, 
            TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$grid$$, 675842410]]]], 
        TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
      TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Framed[
        Dynamic[
         Replace[
          MouseAnnotation[Null], {
          TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[675842410][Null] -> 
           "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[675842410][
             Pattern[TypeSystem`NestedGrid`PackagePrivate`path, 
              Blank[]]] :> (
            TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
             TypeSystem`NestedGrid`PackagePrivate`path; 
            TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
             TypeSystem`NestedGrid`PackagePrivate`path, 
              TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
           Spacer[10], Blank[] :> Spacer[10]}], TrackedSymbols :> {}], 
        FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
        Top, ImageSize -> {Automatic, 14}]}, 
     DynamicBox[
      ToBoxes[
       Column[
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, {
          TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
          TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`alignBar[
           TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}, {
         TypeSystem`NestedGrid`PackagePrivate`$topBar$$, 
          TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
          TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`alignBar[
           TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}], Spacings -> 
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, 
          0, {{}, {0, 0.05, 0}}]], StandardForm], 
      ImageSizeCache -> {712., {338., 345.}}, 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     BaseStyle -> {LineBreakWithin -> False}, Deinitialization :> 
     TypeSystem`NestedGrid`PackagePrivate`deleteState[
      TypeSystem`NestedGrid`PackagePrivate`$state$$], 
     DynamicModuleValues :> {}, Initialization :> 
     Block[{$ContextPath = $ContextPath}, 
       Needs["TypeSystem`"]]], Deploy, DefaultBaseStyle -> "Deploy"]},
  "CopyTag",
  DisplayFunction->(#& ),
  InterpretationFunction->("Dataset[<>]"& )]], "Output",
 CellChangeTimes->{3.7732352676402693`*^9, 3.773422732962472*^9, 
  3.773584881622445*^9},
 CellLabel->"Out[96]=",ExpressionUUID->"e5255eb4-9efb-434c-9bf0-d3df6158850d"]
}, Open  ]],

Cell[TextData[{
 "We\[CloseCurlyQuote]ve seen how to put data to and get data from WC.  Now \
let\[CloseCurlyQuote]s combine this into our API processing capabilities.  \n\
\nThe API will get the todo list, and return some number, ",
 StyleBox["n",
  FontSlant->"Italic"],
 ", of todos that are completed or not.  Let\[CloseCurlyQuote]s work through \
the steps before we build the API."
}], "Text",
 CellChangeTimes->{{3.7732353612894893`*^9, 3.7732354111775084`*^9}, {
  3.773235494430668*^9, 3.7732355576432457`*^9}, {3.7732357670205355`*^9, 
  3.77323577243954*^9}, {3.7733280955172105`*^9, 3.773328115031209*^9}, {
  3.7735851513451257`*^9, 
  3.773585151714125*^9}},ExpressionUUID->"a4044301-3c0d-41d4-8ec7-\
b09a44d70864"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"temp", "=", 
  RowBox[{"CloudGet", "[", "\"\<data/todos\>\"", "]"}]}]], "Input",
 CellChangeTimes->{{3.773235814022532*^9, 3.773235880015221*^9}},
 CellLabel->"In[97]:=",ExpressionUUID->"5a0db035-0198-4d8a-98c4-64e2103c19a2"],

Cell[BoxData[
 TemplateBox[{TagBox[
    DynamicModuleBox[{
     TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
      Data`UnorderedAssociation[
       "RowCount" -> 20, "Length" -> 200, "InitialType" -> TypeSystem`Vector[
          TypeSystem`Struct[{"userId", "id", "title", "completed"}, {
            TypeSystem`Atom[Integer], 
            TypeSystem`Atom[Integer], 
            TypeSystem`Atom[String], 
            TypeSystem`Atom[TypeSystem`Boolean]}], 200], "Shape" -> 
        TypeSystem`PackageScope`HeaderShape[
          
          Association[{All, "userId"} -> 1, {All, "id"} -> 1, {All, "title"} -> 
           1, {All, "completed"} -> 1], 
          TypeSystem`PackageScope`Limited[
           TypeSystem`PackageScope`ColumnShape[
            TypeSystem`PackageScope`RowShape[
             Association[
             "userId" -> TypeSystem`PackageScope`AtomShape[34], "id" -> 
              TypeSystem`PackageScope`AtomShape[34], "title" -> 
              TypeSystem`PackageScope`AtomShape[480.00000000000006`], 
              "completed" -> TypeSystem`PackageScope`AtomShape[36]]]], 
           20, {}]], "InitialData" -> 
        TypeSystem`PackageScope`CacheHandle[263183008], "Type" -> 
        TypeSystem`Vector[
          TypeSystem`Struct[{"userId", "id", "title", "completed"}, {
            TypeSystem`Atom[Integer], 
            TypeSystem`Atom[Integer], 
            TypeSystem`Atom[String], 
            TypeSystem`Atom[TypeSystem`Boolean]}], 200], "HandleQ" -> True, 
        "RowTarget" -> 20, "Data" -> 
        TypeSystem`PackageScope`CacheHandle[263183008]], 
      TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
      TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 1, 
      TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
      DynamicModule[{
        TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
           Style[
            Grid[{{
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"userId\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"userId\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    2003596865][{All, "userId"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2003596865][
                  GeneralUtilities`Slice[All, "userId"]], "Mouse"], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"id\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"id\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    2003596865][{All, "id"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2003596865][
                  GeneralUtilities`Slice[All, "id"]], "Mouse"], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"title\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"title\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    2003596865][{All, "title"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2003596865][
                  GeneralUtilities`Slice[All, "title"]], "Mouse"], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"completed\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"completed\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    2003596865][{All, "completed"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2003596865][
                  GeneralUtilities`Slice[All, "completed"]], "Mouse"], 
                Background -> GrayLevel[0.95], 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["1"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2003596865][
                  GeneralUtilities`Slice[1, 
                   Key["userId"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["1"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2003596865][
                  GeneralUtilities`Slice[1, 
                   Key["id"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["delectus aut autem", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2003596865][
                  GeneralUtilities`Slice[1, 
                   Key["title"]]], "Mouse"], 
                ImageSize -> {{480.00000000000006`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["False"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2003596865][
                  GeneralUtilities`Slice[1, 
                   Key["completed"]]], "Mouse"], 
                ImageSize -> {{36, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["1"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2003596865][
                  GeneralUtilities`Slice[2, 
                   Key["userId"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["2"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2003596865][
                  GeneralUtilities`Slice[2, 
                   Key["id"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["quis ut nam facilis et officia qui", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2003596865][
                  GeneralUtilities`Slice[2, 
                   Key["title"]]], "Mouse"], 
                ImageSize -> {{480.00000000000006`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["False"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2003596865][
                  GeneralUtilities`Slice[2, 
                   Key["completed"]]], "Mouse"], 
                ImageSize -> {{36, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["1"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2003596865][
                  GeneralUtilities`Slice[3, 
                   Key["userId"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["3"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2003596865][
                  GeneralUtilities`Slice[3, 
                   Key["id"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["fugiat veniam minus", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2003596865][
                  GeneralUtilities`Slice[3, 
                   Key["title"]]], "Mouse"], 
                ImageSize -> {{480.00000000000006`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["False"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2003596865][
                  GeneralUtilities`Slice[3, 
                   Key["completed"]]], "Mouse"], 
                ImageSize -> {{36, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["1"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2003596865][
                  GeneralUtilities`Slice[4, 
                   Key["userId"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["4"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2003596865][
                  GeneralUtilities`Slice[4, 
                   Key["id"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["et porro tempora", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2003596865][
                  GeneralUtilities`Slice[4, 
                   Key["title"]]], "Mouse"], 
                ImageSize -> {{480.00000000000006`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["True"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2003596865][
                  GeneralUtilities`Slice[4, 
                   Key["completed"]]], "Mouse"], 
                ImageSize -> {{36, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["1"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2003596865][
                  GeneralUtilities`Slice[5, 
                   Key["userId"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["5"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2003596865][
                  GeneralUtilities`Slice[5, 
                   Key["id"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                "laboriosam mollitia et enim quasi adipisci quia provident \
illum", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2003596865][
                  GeneralUtilities`Slice[5, 
                   Key["title"]]], "Mouse"], 
                ImageSize -> {{480.00000000000006`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["False"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2003596865][
                  GeneralUtilities`Slice[5, 
                   Key["completed"]]], "Mouse"], 
                ImageSize -> {{36, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["1"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2003596865]
                 [
                  GeneralUtilities`Slice[6, 
                   Key["userId"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["6"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2003596865][
                  GeneralUtilities`Slice[6, 
                   Key["id"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                "qui ullam ratione quibusdam voluptatem quia omnis", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2003596865][
                  GeneralUtilities`Slice[6, 
                   Key["title"]]], "Mouse"], 
                ImageSize -> {{480.00000000000006`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["False"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2003596865][
                  GeneralUtilities`Slice[6, 
                   Key["completed"]]], "Mouse"], 
                ImageSize -> {{36, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["1"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2003596865][
                  GeneralUtilities`Slice[7, 
                   Key["userId"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["7"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2003596865][
                  GeneralUtilities`Slice[7, 
                   Key["id"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["illo expedita consequatur quia in", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2003596865][
                  GeneralUtilities`Slice[7, 
                   Key["title"]]], "Mouse"], 
                ImageSize -> {{480.00000000000006`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["False"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2003596865][
                  GeneralUtilities`Slice[7, 
                   Key["completed"]]], "Mouse"], 
                ImageSize -> {{36, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["1"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2003596865][
                  GeneralUtilities`Slice[8, 
                   Key["userId"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["8"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2003596865][
                  GeneralUtilities`Slice[8, 
                   Key["id"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["quo adipisci enim quam ut ab", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2003596865][
                  GeneralUtilities`Slice[8, 
                   Key["title"]]], "Mouse"], 
                ImageSize -> {{480.00000000000006`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["True"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2003596865][
                  GeneralUtilities`Slice[8, 
                   Key["completed"]]], "Mouse"], 
                ImageSize -> {{36, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["1"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2003596865][
                  GeneralUtilities`Slice[9, 
                   Key["userId"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["9"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2003596865][
                  GeneralUtilities`Slice[9, 
                   Key["id"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["molestiae perspiciatis ipsa", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2003596865][
                  GeneralUtilities`Slice[9, 
                   Key["title"]]], "Mouse"], 
                ImageSize -> {{480.00000000000006`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["False"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2003596865][
                  GeneralUtilities`Slice[9, 
                   Key["completed"]]], "Mouse"], 
                ImageSize -> {{36, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["1"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2003596865][
                  GeneralUtilities`Slice[10, 
                   Key["userId"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["10"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2003596865][
                  GeneralUtilities`Slice[10, 
                   Key["id"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["illo est ratione doloremque quia maiores aut", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2003596865][
                  GeneralUtilities`Slice[10, 
                   Key["title"]]], "Mouse"], 
                ImageSize -> {{480.00000000000006`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["True"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2003596865][
                  GeneralUtilities`Slice[10, 
                   Key["completed"]]], "Mouse"], 
                ImageSize -> {{36, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["1"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2003596865][
                  GeneralUtilities`Slice[11, 
                   Key["userId"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["11"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2003596865][
                  GeneralUtilities`Slice[11, 
                   Key["id"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["vero rerum temporibus dolor", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2003596865][
                  GeneralUtilities`Slice[11, 
                   Key["title"]]], "Mouse"], 
                ImageSize -> {{480.00000000000006`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["True"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2003596865][
                  GeneralUtilities`Slice[11, 
                   Key["completed"]]], "Mouse"], 
                ImageSize -> {{36, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["1"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2003596865][
                  GeneralUtilities`Slice[12, 
                   Key["userId"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["12"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2003596865][
                  GeneralUtilities`Slice[12, 
                   Key["id"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["ipsa repellendus fugit nisi", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2003596865][
                  GeneralUtilities`Slice[12, 
                   Key["title"]]], "Mouse"], 
                ImageSize -> {{480.00000000000006`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["True"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2003596865][
                  GeneralUtilities`Slice[12, 
                   Key["completed"]]], "Mouse"], 
                ImageSize -> {{36, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["1"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2003596865][
                  GeneralUtilities`Slice[13, 
                   Key["userId"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["13"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2003596865][
                  GeneralUtilities`Slice[13, 
                   Key["id"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["et doloremque nulla", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2003596865][
                  GeneralUtilities`Slice[13, 
                   Key["title"]]], "Mouse"], 
                ImageSize -> {{480.00000000000006`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["False"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2003596865][
                  GeneralUtilities`Slice[13, 
                   Key["completed"]]], "Mouse"], 
                ImageSize -> {{36, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["1"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2003596865][
                  GeneralUtilities`Slice[14, 
                   Key["userId"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["14"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2003596865][
                  GeneralUtilities`Slice[14, 
                   Key["id"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["repellendus sunt dolores architecto voluptatum", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2003596865][
                  GeneralUtilities`Slice[14, 
                   Key["title"]]], "Mouse"], 
                ImageSize -> {{480.00000000000006`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["True"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2003596865][
                  GeneralUtilities`Slice[14, 
                   Key["completed"]]], "Mouse"], 
                ImageSize -> {{36, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["1"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2003596865][
                  GeneralUtilities`Slice[15, 
                   Key["userId"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["15"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2003596865][
                  GeneralUtilities`Slice[15, 
                   Key["id"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["ab voluptatum amet voluptas", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2003596865][
                  GeneralUtilities`Slice[15, 
                   Key["title"]]], "Mouse"], 
                ImageSize -> {{480.00000000000006`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["True"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2003596865][
                  GeneralUtilities`Slice[15, 
                   Key["completed"]]], "Mouse"], 
                ImageSize -> {{36, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["1"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2003596865][
                  GeneralUtilities`Slice[16, 
                   Key["userId"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["16"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2003596865][
                  GeneralUtilities`Slice[16, 
                   Key["id"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["accusamus eos facilis sint et aut voluptatem", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2003596865][
                  GeneralUtilities`Slice[16, 
                   Key["title"]]], "Mouse"], 
                ImageSize -> {{480.00000000000006`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["True"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2003596865][
                  GeneralUtilities`Slice[16, 
                   Key["completed"]]], "Mouse"], 
                ImageSize -> {{36, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["1"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2003596865][
                  GeneralUtilities`Slice[17, 
                   Key["userId"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["17"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2003596865][
                  GeneralUtilities`Slice[17, 
                   Key["id"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["quo laboriosam deleniti aut qui", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2003596865][
                  GeneralUtilities`Slice[17, 
                   Key["title"]]], "Mouse"], 
                ImageSize -> {{480.00000000000006`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["True"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2003596865][
                  GeneralUtilities`Slice[17, 
                   Key["completed"]]], "Mouse"], 
                ImageSize -> {{36, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["1"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2003596865][
                  GeneralUtilities`Slice[18, 
                   Key["userId"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["18"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2003596865][
                  GeneralUtilities`Slice[18, 
                   Key["id"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["dolorum est consequatur ea mollitia in culpa", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2003596865][
                  GeneralUtilities`Slice[18, 
                   Key["title"]]], "Mouse"], 
                ImageSize -> {{480.00000000000006`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["False"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2003596865][
                  GeneralUtilities`Slice[18, 
                   Key["completed"]]], "Mouse"], 
                ImageSize -> {{36, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["1"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2003596865][
                  GeneralUtilities`Slice[19, 
                   Key["userId"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["19"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2003596865][
                  GeneralUtilities`Slice[19, 
                   Key["id"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                "molestiae ipsa aut voluptatibus pariatur dolor nihil", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2003596865][
                  GeneralUtilities`Slice[19, 
                   Key["title"]]], "Mouse"], 
                ImageSize -> {{480.00000000000006`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["True"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2003596865][
                  GeneralUtilities`Slice[19, 
                   Key["completed"]]], "Mouse"], 
                ImageSize -> {{36, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["1"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2003596865][
                  GeneralUtilities`Slice[20, 
                   Key["userId"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["20"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2003596865][
                  GeneralUtilities`Slice[20, 
                   Key["id"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["ullam nobis libero sapiente ad optio sint", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2003596865][
                  GeneralUtilities`Slice[20, 
                   Key["title"]]], "Mouse"], 
                ImageSize -> {{480.00000000000006`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["True"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2003596865][
                  GeneralUtilities`Slice[20, 
                   Key["completed"]]], "Mouse"], 
                ImageSize -> {{36, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Deploy[
                 Mouseover[
                  Row[{
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.5]]], 
                    GrayLevel[0.5], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{0.56, 
                    1.031}, {6.429, 1.031}, {6.429, 60.967}, {0.56, 
                    60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{6.192899999999999, 
                    30.980699999999995`}, {42.4399, 0.7526999999999973}, {
                    42.4399, 8.209699999999994}, {16.432899999999997`, 
                    30.982699999999994`}, {42.4119, 53.6547}, {42.4399, 
                    61.244699999999995`}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{0.56, 
                    1.031}, {6.429, 1.031}, {6.429, 60.967}, {0.56, 
                    60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{6.192899999999999, 
                    30.980699999999995`}, {42.4399, 0.7526999999999973}, {
                    42.4399, 8.209699999999994}, {16.432899999999997`, 
                    30.982699999999994`}, {42.4119, 53.6547}, {42.4399, 
                    61.244699999999995`}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ + 
                    200 (-20), {1, 200 - -20 + 1}])}], 
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.3]]], 
                    GrayLevel[0.3], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5499, 30.980699999999995`}, {
                    36.7969, 0.7526999999999973}, {36.7969, 
                    8.209699999999994}, {10.7899, 30.982699999999994`}, {
                    36.7689, 53.6547}, {36.7969, 61.244699999999995`}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5499, 30.980699999999995`}, {
                    36.7969, 0.7526999999999973}, {36.7969, 
                    8.209699999999994}, {10.7899, 30.982699999999994`}, {
                    36.7689, 53.6547}, {36.7969, 61.244699999999995`}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ - 20, {
                    1, 200 - -20 + 1}])}], 
                    Pane[
                    Row[{"showing ", 1, "\[Dash]", 20, " of ", 
                    Style[
                    200, FontColor -> GrayLevel[0], FontWeight -> "Medium"]}, 
                    BaseStyle -> {
                    FontSize -> 8., FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]}], 150, ContentPadding -> False, 
                    Alignment -> {Center, Center}], 
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.3]]], 
                    GrayLevel[0.3], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5778000000000001, 
                    53.654399999999995`}, {26.5568, 30.982399999999995`}, {
                    0.5498000000000001, 8.209399999999995}, {
                    0.5498000000000001, 0.7523999999999944}, {
                    36.796800000000005`, 30.980399999999992`}, {
                    0.5498000000000001, 61.2454}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5778000000000001, 
                    53.654399999999995`}, {26.5568, 30.982399999999995`}, {
                    0.5498000000000001, 8.209399999999995}, {
                    0.5498000000000001, 0.7523999999999944}, {
                    36.796800000000005`, 30.980399999999992`}, {
                    0.5498000000000001, 61.2454}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ + 20, {
                    1, 200 - 20 + 1}])}], 
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.5]]], 
                    GrayLevel[0.5], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    36.571, 1.031}, {42.440999999999995`, 1.031}, {
                    42.440999999999995`, 60.967}, {36.571, 60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5598000000000001, 
                    53.788500000000006`}, {26.5668, 31.015500000000007`}, {
                    0.5878000000000001, 8.343500000000006}, {
                    0.5598000000000001, 0.7525000000000048}, {36.8068, 
                    31.017500000000005`}, {0.5598000000000001, 
                    61.24450000000001}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    36.571, 1.031}, {42.440999999999995`, 1.031}, {
                    42.440999999999995`, 60.967}, {36.571, 60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5598000000000001, 
                    53.788500000000006`}, {26.5668, 31.015500000000007`}, {
                    0.5878000000000001, 8.343500000000006}, {
                    0.5598000000000001, 0.7525000000000048}, {36.8068, 
                    31.017500000000005`}, {0.5598000000000001, 
                    61.24450000000001}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ + 
                    200 20, {1, 200 - 20 + 1}])}]}, "   "], 
                  Row[{
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.5]]], 
                    GrayLevel[0.5], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{0.56, 
                    1.031}, {6.429, 1.031}, {6.429, 60.967}, {0.56, 
                    60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{6.192899999999999, 
                    30.980699999999995`}, {42.4399, 0.7526999999999973}, {
                    42.4399, 8.209699999999994}, {16.432899999999997`, 
                    30.982699999999994`}, {42.4119, 53.6547}, {42.4399, 
                    61.244699999999995`}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{0.56, 
                    1.031}, {6.429, 1.031}, {6.429, 60.967}, {0.56, 
                    60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{6.192899999999999, 
                    30.980699999999995`}, {42.4399, 0.7526999999999973}, {
                    42.4399, 8.209699999999994}, {16.432899999999997`, 
                    30.982699999999994`}, {42.4119, 53.6547}, {42.4399, 
                    61.244699999999995`}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ + 
                    200 (-20), {1, 200 - -20 + 1}])}], 
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.3]]], 
                    GrayLevel[0.3], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5499, 30.980699999999995`}, {
                    36.7969, 0.7526999999999973}, {36.7969, 
                    8.209699999999994}, {10.7899, 30.982699999999994`}, {
                    36.7689, 53.6547}, {36.7969, 61.244699999999995`}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5499, 30.980699999999995`}, {
                    36.7969, 0.7526999999999973}, {36.7969, 
                    8.209699999999994}, {10.7899, 30.982699999999994`}, {
                    36.7689, 53.6547}, {36.7969, 61.244699999999995`}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ - 20, {
                    1, 200 - -20 + 1}])}], 
                    Pane[
                    Row[{"showing ", 1, "\[Dash]", 20, " of ", 
                    Style[
                    200, FontColor -> GrayLevel[0], FontWeight -> "Medium"]}, 
                    BaseStyle -> {
                    FontSize -> 8., FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]}], 150, ContentPadding -> False, 
                    Alignment -> {Center, Center}], 
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.3]]], 
                    GrayLevel[0.3], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5778000000000001, 
                    53.654399999999995`}, {26.5568, 30.982399999999995`}, {
                    0.5498000000000001, 8.209399999999995}, {
                    0.5498000000000001, 0.7523999999999944}, {
                    36.796800000000005`, 30.980399999999992`}, {
                    0.5498000000000001, 61.2454}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5778000000000001, 
                    53.654399999999995`}, {26.5568, 30.982399999999995`}, {
                    0.5498000000000001, 8.209399999999995}, {
                    0.5498000000000001, 0.7523999999999944}, {
                    36.796800000000005`, 30.980399999999992`}, {
                    0.5498000000000001, 61.2454}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ + 20, {
                    1, 200 - 20 + 1}])}], 
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.5]]], 
                    GrayLevel[0.5], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    36.571, 1.031}, {42.440999999999995`, 1.031}, {
                    42.440999999999995`, 60.967}, {36.571, 60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5598000000000001, 
                    53.788500000000006`}, {26.5668, 31.015500000000007`}, {
                    0.5878000000000001, 8.343500000000006}, {
                    0.5598000000000001, 0.7525000000000048}, {36.8068, 
                    31.017500000000005`}, {0.5598000000000001, 
                    61.24450000000001}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    36.571, 1.031}, {42.440999999999995`, 1.031}, {
                    42.440999999999995`, 60.967}, {36.571, 60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5598000000000001, 
                    53.788500000000006`}, {26.5668, 31.015500000000007`}, {
                    0.5878000000000001, 8.343500000000006}, {
                    0.5598000000000001, 0.7525000000000048}, {36.8068, 
                    31.017500000000005`}, {0.5598000000000001, 
                    61.24450000000001}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ + 
                    200 20, {1, 200 - 20 + 1}])}]}, "   "]]], Background -> 
                GrayLevel[0.98], Alignment -> {Left, Top}, 
                BaseStyle -> {ContextMenu -> {
                    MenuItem["Hide", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 2003596865},
                     1, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 10 rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 2003596865},
                     10, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 30 rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 2003596865},
                     30, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 100 rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 2003596865},
                     100, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show all", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 2003596865},
                     100000000, {}]], MenuEvaluator -> Automatic]}}], 
               SpanFromLeft, SpanFromLeft, SpanFromLeft}}, 
             BaseStyle -> {ContextMenu -> {
                 MenuItem["Copy position to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Copy data to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], Delimiter, 
                 MenuItem["Paste position in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Paste data in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic]}, FontFamily -> "Verdana", 
               FontSize -> 12}, Alignment -> Left, RowMinHeight -> 1.5, 
             Dividers -> All, FrameStyle -> GrayLevel[0.85], 
             BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
            LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False,
             ShowAutoStyles -> False]], 
         TypeSystem`NestedGrid`PackagePrivate`initialQ = True, 
         TypeSystem`NestedGrid`PackagePrivate`self = $Failed}, 
        Dynamic[
         TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
         TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
            Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
            
            Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
              TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
              TypeSystem`NestedGrid`PackagePrivate`LookupCacheValue[
                TypeSystem`NestedGrid`PackagePrivate`$state$$["Data"]]}, 
             TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = 
              If[TypeSystem`NestedGrid`PackagePrivate`tmpData$ === 
                TypeSystem`NestedGrid`PackagePrivate`$NotCached, 
                TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$grid$$, 2003596865][
                TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
               Not[
                FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
               TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
               TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
          TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
          TypeSystem`NestedGrid`PackagePrivate`$pos$$; If[
            FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
            TypeSystem`SparseGrid[
             TypeSystem`H["(data no longer present)"]], 
            If[GeneralUtilities`$DebugMode, 
             Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
               TypeSystem`NestedGrid`PackagePrivate`formatState[
               TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                TypeSystem`NestedGrid`PackagePrivate`$pos$$]}], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
         TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$pos$$}], 
        DynamicModuleValues :> {}], 
      TypeSystem`NestedGrid`PackagePrivate`$posCell$$, 
      TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
        TypeSystem`NestedGrid`PackagePrivate`alignBar[
        TypeSystem`NestedGrid`PackagePrivate`$state$$][
         TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
          TypeSystem`PackageScope`Pathbar[
          TypeSystem`NestedGrid`PackagePrivate`$path$$, 
           TypeSystem`NestedGrid`PackagePrivate`updateState[
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
            TypeSystem`NestedGrid`PackagePrivate`$path$$, 
            TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$grid$$, 2003596865]]]], 
        TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
      TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Framed[
        Dynamic[
         Replace[
          MouseAnnotation[Null], {
          TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2003596865][Null] -> 
           "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2003596865][
             Pattern[TypeSystem`NestedGrid`PackagePrivate`path, 
              Blank[]]] :> (
            TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
             TypeSystem`NestedGrid`PackagePrivate`path; 
            TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
             TypeSystem`NestedGrid`PackagePrivate`path, 
              TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
           Spacer[10], Blank[] :> Spacer[10]}], TrackedSymbols :> {}], 
        FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
        Top, ImageSize -> {Automatic, 14}]}, 
     DynamicBox[
      ToBoxes[
       Column[
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, {
          TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
          TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`alignBar[
           TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}, {
         TypeSystem`NestedGrid`PackagePrivate`$topBar$$, 
          TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
          TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`alignBar[
           TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}], Spacings -> 
        If[
         TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, 
          0, {{}, {0, 0.05, 0}}]], StandardForm], 
      ImageSizeCache -> {712., {338., 345.}}, 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     BaseStyle -> {LineBreakWithin -> False}, Deinitialization :> 
     TypeSystem`NestedGrid`PackagePrivate`deleteState[
      TypeSystem`NestedGrid`PackagePrivate`$state$$], 
     DynamicModuleValues :> {}, Initialization :> 
     Block[{$ContextPath = $ContextPath}, 
       Needs["TypeSystem`"]]], Deploy, DefaultBaseStyle -> "Deploy"]},
  "CopyTag",
  DisplayFunction->(#& ),
  InterpretationFunction->("Dataset[<>]"& )]], "Output",
 CellChangeTimes->{3.7732358847822547`*^9, 3.7733283069058084`*^9, 
  3.77342273636647*^9, 3.773584924104462*^9},
 CellLabel->"Out[97]=",ExpressionUUID->"93e789f3-30f3-4cf8-8a12-634e5024545e"]
}, Open  ]],

Cell["\<\
What are Head[ ]\[CloseCurlyQuote]s?  Any unexpected String[ ]\
\[CloseCurlyQuote]s or Missing[ ]\[CloseCurlyQuote]s?\
\>", "Text",
 CellChangeTimes->{{3.77358502537714*^9, 
  3.7735850926121264`*^9}},ExpressionUUID->"a9101993-f674-43c3-ad80-\
fea76e4912e9"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"temp", "[", 
  RowBox[{"Union", ",", "All", ",", "Head"}], "]"}]], "Input",
 CellChangeTimes->{{3.7732358977513027`*^9, 3.7732359254835744`*^9}, {
  3.7735849493211627`*^9, 3.773584950101161*^9}},
 CellLabel->"In[99]:=",ExpressionUUID->"4b6ec769-faba-404b-8708-863dbc554368"],

Cell[BoxData[
 TemplateBox[{TagBox[
    DynamicModuleBox[{
     TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
      Data`UnorderedAssociation[
       "RowCount" -> 1, "Length" -> 1, "InitialType" -> TypeSystem`Vector[
          TypeSystem`Assoc[
           TypeSystem`Atom[
            TypeSystem`Enumeration["completed", "id", "title", "userId"]], 
           TypeSystem`AnyType, 4], 1], "Shape" -> 
        TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`ColumnShape[
           TypeSystem`PackageScope`Limited[
            TypeSystem`PackageScope`ColumnShape[
             TypeSystem`PackageScope`KeyValueShape[
              TypeSystem`PackageScope`AtomShape[81.], 
              TypeSystem`PackageScope`UnknownShape]], 4, {All}]], 1, {}], 
        "InitialData" -> TypeSystem`PackageScope`CacheHandle[1208011797], 
        "Type" -> TypeSystem`Vector[
          TypeSystem`Assoc[
           TypeSystem`Atom[
            TypeSystem`Enumeration["completed", "id", "title", "userId"]], 
           TypeSystem`AnyType, 4], 1], "HandleQ" -> True, "RowTarget" -> 20, 
        "Data" -> TypeSystem`PackageScope`CacheHandle[1208011797]], 
      TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
      TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 1, 
      TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
      DynamicModule[{
        TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
           Style[
            Grid[{{
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover["userId", 
                    Style[
                    "userId", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    2051761886][{1, 
                    Key["userId"]}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  2051761886][
                   GeneralUtilities`Slice[1, 
                    Key["userId"]]], "Mouse"], 
                 ImageSize -> {{81., Full}, Automatic}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                  "Integer", FontFamily -> "Source Code Pro", FontSize -> 13, 
                   ShowStringCharacters -> True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2051761886][
                  GeneralUtilities`Slice[1, 
                   Key["userId"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover["id", 
                    Style[
                    "id", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    2051761886][{1, 
                    Key["id"]}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  2051761886][
                   GeneralUtilities`Slice[1, 
                    Key["id"]]], "Mouse"], 
                 ImageSize -> {{81., Full}, Automatic}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                  "Integer", FontFamily -> "Source Code Pro", FontSize -> 13, 
                   ShowStringCharacters -> True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2051761886][
                  GeneralUtilities`Slice[1, 
                   Key["id"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover["title", 
                    Style[
                    "title", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    2051761886][{1, 
                    Key["title"]}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  2051761886][
                   GeneralUtilities`Slice[1, 
                    Key["title"]]], "Mouse"], 
                 ImageSize -> {{81., Full}, Automatic}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                  "String", FontFamily -> "Source Code Pro", FontSize -> 13, 
                   ShowStringCharacters -> True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2051761886][
                  GeneralUtilities`Slice[1, 
                   Key["title"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover["completed", 
                    Style[
                    "completed", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    2051761886][{1, 
                    Key["completed"]}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  2051761886][
                   GeneralUtilities`Slice[1, 
                    Key["completed"]]], "Mouse"], 
                 ImageSize -> {{81., Full}, Automatic}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                  "Symbol", FontFamily -> "Source Code Pro", FontSize -> 13, 
                   ShowStringCharacters -> True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2051761886][
                  GeneralUtilities`Slice[1, 
                   Key["completed"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}}, BaseStyle -> {ContextMenu -> {
                 MenuItem["Copy position to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Copy data to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], Delimiter, 
                 MenuItem["Paste position in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Paste data in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic]}, FontFamily -> "Verdana", 
               FontSize -> 12}, Alignment -> Left, RowMinHeight -> 1.5, 
             Dividers -> All, FrameStyle -> GrayLevel[0.85], 
             BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
            LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False,
             ShowAutoStyles -> False]], 
         TypeSystem`NestedGrid`PackagePrivate`initialQ = True, 
         TypeSystem`NestedGrid`PackagePrivate`self = $Failed}, 
        Dynamic[
         TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
         TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
            Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
            
            Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
              TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
              TypeSystem`NestedGrid`PackagePrivate`LookupCacheValue[
                TypeSystem`NestedGrid`PackagePrivate`$state$$["Data"]]}, 
             TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = 
              If[TypeSystem`NestedGrid`PackagePrivate`tmpData$ === 
                TypeSystem`NestedGrid`PackagePrivate`$NotCached, 
                TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$grid$$, 2051761886][
                TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
               Not[
                FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
               TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
               TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
          TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
          TypeSystem`NestedGrid`PackagePrivate`$pos$$; If[
            FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
            TypeSystem`SparseGrid[
             TypeSystem`H["(data no longer present)"]], 
            If[GeneralUtilities`$DebugMode, 
             Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
               TypeSystem`NestedGrid`PackagePrivate`formatState[
               TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                TypeSystem`NestedGrid`PackagePrivate`$pos$$]}], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
         TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$pos$$}], 
        DynamicModuleValues :> {}], 
      TypeSystem`NestedGrid`PackagePrivate`$posCell$$, 
      TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
        TypeSystem`NestedGrid`PackagePrivate`alignBar[
        TypeSystem`NestedGrid`PackagePrivate`$state$$][
         TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
          TypeSystem`PackageScope`Pathbar[
          TypeSystem`NestedGrid`PackagePrivate`$path$$, 
           TypeSystem`NestedGrid`PackagePrivate`updateState[
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
            TypeSystem`NestedGrid`PackagePrivate`$path$$, 
            TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$grid$$, 2051761886]]]], 
        TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
      TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Framed[
        Dynamic[
         Replace[
          MouseAnnotation[Null], {
          TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2051761886][Null] -> 
           "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2051761886][
             Pattern[TypeSystem`NestedGrid`PackagePrivate`path, 
              Blank[]]] :> (
            TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
             TypeSystem`NestedGrid`PackagePrivate`path; 
            TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
             TypeSystem`NestedGrid`PackagePrivate`path, 
              TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
           Spacer[10], Blank[] :> Spacer[10]}], TrackedSymbols :> {}], 
        FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
        Top, ImageSize -> {Automatic, 14}]}, 
     DynamicBox[
      ToBoxes[
       Column[
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, {
          TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
          TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`alignBar[
           TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}, {
         TypeSystem`NestedGrid`PackagePrivate`$topBar$$, 
          TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
          TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`alignBar[
           TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}], Spacings -> 
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, 
          0, {{}, {0, 0.05, 0}}]], StandardForm], 
      ImageSizeCache -> {176., {68.5, 75.5}}, 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     BaseStyle -> {LineBreakWithin -> False}, Deinitialization :> 
     TypeSystem`NestedGrid`PackagePrivate`deleteState[
      TypeSystem`NestedGrid`PackagePrivate`$state$$], 
     DynamicModuleValues :> {}, Initialization :> 
     Block[{$ContextPath = $ContextPath}, 
       Needs["TypeSystem`"]]], Deploy, DefaultBaseStyle -> "Deploy"]},
  "CopyTag",
  DisplayFunction->(#& ),
  InterpretationFunction->("Dataset[<>]"& )]], "Output",
 CellChangeTimes->{{3.773235904358571*^9, 3.773235926285614*^9}, 
   3.7733283081868105`*^9, 3.7734227383864684`*^9, {3.7735849315314913`*^9, 
   3.7735849511971445`*^9}},
 CellLabel->"Out[99]=",ExpressionUUID->"5ef14b52-f732-49e6-806f-0cecd67b5a8e"]
}, Open  ]],

Cell["\<\
There are a number of ways we can go.  The API request will give us 2 \
selection criteria: competed {True or False}, and the number of to do\
\[CloseCurlyQuote]s to return.  We can make a very simple select like this...\
\>", "Text",
 CellChangeTimes->{{3.77332815496222*^9, 3.773328283013773*^9}, 
   3.7735851050381403`*^9},ExpressionUUID->"c9989137-8586-4070-bd64-\
250e1f06a426"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"temp", "[", 
  RowBox[{
   RowBox[{"Select", "[", 
    RowBox[{
     RowBox[{"#completed", " ", "\[Equal]", " ", "True"}], "&"}], "]"}], "/*", 
   RowBox[{"Take", "[", 
    RowBox[{";;", "10"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.773235814022532*^9, 3.7732358820502243`*^9}, {
   3.7732359322885733`*^9, 3.7732359333195734`*^9}, {3.773235978959525*^9, 
   3.7732359979935374`*^9}, {3.773328991140467*^9, 3.7733289921704564`*^9}, 
   3.7735852058481245`*^9},ExpressionUUID->"8a71ae71-b74d-48a0-8c36-\
931c9a804827"],

Cell[BoxData[
 TemplateBox[{TagBox[
    DynamicModuleBox[{
     TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
      Data`UnorderedAssociation[
       "RowCount" -> 10, "Length" -> 10, "InitialType" -> TypeSystem`Vector[
          TypeSystem`Struct[{"userId", "id", "title", "completed"}, {
            TypeSystem`Atom[Integer], 
            TypeSystem`Atom[Integer], 
            TypeSystem`Atom[String], 
            TypeSystem`Atom[TypeSystem`Boolean]}], 10], "Shape" -> 
        TypeSystem`PackageScope`HeaderShape[
          
          Association[{All, "userId"} -> 1, {All, "id"} -> 1, {All, "title"} -> 
           1, {All, "completed"} -> 1], 
          TypeSystem`PackageScope`Limited[
           TypeSystem`PackageScope`ColumnShape[
            TypeSystem`PackageScope`RowShape[
             Association[
             "userId" -> TypeSystem`PackageScope`AtomShape[34], "id" -> 
              TypeSystem`PackageScope`AtomShape[34], "title" -> 
              TypeSystem`PackageScope`AtomShape[441.6000000000001], 
              "completed" -> TypeSystem`PackageScope`AtomShape[36]]]], 
           10, {}]], "InitialData" -> 
        TypeSystem`PackageScope`CacheHandle[1637473690], "Type" -> 
        TypeSystem`Vector[
          TypeSystem`Struct[{"userId", "id", "title", "completed"}, {
            TypeSystem`Atom[Integer], 
            TypeSystem`Atom[Integer], 
            TypeSystem`Atom[String], 
            TypeSystem`Atom[TypeSystem`Boolean]}], 10], "HandleQ" -> True, 
        "RowTarget" -> 20, "Data" -> 
        TypeSystem`PackageScope`CacheHandle[1637473690]], 
      TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
      TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 1, 
      TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
      DynamicModule[{
        TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
           Style[
            Grid[{{
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"userId\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"userId\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 593838451][{
                    All, "userId"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[593838451][
                  GeneralUtilities`Slice[All, "userId"]], "Mouse"], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"id\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"id\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 593838451][{
                    All, "id"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[593838451][
                  GeneralUtilities`Slice[All, "id"]], "Mouse"], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"title\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"title\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 593838451][{
                    All, "title"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[593838451][
                  GeneralUtilities`Slice[All, "title"]], "Mouse"], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"completed\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"completed\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 593838451][{
                    All, "completed"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[593838451][
                  GeneralUtilities`Slice[All, "completed"]], "Mouse"], 
                Background -> GrayLevel[0.95], 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["1"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[593838451][
                  GeneralUtilities`Slice[1, 
                   Key["userId"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["4"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[593838451][
                  GeneralUtilities`Slice[1, 
                   Key["id"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["et porro tempora", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[593838451][
                  GeneralUtilities`Slice[1, 
                   Key["title"]]], "Mouse"], 
                ImageSize -> {{441.6000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["True"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[593838451][
                  GeneralUtilities`Slice[1, 
                   Key["completed"]]], "Mouse"], 
                ImageSize -> {{36, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["1"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[593838451][
                  GeneralUtilities`Slice[2, 
                   Key["userId"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["8"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[593838451][
                  GeneralUtilities`Slice[2, 
                   Key["id"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["quo adipisci enim quam ut ab", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[593838451][
                  GeneralUtilities`Slice[2, 
                   Key["title"]]], "Mouse"], 
                ImageSize -> {{441.6000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["True"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[593838451][
                  GeneralUtilities`Slice[2, 
                   Key["completed"]]], "Mouse"], 
                ImageSize -> {{36, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["1"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[593838451][
                  GeneralUtilities`Slice[3, 
                   Key["userId"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["10"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[593838451][
                  GeneralUtilities`Slice[3, 
                   Key["id"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["illo est ratione doloremque quia maiores aut", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[593838451][
                  GeneralUtilities`Slice[3, 
                   Key["title"]]], "Mouse"], 
                ImageSize -> {{441.6000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["True"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[593838451][
                  GeneralUtilities`Slice[3, 
                   Key["completed"]]], "Mouse"], 
                ImageSize -> {{36, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["1"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[593838451][
                  GeneralUtilities`Slice[4, 
                   Key["userId"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["11"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[593838451][
                  GeneralUtilities`Slice[4, 
                   Key["id"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["vero rerum temporibus dolor", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[593838451][
                  GeneralUtilities`Slice[4, 
                   Key["title"]]], "Mouse"], 
                ImageSize -> {{441.6000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["True"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[593838451][
                  GeneralUtilities`Slice[4, 
                   Key["completed"]]], "Mouse"], 
                ImageSize -> {{36, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["1"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[593838451][
                  GeneralUtilities`Slice[5, 
                   Key["userId"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["12"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[593838451][
                  GeneralUtilities`Slice[5, 
                   Key["id"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["ipsa repellendus fugit nisi", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[593838451][
                  GeneralUtilities`Slice[5, 
                   Key["title"]]], "Mouse"], 
                ImageSize -> {{441.6000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["True"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[593838451][
                  GeneralUtilities`Slice[5, 
                   Key["completed"]]], "Mouse"], 
                ImageSize -> {{36, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["1"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[593838451][
                  GeneralUtilities`Slice[6, 
                   Key["userId"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["14"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[593838451][
                  GeneralUtilities`Slice[6, 
                   Key["id"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["repellendus sunt dolores architecto voluptatum", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[593838451][
                  GeneralUtilities`Slice[6, 
                   Key["title"]]], "Mouse"], 
                ImageSize -> {{441.6000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["True"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[593838451][
                  GeneralUtilities`Slice[6, 
                   Key["completed"]]], "Mouse"], 
                ImageSize -> {{36, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["1"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[593838451][
                  GeneralUtilities`Slice[7, 
                   Key["userId"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["15"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[593838451][
                  GeneralUtilities`Slice[7, 
                   Key["id"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["ab voluptatum amet voluptas", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[593838451][
                  GeneralUtilities`Slice[7, 
                   Key["title"]]], "Mouse"], 
                ImageSize -> {{441.6000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["True"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[593838451][
                  GeneralUtilities`Slice[7, 
                   Key["completed"]]], "Mouse"], 
                ImageSize -> {{36, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["1"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[593838451][
                  GeneralUtilities`Slice[8, 
                   Key["userId"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["16"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[593838451][
                  GeneralUtilities`Slice[8, 
                   Key["id"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["accusamus eos facilis sint et aut voluptatem", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[593838451][
                  GeneralUtilities`Slice[8, 
                   Key["title"]]], "Mouse"], 
                ImageSize -> {{441.6000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["True"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[593838451][
                  GeneralUtilities`Slice[8, 
                   Key["completed"]]], "Mouse"], 
                ImageSize -> {{36, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["1"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[593838451][
                  GeneralUtilities`Slice[9, 
                   Key["userId"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["17"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[593838451][
                  GeneralUtilities`Slice[9, 
                   Key["id"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["quo laboriosam deleniti aut qui", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[593838451][
                  GeneralUtilities`Slice[9, 
                   Key["title"]]], "Mouse"], 
                ImageSize -> {{441.6000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["True"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[593838451][
                  GeneralUtilities`Slice[9, 
                   Key["completed"]]], "Mouse"], 
                ImageSize -> {{36, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["1"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[593838451][
                  GeneralUtilities`Slice[10, 
                   Key["userId"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["19"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[593838451][
                  GeneralUtilities`Slice[10, 
                   Key["id"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                "molestiae ipsa aut voluptatibus pariatur dolor nihil", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[593838451][
                  GeneralUtilities`Slice[10, 
                   Key["title"]]], "Mouse"], 
                ImageSize -> {{441.6000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["True"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[593838451][
                  GeneralUtilities`Slice[10, 
                   Key["completed"]]], "Mouse"], 
                ImageSize -> {{36, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}}, BaseStyle -> {ContextMenu -> {
                 MenuItem["Copy position to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Copy data to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], Delimiter, 
                 MenuItem["Paste position in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Paste data in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic]}, FontFamily -> "Verdana", 
               FontSize -> 12}, Alignment -> Left, RowMinHeight -> 1.5, 
             Dividers -> All, FrameStyle -> GrayLevel[0.85], 
             BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
            LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False,
             ShowAutoStyles -> False]], 
         TypeSystem`NestedGrid`PackagePrivate`initialQ = True, 
         TypeSystem`NestedGrid`PackagePrivate`self = $Failed}, 
        Dynamic[
         TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
         TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
            Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
            
            Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
              TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
              TypeSystem`NestedGrid`PackagePrivate`LookupCacheValue[
                TypeSystem`NestedGrid`PackagePrivate`$state$$["Data"]]}, 
             TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = 
              If[TypeSystem`NestedGrid`PackagePrivate`tmpData$ === 
                TypeSystem`NestedGrid`PackagePrivate`$NotCached, 
                TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$grid$$, 593838451][
                TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
               Not[
                FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
               TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
               TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
          TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
          TypeSystem`NestedGrid`PackagePrivate`$pos$$; If[
            FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
            TypeSystem`SparseGrid[
             TypeSystem`H["(data no longer present)"]], 
            If[GeneralUtilities`$DebugMode, 
             Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
               TypeSystem`NestedGrid`PackagePrivate`formatState[
               TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                TypeSystem`NestedGrid`PackagePrivate`$pos$$]}], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
         TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$pos$$}], 
        DynamicModuleValues :> {}], 
      TypeSystem`NestedGrid`PackagePrivate`$posCell$$, 
      TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
        TypeSystem`NestedGrid`PackagePrivate`alignBar[
        TypeSystem`NestedGrid`PackagePrivate`$state$$][
         TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
          TypeSystem`PackageScope`Pathbar[
          TypeSystem`NestedGrid`PackagePrivate`$path$$, 
           TypeSystem`NestedGrid`PackagePrivate`updateState[
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
            TypeSystem`NestedGrid`PackagePrivate`$path$$, 
            TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$grid$$, 593838451]]]], 
        TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
      TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Framed[
        Dynamic[
         Replace[
          MouseAnnotation[Null], {
          TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[593838451][Null] -> 
           "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[593838451][
             Pattern[TypeSystem`NestedGrid`PackagePrivate`path, 
              Blank[]]] :> (
            TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
             TypeSystem`NestedGrid`PackagePrivate`path; 
            TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
             TypeSystem`NestedGrid`PackagePrivate`path, 
              TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
           Spacer[10], Blank[] :> Spacer[10]}], TrackedSymbols :> {}], 
        FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
        Top, ImageSize -> {Automatic, 14}]}, 
     DynamicBox[
      ToBoxes[
       Column[
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, {
          TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
          TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`alignBar[
           TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}, {
         TypeSystem`NestedGrid`PackagePrivate`$topBar$$, 
          TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
          TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`alignBar[
           TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}], Spacings -> 
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, 
          0, {{}, {0, 0.05, 0}}]], StandardForm], 
      ImageSizeCache -> {649., {172.5, 179.5}}, 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     BaseStyle -> {LineBreakWithin -> False}, Deinitialization :> 
     TypeSystem`NestedGrid`PackagePrivate`deleteState[
      TypeSystem`NestedGrid`PackagePrivate`$state$$], 
     DynamicModuleValues :> {}, Initialization :> 
     Block[{$ContextPath = $ContextPath}, 
       Needs["TypeSystem`"]]], Deploy, DefaultBaseStyle -> "Deploy"]},
  "CopyTag",
  DisplayFunction->(#& ),
  InterpretationFunction->("Dataset[<>]"& )]], "Output",
 CellChangeTimes->{{3.7732358563343143`*^9, 3.773235863306239*^9}, 
   3.7732359344286423`*^9, {3.773235980197586*^9, 3.773235998795562*^9}, 
   3.773328311977776*^9, 3.773328992974431*^9, 3.77342274108348*^9},
 CellLabel->
  "Out[512]=",ExpressionUUID->"18a03359-a80c-4652-a857-1f6440f74e14"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"temp", "[", 
  RowBox[{
   RowBox[{"GroupBy", "[", 
    RowBox[{"#\"completed\"", "&"}], "]"}], "/*", 
   RowBox[{"Key", "[", "False", "]"}], "/*", 
   RowBox[{"SortBy", "[", 
    RowBox[{"#\"id\"", "&"}], "]"}], "/*", 
   RowBox[{"Take", "[", 
    RowBox[{";;", "10"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7733289037274647`*^9, 3.773328949921432*^9}, {
   3.773329271607346*^9, 3.773329272391326*^9}, 
   3.77358520456616*^9},ExpressionUUID->"c2b93c59-7c05-44ef-89b0-\
a86807d8134f"],

Cell[BoxData[
 TemplateBox[{TagBox[
    DynamicModuleBox[{
     TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
      Data`UnorderedAssociation[
       "RowCount" -> 10, "Length" -> 10, "InitialType" -> TypeSystem`Vector[
          TypeSystem`Struct[{"userId", "id", "title", "completed"}, {
            TypeSystem`Atom[Integer], 
            TypeSystem`Atom[Integer], 
            TypeSystem`Atom[String], 
            TypeSystem`Atom[TypeSystem`Boolean]}], 10], "Shape" -> 
        TypeSystem`PackageScope`HeaderShape[
          
          Association[{All, "userId"} -> 1, {All, "id"} -> 1, {All, "title"} -> 
           1, {All, "completed"} -> 1], 
          TypeSystem`PackageScope`Limited[
           TypeSystem`PackageScope`ColumnShape[
            TypeSystem`PackageScope`RowShape[
             Association[
             "userId" -> TypeSystem`PackageScope`AtomShape[34], "id" -> 
              TypeSystem`PackageScope`AtomShape[34], "title" -> 
              TypeSystem`PackageScope`AtomShape[470.4000000000001], 
              "completed" -> TypeSystem`PackageScope`AtomShape[36]]]], 
           10, {}]], "InitialData" -> 
        TypeSystem`PackageScope`CacheHandle[6327162], "Type" -> 
        TypeSystem`Vector[
          TypeSystem`Struct[{"userId", "id", "title", "completed"}, {
            TypeSystem`Atom[Integer], 
            TypeSystem`Atom[Integer], 
            TypeSystem`Atom[String], 
            TypeSystem`Atom[TypeSystem`Boolean]}], 10], "HandleQ" -> True, 
        "RowTarget" -> 20, "Data" -> 
        TypeSystem`PackageScope`CacheHandle[6327162]], 
      TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
      TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 1, 
      TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
      DynamicModule[{
        TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
           Style[
            Grid[{{
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"userId\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"userId\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 367767541][{
                    All, "userId"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[367767541][
                  GeneralUtilities`Slice[All, "userId"]], "Mouse"], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"id\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"id\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 367767541][{
                    All, "id"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[367767541][
                  GeneralUtilities`Slice[All, "id"]], "Mouse"], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"title\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"title\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 367767541][{
                    All, "title"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[367767541][
                  GeneralUtilities`Slice[All, "title"]], "Mouse"], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"completed\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"completed\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 367767541][{
                    All, "completed"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[367767541][
                  GeneralUtilities`Slice[All, "completed"]], "Mouse"], 
                Background -> GrayLevel[0.95], 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["1"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[367767541][
                  GeneralUtilities`Slice[1, 
                   Key["userId"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["1"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[367767541][
                  GeneralUtilities`Slice[1, 
                   Key["id"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["delectus aut autem", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[367767541][
                  GeneralUtilities`Slice[1, 
                   Key["title"]]], "Mouse"], 
                ImageSize -> {{470.4000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["False"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[367767541][
                  GeneralUtilities`Slice[1, 
                   Key["completed"]]], "Mouse"], 
                ImageSize -> {{36, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["1"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[367767541][
                  GeneralUtilities`Slice[2, 
                   Key["userId"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["2"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[367767541][
                  GeneralUtilities`Slice[2, 
                   Key["id"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["quis ut nam facilis et officia qui", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[367767541][
                  GeneralUtilities`Slice[2, 
                   Key["title"]]], "Mouse"], 
                ImageSize -> {{470.4000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["False"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[367767541][
                  GeneralUtilities`Slice[2, 
                   Key["completed"]]], "Mouse"], 
                ImageSize -> {{36, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["1"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[367767541][
                  GeneralUtilities`Slice[3, 
                   Key["userId"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["3"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[367767541][
                  GeneralUtilities`Slice[3, 
                   Key["id"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["fugiat veniam minus", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[367767541][
                  GeneralUtilities`Slice[3, 
                   Key["title"]]], "Mouse"], 
                ImageSize -> {{470.4000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["False"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[367767541][
                  GeneralUtilities`Slice[3, 
                   Key["completed"]]], "Mouse"], 
                ImageSize -> {{36, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["1"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[367767541][
                  GeneralUtilities`Slice[4, 
                   Key["userId"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["5"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[367767541][
                  GeneralUtilities`Slice[4, 
                   Key["id"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                "laboriosam mollitia et enim quasi adipisci quia provident \
illum", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[367767541][
                  GeneralUtilities`Slice[4, 
                   Key["title"]]], "Mouse"], 
                ImageSize -> {{470.4000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["False"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[367767541][
                  GeneralUtilities`Slice[4, 
                   Key["completed"]]], "Mouse"], 
                ImageSize -> {{36, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["1"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[367767541][
                  GeneralUtilities`Slice[5, 
                   Key["userId"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["6"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[367767541][
                  GeneralUtilities`Slice[5, 
                   Key["id"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                "qui ullam ratione quibusdam voluptatem quia omnis", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[367767541][
                  GeneralUtilities`Slice[5, 
                   Key["title"]]], "Mouse"], 
                ImageSize -> {{470.4000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["False"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[367767541][
                  GeneralUtilities`Slice[5, 
                   Key["completed"]]], "Mouse"], 
                ImageSize -> {{36, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["1"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[367767541][
                  GeneralUtilities`Slice[6, 
                   Key["userId"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["7"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[367767541][
                  GeneralUtilities`Slice[6, 
                   Key["id"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["illo expedita consequatur quia in", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[367767541][
                  GeneralUtilities`Slice[6, 
                   Key["title"]]], "Mouse"], 
                ImageSize -> {{470.4000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["False"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[367767541][
                  GeneralUtilities`Slice[6, 
                   Key["completed"]]], "Mouse"], 
                ImageSize -> {{36, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["1"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[367767541][
                  GeneralUtilities`Slice[7, 
                   Key["userId"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["9"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[367767541][
                  GeneralUtilities`Slice[7, 
                   Key["id"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["molestiae perspiciatis ipsa", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[367767541][
                  GeneralUtilities`Slice[7, 
                   Key["title"]]], "Mouse"], 
                ImageSize -> {{470.4000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["False"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[367767541][
                  GeneralUtilities`Slice[7, 
                   Key["completed"]]], "Mouse"], 
                ImageSize -> {{36, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["1"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[367767541][
                  GeneralUtilities`Slice[8, 
                   Key["userId"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["13"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[367767541][
                  GeneralUtilities`Slice[8, 
                   Key["id"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["et doloremque nulla", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[367767541][
                  GeneralUtilities`Slice[8, 
                   Key["title"]]], "Mouse"], 
                ImageSize -> {{470.4000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["False"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[367767541][
                  GeneralUtilities`Slice[8, 
                   Key["completed"]]], "Mouse"], 
                ImageSize -> {{36, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["1"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[367767541][
                  GeneralUtilities`Slice[9, 
                   Key["userId"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["18"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[367767541][
                  GeneralUtilities`Slice[9, 
                   Key["id"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["dolorum est consequatur ea mollitia in culpa", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[367767541][
                  GeneralUtilities`Slice[9, 
                   Key["title"]]], "Mouse"], 
                ImageSize -> {{470.4000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["False"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[367767541][
                  GeneralUtilities`Slice[9, 
                   Key["completed"]]], "Mouse"], 
                ImageSize -> {{36, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["2"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[367767541][
                  GeneralUtilities`Slice[10, 
                   Key["userId"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["21"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[367767541][
                  GeneralUtilities`Slice[10, 
                   Key["id"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                "suscipit repellat esse quibusdam voluptatem incidunt", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[367767541][
                  GeneralUtilities`Slice[10, 
                   Key["title"]]], "Mouse"], 
                ImageSize -> {{470.4000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["False"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[367767541][
                  GeneralUtilities`Slice[10, 
                   Key["completed"]]], "Mouse"], 
                ImageSize -> {{36, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}}, BaseStyle -> {ContextMenu -> {
                 MenuItem["Copy position to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Copy data to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], Delimiter, 
                 MenuItem["Paste position in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Paste data in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic]}, FontFamily -> "Verdana", 
               FontSize -> 12}, Alignment -> Left, RowMinHeight -> 1.5, 
             Dividers -> All, FrameStyle -> GrayLevel[0.85], 
             BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
            LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False,
             ShowAutoStyles -> False]], 
         TypeSystem`NestedGrid`PackagePrivate`initialQ = True, 
         TypeSystem`NestedGrid`PackagePrivate`self = $Failed}, 
        Dynamic[
         TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
         TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
            Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
            
            Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
              TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
              TypeSystem`NestedGrid`PackagePrivate`LookupCacheValue[
                TypeSystem`NestedGrid`PackagePrivate`$state$$["Data"]]}, 
             TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = 
              If[TypeSystem`NestedGrid`PackagePrivate`tmpData$ === 
                TypeSystem`NestedGrid`PackagePrivate`$NotCached, 
                TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$grid$$, 367767541][
                TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
               Not[
                FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
               TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
               TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
          TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
          TypeSystem`NestedGrid`PackagePrivate`$pos$$; If[
            FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
            TypeSystem`SparseGrid[
             TypeSystem`H["(data no longer present)"]], 
            If[GeneralUtilities`$DebugMode, 
             Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
               TypeSystem`NestedGrid`PackagePrivate`formatState[
               TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                TypeSystem`NestedGrid`PackagePrivate`$pos$$]}], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
         TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$pos$$}], 
        DynamicModuleValues :> {}], 
      TypeSystem`NestedGrid`PackagePrivate`$posCell$$, 
      TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
        TypeSystem`NestedGrid`PackagePrivate`alignBar[
        TypeSystem`NestedGrid`PackagePrivate`$state$$][
         TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
          TypeSystem`PackageScope`Pathbar[
          TypeSystem`NestedGrid`PackagePrivate`$path$$, 
           TypeSystem`NestedGrid`PackagePrivate`updateState[
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
            TypeSystem`NestedGrid`PackagePrivate`$path$$, 
            TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$grid$$, 367767541]]]], 
        TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
      TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Framed[
        Dynamic[
         Replace[
          MouseAnnotation[Null], {
          TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[367767541][Null] -> 
           "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[367767541][
             Pattern[TypeSystem`NestedGrid`PackagePrivate`path, 
              Blank[]]] :> (
            TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
             TypeSystem`NestedGrid`PackagePrivate`path; 
            TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
             TypeSystem`NestedGrid`PackagePrivate`path, 
              TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
           Spacer[10], Blank[] :> Spacer[10]}], TrackedSymbols :> {}], 
        FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
        Top, ImageSize -> {Automatic, 14}]}, 
     DynamicBox[
      ToBoxes[
       Column[
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, {
          TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
          TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`alignBar[
           TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}, {
         TypeSystem`NestedGrid`PackagePrivate`$topBar$$, 
          TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
          TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`alignBar[
           TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}], Spacings -> 
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, 
          0, {{}, {0, 0.05, 0}}]], StandardForm], 
      ImageSizeCache -> {678., {172.5, 179.5}}, 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     BaseStyle -> {LineBreakWithin -> False}, Deinitialization :> 
     TypeSystem`NestedGrid`PackagePrivate`deleteState[
      TypeSystem`NestedGrid`PackagePrivate`$state$$], 
     DynamicModuleValues :> {}, Initialization :> 
     Block[{$ContextPath = $ContextPath}, 
       Needs["TypeSystem`"]]], Deploy, DefaultBaseStyle -> "Deploy"]},
  "CopyTag",
  DisplayFunction->(#& ),
  InterpretationFunction->("Dataset[<>]"& )]], "Output",
 CellChangeTimes->{{3.7733289107304587`*^9, 3.773328950702456*^9}, 
   3.773329283581339*^9, 3.773422742659472*^9},
 CellLabel->
  "Out[513]=",ExpressionUUID->"e7625122-7c16-4325-ac47-afa525fd4ea6"]
}, Open  ]],

Cell["\<\
Lots going on here:
- Three functions (2 &\[CloseCurlyQuote]s inside the Function[...])
- Interpret \[OpenCurlyQuote]completeTF\[CloseCurlyQuote] as Boolean or \
String then use ToExpression\
\>", "Text",
 CellChangeTimes->{{3.77333184659992*^9, 
  3.7733319864149585`*^9}},ExpressionUUID->"992d0389-8721-4a70-a3df-\
b18c9337fffc"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"ClearAll", "[", "api", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"api", "=", " ", 
   RowBox[{"APIFunction", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"\"\<completeTF\>\"", "\[Rule]", "\"\<Boolean\>\""}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"\"\<n\>\"", "\[Rule]", "\"\<Integer\>\""}]}], 
      "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"Function", "[", "\[IndentingNewLine]", 
      RowBox[{"Normal", "@", 
       RowBox[{
        RowBox[{"CloudGet", "[", "\"\<data/todos\>\"", "]"}], "[", 
        RowBox[{
         RowBox[{"GroupBy", "[", 
          RowBox[{"#\"completed\"", "&"}], "]"}], "/*", 
         RowBox[{"Key", "[", "#completeTF", "]"}], "/*", 
         RowBox[{"SortBy", "[", 
          RowBox[{"#\"id\"", "&"}], "]"}], "/*", 
         RowBox[{"Take", "[", 
          RowBox[{";;", "#n"}], "]"}]}], "]"}]}], "\[IndentingNewLine]", 
      "]"}], ",", "\[IndentingNewLine]", " ", "\"\<JSON\>\""}], 
    "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"api", "[", 
  RowBox[{"<|", 
   RowBox[{
    RowBox[{"\"\<completeTF\>\"", "\[Rule]", "\"\<False\>\""}], ",", 
    RowBox[{"\"\<n\>\"", "\[Rule]", "4"}]}], "|>"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"%", "//", "Dataset"}]}], "Input",
 CellChangeTimes->{{3.773235477801511*^9, 3.773235482812704*^9}, {
  3.773235568067208*^9, 3.7732355700022287`*^9}, {3.7732357948315735`*^9, 
  3.773235802025538*^9}, {3.7732360281305265`*^9, 3.7732360688138237`*^9}, {
  3.7732360992345653`*^9, 3.7732361500805645`*^9}, {3.773329321049355*^9, 
  3.77332932395737*^9}, {3.773331461700247*^9, 3.773331522859247*^9}, {
  3.773331657344198*^9, 3.773331660010174*^9}, {3.7733317911967497`*^9, 
  3.7733318318009157`*^9}, {3.7735853256311607`*^9, 3.7735853425511646`*^9}},
 CellLabel->
  "In[108]:=",ExpressionUUID->"ecff84a8-813c-4251-a957-912d2171a07a"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"userId\"\>", "\[Rule]", "1"}], ",", 
     RowBox[{"\<\"id\"\>", "\[Rule]", "1"}], ",", 
     RowBox[{"\<\"title\"\>", "\[Rule]", "\<\"delectus aut autem\"\>"}], ",", 
     RowBox[{"\<\"completed\"\>", "\[Rule]", "False"}]}], 
    "\[RightAssociation]"}], ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"userId\"\>", "\[Rule]", "1"}], ",", 
     RowBox[{"\<\"id\"\>", "\[Rule]", "2"}], ",", 
     RowBox[{"\<\"title\"\>", 
      "\[Rule]", "\<\"quis ut nam facilis et officia qui\"\>"}], ",", 
     RowBox[{"\<\"completed\"\>", "\[Rule]", "False"}]}], 
    "\[RightAssociation]"}], ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"userId\"\>", "\[Rule]", "1"}], ",", 
     RowBox[{"\<\"id\"\>", "\[Rule]", "3"}], ",", 
     RowBox[{"\<\"title\"\>", "\[Rule]", "\<\"fugiat veniam minus\"\>"}], ",", 
     RowBox[{"\<\"completed\"\>", "\[Rule]", "False"}]}], 
    "\[RightAssociation]"}], ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"userId\"\>", "\[Rule]", "1"}], ",", 
     RowBox[{"\<\"id\"\>", "\[Rule]", "5"}], ",", 
     RowBox[{"\<\"title\"\>", 
      "\[Rule]", "\<\"laboriosam mollitia et enim quasi adipisci quia \
provident illum\"\>"}], ",", 
     RowBox[{"\<\"completed\"\>", "\[Rule]", "False"}]}], 
    "\[RightAssociation]"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.77323607016759*^9, {3.773236102395581*^9, 3.7732361134575996`*^9}, 
   3.773236151344598*^9, 3.773329336009326*^9, 3.773331480430279*^9, 
   3.7733315258862815`*^9, 3.773331663846223*^9, {3.77333180686481*^9, 
   3.7733318339808846`*^9}, 3.773332160510603*^9, 3.7734227459645047`*^9, {
   3.77358532948213*^9, 3.773585343227129*^9}},
 CellLabel->
  "Out[110]=",ExpressionUUID->"efc6545b-2827-433c-a26f-b48b8133ada9"],

Cell[BoxData[
 TemplateBox[{TagBox[
    DynamicModuleBox[{
     TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
      Data`UnorderedAssociation[
       "RowCount" -> 4, "Length" -> 4, "InitialType" -> TypeSystem`Vector[
          TypeSystem`Struct[{"userId", "id", "title", "completed"}, {
            TypeSystem`Atom[Integer], 
            TypeSystem`Atom[Integer], 
            TypeSystem`Atom[String], 
            TypeSystem`Atom[TypeSystem`Boolean]}], 4], "Shape" -> 
        TypeSystem`PackageScope`HeaderShape[
          
          Association[{All, "userId"} -> 1, {All, "id"} -> 1, {All, "title"} -> 
           1, {All, "completed"} -> 1], 
          TypeSystem`PackageScope`Limited[
           TypeSystem`PackageScope`ColumnShape[
            TypeSystem`PackageScope`RowShape[
             Association[
             "userId" -> TypeSystem`PackageScope`AtomShape[34], "id" -> 
              TypeSystem`PackageScope`AtomShape[34], "title" -> 
              TypeSystem`PackageScope`AtomShape[480.00000000000006`], 
              "completed" -> TypeSystem`PackageScope`AtomShape[36]]]], 
           4, {}]], "InitialData" -> 
        TypeSystem`PackageScope`CacheHandle[1616123089], "Type" -> 
        TypeSystem`Vector[
          TypeSystem`Struct[{"userId", "id", "title", "completed"}, {
            TypeSystem`Atom[Integer], 
            TypeSystem`Atom[Integer], 
            TypeSystem`Atom[String], 
            TypeSystem`Atom[TypeSystem`Boolean]}], 4], "HandleQ" -> True, 
        "RowTarget" -> 20, "Data" -> 
        TypeSystem`PackageScope`CacheHandle[1616123089]], 
      TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
      TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 1, 
      TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
      DynamicModule[{
        TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
           Style[
            Grid[{{
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"userId\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"userId\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 830674771][{
                    All, "userId"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[830674771][
                  GeneralUtilities`Slice[All, "userId"]], "Mouse"], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"id\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"id\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 830674771][{
                    All, "id"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[830674771][
                  GeneralUtilities`Slice[All, "id"]], "Mouse"], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"title\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"title\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 830674771][{
                    All, "title"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[830674771][
                  GeneralUtilities`Slice[All, "title"]], "Mouse"], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"completed\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"completed\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 830674771][{
                    All, "completed"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[830674771][
                  GeneralUtilities`Slice[All, "completed"]], "Mouse"], 
                Background -> GrayLevel[0.95], 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["1"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[830674771][
                  GeneralUtilities`Slice[1, 
                   Key["userId"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["1"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[830674771][
                  GeneralUtilities`Slice[1, 
                   Key["id"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["delectus aut autem", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[830674771][
                  GeneralUtilities`Slice[1, 
                   Key["title"]]], "Mouse"], 
                ImageSize -> {{480.00000000000006`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["False"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[830674771][
                  GeneralUtilities`Slice[1, 
                   Key["completed"]]], "Mouse"], 
                ImageSize -> {{36, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["1"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[830674771][
                  GeneralUtilities`Slice[2, 
                   Key["userId"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["2"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[830674771][
                  GeneralUtilities`Slice[2, 
                   Key["id"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["quis ut nam facilis et officia qui", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[830674771][
                  GeneralUtilities`Slice[2, 
                   Key["title"]]], "Mouse"], 
                ImageSize -> {{480.00000000000006`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["False"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[830674771][
                  GeneralUtilities`Slice[2, 
                   Key["completed"]]], "Mouse"], 
                ImageSize -> {{36, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["1"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[830674771][
                  GeneralUtilities`Slice[3, 
                   Key["userId"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["3"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[830674771][
                  GeneralUtilities`Slice[3, 
                   Key["id"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["fugiat veniam minus", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[830674771][
                  GeneralUtilities`Slice[3, 
                   Key["title"]]], "Mouse"], 
                ImageSize -> {{480.00000000000006`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["False"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[830674771][
                  GeneralUtilities`Slice[3, 
                   Key["completed"]]], "Mouse"], 
                ImageSize -> {{36, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["1"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[830674771][
                  GeneralUtilities`Slice[4, 
                   Key["userId"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["5"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[830674771][
                  GeneralUtilities`Slice[4, 
                   Key["id"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                "laboriosam mollitia et enim quasi adipisci quia provident \
illum", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[830674771][
                  GeneralUtilities`Slice[4, 
                   Key["title"]]], "Mouse"], 
                ImageSize -> {{480.00000000000006`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["False"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[830674771][
                  GeneralUtilities`Slice[4, 
                   Key["completed"]]], "Mouse"], 
                ImageSize -> {{36, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}}, BaseStyle -> {ContextMenu -> {
                 MenuItem["Copy position to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Copy data to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], Delimiter, 
                 MenuItem["Paste position in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Paste data in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic]}, FontFamily -> "Verdana", 
               FontSize -> 12}, Alignment -> Left, RowMinHeight -> 1.5, 
             Dividers -> All, FrameStyle -> GrayLevel[0.85], 
             BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
            LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False,
             ShowAutoStyles -> False]], 
         TypeSystem`NestedGrid`PackagePrivate`initialQ = True, 
         TypeSystem`NestedGrid`PackagePrivate`self = $Failed}, 
        Dynamic[
         TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
         TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
            Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
            
            Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
              TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
              TypeSystem`NestedGrid`PackagePrivate`LookupCacheValue[
                TypeSystem`NestedGrid`PackagePrivate`$state$$["Data"]]}, 
             TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = 
              If[TypeSystem`NestedGrid`PackagePrivate`tmpData$ === 
                TypeSystem`NestedGrid`PackagePrivate`$NotCached, 
                TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$grid$$, 830674771][
                TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
               Not[
                FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
               TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
               TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
          TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
          TypeSystem`NestedGrid`PackagePrivate`$pos$$; If[
            FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
            TypeSystem`SparseGrid[
             TypeSystem`H["(data no longer present)"]], 
            If[GeneralUtilities`$DebugMode, 
             Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
               TypeSystem`NestedGrid`PackagePrivate`formatState[
               TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                TypeSystem`NestedGrid`PackagePrivate`$pos$$]}], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
         TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$pos$$}], 
        DynamicModuleValues :> {}], 
      TypeSystem`NestedGrid`PackagePrivate`$posCell$$, 
      TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
        TypeSystem`NestedGrid`PackagePrivate`alignBar[
        TypeSystem`NestedGrid`PackagePrivate`$state$$][
         TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
          TypeSystem`PackageScope`Pathbar[
          TypeSystem`NestedGrid`PackagePrivate`$path$$, 
           TypeSystem`NestedGrid`PackagePrivate`updateState[
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
            TypeSystem`NestedGrid`PackagePrivate`$path$$, 
            TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$grid$$, 830674771]]]], 
        TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
      TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Framed[
        Dynamic[
         Replace[
          MouseAnnotation[Null], {
          TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[830674771][Null] -> 
           "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[830674771][
             Pattern[TypeSystem`NestedGrid`PackagePrivate`path, 
              Blank[]]] :> (
            TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
             TypeSystem`NestedGrid`PackagePrivate`path; 
            TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
             TypeSystem`NestedGrid`PackagePrivate`path, 
              TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
           Spacer[10], Blank[] :> Spacer[10]}], TrackedSymbols :> {}], 
        FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
        Top, ImageSize -> {Automatic, 14}]}, 
     DynamicBox[
      ToBoxes[
       Column[
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, {
          TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
          TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`alignBar[
           TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}, {
         TypeSystem`NestedGrid`PackagePrivate`$topBar$$, 
          TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
          TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`alignBar[
           TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}], Spacings -> 
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, 
          0, {{}, {0, 0.05, 0}}]], StandardForm], 
      ImageSizeCache -> {688., {82.5, 89.5}}, 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     BaseStyle -> {LineBreakWithin -> False}, Deinitialization :> 
     TypeSystem`NestedGrid`PackagePrivate`deleteState[
      TypeSystem`NestedGrid`PackagePrivate`$state$$], 
     DynamicModuleValues :> {}, Initialization :> 
     Block[{$ContextPath = $ContextPath}, 
       Needs["TypeSystem`"]]], Deploy, DefaultBaseStyle -> "Deploy"]},
  "CopyTag",
  DisplayFunction->(#& ),
  InterpretationFunction->("Dataset[<>]"& )]], "Output",
 CellChangeTimes->{
  3.77323607016759*^9, {3.773236102395581*^9, 3.7732361134575996`*^9}, 
   3.773236151344598*^9, 3.773329336009326*^9, 3.773331480430279*^9, 
   3.7733315258862815`*^9, 3.773331663846223*^9, {3.77333180686481*^9, 
   3.7733318339808846`*^9}, 3.773332160510603*^9, 3.7734227459645047`*^9, {
   3.77358532948213*^9, 3.773585343356161*^9}},
 CellLabel->
  "Out[111]=",ExpressionUUID->"c6f5d353-608f-45ce-8aeb-73bec1acc436"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"ClearAll", "[", "cd", "]"}], "\[IndentingNewLine]", 
 RowBox[{"cd", "=", 
  RowBox[{"CloudDeploy", "[", "\[IndentingNewLine]", 
   RowBox[{
   "api", ",", "\[IndentingNewLine]", "\"\</live-coding/todos/\>\"", ",", 
    "\[IndentingNewLine]", 
    RowBox[{"Permissions", "\[Rule]", "\"\<Public\>\""}]}], 
   "\[IndentingNewLine]", "]"}]}]}], "Input",
 CellChangeTimes->{{3.763901121307186*^9, 3.7639012201341887`*^9}, {
  3.7639846636741133`*^9, 3.763984667449107*^9}, {3.763996673689954*^9, 
  3.763996675592955*^9}, {3.773056206787223*^9, 3.7730562233261757`*^9}, {
  3.7732362117325945`*^9, 3.773236212800584*^9}},
 CellLabel->
  "In[112]:=",ExpressionUUID->"86312b9f-15eb-4a5d-94fd-000fcd2dd8cf"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"CloudObject", "[", 
   TemplateBox[{
    "\"https://www.wolframcloud.com/obj/mitch/live-coding/todos\"",
     "https://www.wolframcloud.com/obj/mitch/live-coding/todos"},
    "HyperlinkURL"], "]"}],
  CloudObject["https://www.wolframcloud.com/obj/mitch/live-coding/todos"],
  SelectWithContents->True]], "Output",
 CellChangeTimes->{3.7639967347389565`*^9, 3.764968898617294*^9, 
  3.7651189186858325`*^9, 3.766083217921033*^9, 3.773056274566629*^9, 
  3.773076149180131*^9, 3.773233724130827*^9, 3.773236245458561*^9, 
  3.7733293461263247`*^9, 3.773331533545252*^9, 3.7733316725721774`*^9, 
  3.773332161896608*^9, 3.773422749090476*^9, 3.7735853476551523`*^9},
 CellLabel->
  "Out[113]=",ExpressionUUID->"a5d13f35-689f-432a-9c7e-7c3e2cd991c6"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"ClearAll", "[", 
  RowBox[{"url", ",", "session"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"url", "=", 
  RowBox[{"URLBuild", "[", 
   RowBox[{"cd", ",", 
    RowBox[{"<|", 
     RowBox[{
      RowBox[{"\"\<completeTF\>\"", "\[Rule]", "\"\<True\>\""}], ",", 
      RowBox[{"\"\<n\>\"", "\[Rule]", "10"}]}], "|>"}]}], "]"}]}], "\n", 
 RowBox[{
  RowBox[{"session", "=", 
   RowBox[{"StartWebSession", "[", "\"\<Chrome\>\"", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"WebExecute", "[", 
   RowBox[{"session", ",", 
    RowBox[{"{", 
     RowBox[{"\"\<OpenPage\>\"", "\[Rule]", "url"}], "}"}]}], "]"}], 
  ";"}]}], "Input",
 CellChangeTimes->{
  3.764968914526291*^9, {3.7730562141341763`*^9, 3.773056241012204*^9}, 
   3.7732362413975973`*^9, {3.7733315441240788`*^9, 3.7733315687663236`*^9}},
 CellLabel->
  "In[114]:=",ExpressionUUID->"1c45c2b9-29fa-4a62-a50e-0b7149d59231"],

Cell[BoxData["\<\"https://www.wolframcloud.com/obj/mitch/live-coding/todos?\
completeTF=True&n=10\"\>"], "Output",
 CellChangeTimes->{
  3.7649689186782928`*^9, 3.7651189193558207`*^9, 3.7660832194009748`*^9, 
   3.773056276807598*^9, 3.773076150426133*^9, 3.773233727919832*^9, 
   3.7732362478445673`*^9, 3.7733293477513237`*^9, {3.773331534733247*^9, 
   3.773331570854322*^9}, 3.773331673627183*^9, 3.773332163052608*^9, 
   3.7734227503904676`*^9, 3.7735853521451645`*^9},
 CellLabel->
  "Out[115]=",ExpressionUUID->"273989d6-1480-4fad-97c9-376992f8cc31"]
}, Open  ]],

Cell["\<\
Practice Assignments: (CRUD operations)
1) How would we go about making an API that uses CloudPut that adds a new \
todo to the list?
2) Make an API that uses CloudPut to change a todo \[OpenCurlyQuote]completed\
\[CloseCurlyQuote] value from false to true.
3) Delete a todo from the list.\
\>", "Text",
 CellChangeTimes->{{3.7732362730594883`*^9, 
  3.7732365213296485`*^9}},ExpressionUUID->"5615b31a-cc16-44ad-a441-\
9ca2707e4cea"]
}, Open  ]],

Cell[CellGroupData[{

Cell["API-8) Images - basics", "Chapter",
 CellChangeTimes->{{3.7638903241703033`*^9, 3.763890387306302*^9}, {
  3.7638906383193026`*^9, 3.7638906506213074`*^9}, {3.763976043050132*^9, 
  3.763976053213132*^9}, {3.763990608201145*^9, 3.7639906085671463`*^9}, {
  3.763998317430741*^9, 3.7639983176737404`*^9}, {3.763998451248744*^9, 
  3.7639984513797407`*^9}},ExpressionUUID->"4be90f8e-4ac4-411e-a26a-\
d7468e19002c"],

Cell["\<\
In React JS (.JSX) images (img tag) uses the \[OpenCurlyQuote]src\
\[CloseCurlyQuote] property to set the path.  Example: <img src=\
\[CloseCurlyDoubleQuote]path\[CloseCurlyDoubleQuote], atl=\
\[CloseCurlyDoubleQuote]whatever\[CloseCurlyDoubleQuote],  ... />.  We will \
set src dynamically to our API endpoint path so we are NOT calling local or \
server stored images resources.  Rather, the images are created dynamically \
as users manipulate the UI.\
\>", "Text",
 CellChangeTimes->{{3.7640049588438854`*^9, 3.764005020158886*^9}, {
  3.773057012090269*^9, 3.7730570219202747`*^9}, {3.7730572628534517`*^9, 
  3.7730573292124605`*^9}, {3.773057364648466*^9, 3.7730574085174656`*^9}, {
  3.773585895805474*^9, 3.7735859243884478`*^9}, {3.7735860264693174`*^9, 
  3.773586124470106*^9}},ExpressionUUID->"8bf331c7-8a21-4edd-be86-\
f5d100e9ea5f"],

Cell[CellGroupData[{

Cell["PNG", "Subsubsection",
 CellChangeTimes->{{3.7570991750663757`*^9, 
  3.7570991757673655`*^9}},ExpressionUUID->"b95321f9-d69e-4a72-a1be-\
0aefa8846b95"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", 
   RowBox[{"api", ",", "format"}], "]"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"api", "[", "fmt_String", "]"}], ":=", 
    RowBox[{"APIFunction", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"\"\<a\>\"", "\[Rule]", "\"\<Integer\>\""}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"\"\<b\>\"", "\[Rule]", "\"\<Integer\>\""}]}], 
       "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{"Function", "[", "\[IndentingNewLine]", 
       RowBox[{"Framed", "@", 
        RowBox[{"Plot", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Sin", "[", "y", "]"}], ",", 
            RowBox[{"Cos", "[", "y", "]"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"y", ",", "#a", ",", "#b"}], "}"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"PlotLabel", "\[Rule]", 
           RowBox[{"Style", "[", 
            RowBox[{
             RowBox[{"Framed", "[", 
              RowBox[{"\"\<y = Sin[x] between \>\"", "<>", 
               RowBox[{"ToString", "[", "#a", "]"}], "<>", "\"\< and \>\"", "<>", 
               RowBox[{"ToString", "[", "#b", "]"}], "<>", "\"\< in \>\"", "<>",
                "fmt", "<>", "\"\< Format\>\""}], "]"}], ",", "12", ",", 
             "Black", ",", 
             RowBox[{"Background", "\[Rule]", 
              RowBox[{"Lighter", "[", "LightGreen", "]"}]}]}], "]"}]}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"Filling", "\[Rule]", "Axis"}], ",", "\[IndentingNewLine]", 
          RowBox[{"AxesLabel", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"\"\<x\>\"", ",", "\"\<Sin[x]\>\""}], "}"}]}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"AxesStyle", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Directive", "[", 
              RowBox[{"Thin", ",", "Dashed", ",", "Black"}], "]"}], ",", 
             "Blue"}], "}"}]}], ",", "\[IndentingNewLine]", 
          RowBox[{"PlotLegends", "\[Rule]", "\"\<Expressions\>\""}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"Epilog", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"PointSize", "[", "0.02", "]"}], ",", 
             RowBox[{"Point", "[", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"-", "Pi"}], ",", "0"}], "}"}], "]"}], ",", 
             RowBox[{"Point", "[", 
              RowBox[{"{", 
               RowBox[{"0", ",", "0"}], "}"}], "]"}], ",", 
             RowBox[{"Point", "[", 
              RowBox[{"{", 
               RowBox[{"Pi", ",", "0"}], "}"}], "]"}], ",", 
             RowBox[{"Point", "[", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"2", "Pi"}], ",", "0"}], "}"}], "]"}]}], "}"}]}], ",",
           "\[IndentingNewLine]", 
          RowBox[{"ImageSize", "\[Rule]", "Medium"}]}], "]"}]}], 
       "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", "fmt"}], 
     "]"}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"format", "=", "\"\<PNG\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"api", "[", "format", "]"}], "[", 
  RowBox[{"<|", 
   RowBox[{
    RowBox[{"\"\<a\>\"", "\[Rule]", 
     RowBox[{"-", "3"}]}], ",", 
    RowBox[{"\"\<b\>\"", "\[Rule]", "3"}]}], "|>"}], "]"}]}], "Input",
 CellChangeTimes->{{3.756394910499188*^9, 3.7563949124601974`*^9}, {
   3.7563949650892177`*^9, 3.756394976718234*^9}, {3.76399866336569*^9, 
   3.76399867169269*^9}, {3.7639987748496933`*^9, 3.7639988136986885`*^9}, {
   3.7639988551146884`*^9, 3.763998857670688*^9}, {3.76399898397169*^9, 
   3.763999156096706*^9}, {3.763999196367688*^9, 3.7639992156626887`*^9}, {
   3.763999617974326*^9, 3.7639996466643276`*^9}, {3.7640028335368166`*^9, 
   3.764002838497816*^9}, {3.7640028805722036`*^9, 3.7640028834802027`*^9}, {
   3.764003029764204*^9, 3.764003032609203*^9}, {3.764003088056203*^9, 
   3.764003088971203*^9}, {3.764004333317952*^9, 3.764004352097953*^9}, {
   3.7640043984809513`*^9, 3.7640045145269527`*^9}, {3.764004568018952*^9, 
   3.764004689399952*^9}, {3.7640047503929524`*^9, 3.7640047506229525`*^9}, {
   3.764006694126567*^9, 3.7640067205095673`*^9}, {3.764006790975568*^9, 
   3.764006798009719*^9}, {3.764006996258463*^9, 3.764007001106465*^9}, {
   3.764007256045909*^9, 3.7640072821579075`*^9}, {3.7640073194109077`*^9, 
   3.7640073199829087`*^9}, {3.7640073794229093`*^9, 
   3.7640074250494585`*^9}, {3.7640074740204587`*^9, 3.764007478741459*^9}, {
   3.764007516344801*^9, 3.764007516903798*^9}, {3.7640075514897995`*^9, 
   3.764007578815627*^9}, {3.764007626716629*^9, 3.7640076347956276`*^9}, {
   3.7640077272528334`*^9, 3.764007741193041*^9}, {3.7640077775490384`*^9, 
   3.7640077901110363`*^9}, {3.7640078230170374`*^9, 3.76400789568778*^9}, 
   3.764007929212779*^9, 3.765119061115821*^9, {3.7730574232524633`*^9, 
   3.773057423435463*^9}, 3.7735861559801717`*^9, {3.7735863479249177`*^9, 
   3.7735863666259646`*^9}, {3.7735865012823997`*^9, 
   3.7735865185444436`*^9}, {3.7735867575329294`*^9, 3.77358676203294*^9}},
 CellLabel->
  "In[164]:=",ExpressionUUID->"696b552b-071e-4756-99e9-2b0fa9a6e390"],

Cell[BoxData[
 FrameBox[
  TemplateBox[{GraphicsBox[{
      GraphicsComplexBox[CompressedData["
1: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
fwDsPrqd
       "], {{{
          EdgeForm[], 
          Directive[
           RGBColor[0.368417, 0.506779, 0.709798], 
           Opacity[0.2]], 
          GraphicsGroupBox[{
            PolygonBox[CompressedData["
1:eJwl0slvTXEYBuB7b9VM55ZlDRuslLa0uhARiaqqWdmYx7YScw0brAxFKhY1
LhARVa3iHzBbmzZ0RVJNiIWhpc+Xu3ju+37fPbk559xf8frGuoZUIpFI8o5+
w0AqPdf5+CXvsYeFlBDXZzCETIYyjKWu/y3b2Us1MxjOMt/9kffZxyJmst0+
m6f6KTYwguV2f2UH+6mhlB32OTzTT7ORkayw65cPOMBimu2Keatfpoyd5lye
62fYxChW2g3ITg5Sy2G7Ccn0e7lCObvMebzQz9Kil9Krb+a4PoVP+k1Gs8r8
T3ZxKJ7TPJ0v+hKO6BN5r1+T87mqt8oKvuu3ZQ2z9AaZz11exr3JeXTRYj4n
y+jgW9yHrOYxW8wn5FTa+Wy+IRfQzS3zJVlFJz/Nd2QtY/TV8r98SJs+l+b4
L2QJX+PccFSfxId4Ji7qlfzQZ9OoF/Aq7pfzejl9+lZO6tPoiWdnLGuS6YPa
Hf9NnDeOmSfzUb9OBU3mQl7H77KNLOrtkjyKdx5nkkp22xXxRr8QZ5Js1tql
4r3F88SZZA45rLPP4EncQ5w/qsglj3wKKKSIcYxnEDCzYt0=
             "]]}]}, {
          EdgeForm[], 
          Directive[
           RGBColor[0.368417, 0.506779, 0.709798], 
           Opacity[0.2]], 
          GraphicsGroupBox[{
            PolygonBox[CompressedData["
1:eJwt00dsznEYwPGX2PNq1KjRqtkKBxLRqhoVES52lx201HbqQFfCQY22RKhG
iopIROx9tTkZByvhQCK4iPg8icMnz/f55U3e9/29/ze5qGRBcftEItGOT/yx
/GW8vuZwPuf4bc8ym2jTn8nQdWzRx3jFYPtucnURdTykt7N1ZOh0xjGWMYxm
NoXU8oBeXruWUXoWBdRwn57O1zBSl9LESwY528VMnU819+jhbDVpejONvGCg
s53M0HlUcZfuzlYxQp//fy/p9lo26QaeM8C+gxzdwjvS7JUs11+ZqA+wT9+h
m15Jqv5Fpm6MO9a55mk+xv2YNZToueYZvuvJZj1HdY55gme6zUxiO9PtV815
tPLDfsmcwpF4D/vluCdO8tZ+Ib4vFSyzXzHn0MIX+0VzAvvZa882j3NbdzVX
kKJ/MlU3cDZ+V7OZD/F7m9UU629M0gfjM+mn9NfbyNbNvCHVXs5SvYdbdLEX
MVy38j6eI3sVG/VhntDPvpVp+hSvSbGXsURXcpPO9kKG6Q0c4jF949kmSy+m
ght0clbAUL2eeh7Rx1kpmXoR5Vyno7N8hsTdsJCy+H/RwXkeyfHfiWc4nst4
tkiKO4nvwT9ae2py
             "]]}]}, {
          EdgeForm[], 
          Directive[
           RGBColor[0.880722, 0.611041, 0.142051], 
           Opacity[0.2]], 
          GraphicsGroupBox[{
            
            PolygonBox[{{760, 762, 443, 694, 636, 586, 544, 512, 726, 668, 
             618, 576, 493, 713, 655, 605, 563, 531, 444, 695, 637, 587, 545, 
             513, 494, 714, 656, 606, 564, 532, 445, 696, 638, 588, 546, 514, 
             495, 446, 697, 639, 589, 547, 515, 496, 447, 448, 449, 450, 451, 
             452, 453, 454}}], 
            
            PolygonBox[{{492, 763, 761, 481, 482, 483, 484, 485, 486, 487, 
             488, 709, 651, 601, 559, 527, 508, 489, 710, 652, 602, 560, 528, 
             509, 723, 665, 615, 573, 541, 490, 711, 653, 603, 561, 529, 510, 
             724, 666, 616, 574, 542, 491, 712, 654, 604, 562, 530, 731, 673, 
             623, 581, 511, 725, 667, 617, 575, 543, 735, 677, 627, 585, 743, 
             685, 635, 751, 693, 759}}]}]}, {
          EdgeForm[], 
          Directive[
           RGBColor[0.880722, 0.611041, 0.142051], 
           Opacity[0.2]], 
          GraphicsGroupBox[{
            PolygonBox[CompressedData["
1:eJwV0klQj2EcB/C/BlFys1UXM7IkbtZcyMiJZL2pxMVu7Cf7diPbJRkMibHE
CdlnSP+siVJJZOwj0aJLn+fwme/7fud553nf5/cOzVudvSomEon0IEqHm04a
Fe9poJ463lFLDV30t24sizjAQ97q/5PgegwL2c8D3uiT5RSWcZyXYT99P5nG
AvZxn2p9kkxnKcd4QYc+Xo5mPnu5x2v9TLmOMzSQyGTyOcpz2q2bLsOHn6SW
ODZwjg+kMo893KXKM1vlRT6TyVW+s5bT1DOEa/xkE384z0cm8ZfLfGUJvznC
M9rs0Sav84vNtFLCJzL4xxW+sZIWiqihL6X8YD1nwxwZxSW+MJfd3OGV/bbI
CzQzgzWcoo7BbKSYJiaSx2Gehnfx/DS5ghNh9vRhJNns4naYsXWD5ARyKaAy
nIV+qlxOYfg/iGUEc9hJWZi5dQPleHI4RDScjb63HE4WO7gVZqwfIMexmINU
hFnoe8kUZrOdm+Hs9S30dD2MWWzjRvhOfSVRKnhCOY95RDcqz3mI
             "]]}]}, {}, {}, {}, {}, {}, {}}, {{}, {}, 
         TagBox[{
           Directive[
            Opacity[1.], 
            RGBColor[0.368417, 0.506779, 0.709798], 
            AbsoluteThickness[1.6]], 
           LineBox[CompressedData["
1:eJwV1GWYVlUUBtCRLunuobtLOqQbW7ForDFobMUWsFFBDBSl08Lu7u7u7sBY
7481+9174jn3O/tO4ZSiScftUVBQsMuX1Em+/KFuYg6j6UoxilOCkpSiNPv4
+T/VzcxlDN0ow76+95e6hXmMpTtHmVfmMfkiplKW/cz+Vrcyn3H04GjzKjwu
X8w0yrG/2W51GwsYz2KzQl6XV9GTY/RVeUJeynTKc4DZP+p2FjKBk82a8IZ8
Hb04Vl+NJ+VlLJd78I08g7PlNnwg30IFDtT/q+5gUZ5T34Uv5ImcIjflTfl6
dRir5SvUPvwo36qOYy85l1SdDTyVs6l7s4Pl+kvUnmzl25xDHcOdzNQvUduy
mQ/1N6ojuJ21+hVqf7bzi36dOoE95YPU/9SdrJQHszh3oXbly+wNp8rNeCvP
xJVyX36Se1Mk1+DpnJdL5V58J8/iHLkdH+XZqcjBWcqcM3eTfeM0fXPelm+g
D8fra/JM/i6zqcQh2WvuyGeenaQvJ5jV4ln5suwklZlsViyfW54nO0k/qnCo
eXHuyhmyf/SnKtWoTg1qUova1GG3l6euWo/6NKAhjWhMIYf5uyW4Wz49u8kA
mnC4eUl2yWdktxjIiWa1eU6+PO8JTTnCrBT3yGfm/hjESWZ1eD57lveCZhxp
Vpp75bPymecM+ha8k11hMHP0dXkhd5v3gnP17flYvo3mTNGX4b68G7mDnFvf
knflmxjCXH09XpSvyj1k1/k++855cgc+ye+oI1knX60O4Fe5BVPlstwvr1KH
sEReqnZjC1/pb1ZHZxeYnM9GbcUm3ssuqcPZyZqcSe3HNn7O86njc/959/Tz
1Pps5CX9anUoK3Ifam9+kNeqYymSz1c78qm8Rh3FevkadSC/yS2ZJpfjgbwX
LJO783X2MPckt+b9PBdDma9vwMv5jPJOcIG+E5/JG2jFdH15Hsz9ZfcYxgKz
hryS8+QdoTUzzCrwUO4k+8hwFpo14lX52uwjbZiZ/xs8nOfNPjKCtswyr8gj
OVt2j5G0oz0d6EgnOjPbz1biUfnC7BajWGTWmNfkldntfF/fmc/ljTmTPIjf
5fXqxLxfdNH/D5vLx5g=
            "]]}, Annotation[#, "Charting`Private`Tag$149684#1"]& ], 
         TagBox[{
           Directive[
            Opacity[1.], 
            RGBColor[0.880722, 0.611041, 0.142051], 
            AbsoluteThickness[1.6]], 
           LineBox[CompressedData["
1:eJwV03mcjWUYBuAzg0KkRVoUKSVlSZSKSKlEUaOSJWpCWSKJioQolagUoVIS
JW0KoRklIYqs02yWjBmmhlGiGYWu54/r3O/v/r3nfN95v+erlTowZUBSIpFo
6eMbFiUnEk/TlvNJkMHb9OV69tm3Rr7CfTTmdNL0X8sRtKMWSezXr5Wv0p0m
VCVdv1g+w21cQDLF+mUssR7J7VxIGQ7ov+U7lvM9K/iBlayixL7V8se4z7g2
P/Ez61jPUntG0Z7alOVP/S9xDtaj6cBFlOOv+A35Gj24kjPYoE+Tz3IHF3MC
B+N6chL3cxXV2KhPl2O4kzqcyK+8Qz9a8Xfcq3ydB2jKmWyKs5FjSeESypPJ
DPpzA4fif8o3SOVqdvERQzmLXN7nUW4mn3k8xeY4Z/kcHdnLZ9RlJ3N4nCK+
pAJZvBvnyCP8zhdxL9zIbj6Os+HJmAsWcDjE2cvJ8Yx5kEI+j7PgGvKYG8+C
J2IO+Yqz2cYsBvEH87mFAj5hGFtibuTz3MWl/MaHDKEi2bzHAFrzj+9skFPo
ybWcw3Y+4DHasDXmUY7jbi7jJEr0G+Wb9KIZ1cmI2ZUvcA/1qESpfpOcSm+a
c27MR8y5fJFO1KcyR/SZMf/WL3EvDTiZf/VZZJNDLtvYzg52UhpnIHeRx27y
KWAPe+O9smc8nWlIFf7TF8b7Zv0yXbicUziq3yyn8RDXcV7Mg361nEBXGnEq
x/Rb5HQepgU14jnGOywn0o0rOI0cZjKQmzhu31b5Fn1oSU12MJvB3MoePmU4
xSyM50uR7/8PY++5Uw==
            "]]}, Annotation[#, "Charting`Private`Tag$149684#2"]& ]}}], {}}, {
     DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
      AxesOrigin -> {0, 0}, FrameTicks -> {{Automatic, 
         Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
         Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
      GridLines -> {None, None}, DisplayFunction -> Identity, 
      PlotRangePadding -> {{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.05], 
         Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
      DisplayFunction -> Identity, AspectRatio -> 
      NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
      AxesLabel -> {
        FormBox["\"x\"", TraditionalForm], 
        FormBox["\"Sin[x]\"", TraditionalForm]}, AxesOrigin -> {0, 0}, 
      AxesStyle -> {
        Directive[
         Thickness[Tiny], 
         Dashing[{Small, Small}], 
         GrayLevel[0]], 
        RGBColor[0, 0, 1]}, DisplayFunction :> Identity, Epilog -> {
        PointSize[0.02], 
        PointBox[
         NCache[{-Pi, 0}, {-3.141592653589793, 0}]], 
        PointBox[{0, 0}], 
        PointBox[
         NCache[{Pi, 0}, {3.141592653589793, 0}]], 
        PointBox[
         NCache[{2 Pi, 0}, {6.283185307179586, 0}]]}, 
      Frame -> {{False, False}, {False, False}}, 
      FrameLabel -> {{None, None}, {None, None}}, 
      FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
      GridLines -> {None, None}, GridLinesStyle -> Directive[
        GrayLevel[0.5, 0.4]], ImageSize -> Medium, 
      Method -> {
       "DefaultBoundaryStyle" -> Automatic, 
        "DefaultGraphicsInteraction" -> {
         "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
          "Effects" -> {
           "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
            "Droplines" -> {
             "freeformCursorMode" -> True, 
              "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
        "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
        None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& )}, "AxesInFront" -> True}, PlotLabel -> FormBox[
        StyleBox[
         FrameBox[
         "\"y = Sin[x] between -3 and 3 in PNG Format\"", StripOnInput -> 
          False], 12, 
         GrayLevel[0], Background -> RGBColor[0.92, 1, 0.92], StripOnInput -> 
         False], TraditionalForm], 
      PlotRange -> {{-3, 3}, {-0.9999996810338911, 0.9999999443692392}}, 
      PlotRangeClipping -> True, PlotRangePadding -> {{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.02], 
         Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
     FormBox[
      TemplateBox[{
        RowBox[{"sin", "(", "y", ")"}], 
        RowBox[{"cos", "(", "y", ")"}]}, "LineLegend", 
       DisplayFunction -> (FormBox[
         StyleBox[
          StyleBox[
           PaneBox[
            TagBox[
             GridBox[{{
                TagBox[
                 GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                  AutoDelete -> False, 
                  GridBoxDividers -> {
                   "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                  GridBoxItemSize -> {
                   "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
              GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
              AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
             "Grid"], Alignment -> Left, AppearanceElements -> None, 
            ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
            "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
          FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
          False], TraditionalForm]& ), 
       InterpretationFunction :> (RowBox[{"LineLegend", "[", 
          RowBox[{
            RowBox[{"{", 
              RowBox[{
                RowBox[{"Directive", "[", 
                  RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                ",", 
                RowBox[{"Directive", "[", 
                  RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                  "]"}]}], "}"}], ",", 
            RowBox[{"{", 
              RowBox[{
                TagBox[#, HoldForm], ",", 
                TagBox[#2, HoldForm]}], "}"}], ",", 
            RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
            RowBox[{"LabelStyle", "\[Rule]", 
              RowBox[{"{", "}"}]}], ",", 
            RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
       Editable -> True], TraditionalForm], TraditionalForm]},
   "Legended",
   DisplayFunction->(GridBox[{{
       TagBox[
        ItemBox[
         PaneBox[
          TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
          BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
        "SkipImageSizeLevel"], 
       ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
     GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
     AutoDelete -> False, GridBoxItemSize -> Automatic, 
     BaselinePosition -> {1, 1}]& ),
   Editable->True,
   InterpretationFunction->(RowBox[{"Legended", "[", 
      RowBox[{#, ",", 
        RowBox[{"Placed", "[", 
          RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )],
  StripOnInput->False]], "Output",
 CellChangeTimes->{
  3.7639986761006885`*^9, 3.763998814676688*^9, 3.76399885829469*^9, 
   3.763998895014689*^9, {3.763999023881693*^9, 3.763999031598692*^9}, {
   3.7639991349556904`*^9, 3.76399915826869*^9}, 3.7639992170526915`*^9, 
   3.763999651731331*^9, 3.7640028478442016`*^9, 3.764002886917202*^9, 
   3.764003035044202*^9, 3.7640030938052025`*^9, {3.7640043453449507`*^9, 
   3.764004352755951*^9}, {3.764004408151951*^9, 3.764004449077952*^9}, {
   3.764004509277952*^9, 3.764004515482957*^9}, {3.764004595585952*^9, 
   3.7640046944569697`*^9}, 3.764004753550953*^9, 3.7640067288345776`*^9, {
   3.764006793051719*^9, 3.7640067989357195`*^9}, 3.7640070029954643`*^9, {
   3.7640072653159084`*^9, 3.7640072831979303`*^9}, 3.764007326361908*^9, {
   3.7640073900972605`*^9, 3.7640074328254576`*^9}, 3.7640074805784607`*^9, {
   3.7640075231208053`*^9, 3.7640075630747986`*^9}, 3.7640076385736337`*^9, {
   3.7640077339170384`*^9, 3.764007741929038*^9}, {3.764007780625037*^9, 
   3.764007790875038*^9}, {3.7640078252780375`*^9, 3.7640078966857777`*^9}, 
   3.7640079298637786`*^9, 3.765119066568821*^9, 3.766084403476268*^9, 
   3.7730574364851117`*^9, 3.7730761642751307`*^9, 3.7730762076058207`*^9, 
   3.7732365647588053`*^9, 3.7734227602513056`*^9, 3.773586225593171*^9, 
   3.773586369339944*^9, 3.7735865216594343`*^9, 3.773586770089897*^9},
 CellLabel->
  "Out[167]=",ExpressionUUID->"2e34c4a7-c98d-4372-9470-707eb5836e9f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"ClearAll", "[", "cd", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"cd", "[", "fmt_String", "]"}], ":=", 
   RowBox[{"CloudDeploy", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"api", "[", "fmt", "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"\"\</live-coding/sin-\>\"", "<>", 
      RowBox[{"ToLowerCase", "[", "fmt", "]"}], "<>", "\"\</\>\""}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Permissions", "\[Rule]", "\"\<Public\>\""}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"formats", "=", 
   RowBox[{"{", 
    RowBox[{
    "\"\<PNG\>\"", ",", "\"\<JPG\>\"", ",", "\"\<GIF\>\"", ",", 
     "\"\<SVG\>\""}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"cd", "[", "f", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"f", ",", "formats"}], "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.756394910499188*^9, 3.7563949124601974`*^9}, {
  3.7563949650892177`*^9, 3.756394976718234*^9}, {3.76399866336569*^9, 
  3.7639986984816885`*^9}, {3.7639988811706905`*^9, 3.763998886738688*^9}, {
  3.7639989603686905`*^9, 3.7639989606906896`*^9}, {3.7639995997983294`*^9, 
  3.7639996044063272`*^9}, {3.7730574420157585`*^9, 3.7730574501497965`*^9}, {
  3.773586386620949*^9, 3.7735864452899556`*^9}, {3.773586613630548*^9, 
  3.773586697789817*^9}},
 CellLabel->
  "In[160]:=",ExpressionUUID->"157189a0-3214-4b0e-9fee-df70182e85c3"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   InterpretationBox[
    RowBox[{"CloudObject", "[", 
     TemplateBox[{
      "\"https://www.wolframcloud.com/obj/mitch/live-coding/sin-png\"",
       "https://www.wolframcloud.com/obj/mitch/live-coding/sin-png"},
      "HyperlinkURL"], "]"}],
    CloudObject["https://www.wolframcloud.com/obj/mitch/live-coding/sin-png"],
    SelectWithContents->True], ",", 
   InterpretationBox[
    RowBox[{"CloudObject", "[", 
     TemplateBox[{
      "\"https://www.wolframcloud.com/obj/mitch/live-coding/sin-jpg\"",
       "https://www.wolframcloud.com/obj/mitch/live-coding/sin-jpg"},
      "HyperlinkURL"], "]"}],
    CloudObject["https://www.wolframcloud.com/obj/mitch/live-coding/sin-jpg"],
    SelectWithContents->True], ",", 
   InterpretationBox[
    RowBox[{"CloudObject", "[", 
     TemplateBox[{
      "\"https://www.wolframcloud.com/obj/mitch/live-coding/sin-gif\"",
       "https://www.wolframcloud.com/obj/mitch/live-coding/sin-gif"},
      "HyperlinkURL"], "]"}],
    CloudObject["https://www.wolframcloud.com/obj/mitch/live-coding/sin-gif"],
    SelectWithContents->True], ",", 
   InterpretationBox[
    RowBox[{"CloudObject", "[", 
     TemplateBox[{
      "\"https://www.wolframcloud.com/obj/mitch/live-coding/sin-svg\"",
       "https://www.wolframcloud.com/obj/mitch/live-coding/sin-svg"},
      "HyperlinkURL"], "]"}],
    CloudObject["https://www.wolframcloud.com/obj/mitch/live-coding/sin-svg"],
    SelectWithContents->True]}], "}"}]], "Output",
 CellChangeTimes->{3.773586447499954*^9, 3.773586525926399*^9, 
  3.773586699758847*^9},
 CellLabel->
  "Out[163]=",ExpressionUUID->"f222b2ef-7db5-4e53-9d37-6446f64242ca"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"ClearAll", "[", 
  RowBox[{"url", ",", "session"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"url", "=", 
  RowBox[{"URLBuild", "[", 
   RowBox[{
    RowBox[{"cd", "[", "format", "]"}], ",", 
    RowBox[{"<|", 
     RowBox[{
      RowBox[{"\"\<a\>\"", "\[Rule]", 
       RowBox[{"-", "3"}]}], ",", 
      RowBox[{"\"\<b\>\"", "\[Rule]", "3"}]}], "|>"}]}], "]"}]}], "\n", 
 RowBox[{
  RowBox[{"session", "=", 
   RowBox[{"StartWebSession", "[", "\"\<Chrome\>\"", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"WebExecute", "[", 
   RowBox[{"session", ",", 
    RowBox[{"{", 
     RowBox[{"\"\<OpenPage\>\"", "\[Rule]", "url"}], "}"}]}], "]"}], 
  ";"}]}], "Input",
 CellChangeTimes->{
  3.766084394202262*^9, {3.7730574517938004`*^9, 3.773057473701782*^9}, 
   3.7735864599649506`*^9, {3.773586542479892*^9, 3.7735865634155493`*^9}},
 CellLabel->
  "In[156]:=",ExpressionUUID->"431ba32c-c291-4741-8106-95869f382e34"],

Cell[BoxData["\<\"https://www.wolframcloud.com/obj/mitch/live-coding/sin-png?\
a=-3&b=3\"\>"], "Output",
 CellChangeTimes->{
  3.766084406620227*^9, 3.7730574755267963`*^9, 3.773076167532134*^9, 
   3.773076213556814*^9, 3.7732365687067895`*^9, 3.7734227650483007`*^9, 
   3.7735862295261745`*^9, 3.7735864659849567`*^9, {3.7735865274803977`*^9, 
   3.7735865472779255`*^9}, 3.773586596204553*^9},
 CellLabel->
  "Out[157]=",ExpressionUUID->"791b4679-928d-47f2-bb1d-d9d7b1bc379d"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["JPG", "Subsubsection",
 CellChangeTimes->{{3.7570991831743665`*^9, 
  3.7570991844483414`*^9}},ExpressionUUID->"857f80d4-038a-4ecc-bb1f-\
d51a675fcc78"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"ClearAll", "[", 
  RowBox[{"api", ",", "format"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"format", "=", "\"\<JPG\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"api", "=", 
   RowBox[{"APIFunction", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"\"\<a\>\"", "\[Rule]", "\"\<Integer\>\""}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"\"\<b\>\"", "\[Rule]", "\"\<Integer\>\""}]}], 
      "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"Function", "[", "\[IndentingNewLine]", 
      RowBox[{"Framed", "@", 
       RowBox[{"Plot", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Sin", "[", "y", "]"}], ",", 
           RowBox[{"Cos", "[", "y", "]"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"y", ",", "#a", ",", "#b"}], "}"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"PlotLabel", "\[Rule]", 
          RowBox[{"Style", "[", 
           RowBox[{
            RowBox[{"Framed", "[", 
             RowBox[{"\"\<y = Sin[x] between \>\"", "<>", 
              RowBox[{"ToString", "[", "#a", "]"}], "<>", "\"\< and \>\"", "<>", 
              RowBox[{"ToString", "[", "#b", "]"}], "<>", "\"\< in \>\"", "<>",
               "format", "<>", "\"\< Format\>\""}], "]"}], ",", "12", ",", 
            "Black", ",", 
            RowBox[{"Background", "\[Rule]", 
             RowBox[{"Lighter", "[", "LightGreen", "]"}]}]}], "]"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"Filling", "\[Rule]", "Axis"}], ",", "\[IndentingNewLine]", 
         RowBox[{"AxesLabel", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"\"\<x\>\"", ",", "\"\<Sin[x]\>\""}], "}"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"AxesStyle", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Directive", "[", 
             RowBox[{"Thin", ",", "Dashed", ",", "Black"}], "]"}], ",", 
            "Blue"}], "}"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{"PlotLegends", "\[Rule]", "\"\<Expressions\>\""}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"Epilog", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"PointSize", "[", "0.02", "]"}], ",", 
            RowBox[{"Point", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "Pi"}], ",", "0"}], "}"}], "]"}], ",", 
            RowBox[{"Point", "[", 
             RowBox[{"{", 
              RowBox[{"0", ",", "0"}], "}"}], "]"}], ",", 
            RowBox[{"Point", "[", 
             RowBox[{"{", 
              RowBox[{"Pi", ",", "0"}], "}"}], "]"}], ",", 
            RowBox[{"Point", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"2", "Pi"}], ",", "0"}], "}"}], "]"}]}], "}"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"ImageSize", "\[Rule]", "Medium"}]}], "]"}]}], 
      "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", "format"}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"api", "[", 
  RowBox[{"<|", 
   RowBox[{
    RowBox[{"\"\<a\>\"", "\[Rule]", 
     RowBox[{"-", "3"}]}], ",", 
    RowBox[{"\"\<b\>\"", "\[Rule]", "3"}]}], "|>"}], "]"}]}], "Input",
 CellChangeTimes->{{3.756329030582449*^9, 3.7563291457713985`*^9}, {
   3.7563291896107125`*^9, 3.7563292413962297`*^9}, {3.7563921273355136`*^9, 
   3.7563921450374823`*^9}, {3.7563922377645206`*^9, 
   3.7563922464265203`*^9}, {3.7563948957392116`*^9, 
   3.7563948960792274`*^9}, {3.7564094028271685`*^9, 3.756409447579161*^9}, {
   3.756409482164953*^9, 3.756409482764958*^9}, {3.756410645651746*^9, 
   3.7564106553517036`*^9}, {3.763999290375689*^9, 3.7639993477256885`*^9}, {
   3.7639994084129915`*^9, 3.763999413366992*^9}, {3.763999471387329*^9, 
   3.7639995126803265`*^9}, {3.764002913494203*^9, 3.764002914227205*^9}, {
   3.7640043393859515`*^9, 3.7640043402019525`*^9}, 3.7640080126337786`*^9, 
   3.7651190766818237`*^9, {3.7730576985790358`*^9, 3.7730576987630024`*^9}},
 CellLabel->
  "In[159]:=",ExpressionUUID->"2a21effb-aed3-4b52-af17-46c3c06ef619"],

Cell[BoxData[
 FrameBox[
  TemplateBox[{GraphicsBox[{
      GraphicsComplexBox[CompressedData["
1:eJyNunk0Vf/3x4+4lBAhVCiJpNKgUrRvSIYKZaqINMhQVCpRoZIxQ8nQhIok
Q6FJ2NeQIikhiTIL173HfCfD73zW+ur9W7+/fv5gnXXOa9qvvfdrP18PS5w9
9x4T4OPjmyJ//e/vkZxoYnpamCa3bs4ZnXmlePeeyq0v4sK0Pplsh2HXb5jU
GuJpOZtCCx88WqOh/hNlv+0zXyEjRDMpov8sFWnFTxb7DD+rCtLSeZemijI7
0HiFqrfK0lk0ypLjaTe+duOWbPu0r2sEaDoW5z0We/QiN+z4/HUr+GkPtvS6
5v7uxzHWkzuH1PhoTMkthPiPASxfemtD8ckppF3wv2xlwMStQv55K49O4D6u
+spcGwJjqZs2bb/MRRlf8YW3Owg8ct+uuz+JjSGvHn3+wyPw61PF2fx3x9HA
X/tyfiKBinNfrMXXo9h7usEispKJc5R7vvZlDKNZR3yIiQcDPayCEtLTB9F4
u+vxFw/o6FTW+lnxFgOHnZ7Prg7tw6V6U5YfAvvwr0eT2WhnDz47kdf+/nU3
VilLLGiV6UK3kZf24Xfb0VZd/nl6QRuuviK0n6LSjKs233V+Z/UL51+sF427
V4eheRnRJ3fXYeNRD42czgq0eKcvGVhegRd8NSIr72TjK05x2pKYbMyI2kx9
opUF1hc5CgmaWRDpGvjD6epHqN2pvT3R6SOIje7ammlZB2WufHN7KXXQ5l2x
4fz1ZlgwMifPNesXMN/tLr3wqR0oviK7itrbIC04xeloaDfoqsaUXxnuBNXx
5/N97vVBv8Vh6Y6xHviTq1S09QQDXETX/fbx6gPr+LYQevQgVFmbvL4TRIeH
qRFFu+KGQej98RTeQQYIHjzJELo4ChZbOmT5njKhxunZ073Xx2HJwaCc0lsE
vBJTcGB5sOEMJ8Gdj03A8rtLeoV3ceFQpd+hvf0EcM9fn3y+bwJufx0S3uNA
AJ27UDx98xSMnbvbuvoYE5JdgusXqvBRBVM8PU79HoDo7dUR8qr8VC1Dm6N3
evpB3PO5fpmMANW9pVGIyO6FYsO3Ra8VZlH5ewajNnd3w+RJx4024oLUjXdT
GQ/ZHcAv/D1x5aQgNUV74ve8F62w0fhMqSkfhRr7s9uF4/YTuC2ZvTLDFKpD
1i5G7M5a+L94oP5fPMAV1V+048HCtFObm64dulyJd++3twRk8tNcFT6oeOT2
oU9JkJVxOh9txHzVI0ovHW1nM3P0Dk2jUQ0vjZbIQL5YkdHRE5NoceXGTaHf
TOxdevDcay8elrpX3hnJIPASc6d4XCQHH/853qI4SaD8o62ssfssFH327YZ0
M4Hj+10WO6WPYfHE/YxwIFBa9nNA/YsRzC5sPpuvQcZHgfaGymdD6HoxqujY
7QFctPHc1JvTBLq9LnV1T+rHci8vl9k7CDCtURq/caMffB9uVLl/ewjE7vmp
WfkPgCXfZetnwSMgLaLW9lOcCX0O4aaZV8ZgI1/OI/VVBOi/OSyQ6sMCSdXb
mq11BDDrHjzyt+eAt7fX5IppAqJF6oabzHkQ97i8a2k+AcObvwlpGE1CQcbB
5YoEE2SP3Wn2hGlQn+54P/SCAQn1z14oPOGj9rS7pWoN0sH853uXUw/4qVMB
d+dp/uiD1RWKA3MuClOFu/qs7A5VgZebtl1emTBNHFqrNlZ+QDfVpO3qTH6a
/s7TIjFSfaizfHx9US8fzU4/+7P1cTomT9w7efnHNC5R2bZjyVYGOh/cHbuf
Pom9Oy2cl8UyUUr6pPTpfh6u9Pg76nydwJB4fEQX4iLd4PUdyxECtymZnvJS
ZKPPF2GDKILADj6D21pLxtHk6FZQ9iL3J0avqXL9KJatknmheIWJSxliV/dr
DKNgr/vagFkMLGK1mpVqDaLmnIuPgpfQsVbS+NYjGyY0y/7ZbDnVB713RX8Y
SA3BVK1cpAhlANjfr8/miY/AcwO/pDdvGXDefmJhE28UUtgh2opMJohECDX4
TY1DZSA/MF4T8H2w2f99FxsmpT1CZUj7H7T0ZQx+4YK1ltmdfeT+jNtm8NOr
J+B7S+bH/BUE8L34OSpaOAVp1YNvhSSYsOhhgv69I3zUXN+mMTe3ARica8g1
OMxPrU+teWN6uB9ia4+5RWsLU48IcowmfWvgtb3MuToXPtpg1xzRJ84DKC5L
HZ7snkKLtvUbfg4x8GF12b7ongl8mr5xQfdiAovXmvzgjXMx6fZ764NVBHrt
+HaRuoCDvpJ9X9jTBI4uWxXgt5CF8/Rn1Z8tJnBOXvjTqDVj+LpTIIZfhECJ
e3bqratG8Pi+P57HvjJw7qPDXqPSw+DkvjFi/9AAZKw6l2LLNwoyl+ph1yEm
2DsqXPTnH4dTpcK94kcJuNRRtKZmmAW/coTbY/oImPPG8YNBPQciVmiW6ZH5
6AOuZJfW8kD1AdPqUwTpz/Ljs11xEpRQ1Tg+iwkrFfaW1pVOw81f816ImjHg
U0HjyaBCYWr7T91Qxy0V0D+383FTuzDN8cTb5B2MMvzeNznCExegfUrQTlCj
9eJdu+zHLBF+WpyA7a62pXRc6qeTtmc2H23BWp9Fx2YzcD56doVrTuGmFvas
dx5MTJs7fmSP2gQ6VftzTp4iUNyD5xG3nYtcu9e7v9EJ/OZQ+2yVIxsFdd5k
Fo4TaFevVZPgMI75kXGUz0EE3q85H2R4bhTzlc0XNT5hYhyFm57iNox3jkbm
ftvMQOm0dWdeeQyix/2s1fZOdLTryFPzbGXAlqWSvgve9oGi/Pmc+NpB0JgG
kdwKOpgVhnQ+/j4Mkic03qwMZ0BRc/51z4JReB/b7B/9mQnu5223uZSMw/V1
8THFqQQYTvueakpnw46vynzuEwTQxr64TURwIaNV51FTKwE+LvH+ZtETwBKJ
/HHYkIDz1r78B3ynoHZ5uaL8Vib8EYgOP2jAR3X8lebW8GQAqGohZasN+KlV
Cxw9Mp/0w07b0BV184WpRQnLXRQMvsGCqC9dYiF8tOGlD2g6ywcwV2JB7eKl
09i4u/bpwwoGmmv1PC5Vm8S0LzbJ56eYuE/ju2rTeh4eldgkdvM9mU/l5xrS
93LQsufjXjfSH28cyX+/2Z6FzVVR1z59ITDgxsUOlvsYdod+iXmyjMBbP2Pq
93uO4NjRNjmRKQYaKFebGNcPQdsS28vb3w3AlOxFP77yEXALC/d03cSER3++
t8vQxiB79zXdFBMCWqslEt+9YsH4978VyaQ9Ln2YyjucwIFX4qJ/b5P20jjq
f64mmgcPMjYa+KYQ4LWiM7jy6iQ0WfD/3vSVPA9xpGZJ4DQE3suwYV1hgB+V
p/nprjA150D63A27P8FLloahWsYkHk0QmhP7jomXF3aV387ioev8tNaoBAIF
yq79pFZxMO9hTpgsh8DMttJ1eb9Z+OSMjKBtD4Eeq6ztPnWNoZQd9+ArOwK1
fhvk6euNQYbS8fE0cQJSU/Lco7eyYLu5Q9HuCgKcOnRjHihz4IHG0o5pMv+M
Zy736hbnwSghQykpJ2CFDu2GYgEX3yySS3RoJLDfKzbnTjMbqwfnGlVNEejc
k2pY/GscY++rnV2QRaBM2+F5ffrjILk2iO55iQA5tntFxxo2JByY1/9yiICE
dNoP1XlcSBe7VaM2TI6/8KfvG6kJmPafOiV+ngBZ7fxs/T/C1Mhpycxp1XJY
/udd5cCgMI2l2aDfPlWKlF2rvhxTEqARlZztNnG9WHU6rFlanp9mqjG1JICP
jhE6xAMbOT7a2J9keQYxgAODAXNVd0+hvH70+x12TBwMKRAt2jGBsw81NH5y
JtDSRv67uyMXOYZUDde/BCpMxu6M8Gdj2VDkyijSvtLFT+nVfuOYzLaYYkUR
6HDydjN/3Cie1SgRPPuGiRbzvQo/hA1jzdq4nZ/2MpA6eVAoJ2wQPfVdwzf6
0/FeleuZhscM4M5/H+od2wdb7Fbe3/5yEO6Ycmzs0+gw+iLMwid/GHY8ixb5
dJZB2kPyXUHiKKQ/drwU8o4J9935RloejQOIn9/oe5/0txtVx3rD2LCikJN3
kkvAyMcLK656cCGsXPC1bTcBOsTNYt7pCYjx6Fwyz5IALfXPwoH7p2Bf6mDb
EQsmwCvRF1vX81GvFcpZ2ZcMwIkNGurLNvBTd9VnbPn2oR+UFRaGjgoIU1tm
jY1c+vANjNOfLVqZwEfTKfQT2y88gNcjrtJWUadR/3OP+NEXDFR3Zn0+aDyJ
ulEBxlMMJj5Mi/uycy8PjXEs/WIegTqCGs9oXhw8VxmjfYn0l28CPvvjL7FQ
8/miZzn1BG71GpxeGTaGb1JpeebrCNx3IVtjQfQIRl99Cg+kmXjIMXDjcN4Q
5N5toAbdH4B0Ub/e+tQRiGjRLbRRYYKR4hrZw0lj0EA/rZW2lYB5pW93r4ln
QbtL1jSniaxfd+157uXLgTf5ZeOyUwQ4bFyxwcqLB1+z4molnhOw9mVTxcWj
k1DatveEcysTDt4ybDB2mobZQ2096xIYYDXrZkRfqDA11UU5aMq6EsJW6HrQ
qiZxvsvD+oVPmfgpPt1DoJqH2l3a/rmRBO7IStGT7eWgkoN6sjuZ38f8b3yT
nGJhhk/0uQ1k/ldbUH1uQmAc4698K3x0lMC6Rcl/by4aA9EyO9vHU0z4EWev
TFnMArtXL/Y2FhOQ6BoRkinAgZMLthSVkvGp7v9ttTuTC6vUS76aVRPg/er6
6ps/uejYdkpQtpbAVQdzpd05bDQs7VqRSObD50GuHYt442g4WRpCeU3gW6Vi
ww1LxyEpbq58oBdZRzKk/ewk2XD4RL5EC4OA2jXzajYMc+B3qHax2xgBtxiB
OnrDPOhzNzPNDCSAYO0QP/pFmLpiV/brQ1of4HPgb+ESFS4iZ8n5T2R9FVws
NvfrNjY6Pk0/4ELWX6I+Ky9UVbChKkvWhD1JQKTKsszzWVzoCCzU+Unuj0i2
2BU3GR5mG9qkriojMG8N84+MNgdjDnzR6iPnr1c+uPjXVhYa1ritc6wgMLvx
eJdBPQvoBs9P1nURYLAtp3Dvaw5UsWLqksl4wJ/HzrpncnDDe6Fde0n96Lx9
OtaqiIXnNgcIsNpI+x9kJEZu44D5mj2satKeaTfOm9KK2Cjbp6UaQdbrPQJl
kif3sIHfeKnzfHL9jktOt8qu5gI1Lmvam0mA7pml5ksIYWr471+zdy4sg3Kj
VPvzbGFa3d3m23eCS1F5svzdXTUBmkawRKFRYC86X/G5oLKEn+bU385cTvQj
Ta4q8ZcSH82sKLdsTucA/gwNTT7tMIUXdX81tOxmouzH+46jVhMYu3fVi8/2
BJ4xS79uc4qLUU0K06LdZD1WfT7ufRQbFTfL2H3kEji87gi3J2wcJa5ImXfF
ku8LU244pY2iQIZyWTSNiVnyKysa7w7jkgLJd/GODPyRPljzPHEQ2yR/RvlH
0rGwuDxe5AYDekY3lgVe7YNPrKBbsimDsHTX1kXCcXQweS4a7Jw6DJVh1T1M
Fwas2wr7nEJH4WOarKXVCyZo91h9ib89TupNsx+Z8WS+Nz3TTvix4VJFrfgO
DgFzX1aL7LDnQnLetE/3XwIU1s/+U+c8AXGMg8v0bEl/iBkJkzaZgsSXuoea
DjDBK9KkdOVKPmqn4W1+768DMLHF79dDTX7qr9H9z7f96IebvM7NQVwKtVIL
XG5RaqEtP/6tTjIfzS91hFLMoiPTdPNbbfNpPGPV7KmUStZLvGnHdLtJvG8u
NhLTzcSyLp8l/od56Lhn/4hhDoEHOG8PPvfn4HPpzV7N5P57f9+fXhHBwrrp
ZOdh8ryT634ubpQ4hrxrN+N5mwnMryhsOJc8gvsMeh+8VWLiwFSz5sfHQ/Bd
7qAx7yY5X6EJRYwbAampD6tV5Zkgt83hBSVqDLY/nfP6wgYCnumKqfcHs+Cw
qb4s7wcBe+eNL/dx58CVsQC/bDI/nVe6Mn+BEw+e0sYzn+UQIDVm1WNpPQk7
NWOW7fnLhLc8D7sW82k4EbGfSHnCgJIua13fQGFqk/PDzzq/KuF8qSGfWPMk
nvu7YSrnARMZDWE0nWYeTu+ZnkgIJfD4I61BPhYHC1ebXBkYJfCu+Qml7eJs
ZOwZX3uGQaBgRPB1WalxPF/nfsnTjcAnujWB6+eOwdHDQcNe40zwlHzJpYmx
wGhYu3CwgICNqzYI5o+w4e/i+aq+ZDzpn1AVX/2HCyJne6TbvpL5a+T41fK/
XAwr/CX+kazH9lhs/2gtwkGN9dOdP8j4trA2W7tLlIWs2g7X3QUEhsHAnybJ
cYi9oO5q50ZAp4ur9XwBNswTYAd+oBNwauSNiW4nB252ZW3rGCcg88cPOb4O
Hthr3IswDSbAvkm8eLRcmErdz9Ryf/UBBs57FDxfx8U0y/X6v8j1aUYSB6b2
sPGIuInD0jEC07fWDde+YcN8UedUIPPT07kXw3UecGHxDinbvhYCVg8QtSnL
eCirFpnvjgTWL7scw2fIwQjbhmdvyPl33P7uMXsXC8PPxCsuI/WR0d73xVPl
LKiwiUky7iCgjd9284GnHFgU7OyQziOfv4yq2rznIEWRYqlPxq+wZHvntS8s
dH/M3femk8ByxTsycWs44FGYdWqUtOcnP6HJjGo2Oh+ZtViHPD/9Ly8YUANy
vnFr158eIWCiS+6gohIX5Lq3O9sPkv61jz71skeYOl393SA7uQzOrcpj23uy
Mc7cfOdGNoFtpUv72xLJ+l5V7IAvOR85iXvjDYc52AC9K/nJ9ciFpq1xDeUA
3/4izyOkPZa9lQpf2cTB9dUUbg2LwInUrrmpkhzwPptiSZDzm3tcxTmgn40Z
x74mAdn+5Rla8gNlNlROWoc0EARs8DixdxU/F2x/iho0kvM9lX+NV9rABivJ
B/2xpL/f2uKouXI5B8U6r/+dItun+QpvN/vAgUH5ANPLZP542PmDFvCAg5US
pb5GE6R/xO9QDN7NgYfzll8KJce/HvM3viGbjdJNKx3LyPffovcnRbOEqRFP
zt+qulMK0jyF5VsnhGmZg9lhfWalmNUwT+vVSgGanqLMrlfnezH7uucHDVV+
WrriDRmvnn48EPIm/r4KH023N1okumUA9/y42R9/bAqn9+2Lv2/MRPWem7Oj
7SewUGjap3Q/gbMqiN+fz3HR5o2EYB25f9H5f/Xq4tk48kZshS15/jgxaPze
t8ZRnr+o3zyewFNd6i1R2aPYU/I0ev4HJrbcF/nc9mgYU2TarUePMTBlqmC9
Rsog7lTO5V8YR8cvm89oLL3AgM1fNOYHXOyDyJ15YvyJg7Cz8T6j9iYdvNV3
PWp8MAy/TnYFsw8zYKGZjfL6wFHwKdimnf2cCVdV/LeMhY9DwA3vg1vvENCz
0ijprDcb/Ex7dNNI/ZyoesFnuRUX2hzihJX/p68bKhhwcAJMWg8omBwgz7uK
4F1/qFMg5iinJOLEBBG/E59V1PioTyR02rx/DIBR8eP1Ler81LOTr6Y9/vSD
ocen6N3jFGqRxZm5smq1oPk+krL9CR9NqXV/azdB6meN+fnvbKaxVpxicTaJ
gWE7BTNqnCaRroUl5u1M/DHL7bOCKw+P0y2blEg9QT/L90o5mIOmhdLJAWR+
NiqoMv8Ty8JDV+KDg5vIeiNptmxd8hiGi4Uv3KlL4FGmwcrU9BGUOvrEd4sq
E/P2zE5/eW8IZhvNtn9+YwCWX9PdsiFqBF49mO0oIM0Evj3el5tujIHcLAGo
1yL1z8VNd3YGsIAINirxaiBAebiyi3eEAydKmwoJ0l9nxapfY9vywPbSXYf+
lwQIxEuNF+2ehHePtB/o0JngosWvkLZzGvr8B4q+ZDDAx3pLrP5lYaqOqvzL
XYuqYEDcxHR95yQuMLRSZyYwkW/Mz62hg4cF746G8gcTyFrkY3J+ioMGnrSr
S8n87LGpqcJOlo1DvLnfrjMJPGvUHf5YfhyzK4odzE4SeHNX9x6K4Bgc5AU+
NBtmQuGeZhdFCguuSejcHX5LgKCESOmmATZsycqwNSPjpabl62WJH1ygRPUz
HtSS+VPKTtOJ4GLAk/Aq6WoCW6tClD9LcNDqwcReOhmPS/UKfx6Zz0L/nAXZ
RwvJ8c1nZWbOHgfFE7alm1xIfZF6u9SLywLj1op9Of2kvzSEC9OaOZDf5h9w
m0XAZrPAkPYmHjS+dgwQCyPPM9MRmSKaMPW6ToxbL+sDXB7Km79kCxf3NfTj
zwECp845CcjasvHq6cB7I2R+Pr/46QvrF2woHPz7/SeprzcEqvAU7nBhYt7i
+GN/CKCKtvvpafKwU/Yyy7+IwGNJ5f3nzDi4LmO3Tyw5/3w/A+klVixsiN7o
zP1M6v+o7pX2RSx4euaEFbuNgOxOjfHfSRyw0Dd5tITs/7Sxrv/nUg4+Ftj4
N4fUf7/YluH3GlgY9t6R+r/66xafa528OgeGw3rSJ0l77h/fZaNcz0bv964r
g8j8XF2wfX/QJjaIrqtZe4fUt1UVA3KPFnAhdMOu+B2k/nUq/2rj2yFMPWN1
8v3+zjIwllmW7H2BjWEUy289ZH7OfjL+9OgtNlw3HrvBIuvZ9NAOczNXDt7a
mKpRSvbf4+bLGAjkwG23gDwamZ/z1x3oSm7j4K7wlRXKZH6uCn5bpT6HA1jY
G9xCzu9+m9v7sSE2bldt+ONJ2mMqp1+MJ8eGR8MfTrWQ9azAHt15LzkckDjY
7v9klNy/ONt3RjXk+2p1BVPS35e+SgtKXsVBVca6Gyyyvbd981RNEQcma9sj
pcj5rT6kqDD+hIOHVLgtX8l8Z3dRvmWOEQfmSWsVZJPjy8xdM2T6mo3P7Pu3
riTj9wb/NpbdiDCVHRvtEf6zFKqunBbY6MNBCc2iXWvI9V1fvdR19AwHZtt4
6xwnxz9h5mSkxWNDsvq9oRSyv+IGzsk2Pg6mG4wFvCfn82v/9IY9yAapBz4X
kkh7GGZobw7X5eBTY9u/deT7cd0SW6lN5PrKL67vIttv4i9+rP2Bja6e/Qo9
5HyCY/c9cDrAQc8Nu3V0yO9Xl88zXyLPgR+KTgo88ns/erOIaCcbLad/e4iQ
75O/5+jBbzawFh4p+EnOj5+2oO6VIgeLU0qspsn3ha9OO82yJv3fbLOeA9le
Qfnczk88YWqbiUKk4L7SGR5Bix3Z9kowm/jH59YeTvrOx2T+43Mhdv6bRB4x
/vG5c0s4kqcm6P/4XLBLm9jeib5/fK7fi6Lp4fb3H58LrXC+5pzV9Y/PRTno
jJ5wbv/H57Znn/uoj83/+JytuTAvqrr+H5/jhu9xvthZ+Y/Pmc279fx11qt/
fC5RWbb2wPZkmOFzv37fmNbRKIcZPlcV1Hz90dlamOFzu+ODTsetaIIZPmcj
f+X0E402mOFzxt6nzdYbd8IMn4szES+5bN8DM3yuIrVUZU9fL8zwOWk1QvnI
TjrM8LnVanPORmkwYIbPXS/ZlBRylQkzfK72jP/CQ5cJmOFzfAvNLI+Q8TjD
59L0/HJfkPE6w+cMth1w3HSe+MfnpsUasxNvMv/xucfm7uedZRn/+NzixULT
hmvo//jcKZ97FRlCff/43KfKV/HSpv/xuVr+D/7Rrp3/+Nxt/uy48H1t//jc
4guCnZbnmv7xOZ7qTu10p+//+Jylo3GzZ0P5Pz6noGe7/f7DtH98Tr5QQiv2
fi7O8LmmA/cOqDtX4gyfC1UqlNk9qx5n+FzH9qORwcnNOMPnTnzbciHVqh1n
+JxbopG+l0MXzvC5tuabysts/uIMn6Novq5Q/tCHM3wuZyrwi8sXOs7wufKT
wS+tYhk4w+d818pzy74ycYbPzcTDDJ/j0cz/Dhwk8L7ejwCJCAqN8vKtUaMt
E3/ZnnLUixKiJQ0vOXmArM88o+tMfB8I0uT7Kk20ROg4J3td0uP0TsxvyzRX
Xd4PgbkbQsU1W1FbQKbj4M4BSOZ5rNvj2IgrmWfLPnYy4MrzOSknxb7ignjF
0sXzCDg3i3VzSWgxevEP/6z6QMC3TMVWq702qDNaLEbWp+BzM6ontKYYHFyz
Dv/vfrQ+/WZai9RXwMwWrSoJUr/lz94s6d4ItTqCiVntDDg0+qIlN6wVNig8
WbFg7QBUJV+QZKZ3QkZ+7zGuaj/4F8j10oIEqT8dm3Cwvh/vqy1d/f6KEHXb
nPr58TiACbeirLUuUqhh4ezdocDEGZ4mpOLqbmpB4AxPu0StuegTQuC9gUuh
p75QaI2rBczpaUwsvOfnsrNaiLZwT9nQdX0G6r+4XW3ZJEhL11osZRlExwOi
Z2k5OV3oaGj0TC68D6yXp1mYJLTh74BzN3ur6PBX990Oje1NuLzqTb1XGANc
/2qeWh5Tiw8XWtlbf2GCyUgeW0m6DE9qfbq2MpWAP54q2vbGSThSl+uzijxP
0/qtZ53Kew1NWyUXfWslYG1ocPFD08+g1WYS6G9E6kWr5+8OHWoAiU73O/e2
MiEp/31IbPBvsDBd0WL/dADsszr6ct92QF6BwomorH7YJq0bJWoqSAUj8ehu
837cs4B7ZERPiHp3cFmjoukAujD4Iop0SX9TfrZ9B4OBM/zLy7TlhZ00gRFt
V1YomAnT5jzc1eauTuDDyDU+L0wptHC9a/ub+JhoJ7f4dJjabzz08Pq5B4UD
cKBAWenM5QbcunXbhYCNTNAIeX8skl2FU+uaT30zJcBO+YbGrP7XeMdBLX8D
uT7Du5AoeeU+zE+6uLWeXL9qQlfXd+8yWDx7yjs8hTxfu0x23jxZC65rqekq
35nwXPrE67ILTSDLf9/6rz8D+jaZsq+iEPVS+/OTuasYWLlJUenxKwp1vh3j
sng4E2f4lSHXKjDkGoEz/OpimYSk0n0CFQy/iSkyKTRz+QTZC5+ZmK131b26
X4jWeVipfdFZBmrSRm7qsQRpHxNj81JK6CiwZX6t9vpuHM96FyiytQ/a5mba
uMm3Y/SD62KUMDqEOTiay637hWcY2moWBxmw7QWf3qG476iwLt2Bmc6EeZrR
MX955RizzVRU4xYB6+UP1fMWPUWf1eW+T8n6b5v8O8m21FwIt+0JMiLrQ6eL
16v8j1fCl9z071sdCVBfdslXyK4eTstemnX3GBNo0iWHhG60gHdkl09l6wCk
rpezuUPtAIHC9CE1oh8US750aGkKUqMr2q9uFu1HdYmeK1GLhaiMY4xNz+YO
YM1dHbXrihSqnMw965QSBs7wpoe57reWjDBR6JrmOaqrMG1JQ9HROQYELu65
OuHoTqF9ejNntdUqJnp0q1+uXvEH61Usq7uuDsDkrwp1p1M/cCLxvhRHjAn1
8kdmTQl8wccShd98V5N6Kmab/a13BZhe0d58vI48X3J2mw3IhcPcbQ89jcl8
4bVGdkD0VAmcOhrzRSOfgH32xl8u+32D8QdHqfVDTIju2nzB7fRPcA0vHyp7
yYDSNRvnKyUJUS/Q81beYg2gVrdNgWs8hQoXhH8uO87EGV5UstruN587qRc+
Bs+9mSpMuyt1myJ1lsBYxf1JzPBv6HP3u+57gtR/BY2OdpolKCTO9Tr8mgCb
rLASmk00+vSNio6R9YtE4fAoj1YA9x41Ku8h599upv98t60w9eD+VIrLerKe
zP7CPquQhyJUu9frSX14fLXHjR9vUuHaSPTtFFI//uLL+53o9wEmhhpDuyL+
4zfyE9KPWxMJnOE3LcYCUqapZL1GcL6em6LQMu62HphoYWJaZBBDnCtEyxbK
Mf0UxsAlnx6fWk8Rog19nJe0uZWONpZHmtje3Uj49Bk4SZHnKV9OE3d/O+qy
nx4eOEGHlpPrrKIyfuGtHIvHKgYMSI91W8aVq0Pmcu01vDtM8DaecvhMfEAH
vTkWk8EENJgYvnRuysC7124vLyLr3bAX/XLySS/AwdRoVRFZD18Yumrh5f0J
rDjvKobcyPotouvXz/o6kLxm1tJ0kQnfyssq9YRawFbl+mMLHpnPx9dF3BDs
AAe5b8rHJegQGR8XYbBYkHprXKl4f28fSovaRziICVGT06bfb2fQ8epQg7eL
BIWaEfZ6eM1zBs7wFqHD8z3fkPpX32rWvX0+wrT+XIZunjmBLTGZxW/8KLRV
7yb+1Oszcfzz6muMjD/I5p5UOXBsAPbQE1c19vzAo/bB12Q4DHjWsfG7tkgN
qXMy5G4qkfqmSmFsf0oh9m0UiP1eTcDvJteclD0+oPggSaqZ9E9ZXrZnuhsN
RLKmtr8pJOBQws555wW+gbXGaDqFn4Bru1Ia9ZiNsPrvAltWJQNyVmYqMyKF
qEMmLSVfmwewa+uI8O4QCtVeMnWV2D4mzvCSwQzrw3QHAjckHlqXnC9Mq8vY
sWLyMqk/BMpuhInX4iaV4dhPf5jQ82OHpq5yKf6eT5mYziLgrritX+TXeNy9
OV2qkqznD+xbNrGh4C3Ir7p9/VsTAQXi9XM8jYSpt6/ry6kuIzDm77OYrQKv
0PJ+rvypLgLKJ4OeefJS4KVDT+4wqU8Cqs0Ob/Qph0h3y98+8f/xi/3LdXW5
kWT73gusWKfHaD34wmAp+f1wYPCcp5n5EFGZU7OrmwCl/c5lVbVvcfVAVkIw
OT6fztlWA6E7IBZQsNyIjB+VhEsSPe8DUXvDVaeXpD1nnR9yzFz3Eo9u/eAT
xCBAxHHvET3vZ7BzPLK7bew/fmCr4BG0+QmBM/zAIMni9KtnBBZ8EH+ZQhGm
Pdz/JT+ym4lLNwWvfsFPoamW8b8+F8fARdW8Q9liQrTPFfyRraQ/8TmEO/y6
0419ClbHuiZ74dNFrYUGvu2409H1ubYdHYTG7/2o6vmF8p0Wfj0bGfDnhpKc
8QEyPoyO1lhGMCHNRtuwyLUCnQciBQqvErDc+Y1S3JtMVLF0Wqk4QoAjm6Lj
vikHRg9vtP44SMDVVVdvn+B9hOQUSsojLwKkaXLh+rfrYFfNnc+V15jwc9GO
6abyZugOr9vWK8IAezuqmn9PO2iPSAceVqJDhYBfe7WMILX/4OLATz/6cM7s
BbcNhYSokqZjc478pmPLoicLm4Qp1HCtnyFfkxg4c99vnNXcVPOTiW2FzFW/
/YVpRtsTuL+tSb3lUpLUeY1C+5we0n5sNxN1cS3lCv0PXn2mc8rVZgAunJ31
QkqlEf/EM7v8mAyQ/pj8rjasBrtm6T7oXkCA1N+QEr07Rbj8iaWKQyUBz1Y/
ujC3wBkMd+kGccn9/F4y7syoRZj9NOxhNY2ATx6RR7rCv0LH4X27zosQcCmg
IfhpZiPUzClZ2tHAgLQVLmr1N4SoXfJrNEu/DOA2l5Ls4gAKtZG+nGZnwsSZ
+/pfEe2WmrYEfuc3/bCikNxvAc0aY/I83zB2wfeneS3qRetSlH4wQa77ktTq
u6Xoobdf8ckz0n9Az24s/B4u4J7WmU3GB59SkX/t6zdgct/reVsLAWqD9wum
9YSpDdQDaywWETg6S+6Q0vgrXDG/609rOwFnu6W26i5OhnMuvm5DPAL2rpN7
fH28DCyeGhy5df+/+/NbpRo9e0P/9/9S9GOftqViwL2NtcNkvk/YrRxp8CwP
bseJiv76S/rDuW9R2R/eoYakXFbQDzJ/iNwU+G0cA1d83kHD//Q7x7gyb0Mo
Hs0RWnmYtOfxW46a0ctzcUfcr/nudALeGLWOzo57Clx2/Spz1n/312638Oni
JAKvr63VX8NLR+tc3+3UcbK+2BMYo5h8DWKsBV8nkf2xf3s9VJsfi7nrs2ed
JMeTkeUseNz0GLbl35P5ySGA+k0w9PDVFNzpo1GrTa73kev+woySBEB1RdV7
pP2KTjo917rhjWP+yzK7yf5m7o+vVJ3cqEXG48z98Zo7Q3FtzwnM0EpMeTNH
mGZ69+Pnz31MdBIV+RogRKElrX1ipX+fgfI1ao3ukkI0oUr1PyvG6FjvnKRk
ltaNN8uiou6P9ELixqGtLmHt6Hj2UetXczooFHyL7xVsxiLRkHXFWgxgT3Mk
Cd86pOuw1pwOZkLxb4tNr9MqMMRpIGVeAAF7mIM/ctKy0PmIwhZDUq8KlicV
Cm/Iho8uexbTSD0b8pn/VVfxRzgyNX3N6ywB836tO3LhTB106zjgqxAmtHwS
Ukh/0gyDB4aEn0kwQHX2R2+/xnZo5mzSs1Gjg/NmRriklCA1mZF8hvWlDykh
3rKb+YWody6UTZxooGPoOlFCUpBCXV2zxU3mLgNn7ntPNz7P3V3PxDWnj7JS
rgnTpGa50nvtCMz8bhbNCabQcvT9Qh7tZeKfzXk7K0Rb0XFknn7PngGI2LT5
tNb2RtxuP66i2scAk3fWWUrVNZhrvfS9kDRZT4/h0zUSxXjDe1li/EdyvYfN
lEMMtkHUk5KK//2/Sqpa2ZOtFgizRsPmfy4lyDgUD3Iy/wpumi2vVeYScPEu
4dgS3gi5tjaVn5sZkJJenvHxqhC1vsTT/EXFANIvqV9lXaJQo3YpuHgbMnHm
vjbZce473EfgktcYyURh2o8OT5WuIAL3nNrr7e9ViwUyizcU1zJByyNBSK2x
FLcNeJxwf0rATdsXFepuD7BXgd3wkKz/666HlihpvwHejXe+9n9IfeQUKPVJ
R5g6Z832Ujs5sj6SMjeU9HqNQQcc/t5sI+BObq7wDvuHYH6zyfw42V732FTZ
81dlsM+My5VK+u/+VNFmncyZGwTOublscceqNDzR5/bIgoxP97yBrzFqeZCQ
W+skTdZr+deEzydDAaKRYDunnqxn2tar72uIBHdeg5UUab85GmvSFIYiMDYw
I2E1+ZyQHCd1NTkXaV/nCu4j6/XIglS9wbQ0sNJd8JvH+u/+MukVY/Y1Um9k
Fs3hGvc/w53Gy7Wukufb0q0bXT0/+gNrSVQ7jezPZLxz7sGhO5hA2xKiSMbn
QCg6hfY/ghOUvrYT5Hl7wn4b1e/0I+w8tjg4h3y2tOzZfaEzDsKBtXSUjE+B
r5rHpqb8cLPYrVlfyf5m7g+FbzeXvU0jMNHnwVhdgxd8mKdlwiTf05dX9ZVk
JSJDb/ZjD7J9jjLf6Xlqt+G8sI1WDDl+xSfngV0+QRjiziuNIL9vuOJyKsg+
GD6epURfIJ+ffphcM7rhFvJ7D13PJ78fklPv/KDghifvbTgw9v+6z3thcLbl
IZkP+jwqTKWXcpDv/37mSJgfFV3KgZnnmfu+/88zdeaZL8Dt0Y7Rd8X/f7//
fwDsPrqd
       "], {{{
          EdgeForm[], 
          Directive[
           RGBColor[0.368417, 0.506779, 0.709798], 
           Opacity[0.2]], 
          GraphicsGroupBox[{
            PolygonBox[CompressedData["
1:eJwl0slvTXEYBuB7b9VM55ZlDRuslLa0uhARiaqqWdmYx7YScw0brAxFKhY1
LhARVa3iHzBbmzZ0RVJNiIWhpc+Xu3ju+37fPbk559xf8frGuoZUIpFI8o5+
w0AqPdf5+CXvsYeFlBDXZzCETIYyjKWu/y3b2Us1MxjOMt/9kffZxyJmst0+
m6f6KTYwguV2f2UH+6mhlB32OTzTT7ORkayw65cPOMBimu2Keatfpoyd5lye
62fYxChW2g3ITg5Sy2G7Ccn0e7lCObvMebzQz9Kil9Krb+a4PoVP+k1Gs8r8
T3ZxKJ7TPJ0v+hKO6BN5r1+T87mqt8oKvuu3ZQ2z9AaZz11exr3JeXTRYj4n
y+jgW9yHrOYxW8wn5FTa+Wy+IRfQzS3zJVlFJz/Nd2QtY/TV8r98SJs+l+b4
L2QJX+PccFSfxId4Ji7qlfzQZ9OoF/Aq7pfzejl9+lZO6tPoiWdnLGuS6YPa
Hf9NnDeOmSfzUb9OBU3mQl7H77KNLOrtkjyKdx5nkkp22xXxRr8QZ5Js1tql
4r3F88SZZA45rLPP4EncQ5w/qsglj3wKKKSIcYxnEDCzYt0=
             "]]}]}, {
          EdgeForm[], 
          Directive[
           RGBColor[0.368417, 0.506779, 0.709798], 
           Opacity[0.2]], 
          GraphicsGroupBox[{
            PolygonBox[CompressedData["
1:eJwt00dsznEYwPGX2PNq1KjRqtkKBxLRqhoVES52lx201HbqQFfCQY22RKhG
iopIROx9tTkZByvhQCK4iPg8icMnz/f55U3e9/29/ze5qGRBcftEItGOT/yx
/GW8vuZwPuf4bc8ym2jTn8nQdWzRx3jFYPtucnURdTykt7N1ZOh0xjGWMYxm
NoXU8oBeXruWUXoWBdRwn57O1zBSl9LESwY528VMnU819+jhbDVpejONvGCg
s53M0HlUcZfuzlYxQp//fy/p9lo26QaeM8C+gxzdwjvS7JUs11+ZqA+wT9+h
m15Jqv5Fpm6MO9a55mk+xv2YNZToueYZvuvJZj1HdY55gme6zUxiO9PtV815
tPLDfsmcwpF4D/vluCdO8tZ+Ib4vFSyzXzHn0MIX+0VzAvvZa882j3NbdzVX
kKJ/MlU3cDZ+V7OZD/F7m9UU629M0gfjM+mn9NfbyNbNvCHVXs5SvYdbdLEX
MVy38j6eI3sVG/VhntDPvpVp+hSvSbGXsURXcpPO9kKG6Q0c4jF949kmSy+m
ght0clbAUL2eeh7Rx1kpmXoR5Vyno7N8hsTdsJCy+H/RwXkeyfHfiWc4nst4
tkiKO4nvwT9ae2py
             "]]}]}, {
          EdgeForm[], 
          Directive[
           RGBColor[0.880722, 0.611041, 0.142051], 
           Opacity[0.2]], 
          GraphicsGroupBox[{
            
            PolygonBox[{{760, 762, 443, 694, 636, 586, 544, 512, 726, 668, 
             618, 576, 493, 713, 655, 605, 563, 531, 444, 695, 637, 587, 545, 
             513, 494, 714, 656, 606, 564, 532, 445, 696, 638, 588, 546, 514, 
             495, 446, 697, 639, 589, 547, 515, 496, 447, 448, 449, 450, 451, 
             452, 453, 454}}], 
            
            PolygonBox[{{492, 763, 761, 481, 482, 483, 484, 485, 486, 487, 
             488, 709, 651, 601, 559, 527, 508, 489, 710, 652, 602, 560, 528, 
             509, 723, 665, 615, 573, 541, 490, 711, 653, 603, 561, 529, 510, 
             724, 666, 616, 574, 542, 491, 712, 654, 604, 562, 530, 731, 673, 
             623, 581, 511, 725, 667, 617, 575, 543, 735, 677, 627, 585, 743, 
             685, 635, 751, 693, 759}}]}]}, {
          EdgeForm[], 
          Directive[
           RGBColor[0.880722, 0.611041, 0.142051], 
           Opacity[0.2]], 
          GraphicsGroupBox[{
            PolygonBox[CompressedData["
1:eJwV0klQj2EcB/C/BlFys1UXM7IkbtZcyMiJZL2pxMVu7Cf7diPbJRkMibHE
CdlnSP+siVJJZOwj0aJLn+fwme/7fud553nf5/cOzVudvSomEon0IEqHm04a
Fe9poJ463lFLDV30t24sizjAQ97q/5PgegwL2c8D3uiT5RSWcZyXYT99P5nG
AvZxn2p9kkxnKcd4QYc+Xo5mPnu5x2v9TLmOMzSQyGTyOcpz2q2bLsOHn6SW
ODZwjg+kMo893KXKM1vlRT6TyVW+s5bT1DOEa/xkE384z0cm8ZfLfGUJvznC
M9rs0Sav84vNtFLCJzL4xxW+sZIWiqihL6X8YD1nwxwZxSW+MJfd3OGV/bbI
CzQzgzWcoo7BbKSYJiaSx2Gehnfx/DS5ghNh9vRhJNns4naYsXWD5ARyKaAy
nIV+qlxOYfg/iGUEc9hJWZi5dQPleHI4RDScjb63HE4WO7gVZqwfIMexmINU
hFnoe8kUZrOdm+Hs9S30dD2MWWzjRvhOfSVRKnhCOY95RDcqz3mI
             "]]}]}, {}, {}, {}, {}, {}, {}}, {{}, {}, 
         TagBox[{
           Directive[
            Opacity[1.], 
            RGBColor[0.368417, 0.506779, 0.709798], 
            AbsoluteThickness[1.6]], 
           LineBox[CompressedData["
1:eJwV1GWYVlUUBtCRLunuobtLOqQbW7ForDFobMUWsFFBDBSl08Lu7u7u7sBY
7481+9174jn3O/tO4ZSiScftUVBQsMuX1Em+/KFuYg6j6UoxilOCkpSiNPv4
+T/VzcxlDN0ow76+95e6hXmMpTtHmVfmMfkiplKW/cz+Vrcyn3H04GjzKjwu
X8w0yrG/2W51GwsYz2KzQl6XV9GTY/RVeUJeynTKc4DZP+p2FjKBk82a8IZ8
Hb04Vl+NJ+VlLJd78I08g7PlNnwg30IFDtT/q+5gUZ5T34Uv5ImcIjflTfl6
dRir5SvUPvwo36qOYy85l1SdDTyVs6l7s4Pl+kvUnmzl25xDHcOdzNQvUduy
mQ/1N6ojuJ21+hVqf7bzi36dOoE95YPU/9SdrJQHszh3oXbly+wNp8rNeCvP
xJVyX36Se1Mk1+DpnJdL5V58J8/iHLkdH+XZqcjBWcqcM3eTfeM0fXPelm+g
D8fra/JM/i6zqcQh2WvuyGeenaQvJ5jV4ln5suwklZlsViyfW54nO0k/qnCo
eXHuyhmyf/SnKtWoTg1qUova1GG3l6euWo/6NKAhjWhMIYf5uyW4Wz49u8kA
mnC4eUl2yWdktxjIiWa1eU6+PO8JTTnCrBT3yGfm/hjESWZ1eD57lveCZhxp
Vpp75bPymecM+ha8k11hMHP0dXkhd5v3gnP17flYvo3mTNGX4b68G7mDnFvf
knflmxjCXH09XpSvyj1k1/k++855cgc+ye+oI1knX60O4Fe5BVPlstwvr1KH
sEReqnZjC1/pb1ZHZxeYnM9GbcUm3ssuqcPZyZqcSe3HNn7O86njc/959/Tz
1Pps5CX9anUoK3Ifam9+kNeqYymSz1c78qm8Rh3FevkadSC/yS2ZJpfjgbwX
LJO783X2MPckt+b9PBdDma9vwMv5jPJOcIG+E5/JG2jFdH15Hsz9ZfcYxgKz
hryS8+QdoTUzzCrwUO4k+8hwFpo14lX52uwjbZiZ/xs8nOfNPjKCtswyr8gj
OVt2j5G0oz0d6EgnOjPbz1biUfnC7BajWGTWmNfkldntfF/fmc/ljTmTPIjf
5fXqxLxfdNH/D5vLx5g=
            "]]}, Annotation[#, "Charting`Private`Tag$65918#1"]& ], 
         TagBox[{
           Directive[
            Opacity[1.], 
            RGBColor[0.880722, 0.611041, 0.142051], 
            AbsoluteThickness[1.6]], 
           LineBox[CompressedData["
1:eJwV03mcjWUYBuAzg0KkRVoUKSVlSZSKSKlEUaOSJWpCWSKJioQolagUoVIS
JW0KoRklIYqs02yWjBmmhlGiGYWu54/r3O/v/r3nfN95v+erlTowZUBSIpFo
6eMbFiUnEk/TlvNJkMHb9OV69tm3Rr7CfTTmdNL0X8sRtKMWSezXr5Wv0p0m
VCVdv1g+w21cQDLF+mUssR7J7VxIGQ7ov+U7lvM9K/iBlayixL7V8se4z7g2
P/Ez61jPUntG0Z7alOVP/S9xDtaj6cBFlOOv+A35Gj24kjPYoE+Tz3IHF3MC
B+N6chL3cxXV2KhPl2O4kzqcyK+8Qz9a8Xfcq3ydB2jKmWyKs5FjSeESypPJ
DPpzA4fif8o3SOVqdvERQzmLXN7nUW4mn3k8xeY4Z/kcHdnLZ9RlJ3N4nCK+
pAJZvBvnyCP8zhdxL9zIbj6Os+HJmAsWcDjE2cvJ8Yx5kEI+j7PgGvKYG8+C
J2IO+Yqz2cYsBvEH87mFAj5hGFtibuTz3MWl/MaHDKEi2bzHAFrzj+9skFPo
ybWcw3Y+4DHasDXmUY7jbi7jJEr0G+Wb9KIZ1cmI2ZUvcA/1qESpfpOcSm+a
c27MR8y5fJFO1KcyR/SZMf/WL3EvDTiZf/VZZJNDLtvYzg52UhpnIHeRx27y
KWAPe+O9smc8nWlIFf7TF8b7Zv0yXbicUziq3yyn8RDXcV7Mg361nEBXGnEq
x/Rb5HQepgU14jnGOywn0o0rOI0cZjKQmzhu31b5Fn1oSU12MJvB3MoePmU4
xSyM50uR7/8PY++5Uw==
            "]]}, Annotation[#, "Charting`Private`Tag$65918#2"]& ]}}], {}}, {
     DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
      AxesOrigin -> {0, 0}, FrameTicks -> {{Automatic, 
         Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
         Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
      GridLines -> {None, None}, DisplayFunction -> Identity, 
      PlotRangePadding -> {{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.05], 
         Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
      DisplayFunction -> Identity, AspectRatio -> 
      NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
      AxesLabel -> {
        FormBox["\"x\"", TraditionalForm], 
        FormBox["\"Sin[x]\"", TraditionalForm]}, AxesOrigin -> {0, 0}, 
      AxesStyle -> {
        Directive[
         Thickness[Tiny], 
         Dashing[{Small, Small}], 
         GrayLevel[0]], 
        RGBColor[0, 0, 1]}, DisplayFunction :> Identity, Epilog -> {
        PointSize[0.02], 
        PointBox[
         NCache[{-Pi, 0}, {-3.141592653589793, 0}]], 
        PointBox[{0, 0}], 
        PointBox[
         NCache[{Pi, 0}, {3.141592653589793, 0}]], 
        PointBox[
         NCache[{2 Pi, 0}, {6.283185307179586, 0}]]}, 
      Frame -> {{False, False}, {False, False}}, 
      FrameLabel -> {{None, None}, {None, None}}, 
      FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
      GridLines -> {None, None}, GridLinesStyle -> Directive[
        GrayLevel[0.5, 0.4]], ImageSize -> Medium, 
      Method -> {
       "DefaultBoundaryStyle" -> Automatic, 
        "DefaultGraphicsInteraction" -> {
         "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
          "Effects" -> {
           "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
            "Droplines" -> {
             "freeformCursorMode" -> True, 
              "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
        "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
        None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& )}, "AxesInFront" -> True}, PlotLabel -> FormBox[
        StyleBox[
         FrameBox[
         "\"y = Sin[x] between -3 and 3 in JPG Format\"", StripOnInput -> 
          False], 12, 
         GrayLevel[0], Background -> RGBColor[0.92, 1, 0.92], StripOnInput -> 
         False], TraditionalForm], 
      PlotRange -> {{-3, 3}, {-0.9999996810338911, 0.9999999443692392}}, 
      PlotRangeClipping -> True, PlotRangePadding -> {{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.02], 
         Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
     FormBox[
      TemplateBox[{
        RowBox[{"sin", "(", "y", ")"}], 
        RowBox[{"cos", "(", "y", ")"}]}, "LineLegend", 
       DisplayFunction -> (FormBox[
         StyleBox[
          StyleBox[
           PaneBox[
            TagBox[
             GridBox[{{
                TagBox[
                 GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                  AutoDelete -> False, 
                  GridBoxDividers -> {
                   "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                  GridBoxItemSize -> {
                   "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
              GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
              AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
             "Grid"], Alignment -> Left, AppearanceElements -> None, 
            ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
            "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
          FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
          False], TraditionalForm]& ), 
       InterpretationFunction :> (RowBox[{"LineLegend", "[", 
          RowBox[{
            RowBox[{"{", 
              RowBox[{
                RowBox[{"Directive", "[", 
                  RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                ",", 
                RowBox[{"Directive", "[", 
                  RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                  "]"}]}], "}"}], ",", 
            RowBox[{"{", 
              RowBox[{
                TagBox[#, HoldForm], ",", 
                TagBox[#2, HoldForm]}], "}"}], ",", 
            RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
            RowBox[{"LabelStyle", "\[Rule]", 
              RowBox[{"{", "}"}]}], ",", 
            RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
       Editable -> True], TraditionalForm], TraditionalForm]},
   "Legended",
   DisplayFunction->(GridBox[{{
       TagBox[
        ItemBox[
         PaneBox[
          TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
          BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
        "SkipImageSizeLevel"], 
       ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
     GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
     AutoDelete -> False, GridBoxItemSize -> Automatic, 
     BaselinePosition -> {1, 1}]& ),
   Editable->True,
   InterpretationFunction->(RowBox[{"Legended", "[", 
      RowBox[{#, ",", 
        RowBox[{"Placed", "[", 
          RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )],
  StripOnInput->False]], "Output",
 CellChangeTimes->{{3.763999454470327*^9, 3.763999473000329*^9}, 
   3.7639995315583334`*^9, 3.76399966518933*^9, 3.764002915084203*^9, 
   3.7640030989202013`*^9, 3.7640080146197786`*^9, 3.76511907876982*^9, 
   3.7730761769638076`*^9, 3.773076224231717*^9},
 CellLabel->
  "Out[162]=",ExpressionUUID->"a84e65f8-44cf-4650-8472-7c2098fcdcde"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"ClearAll", "[", "cd", "]"}], "\[IndentingNewLine]", 
 RowBox[{"cd", "=", 
  RowBox[{"CloudDeploy", "[", "\[IndentingNewLine]", 
   RowBox[{"api", " ", ",", "\[IndentingNewLine]", 
    RowBox[{"\"\</live-coding/sin-\>\"", "<>", 
     RowBox[{"ToLowerCase", "[", "format", "]"}], "<>", "\"\</\>\""}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"Permissions", "\[Rule]", "\"\<Public\>\""}]}], 
   "\[IndentingNewLine]", "]"}]}]}], "Input",
 CellChangeTimes->{{3.756329030582449*^9, 3.7563291457713985`*^9}, {
  3.7563291896107125`*^9, 3.7563292413962297`*^9}, {3.7563921273355136`*^9, 
  3.7563921450374823`*^9}, {3.7563922377645206`*^9, 3.7563922464265203`*^9}, {
  3.7563948957392116`*^9, 3.7563948960792274`*^9}, {3.7564094028271685`*^9, 
  3.756409447579161*^9}, {3.756409482164953*^9, 3.756409482764958*^9}, {
  3.756410645651746*^9, 3.7564106553517036`*^9}, {3.763999290375689*^9, 
  3.7639993477256885`*^9}, {3.763999435402994*^9, 3.7639994486253276`*^9}, {
  3.763999521400328*^9, 3.7639995286803284`*^9}, {3.7639995788413267`*^9, 
  3.763999581233329*^9}, {3.7639998700393267`*^9, 3.7639998755173264`*^9}, {
  3.773057705985038*^9, 3.7730577137860265`*^9}},
 CellLabel->
  "In[163]:=",ExpressionUUID->"abc84abf-1c85-42c6-bf97-93192f7f23cf"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"CloudObject", "[", 
   TemplateBox[{
    "\"https://www.wolframcloud.com/obj/mitch/live-coding/sin-jpg\"",
     "https://www.wolframcloud.com/obj/mitch/live-coding/sin-jpg"},
    "HyperlinkURL"], "]"}],
  CloudObject["https://www.wolframcloud.com/obj/mitch/live-coding/sin-jpg"],
  SelectWithContents->True]], "Output",
 CellChangeTimes->{
  3.7563290543454*^9, {3.756329208863676*^9, 3.7563292426542273`*^9}, 
   3.7563921468005*^9, 3.7563922719434786`*^9, 3.756409454379158*^9, 
   3.756409491561922*^9, 3.756410671100726*^9, 3.756411092144909*^9, 
   3.763999533399327*^9, 3.7639995824993277`*^9, 3.763999666898327*^9, 
   3.7640029183902025`*^9, 3.7640031002712035`*^9, 3.764008021593779*^9, 
   3.765119081670824*^9, 3.773076178675845*^9, 3.7730762319937286`*^9},
 CellLabel->
  "Out[164]=",ExpressionUUID->"799a6d2f-adc3-4f3e-a4c2-492c4cad1616"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["GIF", "Subsubsection",
 CellChangeTimes->{{3.757099191495365*^9, 
  3.757099192208339*^9}},ExpressionUUID->"4a05c937-9062-4c7a-997f-\
d71cbfba53d8"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"ClearAll", "[", 
  RowBox[{"api", ",", "format"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"format", "=", "\"\<GIF\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"api", "=", 
   RowBox[{"APIFunction", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"\"\<a\>\"", "\[Rule]", "\"\<Integer\>\""}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"\"\<b\>\"", "\[Rule]", "\"\<Integer\>\""}]}], 
      "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"Function", "[", "\[IndentingNewLine]", 
      RowBox[{"Framed", "@", 
       RowBox[{"Plot", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Sin", "[", "y", "]"}], ",", 
           RowBox[{"Cos", "[", "y", "]"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"y", ",", "#a", ",", "#b"}], "}"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"PlotLabel", "\[Rule]", 
          RowBox[{"Style", "[", 
           RowBox[{
            RowBox[{"Framed", "[", 
             RowBox[{"\"\<y = Sin[x] between \>\"", "<>", 
              RowBox[{"ToString", "[", "#a", "]"}], "<>", "\"\< and \>\"", "<>", 
              RowBox[{"ToString", "[", "#b", "]"}], "<>", "\"\< in \>\"", "<>",
               "format", "<>", "\"\< Format\>\""}], "]"}], ",", "12", ",", 
            "Black", ",", 
            RowBox[{"Background", "\[Rule]", 
             RowBox[{"Lighter", "[", "LightGreen", "]"}]}]}], "]"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"Filling", "\[Rule]", "Axis"}], ",", "\[IndentingNewLine]", 
         RowBox[{"AxesLabel", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"\"\<x\>\"", ",", "\"\<Sin[x]\>\""}], "}"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"AxesStyle", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Directive", "[", 
             RowBox[{"Thin", ",", "Dashed", ",", "Black"}], "]"}], ",", 
            "Blue"}], "}"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{"PlotLegends", "\[Rule]", "\"\<Expressions\>\""}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"Epilog", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"PointSize", "[", "0.02", "]"}], ",", 
            RowBox[{"Point", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "Pi"}], ",", "0"}], "}"}], "]"}], ",", 
            RowBox[{"Point", "[", 
             RowBox[{"{", 
              RowBox[{"0", ",", "0"}], "}"}], "]"}], ",", 
            RowBox[{"Point", "[", 
             RowBox[{"{", 
              RowBox[{"Pi", ",", "0"}], "}"}], "]"}], ",", 
            RowBox[{"Point", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"2", "Pi"}], ",", "0"}], "}"}], "]"}]}], "}"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"ImageSize", "\[Rule]", "Medium"}]}], "]"}]}], 
      "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", "format"}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"api", "[", 
  RowBox[{"<|", 
   RowBox[{
    RowBox[{"\"\<a\>\"", "\[Rule]", 
     RowBox[{"-", "3"}]}], ",", 
    RowBox[{"\"\<b\>\"", "\[Rule]", "3"}]}], "|>"}], "]"}]}], "Input",
 CellChangeTimes->{
  3.756329265849203*^9, {3.756392173675522*^9, 3.7563921758105116`*^9}, {
   3.7564144126214714`*^9, 3.7564144197294397`*^9}, {3.7564147735439405`*^9, 
   3.756414777832939*^9}, {3.7639996749073277`*^9, 3.763999725608327*^9}, {
   3.764003110081204*^9, 3.764003128290001*^9}, 3.7640080402137794`*^9, 
   3.7651190887568207`*^9, {3.7730577306204305`*^9, 3.773057730772434*^9}},
 CellLabel->
  "In[165]:=",ExpressionUUID->"c53fc905-94f1-443d-916d-e0a56e5764cf"],

Cell[BoxData[
 FrameBox[
  TemplateBox[{GraphicsBox[{
      GraphicsComplexBox[CompressedData["
1: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
fwDsPrqd
       "], {{{
          EdgeForm[], 
          Directive[
           RGBColor[0.368417, 0.506779, 0.709798], 
           Opacity[0.2]], 
          GraphicsGroupBox[{
            PolygonBox[CompressedData["
1:eJwl0slvTXEYBuB7b9VM55ZlDRuslLa0uhARiaqqWdmYx7YScw0brAxFKhY1
LhARVa3iHzBbmzZ0RVJNiIWhpc+Xu3ju+37fPbk559xf8frGuoZUIpFI8o5+
w0AqPdf5+CXvsYeFlBDXZzCETIYyjKWu/y3b2Us1MxjOMt/9kffZxyJmst0+
m6f6KTYwguV2f2UH+6mhlB32OTzTT7ORkayw65cPOMBimu2Keatfpoyd5lye
62fYxChW2g3ITg5Sy2G7Ccn0e7lCObvMebzQz9Kil9Krb+a4PoVP+k1Gs8r8
T3ZxKJ7TPJ0v+hKO6BN5r1+T87mqt8oKvuu3ZQ2z9AaZz11exr3JeXTRYj4n
y+jgW9yHrOYxW8wn5FTa+Wy+IRfQzS3zJVlFJz/Nd2QtY/TV8r98SJs+l+b4
L2QJX+PccFSfxId4Ji7qlfzQZ9OoF/Aq7pfzejl9+lZO6tPoiWdnLGuS6YPa
Hf9NnDeOmSfzUb9OBU3mQl7H77KNLOrtkjyKdx5nkkp22xXxRr8QZ5Js1tql
4r3F88SZZA45rLPP4EncQ5w/qsglj3wKKKSIcYxnEDCzYt0=
             "]]}]}, {
          EdgeForm[], 
          Directive[
           RGBColor[0.368417, 0.506779, 0.709798], 
           Opacity[0.2]], 
          GraphicsGroupBox[{
            PolygonBox[CompressedData["
1:eJwt00dsznEYwPGX2PNq1KjRqtkKBxLRqhoVES52lx201HbqQFfCQY22RKhG
iopIROx9tTkZByvhQCK4iPg8icMnz/f55U3e9/29/ze5qGRBcftEItGOT/yx
/GW8vuZwPuf4bc8ym2jTn8nQdWzRx3jFYPtucnURdTykt7N1ZOh0xjGWMYxm
NoXU8oBeXruWUXoWBdRwn57O1zBSl9LESwY528VMnU819+jhbDVpejONvGCg
s53M0HlUcZfuzlYxQp//fy/p9lo26QaeM8C+gxzdwjvS7JUs11+ZqA+wT9+h
m15Jqv5Fpm6MO9a55mk+xv2YNZToueYZvuvJZj1HdY55gme6zUxiO9PtV815
tPLDfsmcwpF4D/vluCdO8tZ+Ib4vFSyzXzHn0MIX+0VzAvvZa882j3NbdzVX
kKJ/MlU3cDZ+V7OZD/F7m9UU629M0gfjM+mn9NfbyNbNvCHVXs5SvYdbdLEX
MVy38j6eI3sVG/VhntDPvpVp+hSvSbGXsURXcpPO9kKG6Q0c4jF949kmSy+m
ght0clbAUL2eeh7Rx1kpmXoR5Vyno7N8hsTdsJCy+H/RwXkeyfHfiWc4nst4
tkiKO4nvwT9ae2py
             "]]}]}, {
          EdgeForm[], 
          Directive[
           RGBColor[0.880722, 0.611041, 0.142051], 
           Opacity[0.2]], 
          GraphicsGroupBox[{
            
            PolygonBox[{{760, 762, 443, 694, 636, 586, 544, 512, 726, 668, 
             618, 576, 493, 713, 655, 605, 563, 531, 444, 695, 637, 587, 545, 
             513, 494, 714, 656, 606, 564, 532, 445, 696, 638, 588, 546, 514, 
             495, 446, 697, 639, 589, 547, 515, 496, 447, 448, 449, 450, 451, 
             452, 453, 454}}], 
            
            PolygonBox[{{492, 763, 761, 481, 482, 483, 484, 485, 486, 487, 
             488, 709, 651, 601, 559, 527, 508, 489, 710, 652, 602, 560, 528, 
             509, 723, 665, 615, 573, 541, 490, 711, 653, 603, 561, 529, 510, 
             724, 666, 616, 574, 542, 491, 712, 654, 604, 562, 530, 731, 673, 
             623, 581, 511, 725, 667, 617, 575, 543, 735, 677, 627, 585, 743, 
             685, 635, 751, 693, 759}}]}]}, {
          EdgeForm[], 
          Directive[
           RGBColor[0.880722, 0.611041, 0.142051], 
           Opacity[0.2]], 
          GraphicsGroupBox[{
            PolygonBox[CompressedData["
1:eJwV0klQj2EcB/C/BlFys1UXM7IkbtZcyMiJZL2pxMVu7Cf7diPbJRkMibHE
CdlnSP+siVJJZOwj0aJLn+fwme/7fud553nf5/cOzVudvSomEon0IEqHm04a
Fe9poJ463lFLDV30t24sizjAQ97q/5PgegwL2c8D3uiT5RSWcZyXYT99P5nG
AvZxn2p9kkxnKcd4QYc+Xo5mPnu5x2v9TLmOMzSQyGTyOcpz2q2bLsOHn6SW
ODZwjg+kMo893KXKM1vlRT6TyVW+s5bT1DOEa/xkE384z0cm8ZfLfGUJvznC
M9rs0Sav84vNtFLCJzL4xxW+sZIWiqihL6X8YD1nwxwZxSW+MJfd3OGV/bbI
CzQzgzWcoo7BbKSYJiaSx2Gehnfx/DS5ghNh9vRhJNns4naYsXWD5ARyKaAy
nIV+qlxOYfg/iGUEc9hJWZi5dQPleHI4RDScjb63HE4WO7gVZqwfIMexmINU
hFnoe8kUZrOdm+Hs9S30dD2MWWzjRvhOfSVRKnhCOY95RDcqz3mI
             "]]}]}, {}, {}, {}, {}, {}, {}}, {{}, {}, 
         TagBox[{
           Directive[
            Opacity[1.], 
            RGBColor[0.368417, 0.506779, 0.709798], 
            AbsoluteThickness[1.6]], 
           LineBox[CompressedData["
1:eJwV1GWYVlUUBtCRLunuobtLOqQbW7ForDFobMUWsFFBDBSl08Lu7u7u7sBY
7481+9174jn3O/tO4ZSiScftUVBQsMuX1Em+/KFuYg6j6UoxilOCkpSiNPv4
+T/VzcxlDN0ow76+95e6hXmMpTtHmVfmMfkiplKW/cz+Vrcyn3H04GjzKjwu
X8w0yrG/2W51GwsYz2KzQl6XV9GTY/RVeUJeynTKc4DZP+p2FjKBk82a8IZ8
Hb04Vl+NJ+VlLJd78I08g7PlNnwg30IFDtT/q+5gUZ5T34Uv5ImcIjflTfl6
dRir5SvUPvwo36qOYy85l1SdDTyVs6l7s4Pl+kvUnmzl25xDHcOdzNQvUduy
mQ/1N6ojuJ21+hVqf7bzi36dOoE95YPU/9SdrJQHszh3oXbly+wNp8rNeCvP
xJVyX36Se1Mk1+DpnJdL5V58J8/iHLkdH+XZqcjBWcqcM3eTfeM0fXPelm+g
D8fra/JM/i6zqcQh2WvuyGeenaQvJ5jV4ln5suwklZlsViyfW54nO0k/qnCo
eXHuyhmyf/SnKtWoTg1qUova1GG3l6euWo/6NKAhjWhMIYf5uyW4Wz49u8kA
mnC4eUl2yWdktxjIiWa1eU6+PO8JTTnCrBT3yGfm/hjESWZ1eD57lveCZhxp
Vpp75bPymecM+ha8k11hMHP0dXkhd5v3gnP17flYvo3mTNGX4b68G7mDnFvf
knflmxjCXH09XpSvyj1k1/k++855cgc+ye+oI1knX60O4Fe5BVPlstwvr1KH
sEReqnZjC1/pb1ZHZxeYnM9GbcUm3ssuqcPZyZqcSe3HNn7O86njc/959/Tz
1Pps5CX9anUoK3Ifam9+kNeqYymSz1c78qm8Rh3FevkadSC/yS2ZJpfjgbwX
LJO783X2MPckt+b9PBdDma9vwMv5jPJOcIG+E5/JG2jFdH15Hsz9ZfcYxgKz
hryS8+QdoTUzzCrwUO4k+8hwFpo14lX52uwjbZiZ/xs8nOfNPjKCtswyr8gj
OVt2j5G0oz0d6EgnOjPbz1biUfnC7BajWGTWmNfkldntfF/fmc/ljTmTPIjf
5fXqxLxfdNH/D5vLx5g=
            "]]}, Annotation[#, "Charting`Private`Tag$66861#1"]& ], 
         TagBox[{
           Directive[
            Opacity[1.], 
            RGBColor[0.880722, 0.611041, 0.142051], 
            AbsoluteThickness[1.6]], 
           LineBox[CompressedData["
1:eJwV03mcjWUYBuAzg0KkRVoUKSVlSZSKSKlEUaOSJWpCWSKJioQolagUoVIS
JW0KoRklIYqs02yWjBmmhlGiGYWu54/r3O/v/r3nfN95v+erlTowZUBSIpFo
6eMbFiUnEk/TlvNJkMHb9OV69tm3Rr7CfTTmdNL0X8sRtKMWSezXr5Wv0p0m
VCVdv1g+w21cQDLF+mUssR7J7VxIGQ7ov+U7lvM9K/iBlayixL7V8se4z7g2
P/Ez61jPUntG0Z7alOVP/S9xDtaj6cBFlOOv+A35Gj24kjPYoE+Tz3IHF3MC
B+N6chL3cxXV2KhPl2O4kzqcyK+8Qz9a8Xfcq3ydB2jKmWyKs5FjSeESypPJ
DPpzA4fif8o3SOVqdvERQzmLXN7nUW4mn3k8xeY4Z/kcHdnLZ9RlJ3N4nCK+
pAJZvBvnyCP8zhdxL9zIbj6Os+HJmAsWcDjE2cvJ8Yx5kEI+j7PgGvKYG8+C
J2IO+Yqz2cYsBvEH87mFAj5hGFtibuTz3MWl/MaHDKEi2bzHAFrzj+9skFPo
ybWcw3Y+4DHasDXmUY7jbi7jJEr0G+Wb9KIZ1cmI2ZUvcA/1qESpfpOcSm+a
c27MR8y5fJFO1KcyR/SZMf/WL3EvDTiZf/VZZJNDLtvYzg52UhpnIHeRx27y
KWAPe+O9smc8nWlIFf7TF8b7Zv0yXbicUziq3yyn8RDXcV7Mg361nEBXGnEq
x/Rb5HQepgU14jnGOywn0o0rOI0cZjKQmzhu31b5Fn1oSU12MJvB3MoePmU4
xSyM50uR7/8PY++5Uw==
            "]]}, Annotation[#, "Charting`Private`Tag$66861#2"]& ]}}], {}}, {
     DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
      AxesOrigin -> {0, 0}, FrameTicks -> {{Automatic, 
         Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
         Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
      GridLines -> {None, None}, DisplayFunction -> Identity, 
      PlotRangePadding -> {{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.05], 
         Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
      DisplayFunction -> Identity, AspectRatio -> 
      NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
      AxesLabel -> {
        FormBox["\"x\"", TraditionalForm], 
        FormBox["\"Sin[x]\"", TraditionalForm]}, AxesOrigin -> {0, 0}, 
      AxesStyle -> {
        Directive[
         Thickness[Tiny], 
         Dashing[{Small, Small}], 
         GrayLevel[0]], 
        RGBColor[0, 0, 1]}, DisplayFunction :> Identity, Epilog -> {
        PointSize[0.02], 
        PointBox[
         NCache[{-Pi, 0}, {-3.141592653589793, 0}]], 
        PointBox[{0, 0}], 
        PointBox[
         NCache[{Pi, 0}, {3.141592653589793, 0}]], 
        PointBox[
         NCache[{2 Pi, 0}, {6.283185307179586, 0}]]}, 
      Frame -> {{False, False}, {False, False}}, 
      FrameLabel -> {{None, None}, {None, None}}, 
      FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
      GridLines -> {None, None}, GridLinesStyle -> Directive[
        GrayLevel[0.5, 0.4]], ImageSize -> Medium, 
      Method -> {
       "DefaultBoundaryStyle" -> Automatic, 
        "DefaultGraphicsInteraction" -> {
         "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
          "Effects" -> {
           "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
            "Droplines" -> {
             "freeformCursorMode" -> True, 
              "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
        "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
        None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& )}, "AxesInFront" -> True}, PlotLabel -> FormBox[
        StyleBox[
         FrameBox[
         "\"y = Sin[x] between -3 and 3 in GIF Format\"", StripOnInput -> 
          False], 12, 
         GrayLevel[0], Background -> RGBColor[0.92, 1, 0.92], StripOnInput -> 
         False], TraditionalForm], 
      PlotRange -> {{-3, 3}, {-0.9999996810338911, 0.9999999443692392}}, 
      PlotRangeClipping -> True, PlotRangePadding -> {{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.02], 
         Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
     FormBox[
      TemplateBox[{
        RowBox[{"sin", "(", "y", ")"}], 
        RowBox[{"cos", "(", "y", ")"}]}, "LineLegend", 
       DisplayFunction -> (FormBox[
         StyleBox[
          StyleBox[
           PaneBox[
            TagBox[
             GridBox[{{
                TagBox[
                 GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                  AutoDelete -> False, 
                  GridBoxDividers -> {
                   "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                  GridBoxItemSize -> {
                   "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
              GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
              AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
             "Grid"], Alignment -> Left, AppearanceElements -> None, 
            ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
            "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
          FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
          False], TraditionalForm]& ), 
       InterpretationFunction :> (RowBox[{"LineLegend", "[", 
          RowBox[{
            RowBox[{"{", 
              RowBox[{
                RowBox[{"Directive", "[", 
                  RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                ",", 
                RowBox[{"Directive", "[", 
                  RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                  "]"}]}], "}"}], ",", 
            RowBox[{"{", 
              RowBox[{
                TagBox[#, HoldForm], ",", 
                TagBox[#2, HoldForm]}], "}"}], ",", 
            RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
            RowBox[{"LabelStyle", "\[Rule]", 
              RowBox[{"{", "}"}]}], ",", 
            RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
       Editable -> True], TraditionalForm], TraditionalForm]},
   "Legended",
   DisplayFunction->(GridBox[{{
       TagBox[
        ItemBox[
         PaneBox[
          TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
          BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
        "SkipImageSizeLevel"], 
       ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
     GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
     AutoDelete -> False, GridBoxItemSize -> Automatic, 
     BaselinePosition -> {1, 1}]& ),
   Editable->True,
   InterpretationFunction->(RowBox[{"Legended", "[", 
      RowBox[{#, ",", 
        RowBox[{"Placed", "[", 
          RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )],
  StripOnInput->False]], "Output",
 CellChangeTimes->{
  3.7639997484303265`*^9, {3.764003114740204*^9, 3.764003130165002*^9}, 
   3.76400804175778*^9, 3.765119090503854*^9, 3.7660844303622656`*^9, 
   3.773076180794808*^9, 3.773076235840705*^9},
 CellLabel->
  "Out[168]=",ExpressionUUID->"64f9aad8-7ca7-415e-85d1-7758de1bea63"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"ClearAll", "[", "cd", "]"}], "\[IndentingNewLine]", 
 RowBox[{"cd", "=", 
  RowBox[{"CloudDeploy", "[", "\[IndentingNewLine]", 
   RowBox[{"api", " ", ",", "\[IndentingNewLine]", 
    RowBox[{"\"\</live-coding/sin-\>\"", "<>", 
     RowBox[{"ToLowerCase", "[", "format", "]"}], "<>", "\"\</\>\""}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"Permissions", "\[Rule]", "\"\<Public\>\""}]}], 
   "\[IndentingNewLine]", "]"}]}]}], "Input",
 CellChangeTimes->{
  3.756329265849203*^9, {3.756392173675522*^9, 3.7563921758105116`*^9}, {
   3.7564144126214714`*^9, 3.7564144197294397`*^9}, {3.7564147735439405`*^9, 
   3.756414777832939*^9}, {3.7639996749073277`*^9, 3.763999680100326*^9}, {
   3.763999740753326*^9, 3.7639997442643266`*^9}, 3.763999779599326*^9, {
   3.763999861571327*^9, 3.7639998664913306`*^9}, {3.773057735820434*^9, 
   3.7730577405764337`*^9}, 3.7730762476417456`*^9},
 CellLabel->
  "In[169]:=",ExpressionUUID->"8248de37-3dc2-4757-a159-8316caf64d59"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"CloudObject", "[", 
   TemplateBox[{
    "\"https://www.wolframcloud.com/obj/mitch/live-coding/sin-gif\"",
     "https://www.wolframcloud.com/obj/mitch/live-coding/sin-gif"},
    "HyperlinkURL"], "]"}],
  CloudObject["https://www.wolframcloud.com/obj/mitch/live-coding/sin-gif"],
  SelectWithContents->True]], "Output",
 CellChangeTimes->{
  3.7563292700942*^9, 3.756414420845475*^9, 3.7564147807559733`*^9, 
   3.763999750208331*^9, 3.763999781674328*^9, {3.7640031162092037`*^9, 
   3.764003131874001*^9}, 3.7640080452047787`*^9, 3.7651190926238203`*^9, 
   3.7660844323722615`*^9, 3.7730761823788414`*^9, 3.7730762490167427`*^9},
 CellLabel->
  "Out[170]=",ExpressionUUID->"0fcaafb6-2595-4336-8ac3-682c06828a6c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"url", "=", 
  RowBox[{"URLBuild", "[", 
   RowBox[{"cd", ",", 
    RowBox[{"<|", 
     RowBox[{
      RowBox[{"\"\<a\>\"", "\[Rule]", 
       RowBox[{"-", "3"}]}], ",", 
      RowBox[{"\"\<b\>\"", "\[Rule]", "3"}]}], "|>"}]}], "]"}]}], "\n", 
 RowBox[{
  RowBox[{"session", "=", 
   RowBox[{"StartWebSession", "[", "\"\<Chrome\>\"", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"WebExecute", "[", 
   RowBox[{"session", ",", 
    RowBox[{"{", 
     RowBox[{"\"\<OpenPage\>\"", "\[Rule]", "url"}], "}"}]}], "]"}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.773076255297741*^9, 3.773076255398743*^9}},
 CellLabel->
  "In[171]:=",ExpressionUUID->"3a3b38af-5bd5-4091-a29d-1fa5b9d09d7b"],

Cell[BoxData["\<\"https://www.wolframcloud.com/obj/mitch/live-coding/sin-gif?\
a=-3&b=3\"\>"], "Output",
 CellChangeTimes->{3.766084433591262*^9, 3.773076257035709*^9},
 CellLabel->
  "Out[171]=",ExpressionUUID->"be853c9a-e948-4a50-9a12-c82aca693369"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["SVG", "Subsubsection",
 CellChangeTimes->{{3.757099199784377*^9, 
  3.7570992045253754`*^9}},ExpressionUUID->"7cafa75f-8574-4c4d-8ae0-\
5fb884a510ca"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"ClearAll", "[", 
  RowBox[{"api", ",", "format"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"format", "=", "\"\<SVG\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"api", "=", 
   RowBox[{"APIFunction", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"\"\<a\>\"", "\[Rule]", "\"\<Integer\>\""}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"\"\<b\>\"", "\[Rule]", "\"\<Integer\>\""}]}], 
      "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"Function", "[", "\[IndentingNewLine]", 
      RowBox[{"Framed", "@", 
       RowBox[{"Plot", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Sin", "[", "y", "]"}], ",", 
           RowBox[{"Cos", "[", "y", "]"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"y", ",", "#a", ",", "#b"}], "}"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"PlotLabel", "\[Rule]", 
          RowBox[{"Style", "[", 
           RowBox[{
            RowBox[{"Framed", "[", 
             RowBox[{"\"\<y = Sin[x] between \>\"", "<>", 
              RowBox[{"ToString", "[", "#a", "]"}], "<>", "\"\< and \>\"", "<>", 
              RowBox[{"ToString", "[", "#b", "]"}], "<>", "\"\< in \>\"", "<>",
               "format", "<>", "\"\< Format\>\""}], "]"}], ",", "12", ",", 
            "Black", ",", 
            RowBox[{"Background", "\[Rule]", 
             RowBox[{"Lighter", "[", "LightGreen", "]"}]}]}], "]"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"Filling", "\[Rule]", "Axis"}], ",", "\[IndentingNewLine]", 
         RowBox[{"AxesLabel", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"\"\<x\>\"", ",", "\"\<Sin[x]\>\""}], "}"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"AxesStyle", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Directive", "[", 
             RowBox[{"Thin", ",", "Dashed", ",", "Black"}], "]"}], ",", 
            "Blue"}], "}"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{"PlotLegends", "\[Rule]", "\"\<Expressions\>\""}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"Epilog", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"PointSize", "[", "0.02", "]"}], ",", 
            RowBox[{"Point", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "Pi"}], ",", "0"}], "}"}], "]"}], ",", 
            RowBox[{"Point", "[", 
             RowBox[{"{", 
              RowBox[{"0", ",", "0"}], "}"}], "]"}], ",", 
            RowBox[{"Point", "[", 
             RowBox[{"{", 
              RowBox[{"Pi", ",", "0"}], "}"}], "]"}], ",", 
            RowBox[{"Point", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"2", "Pi"}], ",", "0"}], "}"}], "]"}]}], "}"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"ImageSize", "\[Rule]", "Medium"}]}], "]"}]}], 
      "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", "format"}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"api", "[", 
  RowBox[{"<|", 
   RowBox[{
    RowBox[{"\"\<a\>\"", "\[Rule]", 
     RowBox[{"-", "3"}]}], ",", 
    RowBox[{"\"\<b\>\"", "\[Rule]", "3"}]}], "|>"}], "]"}]}], "Input",
 CellChangeTimes->{
  3.7563922257124777`*^9, {3.7564143845234766`*^9, 3.7564144033604784`*^9}, {
   3.763999809585326*^9, 3.7639998403183436`*^9}, {3.7640031502659993`*^9, 
   3.764003179081*^9}, {3.764003216936229*^9, 3.7640032189282284`*^9}, 
   3.7640080624685106`*^9, 3.7651190984188213`*^9, {3.7730577464694357`*^9, 
   3.7730577466614323`*^9}},
 CellLabel->
  "In[174]:=",ExpressionUUID->"d05ad5f5-3f46-4b23-bf97-d81b1b2f7b6d"],

Cell[BoxData[
 FrameBox[
  TemplateBox[{GraphicsBox[{
      GraphicsComplexBox[CompressedData["
1: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
fwDsPrqd
       "], {{{
          EdgeForm[], 
          Directive[
           RGBColor[0.368417, 0.506779, 0.709798], 
           Opacity[0.2]], 
          GraphicsGroupBox[{
            PolygonBox[CompressedData["
1:eJwl0slvTXEYBuB7b9VM55ZlDRuslLa0uhARiaqqWdmYx7YScw0brAxFKhY1
LhARVa3iHzBbmzZ0RVJNiIWhpc+Xu3ju+37fPbk559xf8frGuoZUIpFI8o5+
w0AqPdf5+CXvsYeFlBDXZzCETIYyjKWu/y3b2Us1MxjOMt/9kffZxyJmst0+
m6f6KTYwguV2f2UH+6mhlB32OTzTT7ORkayw65cPOMBimu2Keatfpoyd5lye
62fYxChW2g3ITg5Sy2G7Ccn0e7lCObvMebzQz9Kil9Krb+a4PoVP+k1Gs8r8
T3ZxKJ7TPJ0v+hKO6BN5r1+T87mqt8oKvuu3ZQ2z9AaZz11exr3JeXTRYj4n
y+jgW9yHrOYxW8wn5FTa+Wy+IRfQzS3zJVlFJz/Nd2QtY/TV8r98SJs+l+b4
L2QJX+PccFSfxId4Ji7qlfzQZ9OoF/Aq7pfzejl9+lZO6tPoiWdnLGuS6YPa
Hf9NnDeOmSfzUb9OBU3mQl7H77KNLOrtkjyKdx5nkkp22xXxRr8QZ5Js1tql
4r3F88SZZA45rLPP4EncQ5w/qsglj3wKKKSIcYxnEDCzYt0=
             "]]}]}, {
          EdgeForm[], 
          Directive[
           RGBColor[0.368417, 0.506779, 0.709798], 
           Opacity[0.2]], 
          GraphicsGroupBox[{
            PolygonBox[CompressedData["
1:eJwt00dsznEYwPGX2PNq1KjRqtkKBxLRqhoVES52lx201HbqQFfCQY22RKhG
iopIROx9tTkZByvhQCK4iPg8icMnz/f55U3e9/29/ze5qGRBcftEItGOT/yx
/GW8vuZwPuf4bc8ym2jTn8nQdWzRx3jFYPtucnURdTykt7N1ZOh0xjGWMYxm
NoXU8oBeXruWUXoWBdRwn57O1zBSl9LESwY528VMnU819+jhbDVpejONvGCg
s53M0HlUcZfuzlYxQp//fy/p9lo26QaeM8C+gxzdwjvS7JUs11+ZqA+wT9+h
m15Jqv5Fpm6MO9a55mk+xv2YNZToueYZvuvJZj1HdY55gme6zUxiO9PtV815
tPLDfsmcwpF4D/vluCdO8tZ+Ib4vFSyzXzHn0MIX+0VzAvvZa882j3NbdzVX
kKJ/MlU3cDZ+V7OZD/F7m9UU629M0gfjM+mn9NfbyNbNvCHVXs5SvYdbdLEX
MVy38j6eI3sVG/VhntDPvpVp+hSvSbGXsURXcpPO9kKG6Q0c4jF949kmSy+m
ght0clbAUL2eeh7Rx1kpmXoR5Vyno7N8hsTdsJCy+H/RwXkeyfHfiWc4nst4
tkiKO4nvwT9ae2py
             "]]}]}, {
          EdgeForm[], 
          Directive[
           RGBColor[0.880722, 0.611041, 0.142051], 
           Opacity[0.2]], 
          GraphicsGroupBox[{
            
            PolygonBox[{{760, 762, 443, 694, 636, 586, 544, 512, 726, 668, 
             618, 576, 493, 713, 655, 605, 563, 531, 444, 695, 637, 587, 545, 
             513, 494, 714, 656, 606, 564, 532, 445, 696, 638, 588, 546, 514, 
             495, 446, 697, 639, 589, 547, 515, 496, 447, 448, 449, 450, 451, 
             452, 453, 454}}], 
            
            PolygonBox[{{492, 763, 761, 481, 482, 483, 484, 485, 486, 487, 
             488, 709, 651, 601, 559, 527, 508, 489, 710, 652, 602, 560, 528, 
             509, 723, 665, 615, 573, 541, 490, 711, 653, 603, 561, 529, 510, 
             724, 666, 616, 574, 542, 491, 712, 654, 604, 562, 530, 731, 673, 
             623, 581, 511, 725, 667, 617, 575, 543, 735, 677, 627, 585, 743, 
             685, 635, 751, 693, 759}}]}]}, {
          EdgeForm[], 
          Directive[
           RGBColor[0.880722, 0.611041, 0.142051], 
           Opacity[0.2]], 
          GraphicsGroupBox[{
            PolygonBox[CompressedData["
1:eJwV0klQj2EcB/C/BlFys1UXM7IkbtZcyMiJZL2pxMVu7Cf7diPbJRkMibHE
CdlnSP+siVJJZOwj0aJLn+fwme/7fud553nf5/cOzVudvSomEon0IEqHm04a
Fe9poJ463lFLDV30t24sizjAQ97q/5PgegwL2c8D3uiT5RSWcZyXYT99P5nG
AvZxn2p9kkxnKcd4QYc+Xo5mPnu5x2v9TLmOMzSQyGTyOcpz2q2bLsOHn6SW
ODZwjg+kMo893KXKM1vlRT6TyVW+s5bT1DOEa/xkE384z0cm8ZfLfGUJvznC
M9rs0Sav84vNtFLCJzL4xxW+sZIWiqihL6X8YD1nwxwZxSW+MJfd3OGV/bbI
CzQzgzWcoo7BbKSYJiaSx2Gehnfx/DS5ghNh9vRhJNns4naYsXWD5ARyKaAy
nIV+qlxOYfg/iGUEc9hJWZi5dQPleHI4RDScjb63HE4WO7gVZqwfIMexmINU
hFnoe8kUZrOdm+Hs9S30dD2MWWzjRvhOfSVRKnhCOY95RDcqz3mI
             "]]}]}, {}, {}, {}, {}, {}, {}}, {{}, {}, 
         TagBox[{
           Directive[
            Opacity[1.], 
            RGBColor[0.368417, 0.506779, 0.709798], 
            AbsoluteThickness[1.6]], 
           LineBox[CompressedData["
1:eJwV1GWYVlUUBtCRLunuobtLOqQbW7ForDFobMUWsFFBDBSl08Lu7u7u7sBY
7481+9174jn3O/tO4ZSiScftUVBQsMuX1Em+/KFuYg6j6UoxilOCkpSiNPv4
+T/VzcxlDN0ow76+95e6hXmMpTtHmVfmMfkiplKW/cz+Vrcyn3H04GjzKjwu
X8w0yrG/2W51GwsYz2KzQl6XV9GTY/RVeUJeynTKc4DZP+p2FjKBk82a8IZ8
Hb04Vl+NJ+VlLJd78I08g7PlNnwg30IFDtT/q+5gUZ5T34Uv5ImcIjflTfl6
dRir5SvUPvwo36qOYy85l1SdDTyVs6l7s4Pl+kvUnmzl25xDHcOdzNQvUduy
mQ/1N6ojuJ21+hVqf7bzi36dOoE95YPU/9SdrJQHszh3oXbly+wNp8rNeCvP
xJVyX36Se1Mk1+DpnJdL5V58J8/iHLkdH+XZqcjBWcqcM3eTfeM0fXPelm+g
D8fra/JM/i6zqcQh2WvuyGeenaQvJ5jV4ln5suwklZlsViyfW54nO0k/qnCo
eXHuyhmyf/SnKtWoTg1qUova1GG3l6euWo/6NKAhjWhMIYf5uyW4Wz49u8kA
mnC4eUl2yWdktxjIiWa1eU6+PO8JTTnCrBT3yGfm/hjESWZ1eD57lveCZhxp
Vpp75bPymecM+ha8k11hMHP0dXkhd5v3gnP17flYvo3mTNGX4b68G7mDnFvf
knflmxjCXH09XpSvyj1k1/k++855cgc+ye+oI1knX60O4Fe5BVPlstwvr1KH
sEReqnZjC1/pb1ZHZxeYnM9GbcUm3ssuqcPZyZqcSe3HNn7O86njc/959/Tz
1Pps5CX9anUoK3Ifam9+kNeqYymSz1c78qm8Rh3FevkadSC/yS2ZJpfjgbwX
LJO783X2MPckt+b9PBdDma9vwMv5jPJOcIG+E5/JG2jFdH15Hsz9ZfcYxgKz
hryS8+QdoTUzzCrwUO4k+8hwFpo14lX52uwjbZiZ/xs8nOfNPjKCtswyr8gj
OVt2j5G0oz0d6EgnOjPbz1biUfnC7BajWGTWmNfkldntfF/fmc/ljTmTPIjf
5fXqxLxfdNH/D5vLx5g=
            "]]}, Annotation[#, "Charting`Private`Tag$69179#1"]& ], 
         TagBox[{
           Directive[
            Opacity[1.], 
            RGBColor[0.880722, 0.611041, 0.142051], 
            AbsoluteThickness[1.6]], 
           LineBox[CompressedData["
1:eJwV03mcjWUYBuAzg0KkRVoUKSVlSZSKSKlEUaOSJWpCWSKJioQolagUoVIS
JW0KoRklIYqs02yWjBmmhlGiGYWu54/r3O/v/r3nfN95v+erlTowZUBSIpFo
6eMbFiUnEk/TlvNJkMHb9OV69tm3Rr7CfTTmdNL0X8sRtKMWSezXr5Wv0p0m
VCVdv1g+w21cQDLF+mUssR7J7VxIGQ7ov+U7lvM9K/iBlayixL7V8se4z7g2
P/Ez61jPUntG0Z7alOVP/S9xDtaj6cBFlOOv+A35Gj24kjPYoE+Tz3IHF3MC
B+N6chL3cxXV2KhPl2O4kzqcyK+8Qz9a8Xfcq3ydB2jKmWyKs5FjSeESypPJ
DPpzA4fif8o3SOVqdvERQzmLXN7nUW4mn3k8xeY4Z/kcHdnLZ9RlJ3N4nCK+
pAJZvBvnyCP8zhdxL9zIbj6Os+HJmAsWcDjE2cvJ8Yx5kEI+j7PgGvKYG8+C
J2IO+Yqz2cYsBvEH87mFAj5hGFtibuTz3MWl/MaHDKEi2bzHAFrzj+9skFPo
ybWcw3Y+4DHasDXmUY7jbi7jJEr0G+Wb9KIZ1cmI2ZUvcA/1qESpfpOcSm+a
c27MR8y5fJFO1KcyR/SZMf/WL3EvDTiZf/VZZJNDLtvYzg52UhpnIHeRx27y
KWAPe+O9smc8nWlIFf7TF8b7Zv0yXbicUziq3yyn8RDXcV7Mg361nEBXGnEq
x/Rb5HQepgU14jnGOywn0o0rOI0cZjKQmzhu31b5Fn1oSU12MJvB3MoePmU4
xSyM50uR7/8PY++5Uw==
            "]]}, Annotation[#, "Charting`Private`Tag$69179#2"]& ]}}], {}}, {
     DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
      AxesOrigin -> {0, 0}, FrameTicks -> {{Automatic, 
         Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
         Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
      GridLines -> {None, None}, DisplayFunction -> Identity, 
      PlotRangePadding -> {{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.05], 
         Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
      DisplayFunction -> Identity, AspectRatio -> 
      NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
      AxesLabel -> {
        FormBox["\"x\"", TraditionalForm], 
        FormBox["\"Sin[x]\"", TraditionalForm]}, AxesOrigin -> {0, 0}, 
      AxesStyle -> {
        Directive[
         Thickness[Tiny], 
         Dashing[{Small, Small}], 
         GrayLevel[0]], 
        RGBColor[0, 0, 1]}, DisplayFunction :> Identity, Epilog -> {
        PointSize[0.02], 
        PointBox[
         NCache[{-Pi, 0}, {-3.141592653589793, 0}]], 
        PointBox[{0, 0}], 
        PointBox[
         NCache[{Pi, 0}, {3.141592653589793, 0}]], 
        PointBox[
         NCache[{2 Pi, 0}, {6.283185307179586, 0}]]}, 
      Frame -> {{False, False}, {False, False}}, 
      FrameLabel -> {{None, None}, {None, None}}, 
      FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
      GridLines -> {None, None}, GridLinesStyle -> Directive[
        GrayLevel[0.5, 0.4]], ImageSize -> Medium, 
      Method -> {
       "DefaultBoundaryStyle" -> Automatic, 
        "DefaultGraphicsInteraction" -> {
         "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
          "Effects" -> {
           "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
            "Droplines" -> {
             "freeformCursorMode" -> True, 
              "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
        "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
        None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& )}, "AxesInFront" -> True}, PlotLabel -> FormBox[
        StyleBox[
         FrameBox[
         "\"y = Sin[x] between -3 and 3 in SVG Format\"", StripOnInput -> 
          False], 12, 
         GrayLevel[0], Background -> RGBColor[0.92, 1, 0.92], StripOnInput -> 
         False], TraditionalForm], 
      PlotRange -> {{-3, 3}, {-0.9999996810338911, 0.9999999443692392}}, 
      PlotRangeClipping -> True, PlotRangePadding -> {{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.02], 
         Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
     FormBox[
      TemplateBox[{
        RowBox[{"sin", "(", "y", ")"}], 
        RowBox[{"cos", "(", "y", ")"}]}, "LineLegend", 
       DisplayFunction -> (FormBox[
         StyleBox[
          StyleBox[
           PaneBox[
            TagBox[
             GridBox[{{
                TagBox[
                 GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                  AutoDelete -> False, 
                  GridBoxDividers -> {
                   "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                  GridBoxItemSize -> {
                   "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
              GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
              AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
             "Grid"], Alignment -> Left, AppearanceElements -> None, 
            ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
            "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
          FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
          False], TraditionalForm]& ), 
       InterpretationFunction :> (RowBox[{"LineLegend", "[", 
          RowBox[{
            RowBox[{"{", 
              RowBox[{
                RowBox[{"Directive", "[", 
                  RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                ",", 
                RowBox[{"Directive", "[", 
                  RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                  "]"}]}], "}"}], ",", 
            RowBox[{"{", 
              RowBox[{
                TagBox[#, HoldForm], ",", 
                TagBox[#2, HoldForm]}], "}"}], ",", 
            RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
            RowBox[{"LabelStyle", "\[Rule]", 
              RowBox[{"{", "}"}]}], ",", 
            RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
       Editable -> True], TraditionalForm], TraditionalForm]},
   "Legended",
   DisplayFunction->(GridBox[{{
       TagBox[
        ItemBox[
         PaneBox[
          TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
          BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
        "SkipImageSizeLevel"], 
       ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
     GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
     AutoDelete -> False, GridBoxItemSize -> Automatic, 
     BaselinePosition -> {1, 1}]& ),
   Editable->True,
   InterpretationFunction->(RowBox[{"Legended", "[", 
      RowBox[{#, ",", 
        RowBox[{"Placed", "[", 
          RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )],
  StripOnInput->False]], "Output",
 CellChangeTimes->{
  3.763999886037328*^9, {3.764003151559001*^9, 3.764003179924*^9}, 
   3.764003219779228*^9, 3.764008064868512*^9, 3.7651191002708187`*^9, 
   3.766084444844276*^9, 3.773076266367222*^9},
 CellLabel->
  "Out[177]=",ExpressionUUID->"3c48a2ce-7837-4d98-b288-7966912b86e5"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"ClearAll", "[", "cd", "]"}], "\[IndentingNewLine]", 
 RowBox[{"cd", "=", 
  RowBox[{"CloudDeploy", "[", "\[IndentingNewLine]", 
   RowBox[{"api", " ", ",", "\[IndentingNewLine]", 
    RowBox[{"\"\</live-coding/sin-\>\"", "<>", 
     RowBox[{"ToLowerCase", "[", "format", "]"}], "<>", "\"\</\>\""}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"Permissions", "\[Rule]", "\"\<Public\>\""}]}], 
   "\[IndentingNewLine]", "]"}]}]}], "Input",
 CellChangeTimes->{
  3.7563922257124777`*^9, {3.7564143845234766`*^9, 3.7564144033604784`*^9}, {
   3.763999809585326*^9, 3.763999858878327*^9}, {3.7730577515694275`*^9, 
   3.773057758362423*^9}},
 CellLabel->
  "In[178]:=",ExpressionUUID->"cc94da81-606c-4f4e-b6fb-c5cadf931e99"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"CloudObject", "[", 
   TemplateBox[{
    "\"https://www.wolframcloud.com/obj/mitch/live-coding/sin-svg\"",
     "https://www.wolframcloud.com/obj/mitch/live-coding/sin-svg"},
    "HyperlinkURL"], "]"}],
  CloudObject["https://www.wolframcloud.com/obj/mitch/live-coding/sin-svg"],
  SelectWithContents->True]], "Output",
 CellChangeTimes->{
  3.7564143316725035`*^9, {3.7564143927884755`*^9, 3.756414423824441*^9}, 
   3.7639998879123287`*^9, {3.7640031546080003`*^9, 3.764003181401*^9}, 
   3.764003221293228*^9, 3.764008066830514*^9, {3.7651191017328386`*^9, 
   3.765119111774851*^9}, 3.766084446778264*^9, 3.7730762699832067`*^9},
 CellLabel->
  "Out[179]=",ExpressionUUID->"f3729b61-21fa-44f3-8c70-a4c37a454596"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"ClearAll", "[", 
  RowBox[{"url", ",", "session"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"url", "=", 
  RowBox[{"URLBuild", "[", 
   RowBox[{"cd", ",", 
    RowBox[{"<|", 
     RowBox[{
      RowBox[{"\"\<a\>\"", "\[Rule]", 
       RowBox[{"-", "3"}]}], ",", 
      RowBox[{"\"\<b\>\"", "\[Rule]", "3"}]}], "|>"}]}], "]"}]}], "\n", 
 RowBox[{
  RowBox[{"session", "=", 
   RowBox[{"StartWebSession", "[", "\"\<Chrome\>\"", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"WebExecute", "[", 
   RowBox[{"session", ",", 
    RowBox[{"{", 
     RowBox[{"\"\<OpenPage\>\"", "\[Rule]", "url"}], "}"}]}], "]"}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.773057759824421*^9, 3.7730577761434913`*^9}},
 CellLabel->
  "In[180]:=",ExpressionUUID->"514a8c49-77f3-42d4-9f85-6f7e37158519"],

Cell[BoxData["\<\"https://www.wolframcloud.com/obj/mitch/live-coding/sin-svg?\
a=-3&b=3\"\>"], "Output",
 CellChangeTimes->{3.7660844497042274`*^9, 3.7730762728702073`*^9},
 CellLabel->
  "Out[181]=",ExpressionUUID->"4a402d50-3aa1-45a1-9a4d-983a6b7833d8"]
}, Open  ]]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["API - 9) Images - Getting aspect ratios \[OpenCurlyQuote]right\
\[CloseCurlyQuote]", "Chapter",
 CellChangeTimes->{{3.773060186399477*^9, 3.7730602219314637`*^9}, {
  3.7734846084834337`*^9, 
  3.77348460901343*^9}},ExpressionUUID->"0493cc2b-5455-4cf2-8c5b-\
23605cbe9aff"],

Cell[CellGroupData[{

Cell["\<\
Tips & tricks when it comes to \[OpenCurlyQuote]fitting\[CloseCurlyQuote] a \
WL image into a defined html \[OpenCurlyQuote]image space\[CloseCurlyQuote].\
\>", "Section",
 CellChangeTimes->{{3.7662360602315483`*^9, 3.7662361141127214`*^9}, {
  3.7710856451377635`*^9, 
  3.7710856460737505`*^9}},ExpressionUUID->"abab56c3-1c64-484a-9f07-\
5879a8efa036"],

Cell["\<\
Managing the dimensions of images between what is produced by WL and what is \
available/required in the HTML can be tricky.  I\[CloseCurlyQuote]ve found a \
couple tricks solve many of these problems with a little trial and error.  \
Dimensions of WL output vs HTML \[OpenCurlyQuote]container\[CloseCurlyQuote] \
can be resolved by placing a Grid[ ] around your final WL output and add \
Frame and Spacing options.  This combined with a little fiddling with \
RasterSize and ImageSize will allow a reasonable amount of control over the \
sizing, aspect ration, and crispness of image.

https://react-bootstrap.github.io/components/images/
https://react-bootstrap.github.io/components/figures/
https://react-bootstrap.netlify.com/utilities/responsive-embed/#responsive-\
embed
Name\t\t\tType\tDefault\t\t\t\t\tDefault \t\tDescription
aspectRatio\t\t\[OpenCurlyQuote]21by9\[CloseCurlyQuote] | \
\[OpenCurlyQuote]16by9\[CloseCurlyQuote] | \[OpenCurlyQuote]4by3\
\[CloseCurlyQuote] | \[OpenCurlyQuote]1by1\[CloseCurlyQuote]\t\
\[OpenCurlyQuote]1by1\[CloseCurlyQuote]\t\tSet the aspect ration of the embed

HTML uses a y:x ratio scheme
WL uses a {x,y} Graphics scheme\
\>", "Text",
 CellChangeTimes->{{3.766243542115674*^9, 3.7662437630609465`*^9}, {
  3.773058644825938*^9, 3.773058712298951*^9}, {3.773240915738126*^9, 
  3.7732410117601595`*^9}, {3.773338234870549*^9, 3.7733383113558226`*^9}, {
  3.773338463298848*^9, 
  3.7733384748294535`*^9}},ExpressionUUID->"1b7a4bfe-0a92-451e-b855-\
c338331eea75"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"y", ":", "x"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"N", "@", "9"}], "/", "16"}]}]], "Input",
 CellChangeTimes->{{3.766243998738364*^9, 3.7662440036883564`*^9}, {
  3.7662440647833347`*^9, 3.7662440802724075`*^9}, {3.773062016135288*^9, 
  3.773062068541996*^9}},
 CellLabel->
  "In[544]:=",ExpressionUUID->"f73992fd-6327-4d73-ba7f-ab6860cdcea5"],

Cell[BoxData["0.5625`"], "Output",
 CellChangeTimes->{3.7662440045973277`*^9, 3.7662440832843676`*^9, 
  3.7730620694459915`*^9},
 CellLabel->
  "Out[544]=",ExpressionUUID->"ef1b6933-5602-4f50-85ff-b9d037c1ddac"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{"{", 
   RowBox[{"16", ",", "9"}], "}"}], " ", "*)"}]], "Input",
 CellChangeTimes->{{3.7730620781029787`*^9, 
  3.7730620829699593`*^9}},ExpressionUUID->"0a9ec079-4d79-44b5-a4c9-\
c340001672eb"],

Cell[TextData[Cell[BoxData[
 FormBox[
  RowBox[{
   FractionBox["y", "x"], "=", "0.5625"}], 
  TraditionalForm]],ExpressionUUID->"2684c9c2-f4f8-4d8a-8c6f-0e1bced7b4ef"]], \
"Text",
 CellChangeTimes->{{3.773062168525995*^9, 3.7730621763259945`*^9}, {
  3.7730622090059557`*^9, 3.7730623672264333`*^9}, {3.773062409694915*^9, 
  3.773062448347*^9}, {3.7730624815499763`*^9, 3.7730624860529747`*^9}, {
  3.7730625437911067`*^9, 3.773062544280149*^9}, {3.7730634599025064`*^9, 
  3.7730634604935107`*^9}},ExpressionUUID->"03b1c029-e3d6-421f-b85f-\
7d3457e77b01"],

Cell[BoxData[{
 RowBox[{"ClearAll", "[", "ratio", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ratio", "[", 
   RowBox[{"x_", ",", "y_"}], "]"}], ":=", 
  RowBox[{"N", "[", 
   RowBox[{"y", "/", "x"}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.773062105763997*^9, 3.7730621753119926`*^9}, {
  3.7730634387794733`*^9, 3.7730634397815123`*^9}},
 Background->RGBColor[0.88, 1, 0.88],
 CellLabel->
  "In[168]:=",ExpressionUUID->"d91003c1-b846-42d7-8ce4-9c2f701ed534"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ratio", "[", 
  RowBox[{"16", ",", "9"}], "]"}]], "Input",
 CellLabel->
  "In[170]:=",ExpressionUUID->"6648ad76-01f9-4776-b5eb-2a78baebd6ed"],

Cell[BoxData["0.5625`"], "Output",
 CellChangeTimes->{3.7730634713204727`*^9, 3.773412980510127*^9, 
  3.7735870058510494`*^9},
 CellLabel->
  "Out[170]=",ExpressionUUID->"1f703de6-aa23-4d1b-b102-9cdea9630f4a"]
}, Open  ]],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   RowBox[{
    FractionBox["y", "0.5625"], "=", "x"}], TraditionalForm]],ExpressionUUID->
  "6ab16ac6-910c-4c33-a8e5-dc405c4221bd"],
 "\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"0.5625", " ", "x"}], " ", "=", " ", "y"}], TraditionalForm]],
  ExpressionUUID->"2dfb4fa7-6e35-4a05-8b2d-ffccc78de872"]
}], "Text",
 CellChangeTimes->{{3.773062168525995*^9, 3.7730621763259945`*^9}, {
  3.7730622090059557`*^9, 3.7730623672264333`*^9}, {3.773062409694915*^9, 
  3.773062448347*^9}, {3.7730624815499763`*^9, 3.7730624860529747`*^9}, {
  3.7730625437911067`*^9, 3.773062544280149*^9}, {3.7730634641955085`*^9, 
  3.7730634646325116`*^9}},ExpressionUUID->"16197546-66e4-44cb-8078-\
600a064768ec"],

Cell[BoxData[{
 RowBox[{"ClearAll", "[", 
  RowBox[{"solveForY", ",", "solveForX"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"solveForY", "[", 
    RowBox[{"x_", ",", "r_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"Solve", "[", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"r", "*", "x"}], "-", "y"}], "\[Equal]", "0"}], ",", "y"}], 
     "]"}], "//", "N"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"solveForX", "[", 
    RowBox[{"y_", ",", "r_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"Solve", "[", 
     RowBox[{
      RowBox[{
       RowBox[{
        FractionBox["y", "r"], "-", "x"}], "\[Equal]", "0"}], ",", "x"}], 
     "]"}], "//", "N"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.773062672812615*^9, 3.7730627072826214`*^9}, {
  3.7730631189452324`*^9, 3.773063217067384*^9}, {3.773063249244359*^9, 
  3.773063292382379*^9}, {3.7730633285983615`*^9, 3.7730633318373566`*^9}},
 Background->RGBColor[0.88, 1, 0.88],
 CellLabel->
  "In[171]:=",ExpressionUUID->"ae4806dc-e1a7-4e28-820e-a28fbb9e1580"],

Cell[BoxData[{"ImageMargins", "\[IndentingNewLine]", "ImageSize"}], "Input",
 CellChangeTimes->{{3.773242271260158*^9, 
  3.7732422716181917`*^9}},ExpressionUUID->"a651e608-8727-41fd-86f8-\
fcf085233817"],

Cell["\<\
The trick is to put the graphic in a Grid[ ] and manipulate the {x,y} Spacing \
in Grid to get the desired aspect ratio.\
\>", "Text",
 CellChangeTimes->{{3.773237398764903*^9, 3.773237453820902*^9}, {
   3.7732375041236167`*^9, 3.7732376113342266`*^9}, 
   3.773410637273759*^9},ExpressionUUID->"2eca4685-de1f-4fce-9197-\
0ed7a54d47ee"],

Cell["\<\
Make the image for the first time with {} spacing set to 0 to get the \
dimensions given use of RasterSize and ImageSize.\
\>", "Text",
 CellChangeTimes->{{3.773237398764903*^9, 3.773237453820902*^9}, {
   3.7732375041236167`*^9, 3.7732376113342266`*^9}, 
   3.7734106399747686`*^9},ExpressionUUID->"4ae43a17-c9e7-4bd3-a4b9-\
39952928628f"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"ClearAll", "[", "eq", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"eq", "=", 
   RowBox[{"Solve", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"x", "^", "2"}], "+", 
       RowBox[{"a", " ", "x"}], "+", "1"}], "\[Equal]", "0"}], ",", "x"}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", "eq", "\[IndentingNewLine]", 
 RowBox[{"eq", "//", "Head"}]}], "Input",
 CellChangeTimes->{{3.7734117686554127`*^9, 3.77341189587471*^9}},
 CellLabel->
  "In[174]:=",ExpressionUUID->"5f73716e-fa95-4c87-9e40-73a8f478a273"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     RowBox[{
      FractionBox["1", "2"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "a"}], "-", 
        SqrtBox[
         RowBox[{
          RowBox[{"-", "4"}], "+", 
          SuperscriptBox["a", "2"]}]]}], ")"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     RowBox[{
      FractionBox["1", "2"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "a"}], "+", 
        SqrtBox[
         RowBox[{
          RowBox[{"-", "4"}], "+", 
          SuperscriptBox["a", "2"]}]]}], ")"}]}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.7734118970246677`*^9, 3.7735870558557453`*^9},
 CellLabel->
  "Out[176]=",ExpressionUUID->"8f04a294-2d68-43ae-80b0-23dafb4bad66"],

Cell[BoxData["List"], "Output",
 CellChangeTimes->{3.7734118970246677`*^9, 3.7735870558747687`*^9},
 CellLabel->
  "Out[177]=",ExpressionUUID->"23178346-0dc7-461c-b6c8-0b4f99dd303f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"ClearAll", "[", 
  RowBox[{"grd", ",", "xSpacing", ",", "ySpacing"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"xSpacing", "=", "0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ySpacing", "=", "0"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"grd", "=", 
  RowBox[{"Grid", "[", 
   RowBox[{"eq", ",", "\[IndentingNewLine]", 
    RowBox[{"Spacings", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"xSpacing", ",", "xSpacing"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"ySpacing", ",", "0.5", ",", "ySpacing"}], "}"}]}], "}"}]}], 
    ",", "\[IndentingNewLine]", 
    RowBox[{"Frame", "\[Rule]", "All"}]}], "\[IndentingNewLine]", 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"grd", "//", "Head"}]}], "Input",
 CellChangeTimes->{{3.7734117686554127`*^9, 3.773411918150736*^9}, {
  3.773587109266794*^9, 3.773587109739748*^9}},
 CellLabel->
  "In[183]:=",ExpressionUUID->"191ae26d-4ce5-4588-971a-ffcdb37f8193"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     RowBox[{"x", "\[Rule]", 
      RowBox[{
       FractionBox["1", "2"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "a"}], "-", 
         SqrtBox[
          RowBox[{
           RowBox[{"-", "4"}], "+", 
           SuperscriptBox["a", "2"]}]]}], ")"}]}]}]},
    {
     RowBox[{"x", "\[Rule]", 
      RowBox[{
       FractionBox["1", "2"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "a"}], "+", 
         SqrtBox[
          RowBox[{
           RowBox[{"-", "4"}], "+", 
           SuperscriptBox["a", "2"]}]]}], ")"}]}]}]}
   },
   AutoDelete->False,
   GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {0, 0}, "Rows" -> {0, 0.5, 0}}],
  "Grid"]], "Output",
 CellChangeTimes->{
  3.7734117868263717`*^9, 3.773411819736863*^9, {3.773411898449669*^9, 
   3.7734119188087025`*^9}, {3.773587103163744*^9, 3.7735871105657434`*^9}},
 CellLabel->
  "Out[186]=",ExpressionUUID->"75b8efa6-c761-4cf9-acd8-543a2f80e0ec"],

Cell[BoxData["Grid"], "Output",
 CellChangeTimes->{
  3.7734117868263717`*^9, 3.773411819736863*^9, {3.773411898449669*^9, 
   3.7734119188087025`*^9}, {3.773587103163744*^9, 3.7735871105807447`*^9}},
 CellLabel->
  "Out[187]=",ExpressionUUID->"9ab285be-f68d-4372-8aba-69c3a8001248"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"ClearAll", "[", 
  RowBox[{"rtsr", ",", "iSize"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"iSize", "=", "200"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"rtsr", "=", 
  RowBox[{"Rasterize", "[", "\[IndentingNewLine]", 
   RowBox[{"grd", ",", "\[IndentingNewLine]", 
    RowBox[{"RasterSize", "\[Rule]", 
     RowBox[{"iSize", "*", "3"}]}], ",", 
    RowBox[{"ImageSize", "\[Rule]", "iSize"}]}], "\[IndentingNewLine]", 
   "]"}]}]}], "Input",
 CellChangeTimes->{{3.7734119405147057`*^9, 3.773412014901719*^9}, {
   3.773412869815101*^9, 3.7734128749361296`*^9}, {3.773412909315095*^9, 
   3.773412930015128*^9}, {3.773587132740779*^9, 3.7735871658797827`*^9}, 
   3.7735871961597815`*^9, {3.7735872744421544`*^9, 3.773587274787159*^9}},
 CellLabel->
  "In[224]:=",ExpressionUUID->"a44e3126-176c-441c-a884-162701d0d587"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
    "], {{0, 199}, {572, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->200,
  ImageSizeRaw->{572, 199},
  PlotRange->{{0, 572}, {0, 199}}]], "Output",
 CellChangeTimes->{3.7735871982987456`*^9, 3.7735872758671584`*^9},
 CellLabel->
  "Out[226]=",ExpressionUUID->"43ca3a37-d19b-4e1c-985c-0bb4a33e7ff4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"rtsr", "//", "Head"}], "\[IndentingNewLine]", 
 RowBox[{"rtsr", "//", "ImageDimensions"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"rtsr", "//", "ImageAspectRatio"}], "//", "N"}]}], "Input",
 CellChangeTimes->{{3.7734119405147057`*^9, 3.773412014901719*^9}, {
   3.773412869815101*^9, 3.7734128749361296`*^9}, {3.773412909315095*^9, 
   3.773412930015128*^9}, {3.773587132740779*^9, 3.7735871658797827`*^9}, 
   3.7735871961597815`*^9},
 CellLabel->
  "In[227]:=",ExpressionUUID->"1753ff4f-f802-4dd2-ac24-23aae8fcec26"],

Cell[BoxData["Image"], "Output",
 CellChangeTimes->{
  3.7734120161076975`*^9, 3.7734128767551317`*^9, {3.7734129104521303`*^9, 
   3.7734129324231243`*^9}, {3.7735871337657757`*^9, 3.7735871671437807`*^9}, 
   3.7735871996537437`*^9, 3.7735872769861574`*^9},
 CellLabel->
  "Out[227]=",ExpressionUUID->"852fb345-80ec-4a19-bea7-34eba74988e8"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"572", ",", "199"}], "}"}]], "Output",
 CellChangeTimes->{
  3.7734120161076975`*^9, 3.7734128767551317`*^9, {3.7734129104521303`*^9, 
   3.7734129324231243`*^9}, {3.7735871337657757`*^9, 3.7735871671437807`*^9}, 
   3.7735871996537437`*^9, 3.773587276993122*^9},
 CellLabel->
  "Out[228]=",ExpressionUUID->"cb17fedf-9269-4556-8364-63f9f7e3888e"],

Cell[BoxData["0.3479020979020979`"], "Output",
 CellChangeTimes->{
  3.7734120161076975`*^9, 3.7734128767551317`*^9, {3.7734129104521303`*^9, 
   3.7734129324231243`*^9}, {3.7735871337657757`*^9, 3.7735871671437807`*^9}, 
   3.7735871996537437`*^9, 3.773587277004131*^9},
 CellLabel->
  "Out[229]=",ExpressionUUID->"a1df7224-b474-4348-8ab4-fe61fc457ace"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"solveForY", "[", 
  RowBox[{"572", ",", 
   RowBox[{"ratio", "[", 
    RowBox[{"16", ",", "9"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.773063309263398*^9, 3.7730633604633613`*^9}, {
   3.773063391180395*^9, 3.7730633928633614`*^9}, 3.773413020307096*^9, {
   3.773587293519126*^9, 3.773587294411148*^9}},
 CellLabel->
  "In[230]:=",ExpressionUUID->"f9c251e2-b3ec-47e1-b82c-722d1d30c57b"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"y", "\[Rule]", "321.75`"}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.773413022809136*^9, 3.77358729517212*^9},
 CellLabel->
  "Out[230]=",ExpressionUUID->"49f5ad7a-ffa6-4eef-84b4-ed7c2b16206f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"solveForX", "[", 
  RowBox[{"321.74", ",", 
   RowBox[{"ratio", "[", 
    RowBox[{"16", ",", "9"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.773063309263398*^9, 3.7730633604633613`*^9}, {
   3.773063391180395*^9, 3.7730633928633614`*^9}, 3.773413020307096*^9, {
   3.773587305451152*^9, 3.7735873086951523`*^9}},
 CellLabel->
  "In[231]:=",ExpressionUUID->"949e3e4a-0eb8-425c-b108-76702fc14cd4"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"x", "\[Rule]", "571.9822222222222`"}], "}"}], "}"}]], "Output",
 CellChangeTimes->{{3.7730633213953924`*^9, 3.7730633610513587`*^9}, 
   3.773063395310362*^9, 3.7730634779034977`*^9, 3.773237352252906*^9, 
   3.77323782735299*^9, 3.7732391112548122`*^9, 3.773346445429923*^9, {
   3.773412995872094*^9, 3.7734130238670983`*^9}, 3.773587309257126*^9},
 CellLabel->
  "Out[231]=",ExpressionUUID->"3838e90c-62c3-4156-8e90-07e6a9fdc268"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ratio", "[", 
  RowBox[{"571.9822222222222`", ",", "321.75`"}], "]"}]], "Input",
 CellChangeTimes->{{3.7730635028834763`*^9, 3.7730635493505087`*^9}, {
  3.773587328624127*^9, 3.7735873328451395`*^9}},
 CellLabel->
  "In[232]:=",ExpressionUUID->"6428be7f-961c-4d02-8c37-135de22a8881"],

Cell[BoxData["0.5625174830608567`"], "Output",
 CellChangeTimes->{3.7730635159305077`*^9, 3.773063550483512*^9, 
  3.7732373665969534`*^9, 3.7732391125448055`*^9, 3.773413026955102*^9, 
  3.7735873345501213`*^9},
 CellLabel->
  "Out[232]=",ExpressionUUID->"d7f5d319-005c-4750-85bb-c52aa0793138"]
}, Open  ]],

Cell["\<\
Note the x axis must decrease or the y axis increase to make the aspect ratio \
equal 0.56.  however, decreasing x will crop the graphic too much so \
increasing y spacing in the Grid is the only choice.  With a little trial and \
error we find y spacing of 2.227 is close enough.\
\>", "Text",
 CellChangeTimes->{{3.7732376341601996`*^9, 3.77323777440237*^9}, {
  3.7732378332349944`*^9, 
  3.7732378807279987`*^9}},ExpressionUUID->"e420b43f-c97e-449f-9672-\
3b777dd62622"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"ClearAll", "[", 
  RowBox[{"img", ",", "iSize", ",", "xSpacing", ",", "ySpacing"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"iSize", "=", "200"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"xSpacing", "=", "0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ySpacing", "=", "1.8"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"img", "=", "\[IndentingNewLine]", 
  RowBox[{"Rasterize", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Framed", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Grid", "[", 
       RowBox[{"eq", ",", "\[IndentingNewLine]", 
        RowBox[{"Spacings", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"xSpacing", ",", "xSpacing"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"ySpacing", ",", ".5", ",", "ySpacing"}], "}"}]}], 
          "}"}]}], ",", "\[IndentingNewLine]", 
        RowBox[{"Frame", "\[Rule]", "White"}]}], "\[IndentingNewLine]", "]"}],
       ",", "\[IndentingNewLine]", 
      RowBox[{"FrameMargins", "\[Rule]", "10"}], ",", 
      RowBox[{"FrameStyle", "\[Rule]", "Red"}]}], "]"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"RasterSize", "\[Rule]", 
     RowBox[{"iSize", "*", "2"}]}], ",", 
    RowBox[{"ImageSize", "\[Rule]", "iSize"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"img", "//", "ImageDimensions"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"img", "//", "ImageAspectRatio"}], "//", "N"}]}], "Input",
 CellChangeTimes->{{3.7732388637475305`*^9, 3.7732388648977327`*^9}, {
   3.7732390421732655`*^9, 3.773239058678285*^9}, {3.773239120992866*^9, 
   3.7732391340858603`*^9}, {3.773239909302168*^9, 3.773239921128169*^9}, {
   3.7732411012152977`*^9, 3.773241137590271*^9}, {3.7734152566166487`*^9, 
   3.7734152884642363`*^9}, 3.773416586779499*^9, 3.7734166338297844`*^9, {
   3.773419088007367*^9, 3.7734191088083925`*^9}, {3.7734191594235783`*^9, 
   3.7734191726477957`*^9}, {3.773587353489219*^9, 3.773587369658058*^9}, {
   3.7735874042780633`*^9, 3.7735874045910544`*^9}, {3.7735874377819357`*^9, 
   3.7735874472339478`*^9}, {3.7735874878719234`*^9, 
   3.7735875517529335`*^9}, {3.773587588070938*^9, 3.7735876624089513`*^9}},
 CellLabel->
  "In[328]:=",ExpressionUUID->"6a7e3c5f-f847-4340-93df-8f35d87f1d44"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJzt3T1w28gBhmEmaViidKl0KllqWDEd02kukxmVdzc5ntP4OL7MRKmczqXU
uXTpUh1dqnTp0gVmolIlS5bMEhBBkMSS+Nndb0m/zyg3jk9Hgljo5QKEgD//
/NsPkz/2er3f++YfP/z077+8ffvTf/6WmP/z9ze///PXN7/8469v/vXLr7+8
vfr5T+Yv/2f+998/9HqrPy8BQGUwWJoK8cUXX3wF/srjAwDh5RUCgPDoDwAV
+gNAhf4AUKE/AFToDwAV+gNAhf4AUKE/AFToDwAV+gNAhf4AUKE/AFToDwAV
+gNAhf4AUKE/AFToDwAV+gNAhf4AUKE/AFToDwAV+gNAhf4AUKE/AFToDwAV
+gNAhf4AUKE/AFToDwAV+gNAhf4AUKE/AFToDwAV+gNAhf4AUKE/AFToDwAV
+gNAhf4AUKE/AFToDwAV+gNAhf4AUKE/AFToDwAV+gNAhf4AUKE/AFToDwAV
+gNAhf4AUKE/AFToD+I2n897cOrp6Uk9qmv0B3H79OlTkiSPcGexWKhHdY3+
IG4/ZtRLAT/oD+JmJj8fP35ULwX8oD8qaapeghNgdhZ6vd58PlcvyHnTbYr0
p0o6u58MV0fqhveehmY26U1mfh76nNze3o5GI/VSxKzYVDPDSZsNVrgx0p8t
26PprT/p/dBb2c7KYDB4//69eililZpwVGjeEl2A6E+JycL6bWQ2y/7spxLk
p5anpyczBN++fVMvSLRWG9LkfrbelNY9ar5xmf9Qs0XSny2ziUlPNg6pv/6Q
n3o+fPhwcXGhXoqT8vIO2nwyo9om6Y+Fv/7I3mtOzXg8nk6n6qU4LfkMqMXO
lChA9MfCW3/ITy2LxaLf73/+/Fm9ICelw1arCRD9sfDVH/JTz8PDg+lPuDN1
i2N/Pj/19Kz13ldGsmXSHwtP/VnNj/ngvYbXr19fX1+HerZyfU61P7NJl/os
NQGiPxZ++kN+6rq4uAh32vPO59gn2J8iPl2WXBAg+mPhpT+rBz3Bjdup+Xx+
dK/q69evZuU/Pz8HWaJ1fSb3L7OgExui1El8lvnmGfjdkf5Y+OjPd54fU553
794lSXJ3d3f4O823XV1dhVmqdBOd9AT7sz7np3N8VsJPz330ZzObrX4txb+P
eZx99CfU8Kar07gnw+HWMY3sRDXR+i7KY/aqxuPxq1evDk+BTHzM94dYsq3k
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
    "], {{0, 222}, {384, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->200,
  ImageSizeRaw->{384, 222},
  PlotRange->{{0, 384}, {0, 222}}]], "Output",
 CellChangeTimes->{
  3.773238866168442*^9, {3.7732390433772664`*^9, 3.773239060604266*^9}, 
   3.7732391362498293`*^9, {3.7732399149391675`*^9, 3.7732399227941365`*^9}, {
   3.773241102809308*^9, 3.773241139074266*^9}, 3.773344636907771*^9, {
   3.7734152780741987`*^9, 3.773415290042232*^9}, 3.7734165966874633`*^9, 
   3.7734166375624*^9, {3.773419101944412*^9, 3.7734191101123877`*^9}, {
   3.7734191688635855`*^9, 3.7734191741957293`*^9}, {3.773587356312192*^9, 
   3.773587371041056*^9}, 3.773587406585053*^9, 3.7735874544329443`*^9, 
   3.773587493142942*^9, 3.7735875538788996`*^9, {3.7735875908149033`*^9, 
   3.7735876635079503`*^9}},
 CellLabel->
  "Out[332]=",ExpressionUUID->"713aff51-9beb-4c01-a4c5-2749c149d574"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"384", ",", "222"}], "}"}]], "Output",
 CellChangeTimes->{
  3.773238866168442*^9, {3.7732390433772664`*^9, 3.773239060604266*^9}, 
   3.7732391362498293`*^9, {3.7732399149391675`*^9, 3.7732399227941365`*^9}, {
   3.773241102809308*^9, 3.773241139074266*^9}, 3.773344636907771*^9, {
   3.7734152780741987`*^9, 3.773415290042232*^9}, 3.7734165966874633`*^9, 
   3.7734166375624*^9, {3.773419101944412*^9, 3.7734191101123877`*^9}, {
   3.7734191688635855`*^9, 3.7734191741957293`*^9}, {3.773587356312192*^9, 
   3.773587371041056*^9}, 3.773587406585053*^9, 3.7735874544329443`*^9, 
   3.773587493142942*^9, 3.7735875538788996`*^9, {3.7735875908149033`*^9, 
   3.7735876635169497`*^9}},
 CellLabel->
  "Out[333]=",ExpressionUUID->"4fc7024c-77ea-4dbf-8f5e-07caefc81506"],

Cell[BoxData["0.578125`"], "Output",
 CellChangeTimes->{
  3.773238866168442*^9, {3.7732390433772664`*^9, 3.773239060604266*^9}, 
   3.7732391362498293`*^9, {3.7732399149391675`*^9, 3.7732399227941365`*^9}, {
   3.773241102809308*^9, 3.773241139074266*^9}, 3.773344636907771*^9, {
   3.7734152780741987`*^9, 3.773415290042232*^9}, 3.7734165966874633`*^9, 
   3.7734166375624*^9, {3.773419101944412*^9, 3.7734191101123877`*^9}, {
   3.7734191688635855`*^9, 3.7734191741957293`*^9}, {3.773587356312192*^9, 
   3.773587371041056*^9}, 3.773587406585053*^9, 3.7735874544329443`*^9, 
   3.773587493142942*^9, 3.7735875538788996`*^9, {3.7735875908149033`*^9, 
   3.773587663521947*^9}},
 CellLabel->
  "Out[334]=",ExpressionUUID->"e25f04b1-8260-4b38-9d6e-f4fa5409c6ae"]
}, Open  ]],

Cell["\<\
Lastly, using ExportString[ ... , \[OpenCurlyDoubleQuote]HTMLFragment\
\[CloseCurlyDoubleQuote],\[CloseCurlyDoubleQuote]GraphicsOutput\
\[CloseCurlyDoubleQuote] \[Rule] \[OpenCurlyDoubleQuote]PNG\
\[CloseCurlyDoubleQuote] ] can be helpful.\
\>", "Text",
 CellChangeTimes->{{3.7732411660462713`*^9, 
  3.7732411990073004`*^9}},ExpressionUUID->"0f6a24d4-c743-43ed-9766-\
5c78d25665d6"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"ClearAll", "[", 
  RowBox[{"api", ",", "iSize", ",", "xSpacing", ",", "ySpacing"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"iSize", "=", "250"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"xSpacing", "=", "0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ySpacing", "=", "2.227"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"format", "=", "\"\<SVG\>\""}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"api", "=", 
    RowBox[{"APIFunction", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"\"\<xSpacing\>\"", "\[Rule]", " ", "\"\<Real\>\""}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"\"\<ySpacing\>\"", "\[Rule]", " ", "\"\<Real\>\""}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"\"\<iSize\>\"", "\[Rule]", " ", "\"\<Integer\>\""}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"\"\<imageFrame\>\"", "\[Rule]", "\"\<Real\>\""}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"\"\<gridFrame\>\"", "\[Rule]", "\"\<Boolean\>\""}]}], 
       "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{"Function", "[", "\[IndentingNewLine]", 
       RowBox[{"Rasterize", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Framed", "[", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"Grid", "[", 
            RowBox[{
             RowBox[{"Solve", "[", 
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{"x", "^", "2"}], "+", 
                 RowBox[{"a", " ", "x"}], "+", "1"}], "\[Equal]", "0"}], ",", 
               "x"}], "]"}], ",", "\[IndentingNewLine]", 
             RowBox[{"Spacings", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"#xSpacing", ",", "#xSpacing"}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"#ySpacing", ",", "0.5", ",", "#ySpacing"}], "}"}]}],
                "}"}]}], ",", "\[IndentingNewLine]", 
             RowBox[{"Frame", "\[Rule]", 
              RowBox[{"If", "[", 
               RowBox[{"#gridFrame", ",", "All", ",", "White"}], "]"}]}]}], 
            "\[IndentingNewLine]", "]"}], ",", 
           RowBox[{"FrameMargins", "\[Rule]", "#imageFrame"}], ",", 
           RowBox[{"FrameStyle", "\[Rule]", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"#imageFrame", " ", ">", " ", "0"}], ",", "Red", ",", 
              "White"}], "]"}]}]}], "]"}], ",", "\[IndentingNewLine]", 
         RowBox[{"RasterSize", "\[Rule]", 
          RowBox[{"#iSize", "*", "2"}]}], ",", 
         RowBox[{"ImageSize", "\[Rule]", "#iSize"}]}], "]"}], 
       "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", "format"}], 
     "]"}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"api", "[", 
  RowBox[{"<|", 
   RowBox[{
    RowBox[{"\"\<xSpacing\>\"", "\[Rule]", " ", "0"}], ",", 
    RowBox[{"\"\<ySpacing\>\"", "\[Rule]", " ", "2.227"}], ",", 
    RowBox[{"\"\<iSize\>\"", "\[Rule]", " ", "250"}], ",", 
    RowBox[{"\"\<gridFrame\>\"", "\[Rule]", "\"\<True\>\""}], ",", 
    RowBox[{"\"\<imageFrame\>\"", "\[Rule]", "10"}]}], "|>"}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.773238414005127*^9, 3.7732384833351555`*^9}, {
   3.773238590230282*^9, 3.7732385921832705`*^9}, {3.7732386264914927`*^9, 
   3.7732386283284516`*^9}, {3.7732388766466103`*^9, 3.773238878010635*^9}, {
   3.773238934413753*^9, 3.7732389374349213`*^9}, {3.773238972800871*^9, 
   3.773238978728901*^9}, {3.7732390203560796`*^9, 3.773239028939118*^9}, {
   3.7732391656938295`*^9, 3.7732391684098673`*^9}, {3.7732393182971067`*^9, 
   3.773239333876108*^9}, {3.773239411894952*^9, 3.7732394165938053`*^9}, {
   3.7732396685685215`*^9, 3.7732397851586113`*^9}, {3.7732398186082*^9, 
   3.773239847459262*^9}, 3.7732399958067427`*^9, {3.7732400285667295`*^9, 
   3.773240079942675*^9}, 3.7732410591862717`*^9, {3.7732413056162877`*^9, 
   3.7732413339820633`*^9}, 3.7732413868389482`*^9, {3.7732416063619595`*^9, 
   3.7732416157966857`*^9}, 3.7732419921443186`*^9, 3.77324204972468*^9, {
   3.773242316435626*^9, 3.773242323789654*^9}, {3.7732424429122467`*^9, 
   3.773242452199289*^9}, {3.773242618767493*^9, 3.7732426503405027`*^9}, {
   3.7732427233915586`*^9, 3.7732427626946416`*^9}, {3.773242836807703*^9, 
   3.773242859629475*^9}, {3.773346490047926*^9, 3.7733465110619287`*^9}, {
   3.7733466515301633`*^9, 3.7733466574274216`*^9}, {3.7733467449582567`*^9, 
   3.7733467474982634`*^9}, {3.7734154008081813`*^9, 
   3.7734154725091124`*^9}, {3.773415706387643*^9, 3.7734157286106453`*^9}, {
   3.7734157886756163`*^9, 3.773415816538617*^9}, {3.773415875622706*^9, 
   3.773415878920706*^9}, {3.77341629026791*^9, 3.7734163067740817`*^9}, {
   3.7734166731720676`*^9, 3.773416689026066*^9}, {3.7734167384170747`*^9, 
   3.7734168449200974`*^9}, {3.7734178645100565`*^9, 
   3.7734178860430884`*^9}, {3.773417999245216*^9, 3.773418039245093*^9}, {
   3.7734187190054255`*^9, 3.7734187379485846`*^9}, {3.773418775477581*^9, 
   3.7734188200825825`*^9}, {3.773418857963579*^9, 3.7734188633225813`*^9}, {
   3.773419037279372*^9, 3.7734190807363772`*^9}, 3.7734191163564253`*^9, {
   3.7734191929997606`*^9, 3.773419272070204*^9}, 3.77341930956618*^9, 
   3.7734222709300375`*^9, {3.7734223121591005`*^9, 3.773422318815154*^9}, 
   3.773485044397601*^9, {3.7734850821416044`*^9, 3.7734851397996025`*^9}, {
   3.773587755111063*^9, 3.773587756340021*^9}, {3.7735880402982254`*^9, 
   3.77358804298129*^9}, {3.773588074628231*^9, 3.773588107144246*^9}, {
   3.773588177218233*^9, 3.7735881924712257`*^9}},
 CellLabel->
  "In[376]:=",ExpressionUUID->"1e4a62b1-3357-4d2d-9836-70ab22bad923"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJzt3S9w68gdwPG0JYGGgS7pPBiYMUpZyjLtdCbQd9NzU3L1XDvTFB180GaB
hoFhDjQMDOo8IPCgoaGhu5LiP7Jle1fa3d+u9P1MetO8P/Y+e/XNWpbk3//4
zz8PfntxcfGvS/WfP//wnz/+8ssP//1LR33z15//9Y+///zT3/70879/+vtP
v9z8+Dv1i3/4zcXF/9T/0v+/AgCIuL5eqQjzxRdffPHl8ytvLwDAszzCAADP
yC8AiCC/ACCC/AKACPILACLILwCIIL8AIIL8AoAI8gsAIsgvAIggvwAggvwC
gAjyCwAiyC8AiCC/ACCC/AKACPILACLILwCIIL8AIIL8AoAI8gsAIsgvAIgg
vwAggvwCgAjyCwAiyC8AiCC/ACCC/AKACPILACIc5/cCAGLmLo/kFwBOcJdH
8gsAJ7jLo7f8ursLALCO/AKACPILACLILwCIIL8AIIL8AoAI8gsAIsgvAIgg
vwAggvwCgAjyCwAiyC8AiCC/ACCC/AKACPILACLILwCIIL8AIIL8AoAI8gsA
IsgvAIggvwAggvwCgAjyCwAiyC8AiCC/ACCC/AKACPILACLILwCIIL8AIIL8
AoAI8gsAIsgvAIggvwAggvwCgAjyCwAiyC8AiCC/ACCC/AKACPILACLILwCI
IL8AIIL8AoAI8gsAIsgvAIggv0DI+v3+BUKinhFbT+7mNm3dYOl9kF+gmqur
q+vr618RjNfXV1tPLvkFgvX+/q4m9mg0kh4InCC/QLDUWktN7O/fv0sPBE6Q
XyBYNzc3X758kR4FXCG/qGg66PXGifQoGmw+n6tZ/fT0JD2QRkqSdAJv4tHr
DcbTGrM5vbWB8eZAfiO3nUR+W5iMe57vsXUmk4l6WmezmfRAGifdaEoPaugN
ppVvs8oGQX6jlUzHhUnkNYbU1737+/tOpyM9iuZJ5+5na5PPGay2pfWmVD3A
04Hx3ya/EUq2P73Tl0xj/6vfCjMNRpbL5eXl5cPDg/RAmigZDwYHexrSOV1v
OzLfKshvfHZ/eu9+6y+/1Ne52WymntPJZCI9kPZY99fj+pf8xkgtfrfvE/jP
L/V1bzgcqud0sVhID6Q96uc3uwmT7ZD8Rs97fqmvB91u9/b2VnoUrWIhv6b9
Jb/R851f6uvct2/f1BP69etX6YG0iY36mvaX/EbPc35NX1/BnAqvekI/Pj6k
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
/rY7v6UB3omvz0VcQwoc8GEP2+e6/vhcxUGFV43vxAI4v756v9+3f99nnWhs
tPm1Oisq3vvZO25sfgsBTh8GofhmmlBg8luXau+JBfDb25v63ZeXFyf3fcrJ
wpLfGvfe5vwW9zX0bM8iQ7EXOB+/aH7TXXqD/WOMioLOb74APnYxB/XravXr
//rqZ/oafH69zIoKw9La+9Do/Ja8SSXZDxsFPjHJ9lj+nBrZXb/J+MhH01rf
0NyuzdQCWDV2Pp8f/pbM9dXP1jXk/PqbFVXGRn5X+mdi6EimNX1OlxoT+Vdt
lq8Wa5xfwwfrxA3rHClU5QkuHWH+zzQcobZ8ATwcDkt/fTQamdxY/UdYo621
8uvyEXY1Kywhv6uSYwPrPBMGT/gZavZVH4YM0/waPljHb7lwQ9nJTAd/stpe
PmsjNHN3d3e4AK5yslv98deY0FqPhsNH2NmssIX87h57sn2VIrj7IckG5ORM
DOekdj4cOYTwyJ8JfeeD8vr6enGwAJa5vrrr/Jaz8Qj7nhXm2p7fvSMd/B/y
uydvb6DHDpwnlF+t41Wiyu8qO7N4dwG8WCwOg+xDtPn1PivMtTu/JU+Q1xPe
9sXd3pTMgWcaG1qyd4RhPT7ymy+AN5+kOZlM1Lez2cztvVYT5Ftv3meFuTbn
9/xJb16fknV7Yz3oLCOe39ILeEyL733Hkd9VtgC+urrKr6n+8PDQ6XREr69+
XOj59TMrzLX3uN8TO4YELnaWT4XI27sS+6SL4rVBx5t3WIrn9UeX33wBPBqN
VHVVe1WBnd9lNUHm1/usMKd3xfXG5dfkgmc+LlDejPau5N5709hBuT3oPpr8
KleZ/GQ3ywdpWxRmfn3Pimrja11+TS/36/SZif1Etz2SVzw7uq31smsXbl7v
xJRftfS9WF+MvfREjCAEmt+V31lRYXBa99uo/Fb6sAuXeUzsHKwfBtHz3pJ0
f97OmaXFzzOwuqEdHkHqxnK5VKtfNeibmxs/91iFi8utW3uEPc4Kw4G19nLr
rZHPvZ2p5/pTd7Q/QBCa8gWw2PXV4YruGyXkN0r77+3uvOxy95Oej5m3LV8A
Wz49HOK0XyiS3whtPt1tsDnXMpk6//hA+uuC5kdwIiZ80HyzpZ+XdbCnYb2v
y90OAnY/AGfpL1PIb4Os++tsgcryFzhLf5VCfhvEeX7pL3COwWtE8tsg7vOb
9ZfdD8BRJpsI+W0OD/Vl9y9wktELRPLbFO7feNveD/0FSpntniO/jZB4OOxs
jf4CRxi+OUJ+G2BzdqWfKtJfoJTpW9PkN3bb9no7IoH+AiWMDwwiv1Hbnnvs
9Wgwjn8ADpgflkl+4+Vzh2/JXdNfYEeFjYL8RkqwvZnpgP4CW1WWJOQ3RtLt
Tfm7LjkQvnSbNN4eyG98dD4f3EMYk/Ri8qx/gZTaGswvt01+4xNIfgHUQ34B
QAT5BQAR5BcARJBfABBBfgFABPkFABHkFwBEkF8AEEF+AUAE+QUAEeQXAESQ
XwAQQX4BQAT5BQAR5BcARJBfABBBfgFABPkFABHkFwBEkF8AEEF+AUAE+QUA
EeQXAESQXwAQQX4BQAT5BQAR5BcARJBfABBBfgFABPkFABHkFwBEkF8AEEF+
AUAE+QUAEeQXAESQXwAQQX4BQAT5BQAR5BcARJBfABBBfgFABPkFABHkFwBE
kF8AENGk/AJAjNzlkfwCwAnu8kh+AeAEd3l0nV8AQDnyCwAiyC8AiCC/ACCC
/AKACPILACLILwCIIL8AIIL8AoAI8gsAIsgvAIggvwAggvwCgAjyCwAiyC8A
iCC/ACCC/AKACPILACLILwCIIL8AIIL8AoAI8gsAIsgvAIggvwAggvwCgAjy
CwAiyC8AiCC/ACCC/AKACPILACJUezudzwjzxRdffPHl7Uu1FwAg4f9Nvi4d

    "], {{0, 294}, {469, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->250,
  ImageSizeRaw->{469, 294},
  PlotRange->{{0, 469}, {0, 294}}]], "Output",
 CellChangeTimes->{3.773588193490263*^9},
 CellLabel->
  "Out[382]=",ExpressionUUID->"842dcce3-ade8-43ef-bc5c-dc17acb600a4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"ClearAll", "[", "cd", "]"}], "\[IndentingNewLine]", 
 RowBox[{"cd", "=", 
  RowBox[{"CloudDeploy", "[", "\[IndentingNewLine]", 
   RowBox[{
   "api", " ", ",", "\[IndentingNewLine]", "\"\</live-coding/equation/\>\"", 
    ",", "\[IndentingNewLine]", 
    RowBox[{"Permissions", "\[Rule]", "\"\<Public\>\""}]}], 
   "\[IndentingNewLine]", "]"}]}]}], "Input",
 CellChangeTimes->{{3.773238515993198*^9, 3.773238517429159*^9}},
 CellLabel->
  "In[383]:=",ExpressionUUID->"207606a0-f8b2-4771-b360-e3f5b4f9ecaf"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"CloudObject", "[", 
   TemplateBox[{
    "\"https://www.wolframcloud.com/obj/mitch/live-coding/equation\"",
     "https://www.wolframcloud.com/obj/mitch/live-coding/equation"},
    "HyperlinkURL"], "]"}],
  CloudObject["https://www.wolframcloud.com/obj/mitch/live-coding/equation"],
  SelectWithContents->True]], "Output",
 CellChangeTimes->{
  3.773238520153198*^9, 3.7732385970842805`*^9, 3.7732386378239746`*^9, 
   3.773238885035059*^9, 3.77323894145053*^9, 3.773238998051897*^9, 
   3.7732391779528313`*^9, 3.7732394216768036`*^9, {3.7732396865785065`*^9, 
   3.773239735323495*^9}, {3.773239768258882*^9, 3.7732397904050827`*^9}, {
   3.7732398284637547`*^9, 3.7732398508403263`*^9}, 3.773239950871089*^9, {
   3.773240005190037*^9, 3.773240082588665*^9}, 3.7732413411580334`*^9, 
   3.7732413923589554`*^9, 3.773241622092655*^9, 3.7732420105815077`*^9, 
   3.7732420582686806`*^9, 3.7732423337976294`*^9, 3.7732424577012835`*^9, 
   3.7732426557324715`*^9, 3.7732427696066566`*^9, {3.773242850996706*^9, 
   3.7732428617424526`*^9}, 3.7733446539627457`*^9, 3.773346515704927*^9, 
   3.773346752985259*^9, 3.773415404839181*^9, 3.773415475440174*^9, 
   3.773415731981681*^9, 3.773415819780616*^9, 3.7734158835117073`*^9, 
   3.773416866205098*^9, 3.77341789679508*^9, {3.7734180163684883`*^9, 
   3.773418041845093*^9}, {3.773419285642171*^9, 3.7734193131891737`*^9}, 
   3.7734223338624163`*^9, 3.7734854144103703`*^9, 3.7735877974700584`*^9, 
   3.773588112204259*^9, 3.7735882002972455`*^9},
 CellLabel->
  "Out[384]=",ExpressionUUID->"45909c58-a68c-4941-bd92-a965afe61eff"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"ClearAll", "[", 
  RowBox[{"url", ",", "session"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"url", "=", 
  RowBox[{"URLBuild", "[", 
   RowBox[{"cd", ",", 
    RowBox[{"<|", 
     RowBox[{
      RowBox[{"\"\<xSpacing\>\"", "\[Rule]", " ", "0"}], ",", 
      RowBox[{"\"\<ySpacing\>\"", "\[Rule]", " ", "2.227"}], ",", 
      RowBox[{"\"\<iSize\>\"", "\[Rule]", " ", "250"}], ",", 
      RowBox[{"\"\<gridFrame\>\"", "\[Rule]", "\"\<True\>\""}], ",", 
      RowBox[{"\"\<imageFrame\>\"", "\[Rule]", "10"}]}], "|>"}]}], 
   "]"}]}], "\n", 
 RowBox[{
  RowBox[{"session", "=", 
   RowBox[{"StartWebSession", "[", "\"\<Chrome\>\"", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"WebExecute", "[", 
   RowBox[{"session", ",", 
    RowBox[{"{", 
     RowBox[{"\"\<OpenPage\>\"", "\[Rule]", "url"}], "}"}]}], "]"}], 
  ";"}]}], "Input",
 CellChangeTimes->{
  3.7660854167790337`*^9, {3.7660865509770193`*^9, 3.766086551185033*^9}, {
   3.773057951766219*^9, 3.773057961075218*^9}, 3.773238907877559*^9, 
   3.773416863252102*^9, 3.7734192809991665`*^9, {3.7735881458952255`*^9, 
   3.773588163283246*^9}},
 CellLabel->
  "In[385]:=",ExpressionUUID->"9621aeb7-cbee-4b4a-99db-21121a06bf73"],

Cell[BoxData["\<\"https://www.wolframcloud.com/obj/mitch/live-coding/equation?\
xSpacing=0&ySpacing=2.227&iSize=250&gridFrame=True&imageFrame=10\"\>"], \
"Output",
 CellChangeTimes->{
  3.773238539940158*^9, 3.7732385982772503`*^9, 3.7732386390649724`*^9, {
   3.7732388905004063`*^9, 3.7732389085435534`*^9}, 3.77323894270453*^9, 
   3.773238999094926*^9, 3.7732391856223965`*^9, 3.7732394287114573`*^9, {
   3.773239692233347*^9, 3.7732397365974727`*^9}, {3.773239769228917*^9, 
   3.7732397974078383`*^9}, {3.7732398292317324`*^9, 3.7732398516733427`*^9}, 
   3.773239951727089*^9, 3.7732400069250174`*^9, {3.7732400369373603`*^9, 
   3.7732400838776608`*^9}, 3.7732413425320334`*^9, 3.7732413935229535`*^9, 
   3.773241624088686*^9, 3.773242011447485*^9, 3.773242059202654*^9, 
   3.7732423345856314`*^9, 3.7732424586512823`*^9, 3.7732426563034773`*^9, 
   3.7732427724266453`*^9, {3.773242851803704*^9, 3.7732428625444098`*^9}, 
   3.7733446553647413`*^9, 3.773346516988934*^9, 3.7733467542112584`*^9, 
   3.7734154079691453`*^9, 3.773415476914179*^9, 3.7734157330796423`*^9, 
   3.7734158210896206`*^9, 3.773415884466669*^9, 3.773416866952065*^9, 
   3.7734178981530676`*^9, {3.773418016962449*^9, 3.7734180426790943`*^9}, {
   3.7734192861711907`*^9, 3.7734193318663588`*^9}, 3.7734223349213767`*^9, 
   3.773485415146324*^9, 3.7735877985630193`*^9, 3.7735878428882055`*^9, 
   3.773588114853224*^9, 3.773588169073225*^9, 3.773588201834227*^9},
 CellLabel->
  "Out[386]=",ExpressionUUID->"28910dd1-8c49-4cbd-b9b0-844574f7ae8e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"184", "/", "336."}]], "Input",
 CellChangeTimes->{{3.773422469152191*^9, 3.7734224734831905`*^9}},
 CellLabel->
  "In[480]:=",ExpressionUUID->"f8abd2e9-a25c-418f-b267-64c82c0ed38f"],

Cell[BoxData["0.5476190476190476`"], "Output",
 CellChangeTimes->{3.7734224742561812`*^9},
 CellLabel->
  "Out[480]=",ExpressionUUID->"ac77054f-c0fd-4c4d-9101-b3ebb4f5ebe3"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["API-10) Images - Get external data and make geo image", "Chapter",
 CellChangeTimes->{{3.7638903241703033`*^9, 3.763890387306302*^9}, {
  3.7638906383193026`*^9, 3.7638906506213074`*^9}, {3.763976047180131*^9, 
  3.7639760608231316`*^9}, {3.763976112842131*^9, 3.763976117610132*^9}, {
  3.763990612311146*^9, 3.763990612485146*^9}, {3.7639983208147407`*^9, 
  3.7639983210327415`*^9}, {3.76399845428874*^9, 3.763998454495742*^9}, {
  3.7730601343244324`*^9, 3.7730601418604593`*^9}, {3.773484566528428*^9, 
  3.773484577943428*^9}},ExpressionUUID->"389bf249-e632-44c7-bdb6-\
0b9f44175665"],

Cell[CellGroupData[{

Cell["An issue with WebExecute?", "Subsubsection",
 CellChangeTimes->{{3.7735018301670866`*^9, 
  3.7735018478541017`*^9}},ExpressionUUID->"af323de5-0c91-4a3b-8caa-\
32e1f2118487"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"ClearAll", "[", 
  RowBox[{"cd", ",", "url"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"cd", "=", 
  RowBox[{"CloudDeploy", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"APIFunction", "[", 
     RowBox[{
      RowBox[{"\"\<country\>\"", "\[Rule]", " ", "\"\<Country\>\""}], ",", 
      "\[IndentingNewLine]", " ", 
      RowBox[{
       RowBox[{"GeoGraphics", "[", 
        RowBox[{"Polygon", "[", "#country", "]"}], "]"}], "&"}], ",", 
      "\[IndentingNewLine]", " ", "\"\<PNG\>\""}], "]"}], ",", 
    "\[IndentingNewLine]", "\"\</live-coding/geo-test/\>\"", ",", 
    "\[IndentingNewLine]", 
    RowBox[{"Permissions", "\[Rule]", "\"\<Public\>\""}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"url", "=", 
  RowBox[{"URLBuild", "[", 
   RowBox[{"cd", ",", 
    RowBox[{"<|", 
     RowBox[{"\"\<country\>\"", "\[Rule]", "\"\<USA\>\""}], "|>"}]}], 
   "]"}]}]}], "Input",
 CellChangeTimes->{{3.7734237155243206`*^9, 3.77342376041626*^9}, {
   3.7734238031203136`*^9, 3.7734238065033107`*^9}, {3.7734245501145687`*^9, 
   3.7734245560985775`*^9}, 3.7734819472468977`*^9, {3.7735883871083937`*^9, 
   3.7735883891993914`*^9}},
 CellLabel->
  "In[389]:=",ExpressionUUID->"b8cf66ed-2063-4efa-9f7e-c208bac2fd88"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"CloudObject", "[", 
   TemplateBox[{
    "\"https://www.wolframcloud.com/obj/mitch/live-coding/geo-test\"",
     "https://www.wolframcloud.com/obj/mitch/live-coding/geo-test"},
    "HyperlinkURL"], "]"}],
  CloudObject["https://www.wolframcloud.com/obj/mitch/live-coding/geo-test"],
  SelectWithContents->True]], "Output",
 CellChangeTimes->{3.773423764848288*^9, 3.773423811732342*^9, 
  3.773423846129341*^9, 3.773423965329818*^9, 3.7734245123779697`*^9, 
  3.7734245570406146`*^9, 3.7734819599608974`*^9, 3.7734988207283134`*^9, 
  3.7735883936844273`*^9},
 CellLabel->
  "Out[390]=",ExpressionUUID->"aaa9ffa1-7992-45ca-86e1-eda76a4d4e03"],

Cell[BoxData["\<\"https://www.wolframcloud.com/obj/mitch/live-coding/geo-test?\
country=USA\"\>"], "Output",
 CellChangeTimes->{3.773423764848288*^9, 3.773423811732342*^9, 
  3.773423846129341*^9, 3.773423965329818*^9, 3.7734245123779697`*^9, 
  3.7734245570406146`*^9, 3.7734819599608974`*^9, 3.7734988207283134`*^9, 
  3.7735883936974297`*^9},
 CellLabel->
  "Out[391]=",ExpressionUUID->"6edee19d-a20c-4533-b0ec-3f5784024850"]
}, Open  ]],

Cell["WebExecute[ ... ] not working.", "Text",
 CellChangeTimes->{{3.7734819749747243`*^9, 
  3.773482001777727*^9}},ExpressionUUID->"1fb2280f-ca11-48de-8728-\
3cd81b9ef21f"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"ClearAll", "[", 
  RowBox[{"url", ",", "session"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"url", "=", 
  RowBox[{"URLBuild", "[", 
   RowBox[{"cd", ",", 
    RowBox[{"<|", 
     RowBox[{"\"\<country\>\"", "\[Rule]", "\"\<USA\>\""}], "|>"}]}], 
   "]"}]}], "\n", 
 RowBox[{
  RowBox[{"session", "=", 
   RowBox[{"StartWebSession", "[", "\"\<Chrome\>\"", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"WebExecute", "[", 
   RowBox[{"session", ",", 
    RowBox[{"{", 
     RowBox[{"\"\<OpenPage\>\"", "\[Rule]", "url"}], "}"}]}], "]"}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.7734238352433105`*^9, 3.773423841673309*^9}, {
  3.7734245017718167`*^9, 3.7734245023488083`*^9}},
 CellLabel->
  "In[392]:=",ExpressionUUID->"463d9ab2-aa0d-4d3c-b75c-4c4ecfdea7f3"],

Cell[BoxData["\<\"https://www.wolframcloud.com/obj/mitch/live-coding/geo-test?\
country=USA\"\>"], "Output",
 CellChangeTimes->{3.77342384758531*^9, 3.773423967190802*^9, 
  3.7734245160349307`*^9, 3.773424598557433*^9, 3.773481960832903*^9, 
  3.7734988234012785`*^9, 3.773588397375392*^9},
 CellLabel->
  "Out[393]=",ExpressionUUID->"ec0b5bd7-ebd8-41cc-bd76-97a88a119188"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Continuing...", "Subsubsection",
 CellChangeTimes->{{3.7735018552630663`*^9, 
  3.7735018609730654`*^9}},ExpressionUUID->"d893d88c-e254-4c07-8494-\
3b28ce3dd7c3"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"ClearAll", "[", 
  RowBox[{"api", ",", "locations"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"api", "=", " ", 
    RowBox[{"APIFunction", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{"\"\<it\>\"", "\[Rule]", "\"\<String\>\""}], 
       "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{"Function", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"locations", "=", 
         RowBox[{
          RowBox[{
           RowBox[{"GeoPosition", "[", 
            RowBox[{"ToExpression", "[", "#", "]"}], "]"}], "&"}], "/@", 
          RowBox[{"Normal", "[", 
           RowBox[{
            RowBox[{"Dataset", "[", 
             RowBox[{"get", "[", "#it", "]"}], "]"}], "[", 
            RowBox[{"All", ",", "\"\<address\>\"", ",", "\"\<geo\>\"", ",", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"\"\<lat\>\"", ",", "\"\<lng\>\""}], "}"}], "/*", 
              "Values"}]}], "]"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"GeoGraphics", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"{", "\[IndentingNewLine]", 
            RowBox[{"Blue", ",", "\[IndentingNewLine]", 
             RowBox[{"GeoPath", "[", 
              RowBox[{"locations", ",", "\"\<Geodesic\>\""}], "]"}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{"GeoMarker", "[", "locations", "]"}]}], 
            "\[IndentingNewLine]", "}"}], "}"}], ",", "\[IndentingNewLine]", 
          RowBox[{"GeoRange", "\[Rule]", "\"\<World\>\""}], ",", 
          RowBox[{"GeoProjection", "\[Rule]", "\"\<Robinson\>\""}]}], "]"}]}],
        "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", " ", 
      "\"\<PNG\>\""}], "\[IndentingNewLine]", "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"api", "[", 
  RowBox[{"<|", 
   RowBox[{"\"\<it\>\"", "\[Rule]", "\"\<users\>\""}], "|>"}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.773499411801612*^9, 3.7734994630146894`*^9}, {
  3.7735014049649477`*^9, 3.773501405395913*^9}, {3.7735884597884755`*^9, 
  3.7735884701944637`*^9}},
 CellLabel->
  "In[396]:=",ExpressionUUID->"0b8c2eb1-3fcb-4bed-8775-1216b3355177"],

Cell[BoxData[
 GraphicsBox[{{
    TagBox[
     {Texture[
       FormBox[
        GraphicsBox[
         TagBox[
          RasterBox[CompressedData["
1:eJztnV2vJcd1npmPi1zmB+QmvyC3uc1lbh3kB9iIY+TGAewAQX6NB4YM0IEE
S0IIDwXw60ISRYv0eESMKJphJJ09hiXKn6INGiPgZJ7T83LXqenvru5V3f0W
8MyZs8/e3b27q1a9tWrVqn/7G//91/7rP3/llVd+9189/+fXfv1//off+Z1f
/1//6V8//+U///bv/rff+u3f/C//8bf/x2/+1m/+zr//jX/x/MV/889eeeXf
PX//v3zFxeWVV37vOze3xhizF6JtpouLS0yJtj3GGFOCaFvq4uKyXom2L8YY
swXRttbFxWVZibYhxhgTSbQNdnFxGV+i7YUxxtREtE12cXFpL9G24ax8/YPL
7WuPb55zuf3q+5e73//geze333h08/zn5fb3370UO9eD7zTH5BzffHS5feej
m9tvfXhz+/qHl9s3ntzcPrlcbn/ys8vt3/395fYfPn969xN+9tfNz7/62+bv
8OlfXm4//Onl9tsfl7s+Y/ZAtK12cTl7ibYBR+EPv0/ff7n9s59cbj/5i8vt
5bPL7dNfXG7/6R+f3v7qiyvogfT3Ifg8nwEd8/1Pm3Px84MfN6+hKXgvfO+T
y+2Pnl7ufqIrdCw+//6nN7fvfXJzd7z82vrgs+gX6RbOqd/RO1yP9Mzvv9to
IXQYGuydjy53oM2+9n78s6qBV9+7udOO+h196nuzT6JtuIvLmUp0e9879MNo
B/Xb/I4PQn4K9fXSE6kOkNbgfV1aAW3x+S+b96JB3v5h4xfh/5wv1UBT9VAJ
+G58B/0ufwyaSfcg/TvXyO9ou7P00fi4/vf377/26nvN80PLoSupN+jeh89/
8n50X6P1pp+Pc6EVx7wXXcm5VJfxvVGfUz1lphFt011cjlqi2/beYWxMvyNN
on4Z/UKfjA9EPg98L7zOXBC+CPkk0DRtekY+Fs3P0J/QD3GMNv9NbeRaKp1f
4p7QVz4Ie26NZkAPNPNwN/f8QOrv1ZcLNMVYLSA4pvxvnAM9iy7gOLzOXB06
Bb8UWgGoI7yf/3M9HGOuhuA8U+4z73/ro/saE6Z+b3OfaFvv4nKEEt2O9wp9
Db4O/k+fgu5IfQm57uBv6BY0il5Dw9CPp9pD2kW+CD4DuT+CcTR9Hf1/tDYZ
C9+L70I/nPsc1oZz4stIfRroPp4H2gDk80qvmeeDRmxii+7f/7wPH6sLmrii
Zm4IeI755zk+5+N9S/0dnGOuPuSz6G5IY53kX+OeRbfFvRJt+11c9lii2200
D17AGFf+EPqz9D30V/Rz0hzyi9D/0RfSz/E6/6eP0VyRfAq8n/dqDgW7/+y5
zX/W07c3fpWm3+J46i+idcdS+A7c79cex/hYmtjjawwOz5V+V9dHPeA9POs8
vphnUTIm+migb7hv1F0hjYp/amudujei+wIXlz2U6HYagdbPPHzcjGelR+Tf
oE9L+9NmXc31NeYS+ByvaezN74qHRftgo/VZjqf30D8yN8Br6BfsuuZN1G/y
OmNv+oD0mps5hmZuSH0CvppoHTIHNAP3nTkS7mfUHBFwDVobxbWlvgM0qPTi
mWJvShxHbUBzYIobz8cEpp3ovsHFpcYS3S63hPEzekExrWgUtAG6o60/ks8e
2nwDaJAmVrJ5H34R9IQ0CZoDe41fXjGz0ka/SvwsilkBxdli3/PrkU+I43Ie
/DeaW4qIvV2CvjOai3uCLojULYL4Fs3Ztf09nQ+q4XrH1HnNiW11vfIN5nE0
aJjLz+9rc8V9aZ6Mz6TxRDWRzw/mrH1/o/sKF5foEm0DtkS+CewkfRL6AjvO
uA+NoXF/6r/mvYAfQHZU79c6Iewt/RsaSPMevF+xlBwTbcK5We+Db4dxPTGO
gD5RfhY+h1+GPpxrGzOu53Pyx/Md+G5cH9cljYQO6pqHioZ7plhl+gS+f3Rd
Samx7+yD+odOUd3jJ/dXc5LUE+rw3GOP7ZdpR1qD9PaTJt6aek6d1PW01Yfc
5yhtz3V//YP17x/jFO6PYq1pk9HPtI/oPsTFZcsS3d62RPYWOwTYJmygcpuk
vgr+r/gU+UUUg9KMIW9u/+jF+FX9gnwn2LhUe8gPrvgVjsP7sd3STPzONSgG
lJ98dk5/OdSncM4a42JSXxP3zrEP86BeU7dSfwZaFh3L69TNPl/BWN580l7X
Gn/kVdtTj5U3SM+5xHo3jrnWPVRMWhrfTpvkd9qqxgaMKTRGkV9pbDtci+g+
xcVlzRJtXyPIbQm/M6ain2RMiC1SrjTmXuSveOeFT0RxLfhLGDvqOI2dbmy1
1oSgh+SrwYegXGzYbI6dzufIjssnIg21pu17N4s/rQHpRa6NPkHrkKPrzd5I
nys6EO1Qsi51HYt6TltAy2+hjfF10jbXriN8X/kzOWfqx6LNyx9DncV/ih2h
rWM/IutBdB/j4lK6RNvWLUjjKOkTn31xzc+G/cEWpeN6rSOeauM1H4/+Ufwh
YNsUo/IwydMvG9/4fpq5cp1zy3Ha648bWxytVdLfeSbKZxJdf4Yo4bdYA61d
kxbeYq2W/JjEeNEeOCfPca16g65v8tk0bYpzTdEvaTza3Gf98AcNta8pi+5r
XFxKlOh2tBVogr41NpozR1ugK7qOo3Uu8p+kuTOwlWlMrOwndrFtfIiu0bpa
5VuTTweNpRgE/A7KhcF3WCue8mt/Eqdd8hhk7X2kvGp7iHetEc1RyndIjPEc
jdXEXb3cJ7fpA/pv7e0AerZraV3FGOPvYE5MbVDzsLQZtR+uq6v9aC2efKvN
GGOaDuG4muul/daqZyG673FxmVOi281WYEu6NIv8vdgZzddoTx/0AjYOncJc
D75f+gDeg01SPKOOL32hY2Mjm/jSmy8/w3HTWNP0Wnif1q2kr6e+aOWJYf5k
jRjB1/60yZEXoV2US0+xo319jBlPGpvBfZ3jE+AZUO8gjdXS3p56j+aGOAe6
fCvNS7ubE2uunI/pXlp5jDDf99GnT2/fnuCrks8JnShdJVtS43xndF/k4jKm
RLeTLdEantzWPXyRS7/Lpj374v5aYmwb2kW/57lA0SPojnS+A5unviNft9Hm
h9HaijxHbrp/Ufpa6XgF5QeTPd9Ks2j9lfSLvp9y/UfXoT2jPERp3Z9bZ/I+
nzpPP8zx+b9yNFJ3eI6am6Ld7DWnUN4O337Snvsgv1eK/0/3KhXKdS2/jPR6
DXU9um9ycWkr8hnnuUhK1n3sFMevZWyheSL5gLGl+HC5RtY6oAnoO8fYrvT3
tnMxpuI8jDfRAZrb57N5fJ78CuqzlbtkjB3V3JbmkniuJWJBuC+KMyTGeMu9
AjSnoPXb0jHSf3NI44xqgLamvPpT1hIvhTlJ6pu0b7NObfy94TqpX/kYgOfE
cfS7/IOaI+prP3snjRdSLmvtC8F311ynckG2+YTa8ixpnpn7mNcP+XLWrDfK
OxXdV7m4UBgbNHublLPl2GCtCUznSeR71bwxWob3aq3gWm1OMbVj3ou9Rcdg
e5UfTvMx+T6Ibci2aMyV5rIFvnO+XijNH8dn0ty4WkPUpVP6rkfz91o7vST3
CfVDsTfMdbWNGUvDd+Nc0m5cA3VF+yHMHYuubePHon4ftN8R35X6kPZxPLe1
r1d+APWxqpPqE/s+y3u7niF/px2N6ZuPhnwoa31X2r/ad1u8EGMX2iztpmT9
4ZjYsei+y+W8pVRd1v7GU9to2u/yWcXLyX5ix/PcEm1rltMcLNrzR2sKlP9N
efv1f/mxc02jNRean5A/mN+H5sylJbQHX3pc2jo6hu+U3idsz8v7HDX2gfuq
/HBct/ZwkZZCV9HfdGkqvZbO2c/dd0/3RHszK//GmrY/3dta91f+l1wT7oEH
L9oKWuXdP7/eQ9WHfN9Mvq/2P6L+vPEkJr5Ha3yVA7FtLqTLL0jbpY3Vmtvw
LKT2EzuY+x2VD5MYHOWExuaQj0dxzm1ry6P7MJdzlRL2T/sIbuXvxb6jB2Q3
/8+fXvtz+USU2z7/rPK2KReLXldciNbYStMw1qcdd62p0XiH9pz24dIH9DOC
fl5+Y/ljeM+z5HvRJ2A7+HtqGzi+vo/yx2p/4WYvogbplzbtqNgc/s53mruu
gXNqf2TuE99rS9ur77+3vWv0rKT39Jzmxo7yeeWLU07lqdf02uOrlm3TV23f
QT7E9HpUp1g3pLyN8hWm79P+UvIjtcW8mm1o2/dDMWx6Joq/Q9/0jUc1b8vz
j+7TXI5dZG+weVPtHZ+RL6KmtiefSIlj6ziKfZHPRnP1xHmwBprXtO+zcrRo
P1v9VPyC+iw+j+3nb/l5f/E3V32i3C3KSZfaCPmI0pgh7Y+E9lJuu/z46mOW
5u3QOpE11hoppiW1o8167+a8NczxTEXxqapHa7Udjkt9aZvbSX2RqY9R+RBV
f3iuigvldc1jpfn3+R59a5kVW4VWyf/GOTgux0LbcFz6yEhbcmbGrkmfqjGj
+ziX45W8Pk4Zvyp/9dHHSvQB2F76HPk1ND/D6+iSfK2P9oGjj5UPRGuW0Qx3
45LHN1/maOk6N2NpxT/kf+vKo6V4Wc0tab+Xru+mPadhqv9FcUrK/1nyvqPN
uIdova61GXtDMdk8z3RP6S3qMHUgnVOjLvM3rfnnNXRMvs5IrDG/w7k1t6t9
BxRPfnS7cjai+zqXY5Su+oUPAdtFPz0mFwg2R/GE0b6XCLCzc+JTtdZx6H2K
X9a50r+17cHCc8t9EvRR6IA+P9SzF8dr5l/G5SFT/zt07Ln3NVpnrAVzhmiF
0log3XOoi3wNFs+wWfujPPzr6gXFJqm+KX+g8hmZ4xPd97nss2huPO9r8Pen
cf/y8+bjeuWsZ5yt8RJjtS3XxtbE2usi5HuQv4Z+5uHIuRI0iPLHNHNLz3Xp
j26+nH959P+aeR7tc8D5NM8wpg8upVvSmGLq3Zx9E+l3mbdL90TQWhj+Jt9X
pO+GdR1prNIadQXtmc5fKn+inrl8dcwj0r5puxFre7gOcrdpHja6HZvtie4L
XfZT6APxGStvWW6zyFmi2FbsvbQJNi7fa6/U/q3m/j3VHr3q397+YeO/p8+j
T+rqF5t9Va7/7+sj0Slomt+7053XGOE09+kQymG+xK+vGE36L3QF1zJHE9D/
Kjaae4e2TnVVuucw14zfI0K7cF1TdAJ+FMXeTh0b5Ll7FC+FDWjbu9OYCKL7
RJe6S1t/lOazV96yrvFs27oa+W9s+8qi/C2g/OjpeqC23CXyt2tvozHj+mZ/
guaziouZ6pOgXim/7ZQ+mTH/2Lw6Y2B9N7puzLwldR2dtLVuYcwwJQY1j5tH
i0xpa/KZAsdCr6Ff7OMw0aR5ZzRei+4jXeorQ+Pmvv0Dgf5T+U7UR2ADz5BD
ak3aYh20pyD9jHLR6W/ybzAPkMZbMg+huOFrrEujRYY0DH/P9x2Y2h+Pzc2X
2i00U2lt0BXPLPAl4uMpqZnGwr58aT7kMdC+9HmuOfd7DqH9BPFlqT7YV2pq
QTkasGcaM0X3lS51lLF2FbuoOeehPJnoHPpHx/8vg/5D/gr5U9Jcepon0Npg
7dGjnMTSG9pLoS2/6qvvXde36rzKQ5vuH7lEu3B+rW0d8715L9e/Rt596i6x
5eiidP9jtHbUHBFxOzw77Ys8RjeoPqA5eKYlYuDTPH7G1IpsUXTf6RJXpthX
xu30fW32/fXHl9Y9is1ylIu2a56mydXStGX8Cen+ANdnd/93xafqd+XIU06Y
Jv666d+ZtyH2YWnsarrXZBdoG+2zHaEhtiTP3zOlTuR5drTH5dw6NientTFz
KeHTw1bg34/uQ122L1N1S59msW5ZB+kW7UPQpV1S3ZLnSW32huzWLdIuaS47
aZeSumVM/4w94jtM2ctvr+TaZYp2wC9l7WL2TL5/xVywGdF9qcs2pYTdZY7B
tm5dlAd9rDZI45HQJop3UXys1rZrH4R0nbD2WuM4yrnO+5lP4hgl9v5h/mdI
v3DOveSV4/vM3V+Az7HOKc9TOAZ0Rq7tluYd0L5W0XXeHJO8jqM3aD/Uualj
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
A/xDWqPkNnl8mr2zxvn2ch9dXqcYh9JWmMOkvVCn23x3aBnFle95H+mxRGsW
SvQ9ODJnnTfCBuS5u0w9dPXhaJWSfXupdUqg9UeAFhnaV1x5YGiD6Vjafpfj
g693SD/Id/f2k2YukXVvaGN0vHyR8juqTfC+VLvg06OO8VPzhmfa797a5Zgo
hyh1n7YU3Z63gnad7lNj6gK73LYPeGmo97WNP8fkWzXHAc0xNH5Srub0d8V2
Kacze3Rpz+hvf3xzZ8/5f57HSHooup5vhXXLMbF2iX8G5mWsXeLbiNmGJdpl
iX6JrudbYu1yXDTP/saT48+1L9mX1cyrW2PfSx3EDm81Z0JdrynWiXvlfP3n
gzo4VDfQH6kG0X7gxKgzT4TmZV5I+5DTltBEbXXb2sW65ShoHxvmRaPb8RrQ
thmTnK3NRqO8vGPeyxx8ZL+t9de0AdYQj4lVoe/gM3y2xD53+AKj24qJgTja
sbF3jb+lyUeleEWtX6vNj1gL1i7HJo1p52fbGru9cfls3fXP1kNlqC1HPXq3
73qVly4FDUNfMjd/xtQ9EcyxYP3P1LUD2B/0M7Z6zbyRe8e65fjIfjL+pM9n
bLnndQ9nyMN0BGqsY7QFNJXWDqU6tS+3G7of7YM/n3akddN8Dp8OGkd/a459
zf0S/Z1NLMqFPKXtUL/OuO/9VKxdjkuqW6xdzJbUWMekXaRf1tMuV/0S/Z1N
LEu0i/VLP9Ytx4W5UuX70mv4I6Pbs8Avqn17uUb+37UnE+89+p6pRwFNMCcv
7tYoJhIdMmddXsT+YeioPdxbc91XjTHj1LloPuNYl2GsXY6LYr/kr2BMuFW7
xbbTJzAeRZsQq6K/KYd2fr20ce1XQ6xj2j94HLIPsLln3hd0zRhlfEfkyUNv
nTUP5d7A1pGPbqx+cczdeKxbjkFXbBc+S2kFxYKt3V7RKfn1aD8Y9ugdmw8S
G61xJj/drren757nsYg815p8exGk68KJ1yx5bNbXpc/Fa7Drp9kvIL4dHxVr
l2NCX6I9fJu92S9f7uG7RjvVuLCkxkjXa2ifYLMdWhv9RjJ2pF7xnNM9oLHP
Nca5bA0+J/yG/L90Tr7Pf/n03jr1hz/Yxo9q5jN1zJXnrjP9WLccky7tskYb
XVu3gLXL9li7TMPaxaSgXaboF2uX6Vi7HA/6FvX/2i+MuZzSayCIaVljPifN
u6E9gs22qM7wE32iHOb8TWuBzxzf0kaT071pb6X1C20ibWvKqXf2ubpaGbNP
Y97eotv83rBuOR7MjwO6n3lX+n/GbcA+pqXa51prl9OxfLNf/P082tH398zg
j2H91xFyHq6Bcr6vEbtMTE1e/xXnnrYXrQs/+t4gtcJzz/cfGmKNfaHPYCut
XY4JYzP8zenaHtm6UrZ0rWtPfUSsk9aek/ycmrfSlOHh432sg44kbRNr7Q/A
mCH1g6ld01+iLck1z9/PtDdrTTCnN7ZN8dx4ZmtolzNg3XJc0Cn0N/JJYk9L
9D9j9h5bAm0aPzljmNxG087PMKaoib3kb4kGf1Q+5i69rhldj2+lbR91zVeh
77/xqDk3c7s8O+V9yv0xyl+gHAdexzQf7t9X329Y2t6i2/xesHY5Ju+8iNlN
95mjXSydj99inMA5Uh8Ltph+QXtmu31vB2PD6H5hLygORfeOuKGSx1euunzO
NvW19K3PJSYU3UNbwpepuKb0746jmQfaUNqV+8rzaHsWY/c3NcNYuxyTvWqX
XLeAtUsc1i7TqEG7dOkXa5f1mKJdrF/KYN1yPOjb0S5ak5DaOmzV3D1vsZ1b
fxf6ztcfX+5IvwPf0Xuvrgt9mecRpsO+R7qHxM6WXkve7NHUtGvOlesNntmS
9Su0LWwE807Klc0YyOvL2snXFsm+Mn/04MX91Lgruk0fDWuXY6I8tfgt0tfn
5NvVvPja16x2nr+W/s26ZRvmatyzk+9/QTvc+hpoq7TxNDfvVNBI6BWOs2aO
y73y7MWzTm0RYy35KrG90W346Fi7HBf8lnk/3+Ton6ZfsGFrXB85acjtxRpu
7dHLHgPYzSbXyMvn5fvAnH3PzDgYM0b3DXuFOpzPe0bqwLk5DWh/9M34XNjv
IGp9PGsma/D5cA340PBDYbO67it2Ce3o3Jrrsyfdwjxt7kcw08G2TskDQZst
qRPoG7EBzL8rBzB+cPzU0lT0Abyn7XmneswxMGXx3jnLafa1ufZdpfNDToG2
OzfGgvaY2gnqxdp1g+Nz3kf/txlf0f4Zy2z13NpexxaRs3xsngb2lbNN2gZr
l3NRk3aRbpmjXaRbbCfKYe1Spg88snZZs37Uql2m6Bdrl+3Yi3YR1Av6Pc8b
TEf9/tT567G+Z2kJbDc2B/2BLUrzUqR75cjGp8+ROWPaP3ZMOUOxGel7NPdl
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
9TdemxJHm2qiPqbGAefrqdnvKPpemnLYn3Z8GAexRiW6/5hCuqekWYd8DJzu
VXMk6PO8hq1MXcEHk6//YT6H+UbWLys3/9BeZrwPHUmdG5uzgbibsbEr33h0
v25zLq7PNuU4WLscH2sX04a1i5laV6xdjDFbQNxrW56E2iG/mu3MtgzFG+wR
cvRF39ej0RU3x3gDe0OeW/Z07vo84+U5OZ6Zk1KcTTMH1KyXI35Je2pzfl7P
89LxHnLnKXbHGFMejXGG9nQdwx7zqDJuox9lnj36WRyVND+pONqe1o5tWQfs
EnalzbYw5nj7h/3+/Dy2dyz4aHQM1om99dFVs6CnQPm68zjdd//8mlvPYyJj
1oGYOKCttfUxY6FNR/cfc2B8hQ1kTMU4S/mAo5/LkcGe71HndrHW/jpnp1lb
dPly/VBbncH3Qexu3zof2vbUZ0pMsD6vNe7UW2yD1jy1aaZX32tsKTZVn1EO
avQOr2tOSZ+xf8aY6dBu4I0njZ2gbU4dK/D+Nfb22xq+A/qFOXHsHTYLSvik
zJW96tw2qC+uG+vxVpJnpW1vV+5/6iPpqm9T7BNaVFoIjaE8dWgSzsc6SuC4
+bmoC6yvlq7hd+KflP9R8TbPvri/9rvtWEtxvTRmmNpz0I2h6zsw3nN+sXIc
SevaR7cu6JLUx9EWTyf90rauWT6NsXOUxNGkn0/3gMQ+NGOZBnwz/GQ9NP9X
XUCH6Hq1pht4jc/reMrPwOtcP/qGNdzEykBfHE8b+HTS+oj+sn4xph9rFzMW
axczFmuX8Vi7GDMN2gdtnvYW3Z+sBXZRawpkh/Tdo+//HuEejl2vWiPy90ff
xzPAfVYcGrqgbd0Qz4M5GY0xiINJ9/sYO0+JdtBnaNvSSugW7VHQd535a7l9
QE+gh5hzuvz88mVcDdqlbeyEPua9fJehuBhpvPScrN+WnrGtMuZlaB97XB89
ljxOEDuGrcGOXj67DOaYMC+DXd2jfuGarVu2hbgTxbd2+VCwP6wX/MqL96T7
Mci3QZ2jLWusleuFNO4k3bcCjcF7+b1LQxCDyznxn6A30EFcE+Oda86a6/Vz
LLQJ/pUxfmvez2f5Hl+ZcO84J/eF79C1V4IZj+/dcaCtHmHOaGl/ptje6Oex
J7Dbe9Mv9EvR9+3stOmXPM9KF3n+fuZutP75j7O9Wen3qZ/4CRVrqzmhXL+i
DVizzTHT3HTy06b7NaKdeO/cuVM+h1Ya248qZphrcd9rTAM2I7o/qQlsnO3D
ePa07giNvnbeXI+Lx0Hfneresdplyj2X70V+C/wo6KaxuRTa9oLMf1L/yWs4
Z/yH7urKbZGem5gc9FK63tt1zJwdaxdrlyXsRbvQt1i71ENp7dL1epd2mXrc
9LnWoF2in58x0Tw86N40S/s57Irzlo1jTv6wreFZQpq3zMTA+h5+EmemONo5
bW2oD+dZc2zpA+2jpJjYKRogjTXR/BG57NK/k79u6n5wmjtq8nM1ENeDxibG
F23EPWK+SOdSjr3o57g3PK44FtiP6H6lVojltY0YhvHgnNztW8IaE1C/aeqg
WavcrN9RzBnrhbvma2BKLlvem/pZct/JFLS+WsdM44kFdWxq3ST+OJ3L4his
Y6JN4W9p8xXyuvKqRz/DNl55XqKvwRwf7MeR8ryXZI2cmUdD49voZ9UH8wVe
G10nPJM0by3wu9ZK44egr27W6TTzLMwDyX8y9ExLjLXzY7Be6PUPX7YNvG/O
/BFzZlP2daHNcT/4CTVpmFdelOjrMOcA+xDdv9RI29jKvAx9S/Sz6oMxLFi7
1At7CFCP0DCi7Vmia6bkaRqztljzMNpnJf3bw8fDexcI9MyQduF7sQY7fW3O
GsdrbrzrvlA1aBhrF7Ml1i7WLkvYg3bp2oPP1EGUdtFczZ61i/a8tHaJw7E0
cSieMbqfqYm+XJxuD1dq1770J4pXiL5Xpp9GPzQ/6ZfRM0BeFOa2lWeOOUD6
fGL2mEOirWiOSTqVY/C7tAuxI7yX+RnmgzkP59Ceizo375UO4PNjrhv9o73t
ySOUahj0yi/+5nIHNoXjM9dDrK7ek4+TxsSW8h3Js6S4IWjium569+dek7Nq
Fz2Pvdjso0HbrT3uciucg3U89B9t+d5rQc/Sz/MYKNcufTY6hH6f9W7KyYve
UM46dARjMvp0xclg5/g/Woi42LdWGKPkeT/RNG11kOtTHdX16TvqPX1xPbyu
9XPpWihpmK2fzZm1i3SL7UwMY/c+OzrOszue13aw1p4xLgx9F+de3z+0Xflr
8hhY/BHoHLTE2mvm0UjSFl3ro7SnnOop+WLQXum6aBjTH3Is4n4BH5T8UVve
+zNrl/Q5RF/DGWG8UPu6kbVxbpdp0FZrX6vG9WHLIfp+mZfrT+lj0venWlVz
KOgC2veW+4gPzVWia/CTcF3EwvDz6x/Mn/eRXtJc0pbP0trF2iUKaxdrl6lY
u5gldWdt7aJYVv5/Ju0SMU9q7WIiOXPM7ph5BfMy5C6PfnZD0C9E3yezLc0e
0NdY7bH7QqRzh/p81/uGjsU8/BR9xjWm66jmxJgr1rn9b+tpmleSEv3szfmg
Xp9xf2nmwaPv/V6Zk1N0a9r8acQZR987UxfoBcYwn/7lNX/tdz9p1jWl2mfM
uhI0BH7sseuVuq4n1TN9jPW1SJOVvG+vZCX6OZpzsoe+qDRd4xTTD3aQNavR
z28IYiLbrr9vXM0aVBF9n812MKekvBHE9QJ1iPV0zD9qbmfITys7ejSfX5tm
G6NdHAtitmAP++yVgO/pOIj55Lm2aoVxdN/3yMeraBr6JnyQXnt0Llg7PVSf
0DB9frt0zWZNORfWqsdL/C6MG7mXbmOmBGnupCPj/LnzweZEP7+x4Bua8t1Y
r6p8R8q9Hn2/TTk0v6LctHodX8mY9QpvP+nPuZv7ImuqP2P2gpqKtYupBeXE
iO5zrF3q5UzaJfpem7LkOfX1+hjtgm6Zol1qqz9baJdUv0zVJDX7OWu9LnOf
2nOmWrvEsidty9zP2PhE4jPTeHXWUUXfa1MG+p43nzTaAo3CnHHajw/NlWuP
iaHcdulcKvOV5IwrHR879/uX1i5tusXxuiYaxgxHzvnifC7zGRMXUAvEJ4wZ
M9En0X+lmv1osZZnhefP/or5OkrqsWJyFZfbV4/G7M/Ytkcp+iX6HuBjYrzW
rBsvc8yp2qVmv0rbtaY/h967l+91FlijV/t+wXM5Ur+0Zbuhj9+TT+5bH/Z/
HzQ6Ojb/TtQP+12OAX6PEvkfGMs9+rQ//rYtXyMaKfoeQDNXVi5HX5d2qSU+
eVzdsPY4Mswhaa/66L6oFM5HN4+9xLpQV4eecd88wVh/jakTxVnzjKGk7eJY
b3103beI8zHO63o/8VM19Of4nrRvwJzPq48n5w1t6wjaBaRfoq/DlMfaxYij
aBf1adYuxyTVLqXt1t61y5zPprplSLtQ9ujLWCN3n6kHcqIMzQ3vgYcj5q7N
y7BXbfSz64O5Aeb1+2w080hDx/Ge4vuFZ4++WHu8hSZhDyLOOTS33pUjcWu+
MvNzzDMxhkWD4afo0y171S6qO9HXYNZ9vnvWL/RvrCmJvo97hDzn0c+vDdaP
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
           "], {{0, 284}, {559, 0}}, {0, 255}, ColorFunction -> RGBColor], 
          BoxForm`ImageTag[
          "Byte", ColorSpace -> "RGB", Interleaving -> True, MetaInformation -> 
           Association[
            "Exif" -> {
              "Software" -> 
               "Created with the Wolfram Language: www.wolfram.com"}, 
             "GeoMetaInformation" -> {
              "Software" -> 
               "Created with the Wolfram Language: www.wolfram.com", 
               "TileSources" -> 
               "Wolfram Knowledgebase with data from \[Copyright] \
OpenStreetMap contributors: http://www.openstreetmap.org/copyright", 
               "Projection" -> {
                "Robinson", "LongitudeDetermination" -> 0, 
                 "GeoRange" -> {{-90., 90.}, {-180., 180.}}, "Centering" -> 
                 GeoPosition[{0, 0}]}, 
               "PlotRange" -> {{-2.6666, 2.6666}, {-1.3537821253923288`, 
                1.3537821253923288`}}, 
               "LonLatBox" -> {{-180, 180}, {-90, 90}}}]], Selectable -> 
          False], DefaultBaseStyle -> "ImageGraphics", 
         ImageSizeRaw -> {559, 284}, PlotRange -> {{0, 559}, {0, 284}}], 
        TraditionalForm]], 
      PolygonBox[{{-2.6666, -1.3537821253923288`}, {-2.6666, 
       1.3537821253923288`}, {2.6666, 1.3537821253923288`}, {
       2.6666, -1.3537821253923288`}, {-2.6666, -1.3537821253923288`}},
       VertexTextureCoordinates->{{0., 0.}, {0., 0.9999999999999999}, {1., 
        0.9999999999999999}, {1., 0.}, {0., 0.}}]},
     Annotation[#, "GeoBackground", "WolframGeoGraphics"]& ], 
    TagBox[
     TagBox[
      TooltipBox[
       {Opacity[0], 
        PolygonBox[{{1.5999600000000003`, -0.8122692752353973}, {
         2.6666, -0.8122692752353973}, {2.6666, -1.3537821253923288`}, {
         1.5999600000000003`, -1.3537821253923288`}, {
         1.5999600000000003`, -0.8122692752353973}}]},
       "\"Wolfram Knowledgebase with data from \[Copyright] OpenStreetMap \
contributors: http://www.openstreetmap.org/copyright\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, 
       "Wolfram Knowledgebase with data from \[Copyright] OpenStreetMap \
contributors: http://www.openstreetmap.org/copyright", "Tooltip"]& ],
     Annotation[#, "Metadata", "WolframGeoGraphics"]& ], {
     {RGBColor[0, 0, 1], LineBox[CompressedData["
1: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
nkoe7Lzf2fA0iwH0fwB+6el3
       "]], LineBox[CompressedData["
1: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
NfDhrejDtyu5iGc6Ml/MVWvgfwHTkFnk
       "]], LineBox[CompressedData["
1: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
VPohfr9FTbcvB/8HxwH4rQ==
       "]], {InsetBox[
        GraphicsBox[
         {RGBColor[0.790588, 0.201176, 0.], 
          PolygonBox[{{-0.4, 1.25}, {0, 0}, {0.4, 1.25}}], 
          RectangleBox[{-1, 1.25}, {1, 3.25},
           RoundingRadius->0.6]},
         PlotRangePadding->None], {1.1211415811411853, -0.6249914110045608}, {
        Center, Bottom}, Offset[24]], InsetBox[
        GraphicsBox[
         {RGBColor[0.790588, 0.201176, 0.], 
          PolygonBox[{{-0.4, 1.25}, {0, 0}, {0.4, 1.25}}], 
          RectangleBox[{-1, 1.25}, {1, 3.25},
           RoundingRadius->0.6]},
         PlotRangePadding->None], {-0.460722425599798, -0.7351987615965212}, {
        Center, Bottom}, Offset[24]], InsetBox[
        GraphicsBox[
         {RGBColor[0.790588, 0.201176, 0.], 
          PolygonBox[{{-0.4, 1.25}, {0, 0}, {0.4, 1.25}}], 
          RectangleBox[{-1, 1.25}, {1, 3.25},
           RoundingRadius->0.6]},
         PlotRangePadding->
          None], {-0.5082164378228534, -1.1229316518881758}, {Center, Bottom},
         Offset[24]], InsetBox[
        GraphicsBox[
         {RGBColor[0.790588, 0.201176, 0.], 
          PolygonBox[{{-0.4, 1.25}, {0, 0}, {0.4, 1.25}}], 
          RectangleBox[{-1, 1.25}, {1, 3.25},
           RoundingRadius->0.6]},
         PlotRangePadding->
          None], {-2.3365258833056006, 0.49368127735658646}, {Center, Bottom},
         Offset[24]], InsetBox[
        GraphicsBox[
         {RGBColor[0.790588, 0.201176, 0.], 
          PolygonBox[{{-0.4, 1.25}, {0, 0}, {0.4, 1.25}}], 
          RectangleBox[{-1, 1.25}, {1, 3.25},
           RoundingRadius->0.6]},
         PlotRangePadding->None], {0.882535117321293, -0.5330939299090378}, {
        Center, Bottom}, Offset[24]], InsetBox[
        GraphicsBox[
         {RGBColor[0.790588, 0.201176, 0.], 
          PolygonBox[{{-0.4, 1.25}, {0, 0}, {0.4, 1.25}}], 
          RectangleBox[{-1, 1.25}, {1, 3.25},
           RoundingRadius->0.6]},
         PlotRangePadding->None], {0.7479290973136721, -1.1620469301405179}, {
        Center, Bottom}, Offset[24]], InsetBox[
        GraphicsBox[
         {RGBColor[0.790588, 0.201176, 0.], 
          PolygonBox[{{-0.4, 1.25}, {0, 0}, {0.4, 1.25}}], 
          RectangleBox[{-1, 1.25}, {1, 3.25},
           RoundingRadius->0.6]},
         PlotRangePadding->None], {0.3153665474446323, 0.41722936184437104}, {
        Center, Bottom}, Offset[24]], InsetBox[
        GraphicsBox[
         {RGBColor[0.790588, 0.201176, 0.], 
          PolygonBox[{{-0.4, 1.25}, {0, 0}, {0.4, 1.25}}], 
          RectangleBox[{-1, 1.25}, {1, 3.25},
           RoundingRadius->0.6]},
         PlotRangePadding->
          None], {-1.7731601650380047, -0.24137445078264844}, {
        Center, Bottom}, Offset[24]], InsetBox[
        GraphicsBox[
         {RGBColor[0.790588, 0.201176, 0.], 
          PolygonBox[{{-0.4, 1.25}, {0, 0}, {0.4, 1.25}}], 
          RectangleBox[{-1, 1.25}, {1, 3.25},
           RoundingRadius->0.6]},
         PlotRangePadding->None], {-2.4336851064775162, 0.41311647610637}, {
        Center, Bottom}, Offset[24]], InsetBox[
        GraphicsBox[
         {RGBColor[0.790588, 0.201176, 0.], 
          PolygonBox[{{-0.4, 1.25}, {0, 0}, {0.4, 1.25}}], 
          RectangleBox[{-1, 1.25}, {1, 3.25},
           RoundingRadius->0.6]},
         PlotRangePadding->None], {0.7873676015692455, -0.6403659831209053}, {
        Center, Bottom}, Offset[24]]}}, 
     TagBox[{},
      Annotation[#, "GeoGridLines", "WolframGeoGraphics"]& ]}}, 
   TagBox[{},
    Annotation[#, "GeoScaleBar", "WolframGeoGraphics"]& ]},
  CoordinatesToolOptions:>{
   "DisplayFunction" -> (
     GeoGraphics`GeoGridPositionDisplay[#, {
      "Robinson", "LongitudeDetermination" -> 0, 
       "GeoRange" -> {{-90., 90.}, {-180., 180.}}, "Centering" -> 
       GeoPosition[{0, 0}]}, "ITRF00"]& ), 
    "CopiedValueFunction" -> (
     GeoGraphics`GeoGridPositionCopiedValue[#, {
      "Robinson", "LongitudeDetermination" -> 0, 
       "GeoRange" -> {{-90., 90.}, {-180., 180.}}, "Centering" -> 
       GeoPosition[{0, 0}]}, "ITRF00"]& )},
  DefaultBaseStyle->"GeoGraphics",
  Method->{"OriginalInput" -> HoldForm[
      GeoGraphics[{{
         RGBColor[0, 0, 1], 
         GeoPath[{
           GeoPosition[{-37.3159, 81.1496}], 
           GeoPosition[{-43.9509, -34.4618}], 
           GeoPosition[{-68.6102, -47.0653}], 
           GeoPosition[{29.4572, -164.299}], 
           GeoPosition[{-31.8129, 62.5342}], 
           GeoPosition[{-71.4197, 71.7478}], 
           GeoPosition[{24.8918, 21.8984}], 
           GeoPosition[{-14.399, -120.7677}], 
           GeoPosition[{24.6463, -168.8889}], 
           GeoPosition[{-38.2386, 57.2232}]}, "Geodesic"], 
         GeoMarker[{
           GeoPosition[{-37.3159, 81.1496}], 
           GeoPosition[{-43.9509, -34.4618}], 
           GeoPosition[{-68.6102, -47.0653}], 
           GeoPosition[{29.4572, -164.299}], 
           GeoPosition[{-31.8129, 62.5342}], 
           GeoPosition[{-71.4197, 71.7478}], 
           GeoPosition[{24.8918, 21.8984}], 
           GeoPosition[{-14.399, -120.7677}], 
           GeoPosition[{24.6463, -168.8889}], 
           GeoPosition[{-38.2386, 57.2232}]}]}}, GeoRange -> "World", 
       GeoProjection -> "Robinson"]], 
    "BasicGeoRange" -> {{-90., 90.}, {-180., 180.}}, 
    "GeoGraphicsOptions" -> {
     GeoBackground -> Automatic, GeoCenter -> GeoPosition[{0, 0}], 
      GeoGridLines -> None, GeoGridLinesStyle -> GrayLevel[0.4, 0.3], 
      GeoGridRange -> {{-2.6666, 2.6666}, {-1.3537821253923288`, 
       1.3537821253923288`}}, GeoGridRangePadding -> None, GeoModel -> 
      "ITRF00", 
      GeoProjection -> {"Robinson", "Centering" -> GeoPosition[{0, 0}]}, 
      GeoRange -> {{-90., 90.}, {-180., 180.}}, GeoRangePadding -> Full, 
      GeoResolution -> Automatic, GeoServer -> {Automatic}, GeoZoomLevel -> 1,
       MetaInformation -> {
       "LonLatBox" -> {{-180, 180}, {-90, 90}}, 
        "PlotRange" -> {{-2.6666, 2.6666}, {-1.3537821253923288`, 
         1.3537821253923288`}}, 
        "Projection" -> {
         "Robinson", "LongitudeDetermination" -> 0, 
          "GeoRange" -> {{-90., 90.}, {-180., 180.}}, "Centering" -> 
          GeoPosition[{0, 0}]}, "Software" -> 
        "Created with the Wolfram Language: www.wolfram.com", "TileSources" -> 
        "Wolfram Knowledgebase with data from \[Copyright] OpenStreetMap \
contributors: http://www.openstreetmap.org/copyright"}}},
  PlotRange->{{-2.6666, 2.6666}, {-1.3537821253923288`, 1.3537821253923288`}},
  PlotRangeClipping->True,
  PlotRangePadding->None]], "Output",
 CellChangeTimes->{3.7734994659546623`*^9, 3.773500559416192*^9, 
  3.773500592009248*^9, 3.773500788638091*^9, 3.7735014111493177`*^9, 
  3.77350189948524*^9, 3.773501994003885*^9, 3.7735043454326334`*^9, 
  3.773588489646433*^9},
 CellLabel->
  "Out[398]=",ExpressionUUID->"2f802c17-9e3a-4224-a9e4-17176d370be4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", "cd", "]"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"cd", "=", 
  RowBox[{"CloudDeploy", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Delayed", "[", "api", "]"}], ",", "\[IndentingNewLine]", 
    "\"\</live-coding/geo-pins/\>\"", ",", "\[IndentingNewLine]", 
    RowBox[{"Permissions", "\[Rule]", "\"\<Public\>\""}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.773482031499727*^9, 3.773482059182727*^9}, {
   3.7734821093137264`*^9, 3.773482137276726*^9}, {3.773482855621457*^9, 
   3.773482889483526*^9}, 3.7734829707614975`*^9, {3.7734830558924475`*^9, 
   3.7734830629364834`*^9}, {3.77348334616742*^9, 3.77348334715242*^9}, {
   3.773483381487421*^9, 3.7734834758065386`*^9}, {3.77348376158257*^9, 
   3.7734837677585726`*^9}, {3.7734988680104303`*^9, 
   3.7734988689453983`*^9}, {3.773499371978614*^9, 3.77349937478561*^9}, {
   3.773499487749701*^9, 3.7734995233726635`*^9}, {3.7735010166147785`*^9, 
   3.773501020594771*^9}, {3.7735043327476687`*^9, 3.773504335922656*^9}},
 CellLabel->
  "In[399]:=",ExpressionUUID->"1e92b2ab-070d-4612-bbfa-f42ba5b337a8"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"CloudObject", "[", 
   TemplateBox[{
    "\"https://www.wolframcloud.com/obj/mitch/live-coding/geo-pins\"",
     "https://www.wolframcloud.com/obj/mitch/live-coding/geo-pins"},
    "HyperlinkURL"], "]"}],
  CloudObject["https://www.wolframcloud.com/obj/mitch/live-coding/geo-pins"],
  SelectWithContents->True]], "Output",
 CellChangeTimes->{3.7735010217127743`*^9, 3.7735019090933123`*^9, 
  3.773501997795926*^9, 3.7735043474226665`*^9, 3.773588492332466*^9},
 CellLabel->
  "Out[400]=",ExpressionUUID->"8e95ec6a-7c4d-443c-9071-54352ba88df2"]
}, Open  ]],

Cell["Opps... WebExecute[ ] doesn\[CloseCurlyQuote]t produce...", "Text",
 CellChangeTimes->{{3.7734835395142126`*^9, 
  3.773483574904169*^9}},ExpressionUUID->"177d7354-f262-4136-846f-\
7b8a65f9b26e"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"ClearAll", "[", 
  RowBox[{"url", ",", "session"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"url", "=", 
  RowBox[{"URLBuild", "[", 
   RowBox[{"cd", ",", 
    RowBox[{"<|", 
     RowBox[{"\"\<it\>\"", "\[Rule]", "\"\<users\>\""}], "|>"}]}], 
   "]"}]}], "\n", 
 RowBox[{
  RowBox[{"session", "=", 
   RowBox[{"StartWebSession", "[", "\"\<Chrome\>\"", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"WebExecute", "[", 
   RowBox[{"session", ",", 
    RowBox[{"{", 
     RowBox[{"\"\<OpenPage\>\"", "\[Rule]", "url"}], "}"}]}], "]"}], 
  ";"}]}], "Input",
 CellChangeTimes->{
  3.7660854167790337`*^9, {3.7660865509770193`*^9, 3.766086551185033*^9}, {
   3.773057951766219*^9, 3.773057961075218*^9}},
 CellLabel->
  "In[401]:=",ExpressionUUID->"edf39c39-c218-49af-ab42-548811bea5c2"],

Cell[BoxData["\<\"https://www.wolframcloud.com/obj/mitch/live-coding/geo-pins?\
it=users\"\>"], "Output",
 CellChangeTimes->{
  3.7660866284539967`*^9, {3.7730579621271825`*^9, 3.773057978210885*^9}, 
   3.7730584154106646`*^9, 3.7730585779733677`*^9, 3.773237125297512*^9, 
   3.773422792569388*^9, 3.7734228843748407`*^9, 3.7734231198621063`*^9, 
   3.773423157122361*^9, 3.7734814604829645`*^9, 3.773483527488474*^9, 
   3.7734988787394733`*^9, 3.773499529848674*^9, 3.773499574763586*^9, 
   3.7735005977532787`*^9, 3.7735010322577724`*^9, 3.7735019123093057`*^9, 
   3.7735043504236326`*^9, 3.7735884980104322`*^9},
 CellLabel->
  "Out[402]=",ExpressionUUID->"fc91bfc1-1dfb-4921-aa62-635455064713"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["API-11) Ways to return image and table", "Chapter",
 CellChangeTimes->{{3.7638903241703033`*^9, 3.763890387306302*^9}, {
  3.7638906383193026`*^9, 3.7638906506213074`*^9}, {3.763976047180131*^9, 
  3.7639760608231316`*^9}, {3.763976112842131*^9, 3.763976117610132*^9}, {
  3.763990612311146*^9, 3.763990612485146*^9}, {3.7639983208147407`*^9, 
  3.7639983210327415`*^9}, {3.76399845428874*^9, 3.763998454495742*^9}, {
  3.7730601343244324`*^9, 3.7730601418604593`*^9}, {3.773484566528428*^9, 
  3.773484577943428*^9}, {3.773486017532942*^9, 3.7734860607238617`*^9}, {
  3.7735072006684327`*^9, 
  3.7735072245185504`*^9}},ExpressionUUID->"662f0697-6bd2-47b5-ad9c-\
5b9db247263c"],

Cell["Make a data repository", "Text",
 CellChangeTimes->{{3.773502103926482*^9, 
  3.773502109968481*^9}},ExpressionUUID->"1af7bef8-8291-45d3-9da0-\
74b411a7a5bf"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"CAUTION", " ", "-", " ", 
    RowBox[{
    "running", " ", "this", " ", "will", " ", "reset", " ", 
     "gaugeReadingDS"}]}], " ", "*)"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"ClearAll", "[", "gaugeReadingDS", "]"}], "\[IndentingNewLine]", 
   RowBox[{"gaugeReadingDS", "=", 
    RowBox[{
     RowBox[{
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{"<|", 
        RowBox[{
         RowBox[{"\"\<timestamp\>\"", "\[Rule]", 
          RowBox[{"DateString", "[", 
           RowBox[{"DateObject", "[", "]"}], "]"}]}], ",", 
         RowBox[{"\"\<reading\>\"", "\[Rule]", 
          RowBox[{"RandomInteger", "[", 
           RowBox[{"{", 
            RowBox[{"0", ",", "100"}], "}"}], "]"}]}]}], "|>"}], 
       "\[IndentingNewLine]", "}"}], "//", "Join"}], "//", "Dataset"}]}], 
   "\[IndentingNewLine]", 
   RowBox[{"CloudPut", "[", 
    RowBox[{"gaugeReadingDS", ",", 
     RowBox[{"CloudObject", "[", 
      RowBox[{"\"\<data/gaugeReadingDS\>\"", ",", 
       RowBox[{"Permissions", "\[Rule]", "\"\<Public\>\""}]}], "]"}]}], "]"}],
    "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.7734869902400413`*^9, 3.77348703862908*^9}, {
   3.7734870721981654`*^9, 3.773487134205211*^9}, 3.7734871741471944`*^9, {
   3.7734872374602146`*^9, 3.77348727354523*^9}, 3.77348737800634*^9, {
   3.7734874781052947`*^9, 3.773487479706343*^9}, {3.7734875510133305`*^9, 
   3.7734875601993217`*^9}, {3.7734916447115574`*^9, 
   3.7734916450245905`*^9}, {3.773588644791773*^9, 3.77358870740178*^9}},
 Background->RGBColor[1, 0.85, 0.85],
 CellLabel->
  "In[408]:=",ExpressionUUID->"3c2fd98c-5145-4599-a4c1-ca76a25d1b07"],

Cell[BoxData[
 TemplateBox[{TagBox[
    DynamicModuleBox[{
     TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
      Data`UnorderedAssociation[
       "RowCount" -> 1, "Length" -> 1, "InitialType" -> TypeSystem`Vector[
          TypeSystem`Struct[{"timestamp", "reading"}, {
            TypeSystem`Atom[String], 
            TypeSystem`Atom[Integer]}], 1], "Shape" -> 
        TypeSystem`PackageScope`HeaderShape[
          Association[{All, "timestamp"} -> 1, {All, "reading"} -> 1], 
          TypeSystem`PackageScope`Limited[
           TypeSystem`PackageScope`ColumnShape[
            TypeSystem`PackageScope`RowShape[
             Association[
             "timestamp" -> 
              TypeSystem`PackageScope`AtomShape[230.40000000000003`], 
              "reading" -> TypeSystem`PackageScope`AtomShape[34]]]], 1, {}]], 
        "InitialData" -> TypeSystem`PackageScope`CacheHandle[1905918301], 
        "Type" -> TypeSystem`Vector[
          TypeSystem`Struct[{"timestamp", "reading"}, {
            TypeSystem`Atom[String], 
            TypeSystem`Atom[Integer]}], 1], "HandleQ" -> True, "RowTarget" -> 
        20, "Data" -> TypeSystem`PackageScope`CacheHandle[1905918301]], 
      TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
      TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 1, 
      TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
      DynamicModule[{
        TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
           Style[
            Grid[{{
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"timestamp\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"timestamp\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1976317566][{All, "timestamp"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1976317566][
                  GeneralUtilities`Slice[All, "timestamp"]], "Mouse"], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"reading\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"reading\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1976317566][{All, "reading"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1976317566][
                  GeneralUtilities`Slice[All, "reading"]], "Mouse"], 
                Background -> GrayLevel[0.95], 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["Wed 31 Jul 2019 15:05:41", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1976317566][
                  GeneralUtilities`Slice[1, 
                   Key["timestamp"]]], "Mouse"], 
                ImageSize -> {{230.40000000000003`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["90"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1976317566][
                  GeneralUtilities`Slice[1, 
                   Key["reading"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}}, BaseStyle -> {ContextMenu -> {
                 MenuItem["Copy position to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Copy data to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], Delimiter, 
                 MenuItem["Paste position in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Paste data in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic]}, FontFamily -> "Verdana", 
               FontSize -> 12}, Alignment -> Left, RowMinHeight -> 1.5, 
             Dividers -> All, FrameStyle -> GrayLevel[0.85], 
             BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
            LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False,
             ShowAutoStyles -> False]], 
         TypeSystem`NestedGrid`PackagePrivate`initialQ = True, 
         TypeSystem`NestedGrid`PackagePrivate`self = $Failed}, 
        Dynamic[
         TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
         TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
            Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
            
            Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
              TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
              TypeSystem`NestedGrid`PackagePrivate`LookupCacheValue[
                TypeSystem`NestedGrid`PackagePrivate`$state$$["Data"]]}, 
             TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = 
              If[TypeSystem`NestedGrid`PackagePrivate`tmpData$ === 
                TypeSystem`NestedGrid`PackagePrivate`$NotCached, 
                TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1976317566][
                TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
               Not[
                FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
               TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
               TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
          TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
          TypeSystem`NestedGrid`PackagePrivate`$pos$$; If[
            FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
            TypeSystem`SparseGrid[
             TypeSystem`H["(data no longer present)"]], 
            If[GeneralUtilities`$DebugMode, 
             Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
               TypeSystem`NestedGrid`PackagePrivate`formatState[
               TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                TypeSystem`NestedGrid`PackagePrivate`$pos$$]}], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
         TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$pos$$}], 
        DynamicModuleValues :> {}], 
      TypeSystem`NestedGrid`PackagePrivate`$posCell$$, 
      TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
        TypeSystem`NestedGrid`PackagePrivate`alignBar[
        TypeSystem`NestedGrid`PackagePrivate`$state$$][
         TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
          TypeSystem`PackageScope`Pathbar[
          TypeSystem`NestedGrid`PackagePrivate`$path$$, 
           TypeSystem`NestedGrid`PackagePrivate`updateState[
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
            TypeSystem`NestedGrid`PackagePrivate`$path$$, 
            TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1976317566]]]], 
        TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
      TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Framed[
        Dynamic[
         Replace[
          MouseAnnotation[Null], {
          TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1976317566][Null] -> 
           "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1976317566][
             Pattern[TypeSystem`NestedGrid`PackagePrivate`path, 
              Blank[]]] :> (
            TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
             TypeSystem`NestedGrid`PackagePrivate`path; 
            TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
             TypeSystem`NestedGrid`PackagePrivate`path, 
              TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
           Spacer[10], Blank[] :> Spacer[10]}], TrackedSymbols :> {}], 
        FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
        Top, ImageSize -> {Automatic, 14}]}, 
     DynamicBox[
      ToBoxes[
       Column[
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, {
          TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
          TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`alignBar[
           TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}, {
         TypeSystem`NestedGrid`PackagePrivate`$topBar$$, 
          TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
          TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`alignBar[
           TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}], Spacings -> 
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, 
          0, {{}, {0, 0.05, 0}}]], StandardForm], 
      ImageSizeCache -> {310., {37.5, 44.5}}, 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     BaseStyle -> {LineBreakWithin -> False}, Deinitialization :> 
     TypeSystem`NestedGrid`PackagePrivate`deleteState[
      TypeSystem`NestedGrid`PackagePrivate`$state$$], 
     DynamicModuleValues :> {}, Initialization :> 
     Block[{$ContextPath = $ContextPath}, 
       Needs["TypeSystem`"]]], Deploy, DefaultBaseStyle -> "Deploy"]},
  "CopyTag",
  DisplayFunction->(#& ),
  InterpretationFunction->("Dataset[<>]"& )]], "Output",
 CellChangeTimes->{{3.7734870150960383`*^9, 3.7734870398300753`*^9}, {
   3.7734870956551476`*^9, 3.7734871746781883`*^9}, {3.7734872392772264`*^9, 
   3.7734872746922083`*^9}, 3.773487379535325*^9, 3.7734874990203285`*^9, {
   3.773487556813294*^9, 3.7734875679434366`*^9}, 3.773487718245037*^9, 
   3.77348803371109*^9, 3.773488225139263*^9, 3.773488474227434*^9, 
   3.7734892983368626`*^9, 3.773491368604396*^9, 3.773491628572562*^9, 
   3.7734916635585933`*^9, 3.7735021225634794`*^9, 3.7735886127977376`*^9, 
   3.7735887420357385`*^9},
 CellLabel->
  "Out[409]=",ExpressionUUID->"9bca580f-1e50-4e8e-a06d-da0bab966586"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"CloudObject", "[", 
   TemplateBox[{
    "\"https://www.wolframcloud.com/obj/mitch/data/gaugeReadingDS\"",
     "https://www.wolframcloud.com/obj/mitch/data/gaugeReadingDS"},
    "HyperlinkURL"], "]"}],
  CloudObject["https://www.wolframcloud.com/obj/mitch/data/gaugeReadingDS"],
  SelectWithContents->True]], "Output",
 CellChangeTimes->{{3.7734870150960383`*^9, 3.7734870398300753`*^9}, {
   3.7734870956551476`*^9, 3.7734871746781883`*^9}, {3.7734872392772264`*^9, 
   3.7734872746922083`*^9}, 3.773487379535325*^9, 3.7734874990203285`*^9, {
   3.773487556813294*^9, 3.7734875679434366`*^9}, 3.773487718245037*^9, 
   3.77348803371109*^9, 3.773488225139263*^9, 3.773488474227434*^9, 
   3.7734892983368626`*^9, 3.773491368604396*^9, 3.773491628572562*^9, 
   3.7734916635585933`*^9, 3.7735021225634794`*^9, 3.7735886127977376`*^9, 
   3.773588742264776*^9},
 CellLabel->
  "Out[410]=",ExpressionUUID->"0bd257fa-0075-42e5-a562-5fda8e4bbddb"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"ClearAll", "[", "gaugeReadingDS", "]"}], "\[IndentingNewLine]", 
 RowBox[{"gaugeReadingDS", "=", 
  RowBox[{
   RowBox[{"Dataset", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Normal", "[", " ", 
         RowBox[{"CloudGet", "[", "\"\<data/gaugeReadingDS\>\"", "]"}], " ", 
         "]"}], ",", "\[IndentingNewLine]", 
        RowBox[{"<|", 
         RowBox[{
          RowBox[{"\"\<timestamp\>\"", "\[Rule]", 
           RowBox[{"DateString", "[", 
            RowBox[{"DateObject", "[", "]"}], "]"}]}], ",", 
          RowBox[{"\"\<reading\>\"", "\[Rule]", 
           RowBox[{"RandomInteger", "[", 
            RowBox[{"{", 
             RowBox[{"0", ",", "100"}], "}"}], "]"}]}]}], "|>"}]}], 
       "\[IndentingNewLine]", "}"}], "//", "Flatten"}], "//", "Join"}], "]"}],
    "[", 
   RowBox[{"ReverseSortBy", "[", 
    RowBox[{"#timestamp", "&"}], "]"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"CloudPut", "[", 
  RowBox[{"gaugeReadingDS", ",", 
   RowBox[{"CloudObject", "[", 
    RowBox[{"\"\<data/gaugeReadingDS\>\"", ",", 
     RowBox[{"Permissions", "\[Rule]", "\"\<Public\>\""}]}], "]"}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.7735028953717175`*^9, 3.773502897995711*^9}, {
  3.7735887811437593`*^9, 3.773588782810775*^9}, {3.7735889043857393`*^9, 
  3.773588907093739*^9}},
 CellLabel->
  "In[414]:=",ExpressionUUID->"ac391587-568f-4eb6-9ee1-399f76a2fcc1"],

Cell[BoxData[
 TemplateBox[{TagBox[
    DynamicModuleBox[{
     TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
      Data`UnorderedAssociation[
       "RowCount" -> 3, "Length" -> 3, "InitialType" -> TypeSystem`Vector[
          TypeSystem`Struct[{"timestamp", "reading"}, {
            TypeSystem`Atom[String], 
            TypeSystem`Atom[Integer]}], 3], "Shape" -> 
        TypeSystem`PackageScope`HeaderShape[
          Association[{All, "timestamp"} -> 1, {All, "reading"} -> 1], 
          TypeSystem`PackageScope`Limited[
           TypeSystem`PackageScope`ColumnShape[
            TypeSystem`PackageScope`RowShape[
             Association[
             "timestamp" -> 
              TypeSystem`PackageScope`AtomShape[230.40000000000003`], 
              "reading" -> TypeSystem`PackageScope`AtomShape[34]]]], 3, {}]], 
        "InitialData" -> TypeSystem`PackageScope`CacheHandle[156809869], 
        "Type" -> TypeSystem`Vector[
          TypeSystem`Struct[{"timestamp", "reading"}, {
            TypeSystem`Atom[String], 
            TypeSystem`Atom[Integer]}], 3], "HandleQ" -> True, "RowTarget" -> 
        20, "Data" -> TypeSystem`PackageScope`CacheHandle[156809869]], 
      TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
      TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 1, 
      TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
      DynamicModule[{
        TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
           Style[
            Grid[{{
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"timestamp\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"timestamp\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 76428710][{
                    All, "timestamp"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[76428710][
                  GeneralUtilities`Slice[All, "timestamp"]], "Mouse"], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"reading\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"reading\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 76428710][{
                    All, "reading"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[76428710][
                  GeneralUtilities`Slice[All, "reading"]], "Mouse"], 
                Background -> GrayLevel[0.95], 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["Wed 31 Jul 2019 15:08:27", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[76428710][
                  GeneralUtilities`Slice[1, 
                   Key["timestamp"]]], "Mouse"], 
                ImageSize -> {{230.40000000000003`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["51"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[76428710][
                  GeneralUtilities`Slice[1, 
                   Key["reading"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["Wed 31 Jul 2019 15:08:05", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[76428710][
                  GeneralUtilities`Slice[2, 
                   Key["timestamp"]]], "Mouse"], 
                ImageSize -> {{230.40000000000003`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["5"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[76428710][
                  GeneralUtilities`Slice[2, 
                   Key["reading"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["Wed 31 Jul 2019 15:05:41", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[76428710][
                  GeneralUtilities`Slice[3, 
                   Key["timestamp"]]], "Mouse"], 
                ImageSize -> {{230.40000000000003`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["90"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[76428710][
                  GeneralUtilities`Slice[3, 
                   Key["reading"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}}, BaseStyle -> {ContextMenu -> {
                 MenuItem["Copy position to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Copy data to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], Delimiter, 
                 MenuItem["Paste position in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Paste data in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic]}, FontFamily -> "Verdana", 
               FontSize -> 12}, Alignment -> Left, RowMinHeight -> 1.5, 
             Dividers -> All, FrameStyle -> GrayLevel[0.85], 
             BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
            LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False,
             ShowAutoStyles -> False]], 
         TypeSystem`NestedGrid`PackagePrivate`initialQ = True, 
         TypeSystem`NestedGrid`PackagePrivate`self = $Failed}, 
        Dynamic[
         TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
         TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
            Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
            
            Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
              TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
              TypeSystem`NestedGrid`PackagePrivate`LookupCacheValue[
                TypeSystem`NestedGrid`PackagePrivate`$state$$["Data"]]}, 
             TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = 
              If[TypeSystem`NestedGrid`PackagePrivate`tmpData$ === 
                TypeSystem`NestedGrid`PackagePrivate`$NotCached, 
                TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$grid$$, 76428710][
                TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
               Not[
                FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
               TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
               TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
          TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
          TypeSystem`NestedGrid`PackagePrivate`$pos$$; If[
            FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
            TypeSystem`SparseGrid[
             TypeSystem`H["(data no longer present)"]], 
            If[GeneralUtilities`$DebugMode, 
             Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
               TypeSystem`NestedGrid`PackagePrivate`formatState[
               TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                TypeSystem`NestedGrid`PackagePrivate`$pos$$]}], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
         TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$pos$$}], 
        DynamicModuleValues :> {}], 
      TypeSystem`NestedGrid`PackagePrivate`$posCell$$, 
      TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
        TypeSystem`NestedGrid`PackagePrivate`alignBar[
        TypeSystem`NestedGrid`PackagePrivate`$state$$][
         TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
          TypeSystem`PackageScope`Pathbar[
          TypeSystem`NestedGrid`PackagePrivate`$path$$, 
           TypeSystem`NestedGrid`PackagePrivate`updateState[
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
            TypeSystem`NestedGrid`PackagePrivate`$path$$, 
            TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$grid$$, 76428710]]]], 
        TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
      TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Framed[
        Dynamic[
         Replace[
          MouseAnnotation[Null], {
          TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[76428710][Null] -> 
           "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[76428710][
             Pattern[TypeSystem`NestedGrid`PackagePrivate`path, 
              Blank[]]] :> (
            TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
             TypeSystem`NestedGrid`PackagePrivate`path; 
            TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
             TypeSystem`NestedGrid`PackagePrivate`path, 
              TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
           Spacer[10], Blank[] :> Spacer[10]}], TrackedSymbols :> {}], 
        FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
        Top, ImageSize -> {Automatic, 14}]}, 
     DynamicBox[
      ToBoxes[
       Column[
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, {
          TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
          TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`alignBar[
           TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}, {
         TypeSystem`NestedGrid`PackagePrivate`$topBar$$, 
          TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
          TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`alignBar[
           TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}], Spacings -> 
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, 
          0, {{}, {0, 0.05, 0}}]], StandardForm], 
      ImageSizeCache -> {310., {67.5, 74.5}}, 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     BaseStyle -> {LineBreakWithin -> False}, Deinitialization :> 
     TypeSystem`NestedGrid`PackagePrivate`deleteState[
      TypeSystem`NestedGrid`PackagePrivate`$state$$], 
     DynamicModuleValues :> {}, Initialization :> 
     Block[{$ContextPath = $ContextPath}, 
       Needs["TypeSystem`"]]], Deploy, DefaultBaseStyle -> "Deploy"]},
  "CopyTag",
  DisplayFunction->(#& ),
  InterpretationFunction->("Dataset[<>]"& )]], "Output",
 CellChangeTimes->{3.7735889079697437`*^9},
 CellLabel->
  "Out[415]=",ExpressionUUID->"1bab632b-7749-4440-a7a3-3c9a0475d62d"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"CloudObject", "[", 
   TemplateBox[{
    "\"https://www.wolframcloud.com/obj/mitch/data/gaugeReadingDS\"",
     "https://www.wolframcloud.com/obj/mitch/data/gaugeReadingDS"},
    "HyperlinkURL"], "]"}],
  CloudObject["https://www.wolframcloud.com/obj/mitch/data/gaugeReadingDS"],
  SelectWithContents->True]], "Output",
 CellChangeTimes->{3.7735889081007385`*^9},
 CellLabel->
  "Out[416]=",ExpressionUUID->"227d9c19-646c-4107-9246-f234a3ce090d"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{"ClearAll", "[", "updateGaugeReadingDS", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"updateGaugeReadingDS", ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"ts", ",", "r", ",", "assoc"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"ts", "=", 
       RowBox[{"DateString", "[", 
        RowBox[{"DateObject", "[", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"r", "=", 
       RowBox[{"RandomInteger", "[", 
        RowBox[{"{", 
         RowBox[{"0", ",", "100"}], "}"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"assoc", "=", 
       RowBox[{"<|", 
        RowBox[{
         RowBox[{"\"\<timestamp\>\"", "\[Rule]", "ts"}], ",", 
         RowBox[{"\"\<reading\>\"", "\[Rule]", "r"}]}], "|>"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"CloudPut", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"Dataset", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"{", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"Normal", "[", 
               RowBox[{"CloudGet", "[", "\"\<data/gaugeReadingDS\>\"", "]"}], 
               "]"}], ",", "\[IndentingNewLine]", "assoc"}], 
             "\[IndentingNewLine]", "}"}], "//", "Flatten"}], "//", "Join"}], 
          "]"}], "[", 
         RowBox[{"ReverseSortBy", "[", 
          RowBox[{"#timestamp", "&"}], "]"}], "]"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"CloudObject", "[", 
         RowBox[{"\"\<data/gaugeReadingDS\>\"", ",", 
          RowBox[{"Permissions", "\[Rule]", "\"\<Public\>\""}]}], "]"}]}], 
       "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", "assoc"}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.7735028637636614`*^9, 3.773502874473687*^9}, {
   3.7735029046387167`*^9, 3.7735029514479456`*^9}, {3.7735030801829433`*^9, 
   3.773503082691267*^9}, 3.773503138647298*^9, {3.7735032186522665`*^9, 
   3.7735033242742696`*^9}, {3.7735033922942896`*^9, 3.7735034096352673`*^9}},
 Background->RGBColor[0.88, 1, 0.88],
 CellLabel->
  "In[417]:=",ExpressionUUID->"01832964-36c6-4494-a3a7-219fb1aec6af"],

Cell[CellGroupData[{

Cell[BoxData[{"updateGaugeReadingDS", "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"CloudGet", "[", "\"\<data/gaugeReadingDS\>\"", "]"}], "[", 
  RowBox[{";;", "5"}], "]"}]}], "Input",
 CellChangeTimes->{{3.7735031167072797`*^9, 3.7735031695323*^9}, {
  3.7735033428472953`*^9, 3.7735033453103037`*^9}, {3.773503395822268*^9, 
  3.773503412980301*^9}, {3.773589065381026*^9, 3.7735890659120493`*^9}, {
  3.773589134035179*^9, 
  3.77358913421522*^9}},ExpressionUUID->"6255b2a2-c04f-49c3-b64f-\
cce903dabdc4"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"timestamp\"\>", 
    "\[Rule]", "\<\"Wed 31 Jul 2019 15:11:11\"\>"}], ",", 
   RowBox[{"\<\"reading\"\>", "\[Rule]", "63"}]}], 
  "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{{3.773503119839295*^9, 3.773503174663272*^9}, {
   3.773503327373268*^9, 3.7735033507013035`*^9}, {3.773503399537267*^9, 
   3.773503420727273*^9}, {3.773588950603917*^9, 3.773588967411971*^9}, 
   3.773589071838023*^9},
 CellLabel->
  "Out[425]=",ExpressionUUID->"afd5d9a6-5571-4c2e-99aa-2905093b2351"],

Cell[BoxData[
 TemplateBox[{TagBox[
    DynamicModuleBox[{
     TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
      Data`UnorderedAssociation[
       "RowCount" -> 5, "Length" -> 5, "InitialType" -> TypeSystem`Vector[
          TypeSystem`Struct[{"timestamp", "reading"}, {
            TypeSystem`Atom[String], 
            TypeSystem`Atom[Integer]}], 5], "Shape" -> 
        TypeSystem`PackageScope`HeaderShape[
          Association[{All, "timestamp"} -> 1, {All, "reading"} -> 1], 
          TypeSystem`PackageScope`Limited[
           TypeSystem`PackageScope`ColumnShape[
            TypeSystem`PackageScope`RowShape[
             Association[
             "timestamp" -> 
              TypeSystem`PackageScope`AtomShape[230.40000000000003`], 
              "reading" -> TypeSystem`PackageScope`AtomShape[34]]]], 5, {}]], 
        "InitialData" -> TypeSystem`PackageScope`CacheHandle[202193129], 
        "Type" -> TypeSystem`Vector[
          TypeSystem`Struct[{"timestamp", "reading"}, {
            TypeSystem`Atom[String], 
            TypeSystem`Atom[Integer]}], 5], "HandleQ" -> True, "RowTarget" -> 
        20, "Data" -> TypeSystem`PackageScope`CacheHandle[202193129]], 
      TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
      TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 1, 
      TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
      DynamicModule[{
        TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
           Style[
            Grid[{{
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"timestamp\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"timestamp\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1420333634][{All, "timestamp"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1420333634][
                  GeneralUtilities`Slice[All, "timestamp"]], "Mouse"], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"reading\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"reading\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1420333634][{All, "reading"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1420333634][
                  GeneralUtilities`Slice[All, "reading"]], "Mouse"], 
                Background -> GrayLevel[0.95], 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["Wed 31 Jul 2019 15:11:11", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1420333634][
                  GeneralUtilities`Slice[1, 
                   Key["timestamp"]]], "Mouse"], 
                ImageSize -> {{230.40000000000003`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["63"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1420333634][
                  GeneralUtilities`Slice[1, 
                   Key["reading"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["Wed 31 Jul 2019 15:09:27", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1420333634][
                  GeneralUtilities`Slice[2, 
                   Key["timestamp"]]], "Mouse"], 
                ImageSize -> {{230.40000000000003`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["46"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1420333634][
                  GeneralUtilities`Slice[2, 
                   Key["reading"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["Wed 31 Jul 2019 15:09:24", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1420333634][
                  GeneralUtilities`Slice[3, 
                   Key["timestamp"]]], "Mouse"], 
                ImageSize -> {{230.40000000000003`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["55"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1420333634][
                  GeneralUtilities`Slice[3, 
                   Key["reading"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["Wed 31 Jul 2019 15:09:09", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1420333634][
                  GeneralUtilities`Slice[4, 
                   Key["timestamp"]]], "Mouse"], 
                ImageSize -> {{230.40000000000003`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["49"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1420333634][
                  GeneralUtilities`Slice[4, 
                   Key["reading"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["Wed 31 Jul 2019 15:08:27", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1420333634][
                  GeneralUtilities`Slice[5, 
                   Key["timestamp"]]], "Mouse"], 
                ImageSize -> {{230.40000000000003`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["51"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1420333634][
                  GeneralUtilities`Slice[5, 
                   Key["reading"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}}, BaseStyle -> {ContextMenu -> {
                 MenuItem["Copy position to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Copy data to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], Delimiter, 
                 MenuItem["Paste position in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Paste data in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic]}, FontFamily -> "Verdana", 
               FontSize -> 12}, Alignment -> Left, RowMinHeight -> 1.5, 
             Dividers -> All, FrameStyle -> GrayLevel[0.85], 
             BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
            LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False,
             ShowAutoStyles -> False]], 
         TypeSystem`NestedGrid`PackagePrivate`initialQ = True, 
         TypeSystem`NestedGrid`PackagePrivate`self = $Failed}, 
        Dynamic[
         TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
         TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
            Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
            
            Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
              TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
              TypeSystem`NestedGrid`PackagePrivate`LookupCacheValue[
                TypeSystem`NestedGrid`PackagePrivate`$state$$["Data"]]}, 
             TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = 
              If[TypeSystem`NestedGrid`PackagePrivate`tmpData$ === 
                TypeSystem`NestedGrid`PackagePrivate`$NotCached, 
                TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1420333634][
                TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
               Not[
                FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
               TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
               TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
          TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
          TypeSystem`NestedGrid`PackagePrivate`$pos$$; If[
            FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
            TypeSystem`SparseGrid[
             TypeSystem`H["(data no longer present)"]], 
            If[GeneralUtilities`$DebugMode, 
             Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
               TypeSystem`NestedGrid`PackagePrivate`formatState[
               TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                TypeSystem`NestedGrid`PackagePrivate`$pos$$]}], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
         TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$pos$$}], 
        DynamicModuleValues :> {}], 
      TypeSystem`NestedGrid`PackagePrivate`$posCell$$, 
      TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
        TypeSystem`NestedGrid`PackagePrivate`alignBar[
        TypeSystem`NestedGrid`PackagePrivate`$state$$][
         TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
          TypeSystem`PackageScope`Pathbar[
          TypeSystem`NestedGrid`PackagePrivate`$path$$, 
           TypeSystem`NestedGrid`PackagePrivate`updateState[
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
            TypeSystem`NestedGrid`PackagePrivate`$path$$, 
            TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1420333634]]]], 
        TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
      TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Framed[
        Dynamic[
         Replace[
          MouseAnnotation[Null], {
          TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1420333634][Null] -> 
           "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1420333634][
             Pattern[TypeSystem`NestedGrid`PackagePrivate`path, 
              Blank[]]] :> (
            TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
             TypeSystem`NestedGrid`PackagePrivate`path; 
            TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
             TypeSystem`NestedGrid`PackagePrivate`path, 
              TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
           Spacer[10], Blank[] :> Spacer[10]}], TrackedSymbols :> {}], 
        FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
        Top, ImageSize -> {Automatic, 14}]}, 
     DynamicBox[
      ToBoxes[
       Column[
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, {
          TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
          TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`alignBar[
           TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}, {
         TypeSystem`NestedGrid`PackagePrivate`$topBar$$, 
          TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
          TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`alignBar[
           TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}], Spacings -> 
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, 
          0, {{}, {0, 0.05, 0}}]], StandardForm], 
      ImageSizeCache -> {310., {97.5, 104.5}}, 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     BaseStyle -> {LineBreakWithin -> False}, Deinitialization :> 
     TypeSystem`NestedGrid`PackagePrivate`deleteState[
      TypeSystem`NestedGrid`PackagePrivate`$state$$], 
     DynamicModuleValues :> {}, Initialization :> 
     Block[{$ContextPath = $ContextPath}, 
       Needs["TypeSystem`"]]], Deploy, DefaultBaseStyle -> "Deploy"]},
  "CopyTag",
  DisplayFunction->(#& ),
  InterpretationFunction->("Dataset[<>]"& )]], "Output",
 CellChangeTimes->{{3.773503119839295*^9, 3.773503174663272*^9}, {
   3.773503327373268*^9, 3.7735033507013035`*^9}, {3.773503399537267*^9, 
   3.773503420727273*^9}, {3.773588950603917*^9, 3.773588967411971*^9}, 
   3.773589071991064*^9},
 CellLabel->
  "Out[426]=",ExpressionUUID->"7466c6e1-27fc-4992-aa5c-665a6d723377"]
}, Open  ]],

Cell["\<\
Issues with using Dataset[ ] directly...
Mock up Grid table\
\>", "Text",
 CellChangeTimes->{{3.773504399003042*^9, 3.7735044067460756`*^9}, {
  3.77350624648907*^9, 3.7735062477290344`*^9}, {3.7735893172292356`*^9, 
  3.773589321104233*^9}},ExpressionUUID->"0f6dc9d7-c5a6-4b42-a1dd-\
c62d6bc118a1"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Transpose", "[", "\[IndentingNewLine]", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"Normal", "[", 
     RowBox[{"gaugeReadingDS", "[", 
      RowBox[{"All", ",", 
       RowBox[{"\"\<timestamp\>\"", "/*", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Style", "[", 
           RowBox[{"#", ",", 
            RowBox[{"FontFamily", "\[Rule]", "\"\<Arial\>\""}], ",", 
            RowBox[{"FontSize", "\[Rule]", "8"}], ",", "Bold"}], "]"}], "&"}],
          ")"}]}]}], "]"}], "]"}], ",", "\[IndentingNewLine]", 
    RowBox[{"Normal", "[", 
     RowBox[{"gaugeReadingDS", "[", 
      RowBox[{"All", ",", 
       RowBox[{"\"\<reading\>\"", "/*", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Style", "[", 
           RowBox[{"#", ",", 
            RowBox[{"FontFamily", "\[Rule]", "\"\<Arial\>\""}], ",", 
            RowBox[{"FontSize", "\[Rule]", "10"}], ",", "Bold"}], "]"}], 
          "&"}], ")"}]}]}], "]"}], "]"}]}], "}"}], "\[IndentingNewLine]", 
  "]"}]], "Input",
 CellChangeTimes->{{3.773509579639466*^9, 3.773509708698758*^9}, {
  3.773589080391061*^9, 3.773589081368063*^9}},
 CellLabel->
  "In[427]:=",ExpressionUUID->"468c70cb-2177-4d74-86ff-ace278bdb760"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     StyleBox["\<\"Wed 31 Jul 2019 15:11:11\"\>",
      StripOnInput->False,
      FontFamily->"Arial",
      FontSize->8,
      FontWeight->Bold], ",", 
     StyleBox["63",
      StripOnInput->False,
      FontFamily->"Arial",
      FontSize->10,
      FontWeight->Bold]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     StyleBox["\<\"Wed 31 Jul 2019 15:09:27\"\>",
      StripOnInput->False,
      FontFamily->"Arial",
      FontSize->8,
      FontWeight->Bold], ",", 
     StyleBox["46",
      StripOnInput->False,
      FontFamily->"Arial",
      FontSize->10,
      FontWeight->Bold]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     StyleBox["\<\"Wed 31 Jul 2019 15:09:24\"\>",
      StripOnInput->False,
      FontFamily->"Arial",
      FontSize->8,
      FontWeight->Bold], ",", 
     StyleBox["55",
      StripOnInput->False,
      FontFamily->"Arial",
      FontSize->10,
      FontWeight->Bold]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     StyleBox["\<\"Wed 31 Jul 2019 15:09:09\"\>",
      StripOnInput->False,
      FontFamily->"Arial",
      FontSize->8,
      FontWeight->Bold], ",", 
     StyleBox["49",
      StripOnInput->False,
      FontFamily->"Arial",
      FontSize->10,
      FontWeight->Bold]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     StyleBox["\<\"Wed 31 Jul 2019 15:08:27\"\>",
      StripOnInput->False,
      FontFamily->"Arial",
      FontSize->8,
      FontWeight->Bold], ",", 
     StyleBox["51",
      StripOnInput->False,
      FontFamily->"Arial",
      FontSize->10,
      FontWeight->Bold]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.7735095605224333`*^9, 3.7735096976077614`*^9}, 
   3.7735890837060604`*^9},
 CellLabel->
  "Out[427]=",ExpressionUUID->"27dae30b-7688-412b-a23b-d6598bde61b1"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"ClearAll", "[", 
  RowBox[{"gaugeReadingDS", ",", "rows"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"rows", "=", "5"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"gaugeReadingDS", "=", 
  RowBox[{
   RowBox[{"CloudGet", "[", "\"\<data/gaugeReadingDS\>\"", "]"}], "[", 
   RowBox[{";;", "rows"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"Grid", "[", 
  RowBox[{
   RowBox[{"Join", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"Style", "[", 
         RowBox[{"#", ",", 
          RowBox[{"FontFamily", "\[Rule]", "\"\<Alegreya SC\>\""}], ",", 
          RowBox[{"FontSize", "\[Rule]", "14"}], ",", "Bold"}], "]"}], "&"}], 
       "/@", 
       RowBox[{"{", 
        RowBox[{"\"\<Timestamp\>\"", ",", "\"\<Reading\>\""}], "}"}]}], "}"}],
      ",", "\[IndentingNewLine]", 
     RowBox[{"Transpose", "[", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Normal", "[", 
         RowBox[{"gaugeReadingDS", "[", 
          RowBox[{"All", ",", 
           RowBox[{"\"\<timestamp\>\"", "/*", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"Style", "[", 
               RowBox[{"#", ",", 
                RowBox[{"FontFamily", "\[Rule]", "\"\<Arial\>\""}], ",", 
                RowBox[{"FontSize", "\[Rule]", "8"}], ",", "Bold"}], "]"}], 
              "&"}], ")"}]}]}], "]"}], "]"}], ",", "\[IndentingNewLine]", 
        RowBox[{"Normal", "[", 
         RowBox[{"gaugeReadingDS", "[", 
          RowBox[{"All", ",", 
           RowBox[{"\"\<reading\>\"", "/*", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"Style", "[", 
               RowBox[{"#", ",", 
                RowBox[{"FontFamily", "\[Rule]", "\"\<Arial\>\""}], ",", 
                RowBox[{"FontSize", "\[Rule]", "10"}], ",", "Bold"}], "]"}], 
              "&"}], ")"}]}]}], "]"}], "]"}]}], "}"}], "\[IndentingNewLine]", 
      "]"}]}], "\[IndentingNewLine]", "]"}], ",", 
   RowBox[{"Background", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"None", ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"1", "\[Rule]", "LightBlue"}], ",", 
        RowBox[{"3", "\[Rule]", 
         RowBox[{"Lighter", "[", "LightGray", "]"}]}], ",", 
        RowBox[{"5", "\[Rule]", 
         RowBox[{"Lighter", "[", "LightGray", "]"}]}]}], "}"}]}], "}"}]}], 
   ",", 
   RowBox[{"Frame", "\[Rule]", "All"}], ",", 
   RowBox[{"FrameStyle", "\[Rule]", 
    RowBox[{"Directive", "[", "LightGray", "]"}]}], ",", 
   RowBox[{"Spacings", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"1", ",", "1", ",", "1"}], "}"}], ",", 
      RowBox[{"Table", "[", 
       RowBox[{".5", ",", 
        RowBox[{"{", 
         RowBox[{"(", 
          RowBox[{"rows", "+", "2"}], ")"}], "}"}]}], "]"}]}], "}"}]}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.773509183965872*^9, 3.773509192099906*^9}, {
   3.7735092462753716`*^9, 3.7735094027226877`*^9}, {3.7735094438502426`*^9, 
   3.7735095274034576`*^9}, 3.7735097143737946`*^9, {3.7735097556467896`*^9, 
   3.773509779036637*^9}, {3.773589089069024*^9, 3.7735891727482166`*^9}, {
   3.773589210425232*^9, 3.7735892842232513`*^9}},
 CellLabel->
  "In[449]:=",ExpressionUUID->"c37a7d2f-d791-4fc6-bebf-ed3dc6b774f9"],

Cell[BoxData[
 TemplateBox[{TagBox[
    DynamicModuleBox[{
     TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
      Data`UnorderedAssociation[
       "RowCount" -> 5, "Length" -> 5, "InitialType" -> TypeSystem`Vector[
          TypeSystem`Struct[{"timestamp", "reading"}, {
            TypeSystem`Atom[String], 
            TypeSystem`Atom[Integer]}], 5], "Shape" -> 
        TypeSystem`PackageScope`HeaderShape[
          Association[{All, "timestamp"} -> 1, {All, "reading"} -> 1], 
          TypeSystem`PackageScope`Limited[
           TypeSystem`PackageScope`ColumnShape[
            TypeSystem`PackageScope`RowShape[
             Association[
             "timestamp" -> 
              TypeSystem`PackageScope`AtomShape[230.40000000000003`], 
              "reading" -> TypeSystem`PackageScope`AtomShape[34]]]], 5, {}]], 
        "InitialData" -> TypeSystem`PackageScope`CacheHandle[199845529], 
        "Type" -> TypeSystem`Vector[
          TypeSystem`Struct[{"timestamp", "reading"}, {
            TypeSystem`Atom[String], 
            TypeSystem`Atom[Integer]}], 5], "HandleQ" -> True, "RowTarget" -> 
        20, "Data" -> TypeSystem`PackageScope`CacheHandle[199845529]], 
      TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
      TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 1, 
      TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
      DynamicModule[{
        TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
           Style[
            Grid[{{
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"timestamp\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"timestamp\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1333849009][{All, "timestamp"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1333849009][
                  GeneralUtilities`Slice[All, "timestamp"]], "Mouse"], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"reading\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"reading\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1333849009][{All, "reading"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1333849009][
                  GeneralUtilities`Slice[All, "reading"]], "Mouse"], 
                Background -> GrayLevel[0.95], 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["Wed 31 Jul 2019 15:11:11", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1333849009][
                  GeneralUtilities`Slice[1, 
                   Key["timestamp"]]], "Mouse"], 
                ImageSize -> {{230.40000000000003`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["63"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1333849009][
                  GeneralUtilities`Slice[1, 
                   Key["reading"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["Wed 31 Jul 2019 15:09:27", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1333849009][
                  GeneralUtilities`Slice[2, 
                   Key["timestamp"]]], "Mouse"], 
                ImageSize -> {{230.40000000000003`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["46"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1333849009][
                  GeneralUtilities`Slice[2, 
                   Key["reading"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["Wed 31 Jul 2019 15:09:24", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1333849009][
                  GeneralUtilities`Slice[3, 
                   Key["timestamp"]]], "Mouse"], 
                ImageSize -> {{230.40000000000003`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["55"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1333849009][
                  GeneralUtilities`Slice[3, 
                   Key["reading"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["Wed 31 Jul 2019 15:09:09", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1333849009][
                  GeneralUtilities`Slice[4, 
                   Key["timestamp"]]], "Mouse"], 
                ImageSize -> {{230.40000000000003`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["49"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1333849009][
                  GeneralUtilities`Slice[4, 
                   Key["reading"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["Wed 31 Jul 2019 15:08:27", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1333849009][
                  GeneralUtilities`Slice[5, 
                   Key["timestamp"]]], "Mouse"], 
                ImageSize -> {{230.40000000000003`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["51"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1333849009][
                  GeneralUtilities`Slice[5, 
                   Key["reading"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}}, BaseStyle -> {ContextMenu -> {
                 MenuItem["Copy position to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Copy data to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], Delimiter, 
                 MenuItem["Paste position in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Paste data in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic]}, FontFamily -> "Verdana", 
               FontSize -> 12}, Alignment -> Left, RowMinHeight -> 1.5, 
             Dividers -> All, FrameStyle -> GrayLevel[0.85], 
             BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
            LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False,
             ShowAutoStyles -> False]], 
         TypeSystem`NestedGrid`PackagePrivate`initialQ = True, 
         TypeSystem`NestedGrid`PackagePrivate`self = $Failed}, 
        Dynamic[
         TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
         TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
            Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
            
            Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
              TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
              TypeSystem`NestedGrid`PackagePrivate`LookupCacheValue[
                TypeSystem`NestedGrid`PackagePrivate`$state$$["Data"]]}, 
             TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = 
              If[TypeSystem`NestedGrid`PackagePrivate`tmpData$ === 
                TypeSystem`NestedGrid`PackagePrivate`$NotCached, 
                TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1333849009][
                TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
               Not[
                FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
               TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
               TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
          TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
          TypeSystem`NestedGrid`PackagePrivate`$pos$$; If[
            FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
            TypeSystem`SparseGrid[
             TypeSystem`H["(data no longer present)"]], 
            If[GeneralUtilities`$DebugMode, 
             Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
               TypeSystem`NestedGrid`PackagePrivate`formatState[
               TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                TypeSystem`NestedGrid`PackagePrivate`$pos$$]}], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
         TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$pos$$}], 
        DynamicModuleValues :> {}], 
      TypeSystem`NestedGrid`PackagePrivate`$posCell$$, 
      TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
        TypeSystem`NestedGrid`PackagePrivate`alignBar[
        TypeSystem`NestedGrid`PackagePrivate`$state$$][
         TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
          TypeSystem`PackageScope`Pathbar[
          TypeSystem`NestedGrid`PackagePrivate`$path$$, 
           TypeSystem`NestedGrid`PackagePrivate`updateState[
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
            TypeSystem`NestedGrid`PackagePrivate`$path$$, 
            TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1333849009]]]], 
        TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
      TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Framed[
        Dynamic[
         Replace[
          MouseAnnotation[Null], {
          TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1333849009][Null] -> 
           "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1333849009][
             Pattern[TypeSystem`NestedGrid`PackagePrivate`path, 
              Blank[]]] :> (
            TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
             TypeSystem`NestedGrid`PackagePrivate`path; 
            TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
             TypeSystem`NestedGrid`PackagePrivate`path, 
              TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
           Spacer[10], Blank[] :> Spacer[10]}], TrackedSymbols :> {}], 
        FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
        Top, ImageSize -> {Automatic, 14}]}, 
     DynamicBox[
      ToBoxes[
       Column[
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, {
          TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
          TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`alignBar[
           TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}, {
         TypeSystem`NestedGrid`PackagePrivate`$topBar$$, 
          TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
          TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`alignBar[
           TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}], Spacings -> 
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, 
          0, {{}, {0, 0.05, 0}}]], StandardForm], 
      ImageSizeCache -> {310., {97.5, 104.5}}, 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     BaseStyle -> {LineBreakWithin -> False}, Deinitialization :> 
     TypeSystem`NestedGrid`PackagePrivate`deleteState[
      TypeSystem`NestedGrid`PackagePrivate`$state$$], 
     DynamicModuleValues :> {}, Initialization :> 
     Block[{$ContextPath = $ContextPath}, 
       Needs["TypeSystem`"]]], Deploy, DefaultBaseStyle -> "Deploy"]},
  "CopyTag",
  DisplayFunction->(#& ),
  InterpretationFunction->("Dataset[<>]"& )]], "Output",
 CellChangeTimes->{{3.7735093265113544`*^9, 3.7735094033080797`*^9}, {
   3.773509499481288*^9, 3.7735095283344355`*^9}, 3.773509716438759*^9, {
   3.7735097576577587`*^9, 3.773509779541628*^9}, 3.77358909462906*^9, 
   3.7735891742202153`*^9, {3.7735892260712695`*^9, 3.7735892869092665`*^9}},
 CellLabel->
  "Out[451]=",ExpressionUUID->"20116473-05a0-4b27-9b03-b1621538fb98"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     StyleBox["\<\"Timestamp\"\>",
      StripOnInput->False,
      FontFamily->"Alegreya SC",
      FontSize->14,
      FontWeight->Bold], 
     StyleBox["\<\"Reading\"\>",
      StripOnInput->False,
      FontFamily->"Alegreya SC",
      FontSize->14,
      FontWeight->Bold]},
    {
     StyleBox["\<\"Wed 31 Jul 2019 15:11:11\"\>",
      StripOnInput->False,
      FontFamily->"Arial",
      FontSize->8,
      FontWeight->Bold], 
     StyleBox["63",
      StripOnInput->False,
      FontFamily->"Arial",
      FontSize->10,
      FontWeight->Bold]},
    {
     StyleBox["\<\"Wed 31 Jul 2019 15:09:27\"\>",
      StripOnInput->False,
      FontFamily->"Arial",
      FontSize->8,
      FontWeight->Bold], 
     StyleBox["46",
      StripOnInput->False,
      FontFamily->"Arial",
      FontSize->10,
      FontWeight->Bold]},
    {
     StyleBox["\<\"Wed 31 Jul 2019 15:09:24\"\>",
      StripOnInput->False,
      FontFamily->"Arial",
      FontSize->8,
      FontWeight->Bold], 
     StyleBox["55",
      StripOnInput->False,
      FontFamily->"Arial",
      FontSize->10,
      FontWeight->Bold]},
    {
     StyleBox["\<\"Wed 31 Jul 2019 15:09:09\"\>",
      StripOnInput->False,
      FontFamily->"Arial",
      FontSize->8,
      FontWeight->Bold], 
     StyleBox["49",
      StripOnInput->False,
      FontFamily->"Arial",
      FontSize->10,
      FontWeight->Bold]},
    {
     StyleBox["\<\"Wed 31 Jul 2019 15:08:27\"\>",
      StripOnInput->False,
      FontFamily->"Arial",
      FontSize->8,
      FontWeight->Bold], 
     StyleBox["51",
      StripOnInput->False,
      FontFamily->"Arial",
      FontSize->10,
      FontWeight->Bold]}
   },
   AutoDelete->False,
   FrameStyle->Directive[
     GrayLevel[0.85]],
   GridBoxBackground->{
    "Columns" -> {{None}}, 
     "RowsIndexed" -> {
      1 -> RGBColor[0.87, 0.94, 1], 3 -> RGBColor[0.9, 0.9, 0.9], 5 -> 
       RGBColor[0.9, 0.9, 0.9]}},
   GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{
    "Columns" -> {1, 1, 1}, "Rows" -> {0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5}}],
  "Grid"]], "Output",
 CellChangeTimes->{{3.7735093265113544`*^9, 3.7735094033080797`*^9}, {
   3.773509499481288*^9, 3.7735095283344355`*^9}, 3.773509716438759*^9, {
   3.7735097576577587`*^9, 3.773509779541628*^9}, 3.77358909462906*^9, 
   3.7735891742202153`*^9, {3.7735892260712695`*^9, 3.7735892869702682`*^9}},
 CellLabel->
  "Out[452]=",ExpressionUUID->"73655e4c-cfc4-4b2f-8ba5-5d5937b237b6"]
}, Open  ]],

Cell["Make the gauge and grid mock-up", "Text",
 CellChangeTimes->{{3.773489047171769*^9, 3.7734890682607613`*^9}, {
  3.7735025234328227`*^9, 
  3.7735025312738194`*^9}},ExpressionUUID->"bd164d24-3d4b-4313-8d01-\
ab9ce560f0d7"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"ClearAll", "[", 
  RowBox[{
  "gaugeReadingDS", ",", "imageFrame", ",", "imageSize", ",", "rows"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"imageFrame", "=", "10"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"imageSize", "=", "300"}], 
  ";"}], "\[IndentingNewLine]", "updateGaugeReadingDS", "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"gaugeReadingDS", "=", 
   RowBox[{"CloudGet", "[", "\"\<data/gaugeReadingDS\>\"", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"rows", "=", "8"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"gaugeReadingDS", "=", 
    RowBox[{
     RowBox[{"CloudGet", "[", "\"\<data/gaugeReadingDS\>\"", "]"}], "[", 
     RowBox[{";;", "rows"}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Rasterize", "[", "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Framed", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Grid", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"{", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"AngularGauge", "[", 
           RowBox[{
            RowBox[{"gaugeReadingDS", "[", 
             RowBox[{"First", ",", "\"\<reading\>\""}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"0", ",", "100"}], "}"}], ",", 
            RowBox[{"ImageSize", "\[Rule]", "Small"}]}], "]"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"(*", 
           RowBox[{"gaugeReadingDS", "[", 
            RowBox[{";;", "6"}], "]"}], "*)"}], "\[IndentingNewLine]", 
          RowBox[{"Grid", "[", 
           RowBox[{
            RowBox[{"Join", "[", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{
                 RowBox[{"Style", "[", 
                  RowBox[{"#", ",", 
                   RowBox[{"FontFamily", "\[Rule]", "\"\<Alegreya SC\>\""}], 
                   ",", 
                   RowBox[{"FontSize", "\[Rule]", "14"}], ",", "Bold"}], 
                  "]"}], "&"}], "/@", 
                RowBox[{"{", 
                 RowBox[{"\"\<Timestamp\>\"", ",", "\"\<Reading\>\""}], 
                 "}"}]}], "}"}], ",", "\[IndentingNewLine]", 
              RowBox[{"Transpose", "[", "\[IndentingNewLine]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"Normal", "[", 
                  RowBox[{"gaugeReadingDS", "[", 
                   RowBox[{"All", ",", 
                    RowBox[{"\"\<timestamp\>\"", "/*", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Style", "[", 
                    RowBox[{"#", ",", 
                    RowBox[{"FontFamily", "\[Rule]", "\"\<Arial\>\""}], ",", 
                    RowBox[{"FontSize", "\[Rule]", "8"}], ",", "Bold"}], 
                    "]"}], "&"}], ")"}]}]}], "]"}], "]"}], ",", 
                 "\[IndentingNewLine]", 
                 RowBox[{"Normal", "[", 
                  RowBox[{"gaugeReadingDS", "[", 
                   RowBox[{"All", ",", 
                    RowBox[{"\"\<reading\>\"", "/*", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Style", "[", 
                    RowBox[{"#", ",", 
                    RowBox[{"FontFamily", "\[Rule]", "\"\<Arial\>\""}], ",", 
                    RowBox[{"FontSize", "\[Rule]", "10"}], ",", "Bold"}], 
                    "]"}], "&"}], ")"}]}]}], "]"}], "]"}]}], "}"}], 
               "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", "]"}], 
            ",", 
            RowBox[{"Background", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{"None", ",", 
               RowBox[{"Flatten", "[", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"1", "\[Rule]", "LightBlue"}], ",", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"#", "->", 
                    RowBox[{"Lighter", "[", "LightGray", "]"}]}], "&"}], "/@", 
                   RowBox[{"Range", "[", 
                    RowBox[{"3", ",", 
                    RowBox[{"rows", "+", "2"}], ",", "2"}], "]"}]}]}], "}"}], 
                "]"}]}], "}"}]}], ",", 
            RowBox[{"Frame", "\[Rule]", "All"}], ",", 
            RowBox[{"FrameStyle", "\[Rule]", 
             RowBox[{"Directive", "[", "LightGray", "]"}]}], ",", 
            RowBox[{"Spacings", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"1", ",", "1", ",", "1"}], "}"}], ",", 
               RowBox[{"Table", "[", 
                RowBox[{".5", ",", 
                 RowBox[{"{", 
                  RowBox[{"(", 
                   RowBox[{"rows", "+", "2"}], ")"}], "}"}]}], "]"}]}], 
              "}"}]}]}], "]"}]}], "\[IndentingNewLine]", "}"}], "}"}], ",", 
       RowBox[{"Frame", "\[Rule]", "White"}], ",", 
       RowBox[{"Spacings", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0", ",", "1", ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"1", ",", "1"}], "}"}]}], "}"}]}]}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"FrameMargins", "\[Rule]", "imageFrame"}], ",", 
     RowBox[{"FrameStyle", "\[Rule]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"imageFrame", " ", ">", " ", "0"}], ",", "Red", ",", 
        "White"}], "]"}]}]}], "]"}], ",", "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"RasterSize", "\[Rule]", 
    RowBox[{"imageSize", "*", "2"}]}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "imageSize"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"%", "//", "Head"}]}], "Input",
 CellChangeTimes->{{3.7735021916413527`*^9, 3.773502264216378*^9}, {
   3.773502331662368*^9, 3.7735024350827923`*^9}, {3.7735034699982758`*^9, 
   3.7735034703422394`*^9}, {3.7735035040123997`*^9, 3.7735035158204*^9}, {
   3.773503556959363*^9, 3.773503562621363*^9}, {3.773503616292363*^9, 
   3.773503650917405*^9}, {3.773503712959038*^9, 3.7735038087962093`*^9}, {
   3.7735049075538335`*^9, 3.7735049111868324`*^9}, {3.773505052163644*^9, 
   3.773505052602643*^9}, {3.773505098816064*^9, 3.7735051244750805`*^9}, {
   3.7735052409690957`*^9, 3.7735052466081195`*^9}, {3.773505285901577*^9, 
   3.773505303922137*^9}, {3.7735053732751393`*^9, 3.7735053737523155`*^9}, {
   3.7735054072173557`*^9, 3.7735054367872033`*^9}, {3.7735054671822386`*^9, 
   3.7735054853077435`*^9}, {3.7735055157667103`*^9, 
   3.7735055161527395`*^9}, {3.7735055549857388`*^9, 3.773505650694762*^9}, {
   3.773505689865456*^9, 3.7735057239784555`*^9}, {3.773506078076069*^9, 
   3.7735060968700333`*^9}, {3.773507382305752*^9, 3.773507485783908*^9}, {
   3.7735077725626507`*^9, 3.773507816551332*^9}, {3.773507892603828*^9, 
   3.773507952802892*^9}, {3.77350804413989*^9, 3.773508048212854*^9}, {
   3.7735097908576384`*^9, 3.773509809020684*^9}, 3.773509897169943*^9, 
   3.773589363556016*^9, {3.7735894650010705`*^9, 3.7735895360050488`*^9}, {
   3.7735896002462225`*^9, 3.7735896828503065`*^9}, {3.773589744404312*^9, 
   3.7735897509333425`*^9}},
 CellLabel->
  "In[590]:=",ExpressionUUID->"454cc471-45cc-4b8d-a2d8-5b85b8c40b5c"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"timestamp\"\>", 
    "\[Rule]", "\<\"Wed 31 Jul 2019 15:22:31\"\>"}], ",", 
   RowBox[{"\<\"reading\"\>", "\[Rule]", "30"}]}], 
  "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{
  3.773502322766349*^9, 3.7735023587114367`*^9, 3.773502436343795*^9, {
   3.77350348038227*^9, 3.7735035239173613`*^9}, 3.7735035645643673`*^9, {
   3.773503618272399*^9, 3.7735036533276186`*^9}, 3.773503721395326*^9, {
   3.7735037532352114`*^9, 3.773503765224242*^9}, {3.7735038028452063`*^9, 
   3.7735038104262433`*^9}, 3.773505055761775*^9, {3.7735051034860744`*^9, 
   3.773505137171095*^9}, 3.773505248034094*^9, 3.7735052911220245`*^9, 
   3.7735053751213484`*^9, {3.773505416813216*^9, 3.7735054377461805`*^9}, {
   3.773505487923743*^9, 3.77350551735074*^9}, {3.773505555717739*^9, 
   3.7735056514047346`*^9}, {3.773505693844448*^9, 3.773505725280472*^9}, {
   3.7735060824770384`*^9, 3.773506098148038*^9}, 3.7735074873448772`*^9, 
   3.7735077789816494`*^9, 3.773507821081293*^9, {3.7735078740118265`*^9, 
   3.7735078804728317`*^9}, {3.773507931444833*^9, 3.7735079541418314`*^9}, 
   3.773509093634226*^9, 3.7735091365334396`*^9, {3.773509795598605*^9, 
   3.7735098096986523`*^9}, 3.773589367516039*^9, {3.773589479785036*^9, 
   3.7735895139360576`*^9}, {3.773589609464218*^9, 3.773589653819312*^9}, 
   3.7735896982343073`*^9, {3.773589745158313*^9, 3.773589751522313*^9}},
 CellLabel->
  "Out[593]=",ExpressionUUID->"7a43151e-9af6-47d3-bda4-f77818ff0cfa"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
pZY=
    "], {{0, 333}, {602, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->300,
  ImageSizeRaw->{602, 333},
  PlotRange->{{0, 602}, {0, 333}}]], "Output",
 CellChangeTimes->{
  3.773502322766349*^9, 3.7735023587114367`*^9, 3.773502436343795*^9, {
   3.77350348038227*^9, 3.7735035239173613`*^9}, 3.7735035645643673`*^9, {
   3.773503618272399*^9, 3.7735036533276186`*^9}, 3.773503721395326*^9, {
   3.7735037532352114`*^9, 3.773503765224242*^9}, {3.7735038028452063`*^9, 
   3.7735038104262433`*^9}, 3.773505055761775*^9, {3.7735051034860744`*^9, 
   3.773505137171095*^9}, 3.773505248034094*^9, 3.7735052911220245`*^9, 
   3.7735053751213484`*^9, {3.773505416813216*^9, 3.7735054377461805`*^9}, {
   3.773505487923743*^9, 3.77350551735074*^9}, {3.773505555717739*^9, 
   3.7735056514047346`*^9}, {3.773505693844448*^9, 3.773505725280472*^9}, {
   3.7735060824770384`*^9, 3.773506098148038*^9}, 3.7735074873448772`*^9, 
   3.7735077789816494`*^9, 3.773507821081293*^9, {3.7735078740118265`*^9, 
   3.7735078804728317`*^9}, {3.773507931444833*^9, 3.7735079541418314`*^9}, 
   3.773509093634226*^9, 3.7735091365334396`*^9, {3.773509795598605*^9, 
   3.7735098096986523`*^9}, 3.773589367516039*^9, {3.773589479785036*^9, 
   3.7735895139360576`*^9}, {3.773589609464218*^9, 3.773589653819312*^9}, 
   3.7735896982343073`*^9, {3.773589745158313*^9, 3.7735897523093567`*^9}},
 CellLabel->
  "Out[597]=",ExpressionUUID->"add7e514-5e95-4cc1-9291-81b97d9e02ea"],

Cell[BoxData["Image"], "Output",
 CellChangeTimes->{
  3.773502322766349*^9, 3.7735023587114367`*^9, 3.773502436343795*^9, {
   3.77350348038227*^9, 3.7735035239173613`*^9}, 3.7735035645643673`*^9, {
   3.773503618272399*^9, 3.7735036533276186`*^9}, 3.773503721395326*^9, {
   3.7735037532352114`*^9, 3.773503765224242*^9}, {3.7735038028452063`*^9, 
   3.7735038104262433`*^9}, 3.773505055761775*^9, {3.7735051034860744`*^9, 
   3.773505137171095*^9}, 3.773505248034094*^9, 3.7735052911220245`*^9, 
   3.7735053751213484`*^9, {3.773505416813216*^9, 3.7735054377461805`*^9}, {
   3.773505487923743*^9, 3.77350551735074*^9}, {3.773505555717739*^9, 
   3.7735056514047346`*^9}, {3.773505693844448*^9, 3.773505725280472*^9}, {
   3.7735060824770384`*^9, 3.773506098148038*^9}, 3.7735074873448772`*^9, 
   3.7735077789816494`*^9, 3.773507821081293*^9, {3.7735078740118265`*^9, 
   3.7735078804728317`*^9}, {3.773507931444833*^9, 3.7735079541418314`*^9}, 
   3.773509093634226*^9, 3.7735091365334396`*^9, {3.773509795598605*^9, 
   3.7735098096986523`*^9}, 3.773589367516039*^9, {3.773589479785036*^9, 
   3.7735895139360576`*^9}, {3.773589609464218*^9, 3.773589653819312*^9}, 
   3.7735896982343073`*^9, {3.773589745158313*^9, 3.773589752320343*^9}},
 CellLabel->
  "Out[598]=",ExpressionUUID->"59196734-d92a-4e46-9fe7-f9da65e73e8e"]
}, Open  ]],

Cell["Make the APIFunction[...] Module", "Text",
 CellChangeTimes->{{3.773495867101307*^9, 3.7734959480562716`*^9}, {
   3.7735025458868284`*^9, 3.7735025829597907`*^9}, 3.773503871369236*^9, {
   3.77350403540084*^9, 3.7735040531018667`*^9}, {3.773506227293036*^9, 
   3.7735062355140324`*^9}},ExpressionUUID->"24c1c647-b3c6-487b-8a92-\
a99f0bb0154b"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"ClearAll", "[", "getData", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"getData", "[", 
     RowBox[{"req_", ",", "n_"}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"ts", ",", "assoc"}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"ts", "=", 
        RowBox[{"DateString", "[", 
         RowBox[{"DateObject", "[", "]"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"assoc", "=", 
        RowBox[{"<|", 
         RowBox[{
          RowBox[{"\"\<timestamp\>\"", "\[Rule]", "ts"}], ",", 
          RowBox[{"\"\<reading\>\"", "\[Rule]", "req"}]}], "|>"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"If", "[", " ", 
        RowBox[{
         RowBox[{"NumberQ", "[", 
          RowBox[{"ToExpression", "[", "req", "]"}], "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"CloudPut", "[", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            RowBox[{"Dataset", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"{", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"Normal", "[", 
                  RowBox[{
                  "CloudGet", "[", "\"\<data/gaugeReadingDS\>\"", "]"}], 
                  "]"}], ",", "\[IndentingNewLine]", "assoc"}], 
                "\[IndentingNewLine]", "}"}], "//", "Flatten"}], "//", 
              "Join"}], "]"}], "[", 
            RowBox[{"ReverseSortBy", "[", 
             RowBox[{"#timestamp", "&"}], "]"}], "]"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"CloudObject", "[", 
            RowBox[{"\"\<data/gaugeReadingDS\>\"", ",", 
             RowBox[{"Permissions", "\[Rule]", "\"\<Public\>\""}]}], "]"}]}], 
          "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"CloudGet", "[", "\"\<data/gaugeReadingDS\>\"", "]"}], "[", 
        RowBox[{";;", "n"}], "]"}]}]}], "\[IndentingNewLine]", "]"}]}], ";"}],
   "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"getData", "[", 
  RowBox[{"\"\<blabla\>\"", ",", "9"}], "]"}]}], "Input",
 CellChangeTimes->{{3.7735062667569404`*^9, 3.7735062833283377`*^9}, {
   3.773506343678378*^9, 3.773506368826336*^9}, {3.773506412281336*^9, 
   3.773506418144353*^9}, {3.7735064515853724`*^9, 3.7735064922580843`*^9}, {
   3.773506543614483*^9, 3.7735066942849073`*^9}, {3.7735067450509405`*^9, 
   3.773506750274887*^9}, {3.773506789720089*^9, 3.773506827054093*^9}, 
   3.7735084880730343`*^9, {3.773508538102044*^9, 3.7735085594690466`*^9}, {
   3.7735100554423013`*^9, 3.7735100891160727`*^9}, {3.773510525621332*^9, 
   3.7735105679798346`*^9}, {3.7735107721181297`*^9, 3.7735108730002985`*^9}, 
   3.7735111764746647`*^9},
 Background->RGBColor[0.88, 1, 0.88],
 CellLabel->
  "In[827]:=",ExpressionUUID->"426fb1a3-a6fa-4013-a98d-646b7c5b8c4b"],

Cell[BoxData[
 TemplateBox[{TagBox[
    DynamicModuleBox[{
     TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
      Data`UnorderedAssociation[
       "RowCount" -> 9, "Length" -> 9, "InitialType" -> TypeSystem`Vector[
          TypeSystem`Struct[{"timestamp", "reading"}, {
            TypeSystem`Atom[String], TypeSystem`AnyType}], 9], "Shape" -> 
        TypeSystem`PackageScope`HeaderShape[
          Association[{All, "timestamp"} -> 1, {All, "reading"} -> 1], 
          TypeSystem`PackageScope`Limited[
           TypeSystem`PackageScope`ColumnShape[
            TypeSystem`PackageScope`RowShape[
             Association[
             "timestamp" -> 
              TypeSystem`PackageScope`AtomShape[230.40000000000003`], 
              "reading" -> TypeSystem`PackageScope`UnknownShape]]], 9, {}]], 
        "InitialData" -> TypeSystem`PackageScope`CacheHandle[570629999], 
        "Type" -> TypeSystem`Vector[
          TypeSystem`Struct[{"timestamp", "reading"}, {
            TypeSystem`Atom[String], TypeSystem`AnyType}], 9], "HandleQ" -> 
        True, "RowTarget" -> 20, "Data" -> 
        TypeSystem`PackageScope`CacheHandle[570629999]], 
      TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
      TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 1, 
      TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
      DynamicModule[{
        TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
           Style[
            Grid[{{
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"timestamp\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"timestamp\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 606009862][{
                    All, "timestamp"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[606009862][
                  GeneralUtilities`Slice[All, "timestamp"]], "Mouse"], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"reading\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"reading\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 606009862][{
                    All, "reading"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[606009862][
                  GeneralUtilities`Slice[All, "reading"]], "Mouse"], 
                Background -> GrayLevel[0.95], 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["Tue 30 Jul 2019 17:27:42", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[606009862][
                  GeneralUtilities`Slice[1, 
                   Key["timestamp"]]], "Mouse"], 
                ImageSize -> {{230.40000000000003`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["54"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[606009862][
                  GeneralUtilities`Slice[1, 
                   Key["reading"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["Tue 30 Jul 2019 17:27:36", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[606009862][
                  GeneralUtilities`Slice[2, 
                   Key["timestamp"]]], "Mouse"], 
                ImageSize -> {{230.40000000000003`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["23", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[606009862][
                  GeneralUtilities`Slice[2, 
                   Key["reading"]]], "Mouse"], 
                ImageSize -> {{19.200000000000003`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["Tue 30 Jul 2019 17:24:07", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[606009862][
                  GeneralUtilities`Slice[3, 
                   Key["timestamp"]]], "Mouse"], 
                ImageSize -> {{230.40000000000003`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["36", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[606009862][
                  GeneralUtilities`Slice[3, 
                   Key["reading"]]], "Mouse"], 
                ImageSize -> {{19.200000000000003`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["Tue 30 Jul 2019 17:22:42", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[606009862][
                  GeneralUtilities`Slice[4, 
                   Key["timestamp"]]], "Mouse"], 
                ImageSize -> {{230.40000000000003`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["45", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[606009862][
                  GeneralUtilities`Slice[4, 
                   Key["reading"]]], "Mouse"], 
                ImageSize -> {{19.200000000000003`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["Tue 30 Jul 2019 17:22:33", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[606009862][
                  GeneralUtilities`Slice[5, 
                   Key["timestamp"]]], "Mouse"], 
                ImageSize -> {{230.40000000000003`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["45"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[606009862][
                  GeneralUtilities`Slice[5, 
                   Key["reading"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["Tue 30 Jul 2019 17:22:15", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[606009862][
                  GeneralUtilities`Slice[6, 
                   Key["timestamp"]]], "Mouse"], 
                ImageSize -> {{230.40000000000003`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["23"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[606009862][
                  GeneralUtilities`Slice[6, 
                   Key["reading"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["Tue 30 Jul 2019 17:16:49", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[606009862][
                  GeneralUtilities`Slice[7, 
                   Key["timestamp"]]], "Mouse"], 
                ImageSize -> {{230.40000000000003`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["34"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[606009862][
                  GeneralUtilities`Slice[7, 
                   Key["reading"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["Tue 30 Jul 2019 17:16:41", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[606009862][
                  GeneralUtilities`Slice[8, 
                   Key["timestamp"]]], "Mouse"], 
                ImageSize -> {{230.40000000000003`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["83"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[606009862][
                  GeneralUtilities`Slice[8, 
                   Key["reading"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["Tue 30 Jul 2019 17:14:49", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[606009862][
                  GeneralUtilities`Slice[9, 
                   Key["timestamp"]]], "Mouse"], 
                ImageSize -> {{230.40000000000003`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["23"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[606009862][
                  GeneralUtilities`Slice[9, 
                   Key["reading"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}}, BaseStyle -> {ContextMenu -> {
                 MenuItem["Copy position to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Copy data to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], Delimiter, 
                 MenuItem["Paste position in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Paste data in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic]}, FontFamily -> "Verdana", 
               FontSize -> 12}, Alignment -> Left, RowMinHeight -> 1.5, 
             Dividers -> All, FrameStyle -> GrayLevel[0.85], 
             BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
            LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False,
             ShowAutoStyles -> False]], 
         TypeSystem`NestedGrid`PackagePrivate`initialQ = True, 
         TypeSystem`NestedGrid`PackagePrivate`self = $Failed}, 
        Dynamic[
         TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
         TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
            Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
            
            Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
              TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
              TypeSystem`NestedGrid`PackagePrivate`LookupCacheValue[
                TypeSystem`NestedGrid`PackagePrivate`$state$$["Data"]]}, 
             TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = 
              If[TypeSystem`NestedGrid`PackagePrivate`tmpData$ === 
                TypeSystem`NestedGrid`PackagePrivate`$NotCached, 
                TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$grid$$, 606009862][
                TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
               Not[
                FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
               TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
               TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
          TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
          TypeSystem`NestedGrid`PackagePrivate`$pos$$; If[
            FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
            TypeSystem`SparseGrid[
             TypeSystem`H["(data no longer present)"]], 
            If[GeneralUtilities`$DebugMode, 
             Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
               TypeSystem`NestedGrid`PackagePrivate`formatState[
               TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                TypeSystem`NestedGrid`PackagePrivate`$pos$$]}], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
         TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$pos$$}], 
        DynamicModuleValues :> {}], 
      TypeSystem`NestedGrid`PackagePrivate`$posCell$$, 
      TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
        TypeSystem`NestedGrid`PackagePrivate`alignBar[
        TypeSystem`NestedGrid`PackagePrivate`$state$$][
         TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
          TypeSystem`PackageScope`Pathbar[
          TypeSystem`NestedGrid`PackagePrivate`$path$$, 
           TypeSystem`NestedGrid`PackagePrivate`updateState[
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
            TypeSystem`NestedGrid`PackagePrivate`$path$$, 
            TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$grid$$, 606009862]]]], 
        TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
      TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Framed[
        Dynamic[
         Replace[
          MouseAnnotation[Null], {
          TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[606009862][Null] -> 
           "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[606009862][
             Pattern[TypeSystem`NestedGrid`PackagePrivate`path, 
              Blank[]]] :> (
            TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
             TypeSystem`NestedGrid`PackagePrivate`path; 
            TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
             TypeSystem`NestedGrid`PackagePrivate`path, 
              TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
           Spacer[10], Blank[] :> Spacer[10]}], TrackedSymbols :> {}], 
        FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
        Top, ImageSize -> {Automatic, 14}]}, 
     DynamicBox[
      ToBoxes[
       Column[
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, {
          TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
          TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`alignBar[
           TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}, {
         TypeSystem`NestedGrid`PackagePrivate`$topBar$$, 
          TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
          TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`alignBar[
           TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}], Spacings -> 
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, 
          0, {{}, {0, 0.05, 0}}]], StandardForm], 
      ImageSizeCache -> {310., {157.5, 164.5}}, 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     BaseStyle -> {LineBreakWithin -> False}, Deinitialization :> 
     TypeSystem`NestedGrid`PackagePrivate`deleteState[
      TypeSystem`NestedGrid`PackagePrivate`$state$$], 
     DynamicModuleValues :> {}, Initialization :> 
     Block[{$ContextPath = $ContextPath}, 
       Needs["TypeSystem`"]]], Deploy, DefaultBaseStyle -> "Deploy"]},
  "CopyTag",
  DisplayFunction->(#& ),
  InterpretationFunction->("Dataset[<>]"& )]], "Output",
 CellChangeTimes->{{3.7735066089859424`*^9, 3.7735066253129396`*^9}, {
   3.7735066671659255`*^9, 3.773506695835943*^9}, 3.7735067514489202`*^9, {
   3.7735067943830643`*^9, 3.7735068286210947`*^9}, 3.7735082416382256`*^9, 
   3.773508489123008*^9, {3.7735085400260096`*^9, 3.773508560515042*^9}, 
   3.7735090303807087`*^9, {3.7735100646552944`*^9, 3.7735100902620707`*^9}, {
   3.7735105366672993`*^9, 3.77351056871484*^9}, {3.77351082157226*^9, 
   3.7735108739912596`*^9}, 3.7735111810096626`*^9},
 CellLabel->
  "Out[829]=",ExpressionUUID->"01398d52-dfbb-411c-a7a3-257ca2dfe0ad"]
}, Open  ]],

Cell["Adding some color...", "Text",
 CellChangeTimes->{{3.7735080863821936`*^9, 
  3.7735080938251925`*^9}},ExpressionUUID->"5b6756bd-1bef-48ed-adc0-\
cef479b2902d"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"colors", "=", 
  RowBox[{"{", 
   RowBox[{
   "Red", ",", "LightRed", ",", "Yellow", ",", "LightGreen", ",", "Green"}], 
   "}"}]}], "\[IndentingNewLine]", 
 RowBox[{"Normal", "[", 
  RowBox[{"AssociationThread", "[", 
   RowBox[{
    RowBox[{"Transpose", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Range", "[", 
        RowBox[{"0", ",", "90", ",", "10"}], "]"}], ",", 
       RowBox[{"Range", "[", 
        RowBox[{"10", ",", "100", ",", "10"}], "]"}]}], "}"}], "]"}], ",", 
    RowBox[{"Flatten", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "Red", ",", "LightRed", ",", "Yellow", ",", "LightYellow", ",", 
         "Green"}], "}"}], ",", 
       RowBox[{"Reverse", "[", 
        RowBox[{"{", 
         RowBox[{
         "Red", ",", "LightRed", ",", "Yellow", ",", "LightYellow", ",", 
          "Green"}], "}"}], "]"}]}], "}"}], "]"}]}], "]"}], "]"}]}], "Input",
 CellChangeTimes->{{3.7735075586328773`*^9, 3.773507751925641*^9}, {
   3.7735077878096495`*^9, 3.773507790364642*^9}, {3.773507861621315*^9, 
   3.7735078701068296`*^9}, 3.7735080797641935`*^9},
 CellLabel->
  "In[579]:=",ExpressionUUID->"1074c872-35c5-442b-80f5-f1bb02a5ac61"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       DefaultBaseStyle->"ColorSwatchGraphics",
       Frame->True,
       FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 
          1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification])}],
       PlotRangePadding->None],
      StyleBox[
       RowBox[{"RGBColor", "[", 
         RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> False]],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[1, 0, 0],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[1, 0.85, 0.85], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       DefaultBaseStyle->"ColorSwatchGraphics",
       Frame->True,
       FrameStyle->RGBColor[
        0.6666666666666666, 0.5666666666666667, 0.5666666666666667],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 
          1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification])}],
       PlotRangePadding->None],
      StyleBox[
       RowBox[{"RGBColor", "[", 
         RowBox[{"1", ",", "0.85`", ",", "0.85`"}], "]"}], NumberMarks -> 
       False]],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0.85, 0.85]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[1, 0.85, 0.85],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[1, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       DefaultBaseStyle->"ColorSwatchGraphics",
       Frame->True,
       FrameStyle->RGBColor[0.6666666666666666, 0.6666666666666666, 0.],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 
          1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification])}],
       PlotRangePadding->None],
      StyleBox[
       RowBox[{"RGBColor", "[", 
         RowBox[{"1", ",", "1", ",", "0"}], "]"}], NumberMarks -> False]],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 1, 0]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[1, 1, 0],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0.88, 1, 0.88], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       DefaultBaseStyle->"ColorSwatchGraphics",
       Frame->True,
       FrameStyle->RGBColor[
        0.5866666666666667, 0.6666666666666666, 0.5866666666666667],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 
          1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification])}],
       PlotRangePadding->None],
      StyleBox[
       RowBox[{"RGBColor", "[", 
         RowBox[{"0.88`", ",", "1", ",", "0.88`"}], "]"}], NumberMarks -> 
       False]],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0.88, 1, 0.88]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.88, 1, 0.88],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       DefaultBaseStyle->"ColorSwatchGraphics",
       Frame->True,
       FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 
          1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification])}],
       PlotRangePadding->None],
      StyleBox[
       RowBox[{"RGBColor", "[", 
         RowBox[{"0", ",", "1", ",", "0"}], "]"}], NumberMarks -> False]],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0, 1, 0],
    Editable->False,
    Selectable->False]}], "}"}]], "Output",
 CellChangeTimes->{
  3.7735075674248796`*^9, {3.773507600805845*^9, 3.7735076125087695`*^9}, {
   3.7735076672089605`*^9, 3.7735076863014364`*^9}, 3.7735077203257813`*^9, 
   3.773507752807621*^9, 3.7735077911686172`*^9, 3.773507871434867*^9, 
   3.773508081999193*^9},
 CellLabel->
  "Out[579]=",ExpressionUUID->"249fc72b-18a0-460a-8657-475753a8abf6"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"0", ",", "10"}], "}"}], "\[Rule]", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        DefaultBaseStyle->"ColorSwatchGraphics",
        Frame->True,
        FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 
           1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification])}],
        PlotRangePadding->None],
       StyleBox[
        RowBox[{"RGBColor", "[", 
          RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> False]],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[1, 0, 0],
     Editable->False,
     Selectable->False]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"10", ",", "20"}], "}"}], "\[Rule]", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[1, 0.85, 0.85], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        DefaultBaseStyle->"ColorSwatchGraphics",
        Frame->True,
        FrameStyle->RGBColor[
         0.6666666666666666, 0.5666666666666667, 0.5666666666666667],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 
           1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification])}],
        PlotRangePadding->None],
       StyleBox[
        RowBox[{"RGBColor", "[", 
          RowBox[{"1", ",", "0.85`", ",", "0.85`"}], "]"}], NumberMarks -> 
        False]],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = 
          RGBColor[1, 0.85, 0.85]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[1, 0.85, 0.85],
     Editable->False,
     Selectable->False]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"20", ",", "30"}], "}"}], "\[Rule]", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[1, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        DefaultBaseStyle->"ColorSwatchGraphics",
        Frame->True,
        FrameStyle->RGBColor[0.6666666666666666, 0.6666666666666666, 0.],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 
           1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification])}],
        PlotRangePadding->None],
       StyleBox[
        RowBox[{"RGBColor", "[", 
          RowBox[{"1", ",", "1", ",", "0"}], "]"}], NumberMarks -> False]],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 1, 0]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[1, 1, 0],
     Editable->False,
     Selectable->False]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"30", ",", "40"}], "}"}], "\[Rule]", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[1, 1, 0.85], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        DefaultBaseStyle->"ColorSwatchGraphics",
        Frame->True,
        FrameStyle->RGBColor[
         0.6666666666666666, 0.6666666666666666, 0.5666666666666667],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 
           1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification])}],
        PlotRangePadding->None],
       StyleBox[
        RowBox[{"RGBColor", "[", 
          RowBox[{"1", ",", "1", ",", "0.85`"}], "]"}], NumberMarks -> False]],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 1, 0.85]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[1, 1, 0.85],
     Editable->False,
     Selectable->False]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"40", ",", "50"}], "}"}], "\[Rule]", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        DefaultBaseStyle->"ColorSwatchGraphics",
        Frame->True,
        FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 
           1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification])}],
        PlotRangePadding->None],
       StyleBox[
        RowBox[{"RGBColor", "[", 
          RowBox[{"0", ",", "1", ",", "0"}], "]"}], NumberMarks -> False]],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[0, 1, 0],
     Editable->False,
     Selectable->False]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"50", ",", "60"}], "}"}], "\[Rule]", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        DefaultBaseStyle->"ColorSwatchGraphics",
        Frame->True,
        FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 
           1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification])}],
        PlotRangePadding->None],
       StyleBox[
        RowBox[{"RGBColor", "[", 
          RowBox[{"0", ",", "1", ",", "0"}], "]"}], NumberMarks -> False]],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[0, 1, 0],
     Editable->False,
     Selectable->False]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"60", ",", "70"}], "}"}], "\[Rule]", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[1, 1, 0.85], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        DefaultBaseStyle->"ColorSwatchGraphics",
        Frame->True,
        FrameStyle->RGBColor[
         0.6666666666666666, 0.6666666666666666, 0.5666666666666667],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 
           1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification])}],
        PlotRangePadding->None],
       StyleBox[
        RowBox[{"RGBColor", "[", 
          RowBox[{"1", ",", "1", ",", "0.85`"}], "]"}], NumberMarks -> False]],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 1, 0.85]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[1, 1, 0.85],
     Editable->False,
     Selectable->False]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"70", ",", "80"}], "}"}], "\[Rule]", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[1, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        DefaultBaseStyle->"ColorSwatchGraphics",
        Frame->True,
        FrameStyle->RGBColor[0.6666666666666666, 0.6666666666666666, 0.],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 
           1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification])}],
        PlotRangePadding->None],
       StyleBox[
        RowBox[{"RGBColor", "[", 
          RowBox[{"1", ",", "1", ",", "0"}], "]"}], NumberMarks -> False]],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 1, 0]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[1, 1, 0],
     Editable->False,
     Selectable->False]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"80", ",", "90"}], "}"}], "\[Rule]", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[1, 0.85, 0.85], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        DefaultBaseStyle->"ColorSwatchGraphics",
        Frame->True,
        FrameStyle->RGBColor[
         0.6666666666666666, 0.5666666666666667, 0.5666666666666667],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 
           1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification])}],
        PlotRangePadding->None],
       StyleBox[
        RowBox[{"RGBColor", "[", 
          RowBox[{"1", ",", "0.85`", ",", "0.85`"}], "]"}], NumberMarks -> 
        False]],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = 
          RGBColor[1, 0.85, 0.85]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[1, 0.85, 0.85],
     Editable->False,
     Selectable->False]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"90", ",", "100"}], "}"}], "\[Rule]", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        DefaultBaseStyle->"ColorSwatchGraphics",
        Frame->True,
        FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 
           1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification])}],
        PlotRangePadding->None],
       StyleBox[
        RowBox[{"RGBColor", "[", 
          RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> False]],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[1, 0, 0],
     Editable->False,
     Selectable->False]}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.7735075674248796`*^9, {3.773507600805845*^9, 3.7735076125087695`*^9}, {
   3.7735076672089605`*^9, 3.7735076863014364`*^9}, 3.7735077203257813`*^9, 
   3.773507752807621*^9, 3.7735077911686172`*^9, 3.773507871434867*^9, 
   3.773508082042232*^9},
 CellLabel->
  "Out[580]=",ExpressionUUID->"4ad7aebe-62bd-486b-9ddc-c7479186e8e2"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", "api", "]"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"api", "=", " ", 
    RowBox[{"APIFunction", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"\"\<reading\>\"", "\[Rule]", "\"\<Integer\>\""}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"\"\<n\>\"", "\[Rule]", "\"\<Integer\>\""}]}], 
       "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{"Function", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"ts", "=", 
         RowBox[{"DateString", "[", 
          RowBox[{"DateObject", "[", "]"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"assoc", "=", 
         RowBox[{"<|", 
          RowBox[{
           RowBox[{"\"\<timestamp\>\"", "\[Rule]", "ts"}], ",", 
           RowBox[{"\"\<reading\>\"", "\[Rule]", "#reading"}]}], "|>"}]}], 
        ";", "\[IndentingNewLine]", 
        RowBox[{"CloudPut", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"Dataset", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"{", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"Normal", "[", 
                 RowBox[{
                 "CloudGet", "[", "\"\<data/gaugeReadingDS\>\"", "]"}], "]"}],
                 ",", "\[IndentingNewLine]", "assoc"}], "\[IndentingNewLine]",
                "}"}], "//", "Flatten"}], "//", "Join"}], "]"}], "[", 
           RowBox[{"ReverseSortBy", "[", 
            RowBox[{"#timestamp", "&"}], "]"}], "]"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"CloudObject", "[", 
           RowBox[{"\"\<data/gaugeReadingDS\>\"", ",", 
            RowBox[{"Permissions", "\[Rule]", "\"\<Public\>\""}]}], "]"}]}], 
         "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"gaugeReadingDS", "=", 
         RowBox[{
          RowBox[{"CloudGet", "[", "\"\<data/gaugeReadingDS\>\"", "]"}], "[", 
          RowBox[{";;", "#n"}], "]"}]}], ";", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{"colors", "=", 
         RowBox[{"{", 
          RowBox[{
          "Red", ",", "LightRed", ",", "Yellow", ",", "LightYellow", ",", 
           "LightGreen"}], "}"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"Rasterize", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Framed", "[", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"Grid", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"{", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"AngularGauge", "[", "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{"gaugeReadingDS", "[", 
                    RowBox[{"First", ",", "\"\<reading\>\""}], "]"}], ",", 
                   "\[IndentingNewLine]", 
                   RowBox[{"{", 
                    RowBox[{"0", ",", "100"}], "}"}], ",", 
                   "\[IndentingNewLine]", 
                   RowBox[{"ImageSize", "\[Rule]", "Small"}], ",", 
                   "\[IndentingNewLine]", 
                   RowBox[{"ScaleRanges", "\[Rule]", 
                    RowBox[{"Normal", "[", 
                    RowBox[{"AssociationThread", "[", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"Transpose", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Range", "[", 
                    RowBox[{"0", ",", "90", ",", "10"}], "]"}], ",", 
                    RowBox[{"Range", "[", 
                    RowBox[{"10", ",", "100", ",", "10"}], "]"}]}], "}"}], 
                    "]"}], ",", "\[IndentingNewLine]", 
                    RowBox[{"Flatten", "[", 
                    RowBox[{"{", 
                    RowBox[{"colors", ",", 
                    RowBox[{"Reverse", "[", "colors", "]"}]}], "}"}], "]"}]}],
                     "]"}], "\[IndentingNewLine]", "]"}]}]}], "]"}], ",", 
                 "\[IndentingNewLine]", 
                 RowBox[{"Grid", "[", 
                  RowBox[{
                   RowBox[{"Join", "[", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Style", "[", 
                    RowBox[{"#", ",", 
                    RowBox[{"FontFamily", "\[Rule]", "\"\<Alegreya SC\>\""}], 
                    ",", 
                    RowBox[{"FontSize", "\[Rule]", "14"}], ",", "Bold"}], 
                    "]"}], "&"}], "/@", 
                    RowBox[{"{", 
                    RowBox[{"\"\<Timestamp\>\"", ",", "\"\<Reading\>\""}], 
                    "}"}]}], "}"}], ",", "\[IndentingNewLine]", 
                    RowBox[{"Transpose", "[", "\[IndentingNewLine]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Normal", "[", 
                    RowBox[{"gaugeReadingDS", "[", 
                    RowBox[{"All", ",", 
                    RowBox[{"\"\<timestamp\>\"", "/*", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Style", "[", 
                    RowBox[{"#", ",", 
                    RowBox[{"FontFamily", "\[Rule]", "\"\<Arial\>\""}], ",", 
                    RowBox[{"FontSize", "\[Rule]", "8"}], ",", "Bold"}], 
                    "]"}], "&"}], ")"}]}]}], "]"}], "]"}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"Normal", "[", 
                    RowBox[{"gaugeReadingDS", "[", 
                    RowBox[{"All", ",", 
                    RowBox[{"\"\<reading\>\"", "/*", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Style", "[", 
                    RowBox[{"#", ",", 
                    RowBox[{"FontFamily", "\[Rule]", "\"\<Arial\>\""}], ",", 
                    RowBox[{"FontSize", "\[Rule]", "10"}], ",", "Bold"}], 
                    "]"}], "&"}], ")"}]}]}], "]"}], "]"}]}], "}"}], 
                    "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", 
                    "]"}], ",", 
                   RowBox[{"Background", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"None", ",", 
                    RowBox[{"Flatten", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"1", "\[Rule]", "LightBlue"}], ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"#", "->", 
                    RowBox[{"Lighter", "[", "LightGray", "]"}]}], "&"}], "/@", 
                    RowBox[{"Range", "[", 
                    RowBox[{"3", ",", 
                    RowBox[{"#n", "+", "2"}], ",", "2"}], "]"}]}]}], "}"}], 
                    "]"}]}], "}"}]}], ",", 
                   RowBox[{"Frame", "\[Rule]", "All"}], ",", 
                   RowBox[{"FrameStyle", "\[Rule]", 
                    RowBox[{"Directive", "[", "LightGray", "]"}]}], ",", 
                   RowBox[{"Spacings", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", "1", ",", "1"}], "}"}], ",", 
                    RowBox[{"Table", "[", 
                    RowBox[{".5", ",", 
                    RowBox[{"{", 
                    RowBox[{"(", 
                    RowBox[{"#n", "+", "2"}], ")"}], "}"}]}], "]"}]}], 
                    "}"}]}]}], "]"}]}], "\[IndentingNewLine]", "}"}], "}"}], 
              ",", "\[IndentingNewLine]", 
              RowBox[{"Frame", "\[Rule]", "White"}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{"Spacings", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"0", ",", "1", ",", "0"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"1", ",", "1"}], "}"}]}], "}"}]}]}], "]"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"FrameMargins", "\[Rule]", "imageFrame"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"FrameStyle", "\[Rule]", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"imageFrame", " ", ">", " ", "0"}], ",", "Red", ",", 
               "White"}], "]"}]}]}], "\[IndentingNewLine]", "]"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"RasterSize", "\[Rule]", 
           RowBox[{"imageSize", "*", "2"}]}], ",", 
          RowBox[{"ImageSize", "\[Rule]", "imageSize"}]}], "]"}]}], 
       "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", " ", 
      "\"\<PNG\>\""}], "\[IndentingNewLine]", "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"api", "[", 
  RowBox[{"<|", 
   RowBox[{
    RowBox[{"\"\<reading\>\"", "\[Rule]", "\"\<12\>\""}], ",", 
    RowBox[{"\"\<n\>\"", "\[Rule]", "8"}]}], "|>"}], "]"}]}], "Input",
 CellChangeTimes->{{3.7735038892162104`*^9, 3.7735039067852077`*^9}, 
   3.7735040946509075`*^9, {3.773506853630082*^9, 3.773506998498673*^9}, {
   3.7735080314718513`*^9, 3.773508058265852*^9}, {3.773508424461034*^9, 
   3.7735084261400423`*^9}, {3.7735084614720116`*^9, 
   3.7735084646460047`*^9}, {3.773508601020068*^9, 3.7735086163068185`*^9}, {
   3.773508704972395*^9, 3.7735087379063873`*^9}, {3.773508771609386*^9, 
   3.7735087794573946`*^9}, {3.7735088328173823`*^9, 3.77350885037436*^9}, {
   3.773508942107896*^9, 3.7735089493789363`*^9}, 3.773509036072729*^9, {
   3.7735101090281086`*^9, 3.7735101319351125`*^9}, {3.773510198210105*^9, 
   3.7735102236960683`*^9}, {3.7735105028973007`*^9, 3.773510504338336*^9}, {
   3.773510593538804*^9, 3.773510682632831*^9}, 3.7735107318128033`*^9, {
   3.7735109247142954`*^9, 3.7735109590363007`*^9}, {3.7735110029892597`*^9, 
   3.773511024117259*^9}, {3.7735110593777003`*^9, 3.773511147406698*^9}, {
   3.7735111912917*^9, 3.773511201406666*^9}, {3.7735112399906673`*^9, 
   3.7735112632827015`*^9}, {3.773511375162862*^9, 3.773511495051978*^9}, 
   3.7735115786338787`*^9, 3.7735117262531395`*^9, {3.7735118135057955`*^9, 
   3.7735118413434057`*^9}, {3.773511881661834*^9, 3.7735118817498207`*^9}, {
   3.773589897358345*^9, 3.7735899773953357`*^9}, {3.7735901520089006`*^9, 
   3.773590213170901*^9}, {3.773590258799903*^9, 3.7735902769689274`*^9}, {
   3.7735908341141715`*^9, 3.773590863253173*^9}, {3.773590898239177*^9, 
   3.7735909156971693`*^9}},
 CellLabel->
  "In[642]:=",ExpressionUUID->"e2061188-4627-4160-ab89-5017a34f656d"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
3JAZdFTsKZUlUpr8iiSnlJsbwhgh5pSKNmh9mCZHmp4iuSdcIq3MSBdOscR7
NRSnGwpWY0+pI7a3t4kPkYaHo6OjbHgIrqm9qanz6afBWfFSSLaHHy6N2Ujl
AC2om2+WVqf0l77U+IMfjL344sGbb5IaOD04KA0M6YhhKWfcs6j5RsE5id5K
NnplnVNKs1CFGXxmQRZ7BmuL8Csm+iqJOZTnG5oeqHCKfo5hUFViTz6nSCch
muMHNbSabKqBauiUkZERs/BwTkvSuxiNgjv6aU9P4+nTK//pP8l1kG4XL5bM
cqQSOHHCojodXHfd5J/8Sf3f//3KxIRFYEhTSUu2FBuHP3wjUjqwxJ1SFmq4
tbVlER5OTEw0NjbW/+M/jj744FG2jLUUwgbt/GvXSmY8Ut4kEvY1Sus4DdfW
hp95BqrozMyMWWDoyYghAX1j0MASd0pZqCFAMxD6+vrEhndXV1f7qVOH11+v
4riOtsceK6XxSLkCraYvflGxUl259VZolZmNbnuVSkpB3xg0sMSdUi5qSJNL
pYMyyWQS9s88+KCqGsKWSpXSfqQs+c53FKsTtMR6nnqqtbXVLPPZkzmGLOgb
gwaWuFPKRQ0BcCzEq3R3d4vhYSwWCzU0bN1yi6oaQpt/e7vEl4CUE2p9pGSb
v+8+qJkTExMWgWGJF5/hQN8YNLDEnVJGanh4eNjW1mb2YgtwO5FIBNrnDsLD
++4r8SUgZUM6fTQfR60ibd98M7TELly4IDbSIB70ZFVSEfSNQQNL3CllpIbA
8vKyxXsPyYuAF+6914EgPv106a8C8TvXrmXuvlu9FvU/8YQ0eYZ04EOdDIVC
3gaGGVTD4IEl7pTyUsMM897DsbExURB7e3uhlb5z000OBDGR8ORCEP/yrW+p
159L1dVQG0dHR8XaSKfbg1B6fUmohoEDS9wpZaeGa2trdLaF2BqHPbA//vjj
DtTwxhsz3mX6Ib4jHFavPHtf+EL42WdB9UQpJOtCeDjdngN9Y9DAEndK2akh
QGdvSRdGJl5o9ctfdiCId99dqhmIa1PRUyePH7/nnnuOHz95Kjq1VpJf9Zqp
U8ePn5oS99vejZLfrqWlzA03qNecsZMnQ6GQmOTsk1kVLJcQBFHA8aPlqRru
7e2Fw2HiasbHx0VB7O7ubnvmGWi3OxDEb32rBJaDKtxjRCoSlcUU6BlcqXih
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
SOD5/wFkjPLO
    "], {{0, 333}, {602, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->300,
  ImageSizeRaw->{602, 333},
  PlotRange->{{0, 602}, {0, 333}}]], "Output",
 CellChangeTimes->{
  3.773503935396226*^9, {3.7735040965239444`*^9, 3.773504108169943*^9}, 
   3.7735070004636507`*^9, {3.7735087137453613`*^9, 3.7735087397873898`*^9}, 
   3.7735088716213923`*^9, 3.773508951523939*^9, 3.7735090446157236`*^9, {
   3.7735102024951053`*^9, 3.7735102244830685`*^9}, {3.7735105799818316`*^9, 
   3.7735105846538024`*^9}, {3.77351071217484*^9, 3.773510733698838*^9}, 
   3.773510892662264*^9, 3.7735109621462593`*^9, {3.7735110733177013`*^9, 
   3.7735111509186964`*^9}, {3.773511187331664*^9, 3.7735112031246996`*^9}, {
   3.7735112434726686`*^9, 3.7735112654036665`*^9}, {3.7735114653829784`*^9, 
   3.7735114964579773`*^9}, 3.773511580835874*^9, {3.773511869644822*^9, 
   3.7735118840658226`*^9}, {3.7735899085360265`*^9, 3.773589929970304*^9}, {
   3.7735899614443216`*^9, 3.773589980699341*^9}, {3.7735902689619036`*^9, 
   3.7735902795599365`*^9}, 3.7735909330541754`*^9},
 CellLabel->
  "Out[644]=",ExpressionUUID->"c29f63c2-cec4-4583-8512-2ba11225d2a0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", "cd", "]"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"cd", "=", 
  RowBox[{"CloudDeploy", "[", "\[IndentingNewLine]", 
   RowBox[{
   "api", ",", "\[IndentingNewLine]", "\"\</live-coding/gauge/\>\"", ",", 
    "\[IndentingNewLine]", 
    RowBox[{"Permissions", "\[Rule]", "\"\<Public\>\""}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.7735039262382092`*^9, 3.773503927187247*^9}, 
   3.773504103378943*^9, {3.773504289494658*^9, 3.7735042942806177`*^9}, 
   3.773508877180398*^9, {3.773508990766143*^9, 3.773508993084144*^9}, 
   3.773509052537732*^9, 3.7735115055299797`*^9, {3.7735115640419188`*^9, 
   3.773511600369603*^9}, 3.7735899879793015`*^9, {3.7735900661394467`*^9, 
   3.7735900665104747`*^9}},
 CellLabel->
  "In[645]:=",ExpressionUUID->"52341b23-8024-4a66-ab65-0c620c323560"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"CloudObject", "[", 
   TemplateBox[{
    "\"https://www.wolframcloud.com/obj/mitch/live-coding/gauge\"",
     "https://www.wolframcloud.com/obj/mitch/live-coding/gauge"},
    "HyperlinkURL"], "]"}],
  CloudObject["https://www.wolframcloud.com/obj/mitch/live-coding/gauge"],
  SelectWithContents->True]], "Output",
 CellChangeTimes->{3.7735899923643*^9, 3.773590067897447*^9, 
  3.7735902883879375`*^9, 3.7735909350441675`*^9},
 CellLabel->
  "Out[646]=",ExpressionUUID->"8b8c82bf-1d17-4c11-8429-748c7c84291e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"ClearAll", "[", 
  RowBox[{"url", ",", "session"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"url", "=", 
  RowBox[{"URLBuild", "[", 
   RowBox[{"cd", ",", 
    RowBox[{"<|", 
     RowBox[{
      RowBox[{"\"\<reading\>\"", "\[Rule]", "\"\<90\>\""}], ",", 
      RowBox[{"\"\<n\>\"", "\[Rule]", "5"}]}], "|>"}]}], "]"}]}], "\n", 
 RowBox[{
  RowBox[{"session", "=", 
   RowBox[{"StartWebSession", "[", "\"\<Chrome\>\"", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"WebExecute", "[", 
   RowBox[{"session", ",", 
    RowBox[{"{", 
     RowBox[{"\"\<OpenPage\>\"", "\[Rule]", "url"}], "}"}]}], "]"}], 
  ";"}]}], "Input",
 CellChangeTimes->{
  3.7735039647770557`*^9, {3.7735088903423977`*^9, 3.7735088956544037`*^9}, {
   3.773511530587821*^9, 3.773511532356817*^9}, {3.773590001177324*^9, 
   3.773590001287304*^9}, {3.7735902938609023`*^9, 3.7735903057126846`*^9}},
 CellLabel->
  "In[647]:=",ExpressionUUID->"94d84d0e-0d78-4631-9bd1-ae9ef954e3b0"],

Cell[BoxData["\<\"https://www.wolframcloud.com/obj/mitch/live-coding/gauge?\
reading=90&n=5\"\>"], "Output",
 CellChangeTimes->{{3.773503957825221*^9, 3.7735039655330524`*^9}, 
   3.7735041464559383`*^9, 3.7735042980156183`*^9, 3.7735088972303867`*^9, 
   3.7735089548438997`*^9, 3.773508997889177*^9, 3.7735090581326942`*^9, {
   3.773511513237981*^9, 3.773511534280819*^9}, 3.773511608177039*^9, 
   3.7735118879367886`*^9, 3.7735900028323*^9, 3.7735900692904167`*^9, {
   3.7735902974729147`*^9, 3.773590308368677*^9}, 3.773590936341137*^9},
 CellLabel->
  "Out[648]=",ExpressionUUID->"51aeb80c-4d05-4d97-a1a3-1fcddb478793"]
}, Open  ]],

Cell["\<\
Sometimes Interpreter[ ] and Restrict[ ] return Failure[ ] to soon - so that \
the function block doesn't execute.  In these cases we can return anything \
and test in the Function[ ] block.\
\>", "Text",
 CellChangeTimes->{{3.773495867101307*^9, 3.7734959480562716`*^9}, {
   3.7735025458868284`*^9, 3.7735025829597907`*^9}, 3.7735038737482505`*^9, 
   3.773509004060297*^9},ExpressionUUID->"55c87fee-b901-4806-be5e-\
9f3fe51e8fa7"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"NumberQ", "[", 
  RowBox[{"ToExpression", "[", "\"\<string\>\"", "]"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"NumberQ", "[", 
  RowBox[{"ToExpression", "[", "\"\<5\>\"", "]"}], "]"}]}], "Input",
 CellChangeTimes->{{3.773502631480794*^9, 3.773502663771826*^9}},
 CellLabel->"In[29]:=",ExpressionUUID->"05a3bde8-67d6-4f32-a4d9-953f04897c15"],

Cell[BoxData["False"], "Output",
 CellChangeTimes->{{3.773502636546792*^9, 3.7735026645968275`*^9}},
 CellLabel->"Out[29]=",ExpressionUUID->"006c2a28-4830-4d62-98d7-721f86bd87e0"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{{3.773502636546792*^9, 3.7735026646057944`*^9}},
 CellLabel->"Out[30]=",ExpressionUUID->"2ca0fcf4-266c-4ce1-8010-38679df78a72"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"ClearAll", "[", 
  RowBox[{"cd", ",", "url"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"cd", "=", 
  RowBox[{"CloudDeploy", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"APIFunction", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
      "{", "\[IndentingNewLine]", "\"\<current\>\"", "\[IndentingNewLine]", 
       "}"}], ",", " ", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"If", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"NumberQ", "[", 
          RowBox[{"ToExpression", "[", "#current", "]"}], "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"AngularGauge", "[", 
          RowBox[{
           RowBox[{"ToExpression", "[", "#current", "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "100"}], "}"}], ",", 
           RowBox[{"ImageSize", "\[Rule]", "Small"}]}], "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"(", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"gaugeReadingDS", "=", 
            RowBox[{"CloudGet", "[", "\"\<data/gaugeReadingDS\>\"", "]"}]}], 
           ";", "\[IndentingNewLine]", 
           RowBox[{"AngularGauge", "[", 
            RowBox[{
             RowBox[{"gaugeReadingDS", "[", 
              RowBox[{"First", ",", "\"\<reading\>\""}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "100"}], "}"}], ",", 
             RowBox[{"ImageSize", "\[Rule]", "Small"}]}], "]"}]}], 
          "\[IndentingNewLine]", ")"}]}], "\[IndentingNewLine]", "]"}], "&"}],
       ",", "\[IndentingNewLine]", "\"\<PNG\>\""}], "]"}], ",", 
    "\[IndentingNewLine]", "\"\</live-coding/gauge/\>\"", ",", 
    "\[IndentingNewLine]", 
    RowBox[{"Permissions", "\[Rule]", "\"\<Public\>\""}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"url", "=", 
  RowBox[{"URLBuild", "[", 
   RowBox[{"cd", ",", 
    RowBox[{"<|", 
     RowBox[{"\"\<current\>\"", "\[Rule]", "25"}], "|>"}]}], 
   "]"}]}]}], "Input",
 CellChangeTimes->{{3.77348916681578*^9, 3.7734892291607847`*^9}, {
  3.773495342319976*^9, 3.7734953493829665`*^9}, {3.7734953865730057`*^9, 
  3.773495510174966*^9}, {3.7734956699116807`*^9, 3.773495673986987*^9}, {
  3.7734957439200883`*^9, 3.77349574516712*^9}, {3.7734957752571154`*^9, 
  3.7734957885411234`*^9}},
 CellLabel->"In[31]:=",ExpressionUUID->"d2b854e8-8321-4440-aff4-ab9ce619f6c3"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"CloudObject", "[", 
   TemplateBox[{
    "\"https://www.wolframcloud.com/obj/mitch/live-coding/gauge\"",
     "https://www.wolframcloud.com/obj/mitch/live-coding/gauge"},
    "HyperlinkURL"], "]"}],
  CloudObject["https://www.wolframcloud.com/obj/mitch/live-coding/gauge"],
  SelectWithContents->True]], "Output",
 CellChangeTimes->{3.773489234290743*^9, 3.773494776032173*^9, 
  3.773495526154008*^9, 3.7734956752980204`*^9, 3.7734957465550876`*^9, 
  3.773495796448087*^9, 3.7735027395317006`*^9},
 CellLabel->"Out[32]=",ExpressionUUID->"70bcfe11-0eee-46c2-985b-ef83add4b10e"],

Cell[BoxData["\<\"https://www.wolframcloud.com/obj/mitch/live-coding/gauge?\
current=25\"\>"], "Output",
 CellChangeTimes->{3.773489234290743*^9, 3.773494776032173*^9, 
  3.773495526154008*^9, 3.7734956752980204`*^9, 3.7734957465550876`*^9, 
  3.773495796448087*^9, 3.7735027395406637`*^9},
 CellLabel->"Out[33]=",ExpressionUUID->"92b953e5-b843-4374-b1b2-f66e06e6c072"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"ClearAll", "[", 
  RowBox[{"gaugeReadingDS", ",", "urlString"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"gaugeReadingDS", "=", 
   RowBox[{
    RowBox[{"Dataset", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Normal", "[", 
          RowBox[{"CloudGet", "[", "\"\<data/gaugeReadingDS\>\"", "]"}], 
          "]"}], ",", "\[IndentingNewLine]", 
         RowBox[{"<|", 
          RowBox[{
           RowBox[{"\"\<timestamp\>\"", "\[Rule]", 
            RowBox[{"DateString", "[", 
             RowBox[{"DateObject", "[", "]"}], "]"}]}], ",", 
           RowBox[{"\"\<reading\>\"", "\[Rule]", 
            RowBox[{"RandomInteger", "[", 
             RowBox[{"{", 
              RowBox[{"0", ",", "100"}], "}"}], "]"}]}]}], "|>"}]}], 
        "\[IndentingNewLine]", "}"}], "//", "Flatten"}], "//", "Join"}], 
     "]"}], "[", 
    RowBox[{"ReverseSortBy", "[", 
     RowBox[{"#timestamp", "&"}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"CloudPut", "[", 
   RowBox[{"gaugeReadingDS", ",", 
    RowBox[{"CloudObject", "[", 
     RowBox[{"\"\<data/gaugeReadingDS\>\"", ",", 
      RowBox[{"Permissions", "\[Rule]", "\"\<Public\>\""}]}], "]"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"gaugeReadingDS", "[", 
   RowBox[{";;", "5"}], "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"AngularGauge", "[", 
  RowBox[{
   RowBox[{"gaugeReadingDS", "[", 
    RowBox[{"First", ",", "\"\<reading\>\""}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "100"}], "}"}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "Small"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.7734872851601896`*^9, 3.773487386058364*^9}, {
  3.7734874833462954`*^9, 3.7734874939983025`*^9}, {3.773487620539523*^9, 
  3.7734876406344876`*^9}, {3.77348768609146*^9, 3.773487688089455*^9}, {
  3.7734879121210794`*^9, 3.773487965294052*^9}, {3.7734880406861153`*^9, 
  3.7734880410641146`*^9}, {3.773488086653076*^9, 3.773488127179984*^9}, {
  3.7734881762021365`*^9, 3.7734882154061766`*^9}, {3.773488282657278*^9, 
  3.7734883358854046`*^9}, {3.7734883846603956`*^9, 3.773488424286398*^9}, {
  3.773488489077482*^9, 3.7734885047044563`*^9}, {3.7734887621595664`*^9, 
  3.773488837537565*^9}, {3.773488941095726*^9, 3.7734889631027284`*^9}, {
  3.773489356328865*^9, 3.773489418292593*^9}, {3.7734948486813145`*^9, 
  3.773494849085313*^9}},
 CellLabel->
  "In[933]:=",ExpressionUUID->"d9b4893e-45fd-43b6-ada2-4dae0e99aa72"],

Cell[BoxData[
 TemplateBox[{TagBox[
    DynamicModuleBox[{
     TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
      Data`UnorderedAssociation[
       "RowCount" -> 5, "Length" -> 5, "InitialType" -> TypeSystem`Vector[
          TypeSystem`Struct[{"timestamp", "reading"}, {
            TypeSystem`Atom[String], 
            TypeSystem`Atom[Integer]}], 5], "Shape" -> 
        TypeSystem`PackageScope`HeaderShape[
          Association[{All, "timestamp"} -> 1, {All, "reading"} -> 1], 
          TypeSystem`PackageScope`Limited[
           TypeSystem`PackageScope`ColumnShape[
            TypeSystem`PackageScope`RowShape[
             Association[
             "timestamp" -> 
              TypeSystem`PackageScope`AtomShape[230.40000000000003`], 
              "reading" -> TypeSystem`PackageScope`AtomShape[34]]]], 5, {}]], 
        "InitialData" -> TypeSystem`PackageScope`CacheHandle[1118460813], 
        "Type" -> TypeSystem`Vector[
          TypeSystem`Struct[{"timestamp", "reading"}, {
            TypeSystem`Atom[String], 
            TypeSystem`Atom[Integer]}], 5], "HandleQ" -> True, "RowTarget" -> 
        20, "Data" -> TypeSystem`PackageScope`CacheHandle[1118460813]], 
      TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
      TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 1, 
      TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
      DynamicModule[{
        TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
           Style[
            Grid[{{
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"timestamp\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"timestamp\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 516936480][{
                    All, "timestamp"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[516936480][
                  GeneralUtilities`Slice[All, "timestamp"]], "Mouse"], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"reading\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"reading\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 516936480][{
                    All, "reading"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[516936480][
                  GeneralUtilities`Slice[All, "reading"]], "Mouse"], 
                Background -> GrayLevel[0.95], 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["Tue 30 Jul 2019 13:00:53", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[516936480][
                  GeneralUtilities`Slice[1, 
                   Key["timestamp"]]], "Mouse"], 
                ImageSize -> {{230.40000000000003`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["21"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[516936480][
                  GeneralUtilities`Slice[1, 
                   Key["reading"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["Tue 30 Jul 2019 12:08:07", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[516936480][
                  GeneralUtilities`Slice[2, 
                   Key["timestamp"]]], "Mouse"], 
                ImageSize -> {{230.40000000000003`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["25"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[516936480][
                  GeneralUtilities`Slice[2, 
                   Key["reading"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["Tue 30 Jul 2019 12:07:43", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[516936480][
                  GeneralUtilities`Slice[3, 
                   Key["timestamp"]]], "Mouse"], 
                ImageSize -> {{230.40000000000003`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["49"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[516936480][
                  GeneralUtilities`Slice[3, 
                   Key["reading"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["July 30, 2019 12:58 pm", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[516936480][
                  GeneralUtilities`Slice[4, 
                   Key["timestamp"]]], "Mouse"], 
                ImageSize -> {{230.40000000000003`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["10"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[516936480][
                  GeneralUtilities`Slice[4, 
                   Key["reading"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["July 30, 2019 12:58 pm", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[516936480][
                  GeneralUtilities`Slice[5, 
                   Key["timestamp"]]], "Mouse"], 
                ImageSize -> {{230.40000000000003`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["10"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[516936480][
                  GeneralUtilities`Slice[5, 
                   Key["reading"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}}, BaseStyle -> {ContextMenu -> {
                 MenuItem["Copy position to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Copy data to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], Delimiter, 
                 MenuItem["Paste position in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Paste data in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic]}, FontFamily -> "Verdana", 
               FontSize -> 12}, Alignment -> Left, RowMinHeight -> 1.5, 
             Dividers -> All, FrameStyle -> GrayLevel[0.85], 
             BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
            LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False,
             ShowAutoStyles -> False]], 
         TypeSystem`NestedGrid`PackagePrivate`initialQ = True, 
         TypeSystem`NestedGrid`PackagePrivate`self = $Failed}, 
        Dynamic[
         TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
         TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
            Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
            
            Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
              TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
              TypeSystem`NestedGrid`PackagePrivate`LookupCacheValue[
                TypeSystem`NestedGrid`PackagePrivate`$state$$["Data"]]}, 
             TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = 
              If[TypeSystem`NestedGrid`PackagePrivate`tmpData$ === 
                TypeSystem`NestedGrid`PackagePrivate`$NotCached, 
                TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$grid$$, 516936480][
                TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
               Not[
                FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
               TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
               TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
          TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
          TypeSystem`NestedGrid`PackagePrivate`$pos$$; If[
            FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
            TypeSystem`SparseGrid[
             TypeSystem`H["(data no longer present)"]], 
            If[GeneralUtilities`$DebugMode, 
             Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
               TypeSystem`NestedGrid`PackagePrivate`formatState[
               TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                TypeSystem`NestedGrid`PackagePrivate`$pos$$]}], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
         TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$pos$$}], 
        DynamicModuleValues :> {}], 
      TypeSystem`NestedGrid`PackagePrivate`$posCell$$, 
      TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
        TypeSystem`NestedGrid`PackagePrivate`alignBar[
        TypeSystem`NestedGrid`PackagePrivate`$state$$][
         TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
          TypeSystem`PackageScope`Pathbar[
          TypeSystem`NestedGrid`PackagePrivate`$path$$, 
           TypeSystem`NestedGrid`PackagePrivate`updateState[
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
            TypeSystem`NestedGrid`PackagePrivate`$path$$, 
            TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$grid$$, 516936480]]]], 
        TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
      TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Framed[
        Dynamic[
         Replace[
          MouseAnnotation[Null], {
          TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[516936480][Null] -> 
           "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[516936480][
             Pattern[TypeSystem`NestedGrid`PackagePrivate`path, 
              Blank[]]] :> (
            TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
             TypeSystem`NestedGrid`PackagePrivate`path; 
            TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
             TypeSystem`NestedGrid`PackagePrivate`path, 
              TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
           Spacer[10], Blank[] :> Spacer[10]}], TrackedSymbols :> {}], 
        FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
        Top, ImageSize -> {Automatic, 14}]}, 
     DynamicBox[
      ToBoxes[
       Column[
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, {
          TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
          TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`alignBar[
           TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}, {
         TypeSystem`NestedGrid`PackagePrivate`$topBar$$, 
          TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
          TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`alignBar[
           TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}], Spacings -> 
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, 
          0, {{}, {0, 0.05, 0}}]], StandardForm], 
      ImageSizeCache -> {310., {97.5, 104.5}}, 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     BaseStyle -> {LineBreakWithin -> False}, Deinitialization :> 
     TypeSystem`NestedGrid`PackagePrivate`deleteState[
      TypeSystem`NestedGrid`PackagePrivate`$state$$], 
     DynamicModuleValues :> {}, Initialization :> 
     Block[{$ContextPath = $ContextPath}, 
       Needs["TypeSystem`"]]], Deploy, DefaultBaseStyle -> "Deploy"]},
  "CopyTag",
  DisplayFunction->(#& ),
  InterpretationFunction->("Dataset[<>]"& )]], "Output",
 CellChangeTimes->{{3.773487296702217*^9, 3.7734874009623365`*^9}, {
   3.773487500929329*^9, 3.773487510820295*^9}, {3.7734876531644545`*^9, 
   3.77348766051746*^9}, {3.773487721434041*^9, 3.7734877365550737`*^9}, {
   3.7734879389050364`*^9, 3.7734879578310432`*^9}, 3.7734881295070953`*^9, {
   3.773488199322139*^9, 3.773488227312251*^9}, 3.773488337812368*^9, {
   3.773488415671387*^9, 3.773488425249405*^9}, {3.7734885077674885`*^9, 
   3.77348851918147*^9}, {3.773488785331543*^9, 3.7734888565735855`*^9}, {
   3.773488949758741*^9, 3.7734889640047617`*^9}, {3.773489406707591*^9, 
   3.7734894198096085`*^9}, 3.7734948535473065`*^9},
 CellLabel->
  "Out[936]=",ExpressionUUID->"5adf3573-8309-40ff-affa-43e3cfde3afc"],

Cell[BoxData[
 GraphicsBox[{
   {GrayLevel[1], EdgeForm[None], FilledCurveBox[{Line[CompressedData["
1:eJxd1V1I02EUx/EtrC56o4xCsWykhiCRWWImncywF1wTixokKYbIkmgrbxzJ
oiKvrLQWxAoiltnLCiU1QzxgTaMpvkS1icl05TZ1+yNlGMXK6Py66IHDuTs3
H/g+mpJTBaXzVCpV6dz82X+flx/m6QPmlkn+Oj8/zl8xzBtHbM2PHkxxpeZO
ytJeNye0hZP8lhBfTY1vTFr8jmPXJbsOZYQ5ZG4y/9g6wPnRdm3mYJhn9Lse
e2694XMq8+afeQpX1KzK8TR18tOs22fWNih8MubCzmB5MzfUJUZ2+xR+viKi
Dpus3K49vGxLROGpL9VdbcZ7FOeMGPtnFS4/kmUr7nxBXWWz1+PfKrw6Umt3
6J1kPF9/ZU/N3L3WWuVmZi/FHqiavrxB4SWF7gyLZZCmE1sthXfDXKb2adS6
92SctPSkR0LcH7tA833hEFktv5683B5ia1qvwV7/kZyOHlv30SmOrvxW7Ljm
pVd9ppGEokn2DNTF7MsZo2NNrmdDuRO8PrBXZ/L6qLo1WRu1MsjuRWM3Lho+
U2dHWsOHbj+fWL6mb2Z4nAyjLUX24+N8NjvQqN0WoHST9eBg4BOnlFzSpVQF
Kff1ph1evY87XPGn99+foKjs9tSS5lE4EFzEgeAiDgQXcSC4iAPBRRwILuJA
cBEHgos4EFzEgeAiDgQXcSC4iAPBRRwILuJAcBEHgos4EFzEgeAiDgQXcSC4
iAPBRRwILuJAcBEHgos4EFzEgeAiDgQXcSC4iAPBRRwILuJAcBEHgos4EFzE
geAiDv9cxIHhIg4MF3FguIgDw0UcGC7iwHARB4aLODBcxIHhIg4MF3FguIgD
w0UcGC7iwHARB4YLOgUXdAou6BRc0Cm4oFNwQafggk7BBZ2CCzoFF3QKLugU
XNApuKBTcEGn4IJOwQWdggs6BRd0Ci7oFFzQKbigU3BBp+CCTsEFnYILOgWX
//+P34UFays=
       "]]}]}, GraphicsGroupBox[
    {GrayLevel[0.8], EdgeForm[{GrayLevel[0.6], Thickness[0.01]}], 
     FilledCurveBox[{{Line[CompressedData["
1:eJxd1V1I02EUx/EtrC56o4xCsWykhiCRWWImncywF1wTixokKYbIkmgrbxzJ
oiKvrLQWxAoiltnLCiU1QzxgTaMpvkS1icl05TZ1+yNlGMXK6Py66IHDuTs3
H/g+mpJTBaXzVCpV6dz82X+flx/m6QPmlkn+Oj8/zl8xzBtHbM2PHkxxpeZO
ytJeNye0hZP8lhBfTY1vTFr8jmPXJbsOZYQ5ZG4y/9g6wPnRdm3mYJhn9Lse
e2694XMq8+afeQpX1KzK8TR18tOs22fWNih8MubCzmB5MzfUJUZ2+xR+viKi
Dpus3K49vGxLROGpL9VdbcZ7FOeMGPtnFS4/kmUr7nxBXWWz1+PfKrw6Umt3
6J1kPF9/ZU/N3L3WWuVmZi/FHqiavrxB4SWF7gyLZZCmE1sthXfDXKb2adS6
92SctPSkR0LcH7tA833hEFktv5683B5ia1qvwV7/kZyOHlv30SmOrvxW7Ljm
pVd9ppGEokn2DNTF7MsZo2NNrmdDuRO8PrBXZ/L6qLo1WRu1MsjuRWM3Lho+
U2dHWsOHbj+fWL6mb2Z4nAyjLUX24+N8NjvQqN0WoHST9eBg4BOnlFzSpVQF
Kff1ph1evY87XPGn99+foKjs9tSS5lE4EFzEgeAiDgQXcSC4iAPBRRwILuJA
cBEHgos4EFzEgeAiDgQXcSC4iAPBRRwILuJAcBEHgos4EFzEgeAiDgQXcSC4
iAPBRRwILuJAcBEHgos4EFzEgeAiDgQXcSC4iAPBRRwILuJAcBEHgos4EFzE
geAiDv9cxIHhIg4MF3FguIgDw0UcGC7iwHARB4aLODBcxIHhIg4MF3FguIgD
w0UcGC7iwHARB4YLOgUXdAou6BRc0Cm4oFNwQafggk7BBZ2CCzoFF3QKLugU
XNApuKBTcEGn4IJOwQWdggs6BRd0Ci7oFFzQKbigU3BBp+CCTsEFnYILOgWX
//+P34UFays=
         "]]}, {Line[CompressedData["
1:eJyF1V1I02EUx/EpoxfEAkOSwsqQhGFemCAGdgTT6EbQihQkwbfI3tAi8UIv
mk5XYpmVNyVpUmkvWIlMnR0MUckwNE1xS12r2drc/z+ziErK8Px24U0XD4dz
ca4+8H3Css+m5flrNJrjy+/f3F7hSjVts/Hi3a6lzffnefXefaOsdrJomm8/
sPWlPPSw9edWKjVOcWLTswTjVYX1xvjMtIp3PGJrcys6lc8fGX6SXzDKkVEN
9UmlKq/VR3/lktc8djGgaOGFynme8Pp5vz4eu/I0rF1RuSu5Wh10dfCgY0du
xkYvz8RmVcct3OSgMkPCy1Avm3JyehT1Hu30/oiY3eJla/CpY3ONZsq07NZ2
rPFyfnfl45iJfkoprIpJt6mcEd2zKzv5DRWnlpe4W1UeSHx/6NertxSeXjvc
kqPy5RDH4f7pCYr/Y4ieDFD5liey8tyUhXpHh3vuHFB4dp/d9Ltzhup0xdbv
Rz2s1yVtMpttFHS93958cJ4bNhhiay7ZKWR9ldId6uZG/5o9Tfs/kfZbs+bk
+Bfu3euXG+d00LhOO7RU6OShqEBL64XPtC64IN+yOMd6vSkwz+Ukbfsje3mW
g9syrp1QklzL9y0Ddc8/MoVHjLjK3VR5xnjatPABDgQXcSC4iAPBRRwILuJA
cBEH8rmsOBBcxIHgIg4EF3EguIgDwUUcCC7iQHARB4KLOBBcxIHgIg4EF3Eg
uIgDwUUcCC7iQHARB4KLOJDPZcWB4CIOBBdxILiIA8FFHAgu4kBwEQeCizgQ
XMSB4CIOBBdxILiIg89FHBgu4sBwEQeGizgwXMSB4SIODBdxYLiIA8NFHBgu
4sBwEQeGizgwXMSB4SIODBdxYLis6hYc0C04oFtwQLfggG7BgX0u0im4oFNw
Qafggk7BBZ2CCzoFF3QKLugUXNApuKBTcEGn4IJOwQWdggs6BRd0Ci7oFFzQ
KZ+LdAou6BRc/vef/AWs0Kog
         "]]}}]}], {}, 
   {GrayLevel[0.5], Thickness[0.008], 
    {GrayLevel[0.5], Thickness[0.004], CapForm["Butt"], 
     StyleBox[{{
        LineBox[{{{-0.5000000000000004, -0.8660254037844385}, 
           Scaled[{0.030000000000000072`, 
            0.05569219381653051}, {-0.5000000000000004, \
-0.8660254037844385}]}, {{-1., 1.2246467991473532`*^-16}, 
           Scaled[{0.06, 0.}, {-1., 
            1.2246467991473532`*^-16}]}, {{-0.4999999999999998, 
           0.8660254037844387}, 
           Scaled[{
            0.029999999999999992`, -0.055692193816530566`}, \
{-0.4999999999999998, 0.8660254037844387}]}, {{0.5000000000000003, 
           0.8660254037844385}, 
           Scaled[{-0.03000000000000002, -0.05569219381653053}, {
            0.5000000000000003, 0.8660254037844385}]}, {{1., 0.}, 
           Scaled[{-0.06, 0.}, {1., 0.}]}, {{
           0.5000000000000003, -0.8660254037844385}, 
           Scaled[{-0.030000000000000006`, 0.05569219381653054}, {
            0.5000000000000003, -0.8660254037844385}]}}], 
        LineBox[{{{-0.7071067811865479, -0.7071067811865471}, 
           Scaled[{0.028284271247461915`, 
            0.03031499055704094}, {-0.7071067811865479, \
-0.7071067811865471}]}, {{-0.8660254037844388, -0.4999999999999997}, 
           Scaled[{0.03464101615137756, 
            0.021435935394489788`}, {-0.8660254037844388, \
-0.4999999999999997}]}, {{-0.9659258262890684, -0.25881904510252035`}, 
           Scaled[{0.038637033051562734`, 
            0.011096056659362344`}, {-0.9659258262890684, \
-0.25881904510252035`}]}, {{-0.9659258262890682, 0.258819045102521}, 
           Scaled[{0.03863703305156273, -0.011096056659362374`}, \
{-0.9659258262890682, 0.258819045102521}]}, {{-0.8660254037844385, 
           0.5000000000000003}, 
           Scaled[{0.03464101615137754, -0.02143593539448983}, \
{-0.8660254037844385, 0.5000000000000003}]}, {{-0.7071067811865475, 
           0.7071067811865476}, 
           Scaled[{0.028284271247461898`, -0.030314990557040962`}, \
{-0.7071067811865475, 0.7071067811865476}]}, {{-0.2588190451025204, 
           0.9659258262890684}, 
           Scaled[{0.010352761804100816`, -0.041411047216403325`}, \
{-0.2588190451025204, 0.9659258262890684}]}, {{6.123233995736766*^-17, 1.}, 
           Scaled[{0., -0.04287187078897963}, {6.123233995736766*^-17, 
            1.}]}, {{0.25881904510252096`, 0.9659258262890682}, 
           Scaled[{-0.010352761804100838`, -0.04141104721640332}, {
            0.25881904510252096`, 0.9659258262890682}]}, {{0.7071067811865476,
            0.7071067811865476}, 
           Scaled[{-0.028284271247461905`, -0.030314990557040962`}, {
            0.7071067811865476, 0.7071067811865476}]}, {{0.8660254037844387, 
           0.49999999999999983`}, 
           Scaled[{-0.034641016151377546`, -0.02143593539448981}, {
            0.8660254037844387, 0.49999999999999983`}]}, {{0.9659258262890683,
            0.25881904510252046`}, 
           Scaled[{-0.038637033051562734`, -0.01109605665936235}, {
            0.9659258262890683, 0.25881904510252046`}]}, {{
           0.9659258262890683, -0.25881904510252046`}, 
           Scaled[{-0.038637033051562734`, 0.011096056659362358`}, {
            0.9659258262890683, -0.25881904510252046`}]}, {{
           0.8660254037844385, -0.5000000000000002}, 
           Scaled[{-0.03464101615137754, 0.021435935394489836`}, {
            0.8660254037844385, -0.5000000000000002}]}, {{
           0.7071067811865476, -0.7071067811865476}, 
           Scaled[{-0.028284271247461894`, 0.030314990557040965`}, {
            0.7071067811865476, -0.7071067811865476}]}}]}, 
       {GrayLevel[0.25], 
        StyleBox[{{{
            InsetBox["0", Offset[{1.5000000000000036, 2.5980762113533142}, 
             Scaled[{0.030000000000000072, 0.05569219381653051}, \
{-0.5000000000000004, -0.8660254037844385}]], {-0.5773502691896275, -1.}, 
             Automatic, {1, 0}], 
            InsetBox["20", Offset[{3., 0.}, 
             Scaled[{0.06, 0.}, {-1., 1.2246467991473532*^-16}]], {-1, 0.}, 
             Automatic, {1, 0}], 
            InsetBox["40", Offset[{1.4999999999999996, -2.598076211353317}, 
             Scaled[{0.029999999999999992, -0.055692193816530566}, \
{-0.4999999999999998, 0.8660254037844387}]], {-0.5773502691896255, 1.}, 
             Automatic, {1, 0}], 
            InsetBox["60", Offset[{-1.5000000000000009, -2.5980762113533156}, 
             Scaled[{-0.03000000000000002, -0.05569219381653053}, \
{0.5000000000000003, 0.8660254037844385}]], {0.5773502691896262, 1.}, 
             Automatic, {1, 0}], 
            InsetBox["80", Offset[{-3., 0.}, Scaled[{-0.06, 0.}, {1., 0.}]], {1, 0.},
              Automatic, {1, 0}], 
            InsetBox["100", Offset[{-1.5000000000000004, 2.598076211353316}, 
             Scaled[{-0.030000000000000006, 0.05569219381653054}, \
{0.5000000000000003, -0.8660254037844385}]], {0.577350269189626, -1.}, 
             Automatic, {1, 
             0}]}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}}}, {}},
         StripOnInput->False,
         FontFamily->"Helvetica",
         FontSize->Scaled[0.07]]}},
      StripOnInput->False,
      Antialiasing->True]}}, {}, {}, 
   GeometricTransformationBox[GeometricTransformationBox[
     TagBox[
      TooltipBox[{
        {RGBColor[0.73, 0.24506099999999992`, 0.1971], 
         PolygonBox[{{0., -0.054700000000000006`}, {1, -0.025}, {1, 0.025}, {
           0., 0.054700000000000006`}}]}, 
        {RGBColor[0.73, 0.24506099999999992`, 0.1971], DiskBox[{0, 0}, 0.07]}, 
        {GrayLevel[1], DiskBox[{0, 0}, 0.035]}},
       "21"],
      Annotation[#, 21, 
       "Tooltip"]& ], {{{-0.8987665812791165, -0.04710236061864983}, {
      0.04710236061864983, -0.8987665812791165}}, {0., 0.}}], {{{1, 0}, {0, 
     1}}, Center}], {}},
  AlignmentPoint->Center,
  AspectRatio->Automatic,
  Axes->False,
  AxesLabel->None,
  AxesOrigin->Automatic,
  AxesStyle->{},
  Background->None,
  BaseStyle->{},
  BaselinePosition->Automatic,
  ColorOutput->Automatic,
  ContentSelectable->Automatic,
  CoordinatesToolOptions:>Automatic,
  DisplayFunction->Identity,
  Epilog->{},
  FormatType->TraditionalForm,
  Frame->False,
  FrameLabel->None,
  FrameStyle->{},
  FrameTicks->Automatic,
  FrameTicksStyle->{},
  GridLines->None,
  GridLinesStyle->{},
  ImageMargins->0.,
  ImagePadding->All,
  ImageSize->Small,
  ImageSizeRaw->Automatic,
  LabelStyle->Directive[
    GrayLevel[0.25], FontSize -> Scaled[0.07], FontFamily -> "Helvetica"],
  Method->Automatic,
  PlotLabel->None,
  PlotRange->All,
  PlotRangeClipping->False,
  PlotRangePadding->Automatic,
  PlotRegion->Automatic,
  PreserveImageOptions->Automatic,
  Prolog->{},
  RotateLabel->True,
  Ticks->Automatic,
  TicksStyle->{}]], "Output",
 CellChangeTimes->{{3.773487296702217*^9, 3.7734874009623365`*^9}, {
   3.773487500929329*^9, 3.773487510820295*^9}, {3.7734876531644545`*^9, 
   3.77348766051746*^9}, {3.773487721434041*^9, 3.7734877365550737`*^9}, {
   3.7734879389050364`*^9, 3.7734879578310432`*^9}, 3.7734881295070953`*^9, {
   3.773488199322139*^9, 3.773488227312251*^9}, 3.773488337812368*^9, {
   3.773488415671387*^9, 3.773488425249405*^9}, {3.7734885077674885`*^9, 
   3.77348851918147*^9}, {3.773488785331543*^9, 3.7734888565735855`*^9}, {
   3.773488949758741*^9, 3.7734889640047617`*^9}, {3.773489406707591*^9, 
   3.7734894198096085`*^9}, 3.773494853914323*^9},
 CellLabel->
  "Out[937]=",ExpressionUUID->"e872b0cf-9295-4385-8bbb-4097d05e538e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"<|", 
  RowBox[{
   RowBox[{"\"\<summaryTable\>\"", "\[Rule]", 
    RowBox[{"Normal", "[", 
     RowBox[{"gaugeReadingDS", "[", 
      RowBox[{";;", "5"}], "]"}], "]"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"\"\<imageUrl\>\"", "\[Rule]", 
    RowBox[{
    "\"\<https://www.wolframcloud.com/obj/mitch/live-coding/gauge?current=\>\"\
", "<>", 
     RowBox[{"ToString", "[", 
      RowBox[{"gaugeReadingDS", "[", 
       RowBox[{"First", ",", "\"\<reading\>\""}], "]"}], "]"}]}]}]}], 
  "|>"}]], "Input",
 CellChangeTimes->{{3.7734894673050175`*^9, 3.7734895520870543`*^9}, {
  3.773489728354515*^9, 3.773489731301488*^9}},
 CellLabel->
  "In[920]:=",ExpressionUUID->"b2c051a1-730c-41b4-a7b1-05959bcd77e5"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"summaryTable\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\[LeftAssociation]", 
      RowBox[{
       RowBox[{"\<\"timestamp\"\>", 
        "\[Rule]", "\<\"Tue 30 Jul 2019 12:07:43\"\>"}], ",", 
       RowBox[{"\<\"reading\"\>", "\[Rule]", "49"}]}], 
      "\[RightAssociation]"}], "}"}]}], ",", 
   RowBox[{"\<\"imageUrl\"\>", 
    "\[Rule]", \
"\<\"https://www.wolframcloud.com/obj/mitch/live-coding/gauge?current=49\"\>"}\
]}], "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{3.7734895651510534`*^9, 3.773489732907487*^9, 
  3.7734916773245583`*^9},
 CellLabel->
  "Out[920]=",ExpressionUUID->"10dee4d7-803a-4473-b0e6-e26f869d7a97"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"ClearAll", "[", "api", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"api", "=", " ", 
    RowBox[{"APIFunction", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{"\"\<current\>\"", "\[Rule]", 
        RowBox[{"Restricted", "[", 
         RowBox[{"\"\<Number\>\"", ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "100"}], "}"}]}], "]"}]}], "\[IndentingNewLine]",
        "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{"Function", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"ClearAll", "[", "gaugeReadingDS", "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"gaugeReadingDS", "=", 
         RowBox[{
          RowBox[{"Dataset", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"{", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"Normal", "[", 
                RowBox[{"CloudGet", "[", "\"\<data/gaugeReadingDS\>\"", "]"}],
                 "]"}], ",", "\[IndentingNewLine]", 
               RowBox[{"<|", 
                RowBox[{
                 RowBox[{"\"\<timestamp\>\"", "\[Rule]", 
                  RowBox[{"DateString", "[", 
                   RowBox[{"DateObject", "[", "]"}], "]"}]}], ",", 
                 RowBox[{"\"\<reading\>\"", "\[Rule]", "#current"}]}], 
                "|>"}]}], "\[IndentingNewLine]", "}"}], "//", "Flatten"}], "//",
             "Join"}], "]"}], "[", 
          RowBox[{"ReverseSortBy", "[", 
           RowBox[{"#timestamp", "&"}], "]"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"CloudPut", "[", 
         RowBox[{"gaugeReadingDS", ",", 
          RowBox[{"CloudObject", "[", 
           RowBox[{"\"\<data/gaugeReadingDS\>\"", ",", 
            RowBox[{"Permissions", "\[Rule]", "\"\<Public\>\""}]}], "]"}]}], 
         "]"}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"Normal", "[", 
         RowBox[{"gaugeReadingDS", "[", 
          RowBox[{";;", "5"}], "]"}], "]"}]}], "\[IndentingNewLine]", "]"}], 
      ",", "\[IndentingNewLine]", " ", "\"\<JSON\>\""}], 
     "\[IndentingNewLine]", "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"api", "[", 
  RowBox[{"<|", 
   RowBox[{"\"\<current\>\"", "\[Rule]", "25"}], "|>"}], "]"}]}], "Input",
 CellChangeTimes->{{3.773486393445241*^9, 3.7734864393082438`*^9}, {
   3.7734864833232946`*^9, 3.7734865472182927`*^9}, 3.773486710377968*^9, {
   3.773486756950251*^9, 3.7734867572512493`*^9}, {3.7734886452875824`*^9, 
   3.773488714253564*^9}, 3.7734895854090576`*^9, {3.7734896927245207`*^9, 
   3.773489693486515*^9}, {3.7734897406824903`*^9, 3.77348975338951*^9}, {
   3.7734898188421993`*^9, 3.773489825530223*^9}, {3.7734916133695564`*^9, 
   3.773491614377595*^9}, {3.77349486962829*^9, 
   3.7734948721243243`*^9}},ExpressionUUID->"feb55dd6-ac8e-4d60-987b-\
dd7ceff9f583"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"summaryTable\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\[LeftAssociation]", 
       RowBox[{
        RowBox[{"\<\"timestamp\"\>", 
         "\[Rule]", "\<\"Tue 30 Jul 2019 12:08:07\"\>"}], ",", 
        RowBox[{"\<\"reading\"\>", "\[Rule]", "25"}]}], 
       "\[RightAssociation]"}], ",", 
      RowBox[{"\[LeftAssociation]", 
       RowBox[{
        RowBox[{"\<\"timestamp\"\>", 
         "\[Rule]", "\<\"Tue 30 Jul 2019 12:07:43\"\>"}], ",", 
        RowBox[{"\<\"reading\"\>", "\[Rule]", "49"}]}], 
       "\[RightAssociation]"}]}], "}"}]}], ",", 
   RowBox[{"\<\"imageUrl\"\>", 
    "\[Rule]", \
"\<\"https://www.wolframcloud.com/obj/mitch/live-coding/gauge?current=25\"\>"}\
]}], "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{{3.7734865352022934`*^9, 3.773486547998336*^9}, 
   3.7734867136629667`*^9, 3.7734867581852493`*^9, 3.7734898889504204`*^9, 
   3.7734916191955967`*^9, 3.773491687379593*^9},
 CellLabel->
  "Out[923]=",ExpressionUUID->"2fb68c63-1bef-40b4-bf2a-8c6c68a36c02"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"ClearAll", "[", "cd", "]"}], "\[IndentingNewLine]", 
 RowBox[{"cd", "=", 
  RowBox[{"CloudDeploy", "[", "\[IndentingNewLine]", 
   RowBox[{
   "api", ",", "\[IndentingNewLine]", "\"\</live-coding/gauge/\>\"", ",", 
    "\[IndentingNewLine]", 
    RowBox[{"Permissions", "\[Rule]", "\"\<Public\>\""}]}], 
   "\[IndentingNewLine]", "]"}]}]}], "Input",
 CellChangeTimes->{{3.7734237155243206`*^9, 3.77342376041626*^9}, {
   3.7734238031203136`*^9, 3.7734238065033107`*^9}, {3.7734245501145687`*^9, 
   3.7734245560985775`*^9}, 3.7734819472468977`*^9, {3.773489621240017*^9, 
   3.773489644494489*^9}, {3.77348992884142*^9, 3.7734899546174664`*^9}},
 CellLabel->
  "In[924]:=",ExpressionUUID->"cc5205e4-d91b-419e-881f-e8a0aaa3b552"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"CloudObject", "[", 
   TemplateBox[{
    "\"https://www.wolframcloud.com/obj/mitch/live-coding/gauge\"",
     "https://www.wolframcloud.com/obj/mitch/live-coding/gauge"},
    "HyperlinkURL"], "]"}],
  CloudObject["https://www.wolframcloud.com/obj/mitch/live-coding/gauge"],
  SelectWithContents->True]], "Output",
 CellChangeTimes->{3.773423764848288*^9, 3.773423811732342*^9, 
  3.773423846129341*^9, 3.773423965329818*^9, 3.7734245123779697`*^9, 
  3.7734245570406146`*^9, 3.7734819599608974`*^9, 3.773489960060474*^9, 
  3.7734916911525555`*^9},
 CellLabel->
  "Out[925]=",ExpressionUUID->"54f186d2-886f-41a3-816a-51c81f852145"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"ClearAll", "[", 
  RowBox[{"url", ",", "session"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"url", "=", 
  RowBox[{"URLBuild", "[", 
   RowBox[{"cd", ",", 
    RowBox[{"<|", 
     RowBox[{"\"\<current\>\"", "\[Rule]", "25"}], "|>"}]}], "]"}]}], "\n", 
 RowBox[{
  RowBox[{"session", "=", 
   RowBox[{"StartWebSession", "[", "\"\<Chrome\>\"", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"WebExecute", "[", 
   RowBox[{"session", ",", 
    RowBox[{"{", 
     RowBox[{"\"\<OpenPage\>\"", "\[Rule]", "url"}], "}"}]}], "]"}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.7734899986605844`*^9, 3.773490022783638*^9}},
 CellLabel->
  "In[926]:=",ExpressionUUID->"e5d21bb7-190e-46f4-a21c-8943ef276b43"],

Cell[BoxData["\<\"https://www.wolframcloud.com/obj/mitch/live-coding/gauge?\
current=25\"\>"], "Output",
 CellChangeTimes->{3.7734900253655806`*^9, 3.773491694464563*^9},
 CellLabel->
  "Out[927]=",ExpressionUUID->"e068d3db-66be-4b68-b415-d46d82c84636"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Upcoming sessions", "Chapter",
 CellChangeTimes->{{3.7638952926466093`*^9, 3.7638952984445906`*^9}, {
  3.7639024836480412`*^9, 3.7639024948250484`*^9}, {3.773237263330803*^9, 
  3.773237277552941*^9}},ExpressionUUID->"a8231bc6-a2be-43b8-b5ad-\
045d367a75d2"],

Cell["\<\
- Add NodeJS (+ Express) to the mix
- Introducing global state management of API requests and responses in React
- User managment
- Security
- Encryption
- AWS serverless (NodeJS)
- Sockets between React/Node and WC
- Making WC read, write, listen, and speak\
\>", "Text",
 CellChangeTimes->{{3.763895311183606*^9, 3.763895404183589*^9}, {
  3.7638955300315895`*^9, 3.763895581598591*^9}, {3.763902220666043*^9, 
  3.763902252925053*^9}, {3.763902357468041*^9, 3.7639024548940425`*^9}, {
  3.7639024981630635`*^9, 3.7639026050470424`*^9}, {3.763998374709749*^9, 
  3.7639983804727407`*^9}, {3.7730598740551395`*^9, 3.773059928816169*^9}, {
  3.7732372166076655`*^9, 
  3.773237238754826*^9}},ExpressionUUID->"da94c342-84e8-4745-9feb-\
29a8dc81f6a8"]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1008, 955},
WindowMargins->{{Automatic, -8}, {Automatic, 0}},
Magnification:>1.25 Inherited,
FrontEndVersion->"12.0 for Microsoft Windows (64-bit) (March 17, 2019)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 486, 10, 346, "Title",ExpressionUUID->"7d907abe-a0ba-4b39-905d-46d65bf1926e"],
Cell[CellGroupData[{
Cell[1091, 36, 153, 3, 83, "Section",ExpressionUUID->"aadec40a-3368-4723-89fd-8eb251f38546"],
Cell[1247, 41, 2055, 38, 598, "Text",ExpressionUUID->"61070079-5b9c-44ad-ba6d-a20bd75cf098"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3339, 84, 161, 3, 83, "Section",ExpressionUUID->"c94a9a1d-f6a8-4105-87a9-29514bdfea20"],
Cell[3503, 89, 5245, 74, 1431, "Text",ExpressionUUID->"4ffdfe0e-774a-401d-ba25-ab0a9cd91077"]
}, Open  ]],
Cell[CellGroupData[{
Cell[8785, 168, 562, 10, 145, "Chapter",ExpressionUUID->"6338c18a-e908-4bd3-bb68-42fb45001ed5"],
Cell[CellGroupData[{
Cell[9372, 182, 179, 3, 56, "Subsubsection",ExpressionUUID->"7d88993f-c247-4bae-b611-fcec715e8ebe"],
Cell[9554, 187, 767, 15, 127, "Text",ExpressionUUID->"c1d404f4-65d4-42b2-96b9-bcbc5026beea"],
Cell[CellGroupData[{
Cell[10346, 206, 500, 11, 35, "Input",ExpressionUUID->"308076bd-c2f5-471a-a7d9-8b93835f41ca"],
Cell[10849, 219, 4848, 100, 377, "Output",ExpressionUUID->"de32ffab-7baa-4266-b8b7-fe8cef9dce26"]
}, Open  ]],
Cell[CellGroupData[{
Cell[15734, 324, 562, 12, 60, "Input",ExpressionUUID->"01232c45-7620-4f0b-b6f3-f844fe1d473c"],
Cell[16299, 338, 5505, 103, 377, "Output",ExpressionUUID->"9e5a5a87-7bbd-44e2-ab84-a5aaaf99e25c"],
Cell[21807, 443, 56961, 1131, 227, "Output",ExpressionUUID->"e5d0f627-372d-4912-a10f-dee6aea83047"]
}, Open  ]],
Cell[CellGroupData[{
Cell[78805, 1579, 1136, 23, 104, "Input",ExpressionUUID->"132c48c3-530d-4b09-916a-f6f11865fc2f"],
Cell[79944, 1604, 626, 10, 40, "Output",ExpressionUUID->"7213bca9-d683-4f39-b3da-75c9b21c24f9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[80607, 1619, 425, 7, 35, "Input",ExpressionUUID->"ef0e9ed7-1caf-49ee-ad48-c380878680ee"],
Cell[81035, 1628, 97389, 1954, 437, "Output",ExpressionUUID->"b7111219-cb05-474a-9c1e-ec25be719f11"]
}, Open  ]],
Cell[CellGroupData[{
Cell[178461, 3587, 979, 26, 84, "Input",ExpressionUUID->"136f66f9-b9b7-4086-b118-ad97288df040"],
Cell[179443, 3615, 19494, 376, 165, "Output",ExpressionUUID->"a8c51ff6-5b45-4632-8ab7-e43519e6cb07"],
Cell[198940, 3993, 1349, 28, 89, "Output",ExpressionUUID->"17a3b5e8-67a6-4e37-bc47-3f227750bb1a"]
}, Open  ]],
Cell[200304, 4024, 202, 3, 43, "Text",ExpressionUUID->"ed23a14c-a1d9-4c99-9ff7-c9eb810109e0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[200543, 4032, 325, 7, 56, "Subsubsection",ExpressionUUID->"c53d79d8-fb2c-4604-b137-ec768127222b"],
Cell[200871, 4041, 165, 3, 43, "Text",ExpressionUUID->"7a839197-c670-47fa-8e31-9fce38584c36"],
Cell[CellGroupData[{
Cell[201061, 4048, 876, 24, 60, "Input",ExpressionUUID->"d2a734b4-605e-4f00-b396-d71eb4e451af"],
Cell[201940, 4074, 19487, 375, 165, "Output",ExpressionUUID->"698f3954-cb61-4833-899b-bbdb5664f055"]
}, Open  ]],
Cell[221442, 4452, 213, 4, 43, "Text",ExpressionUUID->"3a06bec2-37da-42a4-87ef-8fa35d9fa8fd"],
Cell[CellGroupData[{
Cell[221680, 4460, 804, 21, 60, "Input",ExpressionUUID->"1e6a13eb-5934-4755-a6ce-824470391a9b"],
Cell[222487, 4483, 19499, 375, 165, "Output",ExpressionUUID->"f054e8a5-b0e9-4c1b-a3fc-71473c0f1ec9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[242023, 4863, 2877, 58, 372, "Input",ExpressionUUID->"9bb93b02-e45c-48c1-8986-4b572b999a93"],
Cell[244903, 4923, 1874, 37, 113, "Output",ExpressionUUID->"9a6c57aa-fa78-41ca-946b-33e10667b618"],
Cell[246780, 4962, 21130, 407, 195, "Output",ExpressionUUID->"7258e522-9a72-4e91-898c-1568d2ccb2cc"]
}, Open  ]],
Cell[CellGroupData[{
Cell[267947, 5374, 633, 13, 156, "Input",ExpressionUUID->"3438e09c-226a-4225-9ccb-9970caf3747c"],
Cell[268583, 5389, 980, 19, 43, "Output",ExpressionUUID->"96da50b9-9509-478d-ad9f-0af18396f676"]
}, Open  ]],
Cell[CellGroupData[{
Cell[269600, 5413, 839, 23, 108, "Input",ExpressionUUID->"dec401f9-cb66-464c-a4c2-21c17147987c"],
Cell[270442, 5438, 597, 9, 40, "Output",ExpressionUUID->"06f5176b-2511-4e09-b019-0323279a946f"]
}, Open  ]],
Cell[271054, 5450, 504, 9, 99, "Text",ExpressionUUID->"6bf67c9a-61e3-4dca-89c5-3998af09b4b2"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[271607, 5465, 268, 4, 86, "Chapter",ExpressionUUID->"cc83e60b-6516-44a9-b6e4-a238f47e5bb7"],
Cell[CellGroupData[{
Cell[271900, 5473, 432, 7, 35, "Input",ExpressionUUID->"64a4bb46-427a-46c9-a3b7-cac7178b8af5"],
Cell[272335, 5482, 70683, 1411, 706, "Output",ExpressionUUID->"033e728a-b689-44ab-bc3f-c698e703c87a"]
}, Open  ]],
Cell[343033, 6896, 325, 8, 99, "Text",ExpressionUUID->"17cab103-6d96-43b6-ba30-7247d3ba8a52"],
Cell[CellGroupData[{
Cell[343383, 6908, 398, 8, 35, "Input",ExpressionUUID->"dd5a541b-33a7-454b-8781-95fe8a9a024e"],
Cell[343784, 6918, 43521, 841, 706, "Output",ExpressionUUID->"398d45c9-1129-4729-81ba-12cc35c0fc35"]
}, Open  ]],
Cell[387320, 7762, 249, 5, 35, "Input",ExpressionUUID->"eda86b97-100a-4618-9d27-1c357e2bde77"],
Cell[387572, 7769, 157, 3, 43, "Text",ExpressionUUID->"fba2f950-e855-4652-8cc8-500b5cc6aa06"],
Cell[CellGroupData[{
Cell[387754, 7776, 1089, 29, 108, "Input",ExpressionUUID->"0c6ca9d8-8273-4c7d-bccb-b3f5b791739f"],
Cell[388846, 7807, 891, 21, 57, "Output",ExpressionUUID->"6bc98e99-b459-4e88-8ac7-ee71798db631"]
}, Open  ]],
Cell[CellGroupData[{
Cell[389774, 7833, 1571, 38, 132, "Input",ExpressionUUID->"9d8b3959-2e32-453c-bef6-6fe2ae131214"],
Cell[391348, 7873, 2306, 57, 113, "Output",ExpressionUUID->"11f48aee-67a6-491f-a214-27a9d0994f82"]
}, Open  ]],
Cell[CellGroupData[{
Cell[393691, 7935, 171, 3, 56, "Subsubsection",ExpressionUUID->"5de9546f-7886-44bd-a320-bce3fc23c8a7"],
Cell[CellGroupData[{
Cell[393887, 7942, 2570, 57, 420, "Input",ExpressionUUID->"33316fcb-ee85-4eb1-8cbe-de517b8327cb"],
Cell[396460, 8001, 2406, 58, 113, "Output",ExpressionUUID->"4777b3b8-fab8-487a-a63c-82b916989a78"],
Cell[398869, 8061, 19342, 374, 375, "Output",ExpressionUUID->"b607c5dd-fc24-4b4b-8c63-861e227144c0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[418248, 8440, 677, 13, 156, "Input",ExpressionUUID->"17cdb4f6-85f9-4f0f-980f-ca0d35b15b37"],
Cell[418928, 8455, 686, 14, 43, "Output",ExpressionUUID->"f565e25a-c85b-41e6-b61a-ae2dfa30e048"]
}, Open  ]],
Cell[CellGroupData[{
Cell[419651, 8474, 887, 24, 108, "Input",ExpressionUUID->"85bb7909-3400-4d34-9952-09c79eb91989"],
Cell[420541, 8500, 405, 6, 97, "Output",ExpressionUUID->"ccf8e3c2-0950-4e38-9532-738b1e69b763"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[420995, 8512, 193, 3, 79, "Subchapter",ExpressionUUID->"e9587de0-486a-4a5c-91b2-efba721c9384"],
Cell[421191, 8517, 1516, 24, 293, "Text",ExpressionUUID->"6b1a3c32-5c16-4176-b092-5d989478ae65"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[422756, 8547, 239, 4, 86, "Chapter",ExpressionUUID->"ff531a9c-458c-4bc6-be60-da392c72e86b"],
Cell[422998, 8553, 409, 7, 71, "Text",ExpressionUUID->"2ea49dfa-c37e-4495-a6a7-f544354b95f6"],
Cell[CellGroupData[{
Cell[423432, 8564, 183, 2, 35, "Input",ExpressionUUID->"87950d2b-3006-4cff-afa7-c5efdbb51ff2"],
Cell[423618, 8568, 236, 3, 40, "Output",ExpressionUUID->"bce19a65-e4cc-4932-b925-ad8c56be7312"]
}, Open  ]],
Cell[423869, 8574, 331, 7, 43, "Text",ExpressionUUID->"0c2bd655-cb95-4ae9-8703-c6428c5aaf9b"],
Cell[CellGroupData[{
Cell[424225, 8585, 347, 6, 60, "Input",ExpressionUUID->"74ec7d9f-b6ce-436e-8e6d-d6cb1675782d"],
Cell[424575, 8593, 69241, 1401, 706, "Output",ExpressionUUID->"70614cd3-877e-4455-a1d2-6fc53e8f756e"]
}, Open  ]],
Cell[493831, 9997, 200, 3, 43, "Text",ExpressionUUID->"622b3c15-e26e-4771-b225-af6208be3d6d"],
Cell[CellGroupData[{
Cell[494056, 10004, 527, 10, 35, "Input",ExpressionUUID->"967e0ea2-1af6-43f1-a9db-4c6a097860bf"],
Cell[494586, 10016, 555, 11, 43, "Output",ExpressionUUID->"3f9e9811-e63b-4953-889d-f8bb0213dc65"]
}, Open  ]],
Cell[CellGroupData[{
Cell[495178, 10032, 324, 5, 60, "Input",ExpressionUUID->"9fe8e36c-a27a-460c-8c15-34d575363e51"],
Cell[495505, 10039, 69161, 1400, 706, "Output",ExpressionUUID->"e5255eb4-9efb-434c-9bf0-d3df6158850d"]
}, Open  ]],
Cell[564681, 11442, 729, 14, 99, "Text",ExpressionUUID->"a4044301-3c0d-41d4-8ec7-b09a44d70864"],
Cell[CellGroupData[{
Cell[565435, 11460, 249, 4, 35, "Input",ExpressionUUID->"5a0db035-0198-4d8a-98c4-64e2103c19a2"],
Cell[565687, 11466, 69328, 1403, 706, "Output",ExpressionUUID->"93e789f3-30f3-4cf8-8a12-634e5024545e"]
}, Open  ]],
Cell[635030, 12872, 268, 6, 43, "Text",ExpressionUUID->"a9101993-f674-43c3-ad80-fea76e4912e9"],
Cell[CellGroupData[{
Cell[635323, 12882, 299, 5, 35, "Input",ExpressionUUID->"4b6ec769-faba-404b-8708-863dbc554368"],
Cell[635625, 12889, 16017, 305, 167, "Output",ExpressionUUID->"5ef14b52-f732-49e6-806f-0cecd67b5a8e"]
}, Open  ]],
Cell[651657, 13197, 394, 7, 43, "Text",ExpressionUUID->"c9989137-8586-4070-bd64-250e1f06a426"],
Cell[CellGroupData[{
Cell[652076, 13208, 551, 12, 35, "Input",ExpressionUUID->"8a71ae71-b74d-48a0-8c36-931c9a804827"],
Cell[652630, 13222, 30071, 604, 375, "Output",ExpressionUUID->"18a03359-a80c-4652-a857-1f6440f74e14"]
}, Open  ]],
Cell[CellGroupData[{
Cell[682738, 13831, 520, 13, 35, "Input",ExpressionUUID->"c2b93c59-7c05-44ef-89b0-a86807d8134f"],
Cell[683261, 13846, 30027, 606, 375, "Output",ExpressionUUID->"e7625122-7c16-4325-ac47-afa525fd4ea6"]
}, Open  ]],
Cell[713303, 14455, 341, 8, 99, "Text",ExpressionUUID->"992d0389-8721-4a70-a3df-b18c9337fffc"],
Cell[CellGroupData[{
Cell[713669, 14467, 1981, 41, 324, "Input",ExpressionUUID->"ecff84a8-813c-4251-a957-912d2171a07a"],
Cell[715653, 14510, 1876, 41, 65, "Output",ExpressionUUID->"efc6545b-2827-433c-a26f-b48b8133ada9"],
Cell[717532, 14553, 21505, 422, 195, "Output",ExpressionUUID->"c6f5d353-608f-45ce-8aeb-73bec1acc436"]
}, Open  ]],
Cell[CellGroupData[{
Cell[739074, 14980, 724, 14, 156, "Input",ExpressionUUID->"86312b9f-15eb-4a5d-94fd-000fcd2dd8cf"],
Cell[739801, 14996, 791, 15, 43, "Output",ExpressionUUID->"a5d13f35-689f-432a-9c7e-7c3e2cd991c6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[740629, 15016, 921, 24, 108, "Input",ExpressionUUID->"1c45c2b9-29fa-4a62-a50e-0b7149d59231"],
Cell[741553, 15042, 560, 9, 40, "Output",ExpressionUUID->"273989d6-1480-4fad-97c9-376992f8cc31"]
}, Open  ]],
Cell[742128, 15054, 443, 10, 127, "Text",ExpressionUUID->"5615b31a-cc16-44ad-a441-9ca2707e4cea"]
}, Open  ]],
Cell[CellGroupData[{
Cell[742608, 15069, 418, 6, 86, "Chapter",ExpressionUUID->"4be90f8e-4ac4-411e-a26a-d7468e19002c"],
Cell[743029, 15077, 857, 14, 71, "Text",ExpressionUUID->"8bf331c7-8a21-4edd-be86-f5d100e9ea5f"],
Cell[CellGroupData[{
Cell[743911, 15095, 158, 3, 56, "Subsubsection",ExpressionUUID->"b95321f9-d69e-4a72-a1be-0aefa8846b95"],
Cell[CellGroupData[{
Cell[744094, 15102, 5357, 109, 516, "Input",ExpressionUUID->"696b552b-071e-4756-99e9-2b0fa9a6e390"],
Cell[749454, 15213, 35522, 663, 358, "Output",ExpressionUUID->"2e34c4a7-c98d-4372-9470-707eb5836e9f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[785013, 15881, 1470, 32, 204, "Input",ExpressionUUID->"157189a0-3214-4b0e-9fee-df70182e85c3"],
Cell[786486, 15915, 1673, 38, 126, "Output",ExpressionUUID->"f222b2ef-7db5-4e53-9d37-6446f64242ca"]
}, Open  ]],
Cell[CellGroupData[{
Cell[788196, 15958, 956, 26, 108, "Input",ExpressionUUID->"431ba32c-c291-4741-8106-95869f382e34"],
Cell[789155, 15986, 480, 8, 40, "Output",ExpressionUUID->"791b4679-928d-47f2-bb1d-d9d7b1bc379d"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[789684, 16000, 158, 3, 56, "Subsubsection",ExpressionUUID->"857f80d4-038a-4ecc-bb1f-d51a675fcc78"],
Cell[CellGroupData[{
Cell[789867, 16007, 4176, 91, 468, "Input",ExpressionUUID->"2a21effb-aed3-4b52-af17-46c3c06ef619"],
Cell[794046, 16100, 34421, 648, 358, "Output",ExpressionUUID->"a84e65f8-44cf-4650-8472-7c2098fcdcde"]
}, Open  ]],
Cell[CellGroupData[{
Cell[828504, 16753, 1274, 21, 156, "Input",ExpressionUUID->"abc84abf-1c85-42c6-bf97-93192f7f23cf"],
Cell[829781, 16776, 896, 17, 43, "Output",ExpressionUUID->"799a6d2f-adc3-4f3e-a4c2-492c4cad1616"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[830726, 16799, 154, 3, 45, "Subsubsection",ExpressionUUID->"4a05c937-9062-4c7a-997f-d71cbfba53d8"],
Cell[CellGroupData[{
Cell[830905, 16806, 3785, 86, 468, "Input",ExpressionUUID->"c53fc905-94f1-443d-916d-e0a56e5764cf"],
Cell[834693, 16894, 34373, 648, 358, "Output",ExpressionUUID->"64f9aad8-7ca7-415e-85d1-7758de1bea63"]
}, Open  ]],
Cell[CellGroupData[{
Cell[869103, 17547, 996, 18, 156, "Input",ExpressionUUID->"8248de37-3dc2-4757-a159-8316caf64d59"],
Cell[870102, 17567, 760, 15, 43, "Output",ExpressionUUID->"0fcaafb6-2595-4336-8ac3-682c06828a6c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[870899, 17587, 725, 21, 84, "Input",ExpressionUUID->"3a3b38af-5bd5-4091-a29d-1fa5b9d09d7b"],
Cell[871627, 17610, 251, 4, 40, "Output",ExpressionUUID->"be853c9a-e948-4a50-9a12-c82aca693369"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[871927, 17620, 156, 3, 45, "Subsubsection",ExpressionUUID->"7cafa75f-8574-4c4d-8ae0-5fb884a510ca"],
Cell[CellGroupData[{
Cell[872108, 17627, 3740, 86, 468, "Input",ExpressionUUID->"d05ad5f5-3f46-4b23-bf97-d81b1b2f7b6d"],
Cell[875851, 17715, 34415, 650, 358, "Output",ExpressionUUID->"3c48a2ce-7837-4d98-b288-7966912b86e5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[910303, 18370, 746, 15, 156, "Input",ExpressionUUID->"cc94da81-606c-4f4e-b6fb-c5cadf931e99"],
Cell[911052, 18387, 761, 15, 43, "Output",ExpressionUUID->"f3729b61-21fa-44f3-8c70-a4c37a454596"]
}, Open  ]],
Cell[CellGroupData[{
Cell[911850, 18407, 820, 23, 108, "Input",ExpressionUUID->"514a8c49-77f3-42d4-9f85-6f7e37158519"],
Cell[912673, 18432, 255, 4, 40, "Output",ExpressionUUID->"4a402d50-3aa1-45a1-9a4d-983a6b7833d8"]
}, Open  ]]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[912989, 18443, 279, 5, 86, "Chapter",ExpressionUUID->"0493cc2b-5455-4cf2-8c5b-23605cbe9aff"],
Cell[CellGroupData[{
Cell[913293, 18452, 364, 7, 130, "Section",ExpressionUUID->"abab56c3-1c64-484a-9f07-5879a8efa036"],
Cell[913660, 18461, 1514, 28, 349, "Text",ExpressionUUID->"1b7a4bfe-0a92-451e-b855-c338331eea75"],
Cell[CellGroupData[{
Cell[915199, 18493, 427, 10, 60, "Input",ExpressionUUID->"f73992fd-6327-4d73-ba7f-ab6860cdcea5"],
Cell[915629, 18505, 212, 4, 40, "Output",ExpressionUUID->"ef1b6933-5602-4f50-85ff-b9d037c1ddac"]
}, Open  ]],
Cell[915856, 18512, 239, 6, 35, "Input",ExpressionUUID->"0a9ec079-4d79-44b5-a4c9-c340001672eb"],
Cell[916098, 18520, 558, 11, 48, "Text",ExpressionUUID->"03b1c029-e3d6-421f-b85f-7d3457e77b01"],
Cell[916659, 18533, 470, 11, 80, "Input",ExpressionUUID->"d91003c1-b846-42d7-8ce4-9c2f701ed534"],
Cell[CellGroupData[{
Cell[917154, 18548, 165, 4, 35, "Input",ExpressionUUID->"6648ad76-01f9-4776-b5eb-2a78baebd6ed"],
Cell[917322, 18554, 210, 4, 40, "Output",ExpressionUUID->"1f703de6-aa23-4d1b-b102-9cdea9630f4a"]
}, Open  ]],
Cell[917547, 18561, 743, 18, 72, "Text",ExpressionUUID->"16197546-66e4-44cb-8078-600a064768ec"],
Cell[918293, 18581, 1069, 30, 118, "Input",ExpressionUUID->"ae4806dc-e1a7-4e28-820e-a28fbb9e1580"],
Cell[919365, 18613, 204, 3, 60, "Input",ExpressionUUID->"a651e608-8727-41fd-86f8-fcf085233817"],
Cell[919572, 18618, 347, 7, 43, "Text",ExpressionUUID->"2eca4685-de1f-4fce-9197-0ed7a54d47ee"],
Cell[919922, 18627, 350, 7, 43, "Text",ExpressionUUID->"4ae43a17-c9e7-4bd3-a4b9-39952928628f"],
Cell[CellGroupData[{
Cell[920297, 18638, 556, 14, 108, "Input",ExpressionUUID->"5f73716e-fa95-4c87-9e40-73a8f478a273"],
Cell[920856, 18654, 806, 27, 60, "Output",ExpressionUUID->"8f04a294-2d68-43ae-80b0-23dafb4bad66"],
Cell[921665, 18683, 182, 3, 40, "Output",ExpressionUUID->"23178346-0dc7-461c-b6c8-0b4f99dd303f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[921884, 18691, 1039, 27, 228, "Input",ExpressionUUID->"191ae26d-4ce5-4588-971a-ffcdb37f8193"],
Cell[922926, 18720, 1112, 34, 105, "Output",ExpressionUUID->"75b8efa6-c761-4cf9-acd8-543a2f80e0ec"],
Cell[924041, 18756, 283, 5, 40, "Output",ExpressionUUID->"9ab285be-f68d-4372-8aba-69c3a8001248"]
}, Open  ]],
Cell[CellGroupData[{
Cell[924361, 18766, 895, 19, 180, "Input",ExpressionUUID->"a44e3126-176c-441c-a884-162701d0d587"],
Cell[925259, 18787, 8730, 148, 108, "Output",ExpressionUUID->"43ca3a37-d19b-4e1c-985c-0bb4a33e7ff4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[934026, 18940, 548, 10, 84, "Input",ExpressionUUID->"1753ff4f-f802-4dd2-ac24-23aae8fcec26"],
Cell[934577, 18952, 342, 6, 40, "Output",ExpressionUUID->"852fb345-80ec-4a19-bea7-34eba74988e8"],
Cell[934922, 18960, 385, 8, 40, "Output",ExpressionUUID->"cb17fedf-9269-4556-8364-63f9f7e3888e"],
Cell[935310, 18970, 354, 6, 40, "Output",ExpressionUUID->"a1df7224-b474-4348-8ab4-fe61fc457ace"]
}, Open  ]],
Cell[CellGroupData[{
Cell[935701, 18981, 421, 9, 35, "Input",ExpressionUUID->"f9c251e2-b3ec-47e1-b82c-722d1d30c57b"],
Cell[936125, 18992, 255, 6, 40, "Output",ExpressionUUID->"49f5ad7a-ffa6-4eef-84b4-ed7c2b16206f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[936417, 19003, 426, 9, 35, "Input",ExpressionUUID->"949e3e4a-0eb8-425c-b108-76702fc14cd4"],
Cell[936846, 19014, 490, 9, 40, "Output",ExpressionUUID->"3838e90c-62c3-4156-8e90-07e6a9fdc268"]
}, Open  ]],
Cell[CellGroupData[{
Cell[937373, 19028, 308, 6, 35, "Input",ExpressionUUID->"6428be7f-961c-4d02-8c37-135de22a8881"],
Cell[937684, 19036, 295, 5, 40, "Output",ExpressionUUID->"d7f5d319-005c-4750-85bb-c52aa0793138"]
}, Open  ]],
Cell[937994, 19044, 484, 9, 99, "Text",ExpressionUUID->"e420b43f-c97e-449f-9672-3b777dd62622"],
Cell[CellGroupData[{
Cell[938503, 19057, 2366, 50, 396, "Input",ExpressionUUID->"6a7e3c5f-f847-4340-93df-8f35d87f1d44"],
Cell[940872, 19109, 6208, 106, 166, "Output",ExpressionUUID->"713aff51-9beb-4c01-a4c5-2749c149d574"],
Cell[947083, 19217, 805, 14, 40, "Output",ExpressionUUID->"4fc7024c-77ea-4dbf-8f5e-07caefc81506"],
Cell[947891, 19233, 762, 12, 40, "Output",ExpressionUUID->"e25f04b1-8260-4b38-9d6e-f4fa5409c6ae"]
}, Open  ]],
Cell[948668, 19248, 393, 8, 43, "Text",ExpressionUUID->"0f6a24d4-c743-43ed-9766-5c78d25665d6"],
Cell[CellGroupData[{
Cell[949086, 19260, 5864, 111, 636, "Input",ExpressionUUID->"1e4a62b1-3357-4d2d-9836-70ab22bad923"],
Cell[954953, 19373, 7318, 126, 217, "Output",ExpressionUUID->"842dcce3-ade8-43ef-bc5c-dc17acb600a4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[962308, 19504, 531, 11, 156, "Input",ExpressionUUID->"207606a0-f8b2-4771-b360-e3f5b4f9ecaf"],
Cell[962842, 19517, 1629, 27, 43, "Output",ExpressionUUID->"45909c58-a68c-4941-bd92-a965afe61eff"]
}, Open  ]],
Cell[CellGroupData[{
Cell[964508, 19549, 1223, 30, 108, "Input",ExpressionUUID->"9621aeb7-cbee-4b4a-99db-21121a06bf73"],
Cell[965734, 19581, 1534, 22, 40, "Output",ExpressionUUID->"28910dd1-8c49-4cbd-b9b0-844574f7ae8e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[967305, 19608, 205, 4, 35, "Input",ExpressionUUID->"f8abd2e9-a25c-418f-b267-64c82c0ed38f"],
Cell[967513, 19614, 173, 3, 40, "Output",ExpressionUUID->"ac77054f-c0fd-4c4d-9101-b3ebb4f5ebe3"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[967747, 19624, 596, 8, 86, "Chapter",ExpressionUUID->"389bf249-e632-44c7-bdb6-0b9f44175665"],
Cell[CellGroupData[{
Cell[968368, 19636, 180, 3, 56, "Subsubsection",ExpressionUUID->"af323de5-0c91-4a3b-8caa-32e1f2118487"],
Cell[CellGroupData[{
Cell[968573, 19643, 1247, 29, 204, "Input",ExpressionUUID->"b8cf66ed-2063-4efa-9f7e-c208bac2fd88"],
Cell[969823, 19674, 687, 14, 43, "Output",ExpressionUUID->"aaa9ffa1-7992-45ca-86e1-eda76a4d4e03"],
Cell[970513, 19690, 428, 7, 40, "Output",ExpressionUUID->"6edee19d-a20c-4533-b0ec-3f5784024850"]
}, Open  ]],
Cell[970956, 19700, 174, 3, 43, "Text",ExpressionUUID->"1fb2280f-ca11-48de-8728-3cd81b9ef21f"],
Cell[CellGroupData[{
Cell[971155, 19707, 802, 22, 108, "Input",ExpressionUUID->"463d9ab2-aa0d-4d3c-b75c-4c4ecfdea7f3"],
Cell[971960, 19731, 374, 6, 40, "Output",ExpressionUUID->"ec0b5bd7-ebd8-41cc-bd76-97a88a119188"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[972383, 19743, 168, 3, 56, "Subsubsection",ExpressionUUID->"d893d88c-e254-4c07-8494-3b28ce3dd7c3"],
Cell[CellGroupData[{
Cell[972576, 19750, 2266, 50, 468, "Input",ExpressionUUID->"0b8c2eb1-3fcb-4bed-8775-1216b3355177"],
Cell[974845, 19802, 75743, 1289, 288, "Output",ExpressionUUID->"2f802c17-9e3a-4224-a9e4-17176d370be4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1050625, 21096, 1148, 20, 156, "Input",ExpressionUUID->"1e92b2ab-070d-4612-bbfa-f42ba5b337a8"],
Cell[1051776, 21118, 589, 12, 43, "Output",ExpressionUUID->"8e95ec6a-7c4d-443c-9071-54352ba88df2"]
}, Open  ]],
Cell[1052380, 21133, 201, 3, 43, "Text",ExpressionUUID->"177d7354-f262-4136-846f-7b8a65f9b26e"],
Cell[CellGroupData[{
Cell[1052606, 21140, 823, 23, 108, "Input",ExpressionUUID->"edf39c39-c218-49af-ab42-548811bea5c2"],
Cell[1053432, 21165, 703, 11, 40, "Output",ExpressionUUID->"fc91bfc1-1dfb-4921-aa62-635455064713"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1054196, 21183, 685, 10, 86, "Chapter",ExpressionUUID->"662f0697-6bd2-47b5-ad9c-5b9db247263c"],
Cell[1054884, 21195, 164, 3, 43, "Text",ExpressionUUID->"1af7bef8-8291-45d3-9da0-74b411a7a5bf"],
Cell[CellGroupData[{
Cell[1055073, 21202, 1720, 39, 224, "Input",ExpressionUUID->"3c2fd98c-5145-4599-a4c1-ca76a25d1b07"],
Cell[1056796, 21243, 13363, 246, 105, "Output",ExpressionUUID->"9bca580f-1e50-4e8e-a06d-da0bab966586"],
Cell[1070162, 21491, 988, 18, 43, "Output",ExpressionUUID->"0bd257fa-0075-42e5-a562-5fda8e4bbddb"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1071187, 21514, 1467, 35, 156, "Input",ExpressionUUID->"ac391587-568f-4eb6-9ee1-399f76a2fcc1"],
Cell[1072657, 21551, 14303, 269, 165, "Output",ExpressionUUID->"1bab632b-7749-4440-a7a3-3c9a0475d62d"],
Cell[1086963, 21822, 491, 11, 43, "Output",ExpressionUUID->"227d9c19-646c-4107-9246-f234a3ce090d"]
}, Open  ]],
Cell[1087469, 21836, 2222, 52, 368, "Input",ExpressionUUID->"01832964-36c6-4494-a3a7-219fb1aec6af"],
Cell[CellGroupData[{
Cell[1089716, 21892, 507, 9, 60, "Input",ExpressionUUID->"6255b2a2-c04f-49c3-b64f-cce903dabdc4"],
Cell[1090226, 21903, 561, 12, 40, "Output",ExpressionUUID->"afd5d9a6-5571-4c2e-99aa-2905093b2351"],
Cell[1090790, 21917, 15999, 302, 225, "Output",ExpressionUUID->"7466c6e1-27fc-4992-aa5c-665a6d723377"]
}, Open  ]],
Cell[1106804, 22222, 309, 7, 71, "Text",ExpressionUUID->"0f6dc9d7-c5a6-4b42-a1dd-c62d6bc118a1"],
Cell[CellGroupData[{
Cell[1107138, 22233, 1215, 30, 156, "Input",ExpressionUUID->"468c70cb-2177-4d74-86ff-ace278bdb760"],
Cell[1108356, 22265, 1824, 66, 65, "Output",ExpressionUUID->"27dae30b-7688-412b-a23b-d6598bde61b1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1110217, 22336, 3300, 81, 324, "Input",ExpressionUUID->"c37a7d2f-d791-4fc6-bebf-ed3dc6b774f9"],
Cell[1113520, 22419, 16054, 302, 225, "Output",ExpressionUUID->"20116473-05a0-4b27-9b03-b1621538fb98"],
Cell[1129577, 22723, 2586, 87, 158, "Output",ExpressionUUID->"73655e4c-cfc4-4b2f-8ba5-5d5937b237b6"]
}, Open  ]],
Cell[1132178, 22813, 228, 4, 43, "Text",ExpressionUUID->"bd164d24-3d4b-4313-8d01-ab9ce560f0d7"],
Cell[CellGroupData[{
Cell[1132431, 22821, 7269, 158, 780, "Input",ExpressionUUID->"454cc471-45cc-4b8d-a2d8-5b85b8c40b5c"],
Cell[1139703, 22981, 1534, 25, 40, "Output",ExpressionUUID->"7a43151e-9af6-47d3-bda4-f77818ff0cfa"],
Cell[1141240, 23008, 30821, 508, 228, "Output",ExpressionUUID->"add7e514-5e95-4cc1-9291-81b97d9e02ea"],
Cell[1172064, 23518, 1328, 19, 40, "Output",ExpressionUUID->"59196734-d92a-4e46-9fe7-f9da65e73e8e"]
}, Open  ]],
Cell[1173407, 23540, 352, 5, 43, "Text",ExpressionUUID->"24c1c647-b3c6-487b-8a92-a99f0bb0154b"],
Cell[CellGroupData[{
Cell[1173784, 23549, 2973, 66, 440, "Input",ExpressionUUID->"426fb1a3-a6fa-4013-a98d-646b7c5b8c4b"],
Cell[1176760, 23617, 19113, 361, 345, "Output",ExpressionUUID->"01398d52-dfbb-411c-a7a3-257ca2dfe0ad"]
}, Open  ]],
Cell[1195888, 23981, 166, 3, 43, "Text",ExpressionUUID->"5b6756bd-1bef-48ed-adc0-cef479b2902d"],
Cell[CellGroupData[{
Cell[1196079, 23988, 1224, 32, 108, "Input",ExpressionUUID->"1074c872-35c5-442b-80f5-f1bb02a5ac61"],
Cell[1197306, 24022, 8613, 233, 40, "Output",ExpressionUUID->"249fc72b-18a0-460a-8657-475753a8abf6"],
Cell[1205922, 24257, 18075, 487, 65, "Output",ExpressionUUID->"4ad7aebe-62bd-486b-9ddc-c7479186e8e2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1224034, 24749, 10655, 219, 1356, "Input",ExpressionUUID->"e2061188-4627-4160-ab89-5017a34f656d"],
Cell[1234692, 24970, 34794, 574, 228, "Output",ExpressionUUID->"c29f63c2-cec4-4583-8512-2ba11225d2a0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1269523, 25549, 863, 17, 156, "Input",ExpressionUUID->"52341b23-8024-4a66-ab65-0c620c323560"],
Cell[1270389, 25568, 554, 12, 43, "Output",ExpressionUUID->"8b8c82bf-1d17-4c11-8429-748c7c84291e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1270980, 25585, 991, 25, 108, "Input",ExpressionUUID->"94d84d0e-0d78-4631-9bd1-ae9ef954e3b0"],
Cell[1271974, 25612, 627, 9, 40, "Output",ExpressionUUID->"51aeb80c-4d05-4d97-a1a3-1fcddb478793"]
}, Open  ]],
Cell[1272616, 25624, 443, 8, 71, "Text",ExpressionUUID->"55c87fee-b901-4806-be5e-9f3fe51e8fa7"],
Cell[CellGroupData[{
Cell[1273084, 25636, 370, 7, 60, "Input",ExpressionUUID->"05a3bde8-67d6-4f32-a4d9-953f04897c15"],
Cell[1273457, 25645, 179, 2, 40, "Output",ExpressionUUID->"006c2a28-4830-4d62-98d7-721f86bd87e0"],
Cell[1273639, 25649, 178, 2, 40, "Output",ExpressionUUID->"2ca0fcf4-266c-4ce1-8010-38679df78a72"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1273854, 25656, 2382, 53, 444, "Input",ExpressionUUID->"d2b854e8-8321-4440-aff4-ab9ce619f6c3"],
Cell[1276239, 25711, 623, 12, 43, "Output",ExpressionUUID->"70bcfe11-0eee-46c2-985b-ef83add4b10e"],
Cell[1276865, 25725, 369, 5, 40, "Output",ExpressionUUID->"92b953e5-b843-4374-b1b2-f66e06e6c072"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1277271, 25735, 2554, 57, 228, "Input",ExpressionUUID->"d9b4893e-45fd-43b6-ada2-4dae0e99aa72"],
Cell[1279828, 25794, 16383, 307, 225, "Output",ExpressionUUID->"5adf3573-8309-40ff-affa-43e3cfde3afc"],
Cell[1296214, 26103, 10770, 214, 246, "Output",ExpressionUUID->"e872b0cf-9295-4385-8bbb-4097d05e538e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1307021, 26322, 732, 18, 60, "Input",ExpressionUUID->"b2c051a1-730c-41b4-a7b1-05959bcd77e5"],
Cell[1307756, 26342, 720, 18, 40, "Output",ExpressionUUID->"10dee4d7-803a-4473-b0e6-e26f869d7a97"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1308513, 26365, 2925, 62, 468, "Input",ExpressionUUID->"feb55dd6-ac8e-4d60-987b-dd7ceff9f583"],
Cell[1311441, 26429, 1093, 26, 65, "Output",ExpressionUUID->"2fb68c63-1bef-40b4-bf2a-8c6c68a36c02"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1312571, 26460, 753, 14, 156, "Input",ExpressionUUID->"cc5205e4-d91b-419e-881f-e8a0aaa3b552"],
Cell[1313327, 26476, 676, 14, 43, "Output",ExpressionUUID->"54f186d2-886f-41a3-816a-51c81f852145"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1314040, 26495, 736, 20, 108, "Input",ExpressionUUID->"e5d21bb7-190e-46f4-a21c-8943ef276b43"],
Cell[1314779, 26517, 253, 4, 40, "Output",ExpressionUUID->"e068d3db-66be-4b68-b415-d46d82c84636"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1315081, 26527, 265, 4, 86, "Chapter",ExpressionUUID->"a8231bc6-a2be-43b8-b5ad-045d367a75d2"],
Cell[1315349, 26533, 759, 17, 238, "Text",ExpressionUUID->"da94c342-84e8-4745-9feb-29a8dc81f6a8"]
}, Open  ]]
}, Open  ]]
}
]
*)

