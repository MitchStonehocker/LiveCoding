(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[   1606354,      30440]
NotebookOptionsPosition[   1581710,      30034]
NotebookOutlinePosition[   1582084,      30050]
CellTagsIndexPosition[   1582041,      30047]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["\<\
Building WolframCloud APIs for JavaScript (React, Node, AWS)

Livecoding Session 3\
\>", "Title",
 CellChangeTimes->{{3.7638898877493024`*^9, 3.763889938762308*^9}, {
  3.7638899734873037`*^9, 3.763889994907301*^9}, {3.7647562659747314`*^9, 
  3.764756281453726*^9}, {3.773063878620057*^9, 3.7730638977200856`*^9}, {
  3.7732444445448933`*^9, 3.7732444546978936`*^9}, {3.773244662515252*^9, 
  3.77324466285128*^9}},ExpressionUUID->"7d907abe-a0ba-4b39-905d-\
46d65bf1926e"],

Cell[CellGroupData[{

Cell["Initializations", "Chapter",
 CellChangeTimes->{{3.774178168969735*^9, 
  3.7741781724947586`*^9}},ExpressionUUID->"cbb3bda8-dc2b-4eac-8dfb-\
a802d8b0bec1"],

Cell["\<\
https://www.wolframcloud.com/
https://datadrop.wolframcloud.com/\
\>", "Text",
 CellChangeTimes->{{3.7741761918734503`*^9, 
  3.774176214087894*^9}},ExpressionUUID->"4f1d6671-dc53-4a50-bed1-\
bbc2202ae343"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"$CloudBase", "=", 
  "\"\<https://www.wolframcloud.com/\>\""}]], "Input",
 CellChangeTimes->{{3.772000558621728*^9, 3.7720005610957527`*^9}, 
   3.772000644225724*^9},
 Background->RGBColor[0.87, 0.94, 1],
 CellLabel->"In[17]:=",ExpressionUUID->"721224c1-4e5a-403f-9de2-be954c80dcbb"],

Cell[BoxData["\<\"https://www.wolframcloud.com/\"\>"], "Output",
 CellChangeTimes->{3.7719997052525387`*^9, 3.771999957407722*^9, 
  3.7720001293997602`*^9, 3.77200021212276*^9, 3.772000375085758*^9, 
  3.7720004382888036`*^9, 3.772000668227727*^9, 3.772000943669759*^9, 
  3.7720299685211945`*^9, 3.772804720396514*^9, 3.7740927555853844`*^9, 
  3.774093003000536*^9, 3.7741159721942987`*^9, 3.7741170108497066`*^9, 
  3.774175890816307*^9, 3.7741764136208315`*^9},
 CellLabel->"Out[17]=",ExpressionUUID->"682ead1a-f060-4c23-a60c-a10152501725"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CloudConnect", "[", "\"\<mitch@aitoconsulting.com\>\"", 
  "]"}]], "Input",
 CellChangeTimes->{3.77200027031472*^9},
 Background->RGBColor[0.87, 0.94, 1],
 CellLabel->"In[18]:=",ExpressionUUID->"fa87c054-4986-427c-970b-da9bebd5f4c6"],

Cell[BoxData["\<\"mitch@aitoconsulting.com\"\>"], "Output",
 CellChangeTimes->{
  3.7719997241285095`*^9, 3.7719999602937365`*^9, {3.7720004152897463`*^9, 
   3.7720004303207216`*^9}, 3.7720006846057243`*^9, 3.7720009568477554`*^9, 
   3.772029982680825*^9, 3.7728047314390244`*^9, 3.7740927782636814`*^9, 
   3.774093015472249*^9, 3.7741159801637545`*^9, 3.774117019433197*^9, 
   3.774175974665677*^9, 3.774176415561801*^9},
 CellLabel->"Out[18]=",ExpressionUUID->"2d54e654-6749-4a94-8136-8ea862e9454a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"ClearAll", "[", 
  RowBox[{"choices", ",", "get"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"choices", "=", 
  RowBox[{"Sort", "[", 
   RowBox[{"{", 
    RowBox[{
    "\"\<posts\>\"", ",", "\"\<comments\>\"", ",", "\"\<albums\>\"", ",", 
     "\"\<photos\>\"", ",", "\"\<todos\>\"", ",", "\"\<users\>\""}], "}"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"get", "[", "it_String", "]"}], ":=", 
  RowBox[{"Import", "[", 
   RowBox[{
    RowBox[{"\"\<https://jsonplaceholder.typicode.com/\>\"", "<>", "it"}], 
    ",", "\"\<RawJSON\>\""}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.763983312549301*^9, 3.7639833193873*^9}, {
   3.7639833623163166`*^9, 3.7639834394571075`*^9}, {3.7639837733901052`*^9, 
   3.763983776781107*^9}, {3.7639839200371246`*^9, 3.7639839560871067`*^9}, 
   3.763984014286107*^9, 3.7639842443151083`*^9, {3.763993962012494*^9, 
   3.763993963370494*^9}, {3.7649665056809564`*^9, 3.764966565686982*^9}, {
   3.7649666378140173`*^9, 3.7649666381970177`*^9}},
 Background->RGBColor[0.88, 1, 0.88],
 CellLabel->"In[79]:=",ExpressionUUID->"bf085ee1-349b-415e-bf4b-e8df1a01ea50"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"albums\"\>", ",", "\<\"comments\"\>", ",", "\<\"photos\"\>", 
   ",", "\<\"posts\"\>", ",", "\<\"todos\"\>", ",", "\<\"users\"\>"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.774178458754631*^9},
 CellLabel->"Out[80]=",ExpressionUUID->"1a796059-7345-4236-926a-c6644cc2f7e6"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Overview", "Section",
 CellChangeTimes->{{3.764756563582971*^9, 
  3.764756565220968*^9}},ExpressionUUID->"aadec40a-3368-4723-89fd-\
8eb251f38546"],

Cell["\<\
Assumptions:
- Familiarity with Mathematica.  
- Familiarity of JS is helpful but not required for this presentation.

A few words about:
- Introduction and background for React (https://reactjs.org/) / Axios and \
Node (https://nodejs.org/en/) / Express.
- Wolfram setup, we will use the following tools:
\t- Mathematica desktop (wolfram.com/) & Wolfram Cloud (wolframcloud.com - \
free sign up.  You can use Wolfram Cloud (WC) alone if you like)
- Other than Wolfram setup:
\t- npm (https://www.npmjs.com/) 
\t- git (https://git-scm.com/)
\t- GitHub (https://github.com/)
\t- AWS (free tier: https://aws.amazon.com/console/)
\t- AWS-CLI (https://aws.amazon.com/cli/)
\t- AWS Amplify (https://aws.amazon.com/amplify/)
\t- create-react-app (https://facebook.github.io/create-react-app/)
\t- Chrome browser (google.com/chrome).  We will use chrome developer tools.  \
Other browsers and their browser tools may not be sufficient for what we will \
doing)
\t- Postman (getpostman.com/ for validating and testing APIs) \
\>", "Text",
 CellChangeTimes->{{3.763890011612302*^9, 3.7638901696143055`*^9}, {
   3.763890200718302*^9, 3.7638902611903043`*^9}, 3.764756403943945*^9, {
   3.7647565533949785`*^9, 3.764756557441941*^9}, {3.764756840776133*^9, 
   3.764756841297163*^9}, {3.764757171913148*^9, 3.764757183439116*^9}, {
   3.764757372949869*^9, 3.7647573743968663`*^9}, {3.764757413359903*^9, 
   3.7647574358868675`*^9}, {3.7647574930818973`*^9, 
   3.7647574986978655`*^9}, {3.7647575428068686`*^9, 
   3.7647575515239162`*^9}, {3.764757605406885*^9, 3.7647576177608685`*^9}, {
   3.765994705983547*^9, 3.7659947241623526`*^9}, {3.772980054888672*^9, 
   3.7729800636716423`*^9}, {3.772992965596657*^9, 3.7729929935746317`*^9}, {
   3.7729931157593164`*^9, 3.7729933743705482`*^9}, {3.7729934104615884`*^9, 
   3.772993510872326*^9}, {3.7729939744644995`*^9, 3.772993976561745*^9}, {
   3.773232226841055*^9, 3.7732322335620775`*^9}, {3.773232270260056*^9, 
   3.773232301914174*^9}},ExpressionUUID->"61070079-5b9c-44ad-ba6d-\
a20bd75cf098"]
}, Closed]],

Cell[CellGroupData[{

Cell["Introduction", "Section",
 CellChangeTimes->{{3.7647565738499856`*^9, 
  3.7647565760699434`*^9}},ExpressionUUID->"c94a9a1d-f6a8-4105-87a9-\
29514bdfea20"],

Cell[TextData[{
 "Motivating principle: separation of duties for people and software \
supporting the goals of modular design principles.  Easy to understand \
separating people by expertise in front-end, back-end and quantitative \
capabilities and code production.\n\nThis is the first of three (or more) \
live-coding walk-through\[CloseCurlyQuote]s that show an approach to \
integrating Mathematica to a browser front-end (ReactJS) and a serverless \
back-end (Node JS and AWS).\n\nReactJS is a JavaScript (JS) library widely \
used to make single page applications (SPAs).   \[OpenCurlyQuote]Hooks\
\[CloseCurlyQuote] were introduced in the recently released version 16.8 \
(https://reactjs.org/docs/hooks-intro.html).  Using hooks allows React \
developers to ",
 StyleBox["write JS applications using 100% functional methods",
  FontSlant->"Italic"],
 " - eliminating the need for JS classes.  There are many advantages to this \
new capability and we will focus on the implications for APIs between React \
and the Wolfram Cloud (WC) and between AWS and WC.\n\nWe will show JS and JSX \
(https://reactjs.org/docs/introducing-jsx.html) with respect to how the API \
requests (req) and responses (res) are managed.  The JS browser app is a bear \
bones deployment with minimal styling and organization considerations.  \n\n\
We will iterate from the simplest possible API (that I can think of) to ever \
more complex patterns.  There are JS and React considerations that impact the \
WC side of the API.  A number of these considerations will be presented, \
discussed and dealt with.  In every instance the goal is to produce \
Mathematica side code that is simultaneously used for presentation in a \
browser and analytical use is Mathematica. \n\nSome requests and \
considerations:\n- You will see the URL I use (my WC account) and API \
end-points I am using.  I've made these public for these live coding \
sessions.  It's ok during the live coding session to use my APIs if you can't \
make yours work, but please setup your own WC account, make your own APIs and \
use them.\n\nThe general development pattern:\n1.0) Three parts to \
APIFunction[...]:\n\t1.1) inputs\n\t1.2) functions\n\t1.3) output format\n\
2.0) Test by passing an association of API inputs <|key -> value, ...|>\n3.0) \
Two\[CloseCurlyQuote]ish parts to CloudDeploy[...]:\n\t3.1) the api function \
(1 above)\n\t3.2) options:\n\t\t3.2.1) the path and api name\n\t\t3.2.2) \
permissions\n4.0) Test:\n\t4.1) to a browser with StartWebSession[...] and \
WebExecute[...]\n\t4.2) to postman\n5.0) Connect to:\n\t5.1) front-end \
(React)\n\t5.2) backend (Node)\n\t\t5.2.1) test serverless api between AWS \
(via Node) and WC \n\nHere are a couple web sites that are built on this \
pattern where the front-end is a Single Page Application (SPA) using React, \
the back-end is serverless and built on NodeJS - AWS, and everything \
computational is done with Wolfram (Wolfram Cloud):\n\t- \
https://www.aitoconsulting.org/options-pub\n\t- \
https://www.christyhealth.org/ "
}], "Text",
 CellChangeTimes->{{3.7638925113235245`*^9, 3.763892602952525*^9}, {
   3.7638926449898577`*^9, 3.763892679550857*^9}, {3.7638927610188594`*^9, 
   3.763892870950164*^9}, {3.763892919391177*^9, 3.7638929197561655`*^9}, {
   3.763892955061165*^9, 3.7638929800851707`*^9}, {3.763893021724162*^9, 
   3.7638930466791625`*^9}, {3.763893083743539*^9, 3.763893241971854*^9}, {
   3.763893325857852*^9, 3.7638933827108536`*^9}, {3.763893503539854*^9, 
   3.763893729315853*^9}, {3.7638937626608524`*^9, 3.763893772730853*^9}, {
   3.763893813032853*^9, 3.763893829265854*^9}, {3.763893938532851*^9, 
   3.763894148194852*^9}, {3.7638942514368525`*^9, 3.7638943385438538`*^9}, {
   3.763901766635436*^9, 3.7639019780990415`*^9}, {3.763902013962042*^9, 
   3.763902198031045*^9}, {3.7647564315139456`*^9, 3.764756431692975*^9}, {
   3.764756465136969*^9, 3.7647565251609664`*^9}, {3.7647566636861153`*^9, 
   3.764756769370118*^9}, {3.7647568109481173`*^9, 3.764756823416159*^9}, {
   3.764756881883115*^9, 3.7647568877021427`*^9}, {3.7647569634591217`*^9, 
   3.7647570924251404`*^9}, {3.76475766166391*^9, 3.7647576621639104`*^9}, {
   3.764757730854865*^9, 3.7647577487108665`*^9}, {3.7647577840658665`*^9, 
   3.7647579290088663`*^9}, {3.764757988805909*^9, 3.7647580408408937`*^9}, {
   3.7649622307181253`*^9, 3.7649622315621276`*^9}, {3.7649626531221275`*^9, 
   3.7649626773441277`*^9}, {3.772993077615311*^9, 3.7729931022412853`*^9}, {
   3.7729935878615055`*^9, 3.77299362437051*^9}, {3.7729936643474936`*^9, 
   3.7729936649064684`*^9}, {3.7729937384994183`*^9, 3.772993739050414*^9}, {
   3.7729937745017257`*^9, 3.772993794516692*^9}, {3.7729938280945597`*^9, 
   3.7729938590646877`*^9}, {3.7729939121487713`*^9, 3.772993943128764*^9}, {
   3.7729939959827538`*^9, 3.7729940407840967`*^9}, {3.772994093559266*^9, 
   3.772994160221322*^9}, {3.77299464254669*^9, 3.7729946757376604`*^9}, {
   3.7729947195446897`*^9, 3.772994853649682*^9}, {3.772994884498707*^9, 
   3.7729951249580517`*^9}, {3.7730641663149085`*^9, 
   3.7730644514901915`*^9}, {3.773232313741212*^9, 3.7732324943412533`*^9}, 
   3.773232538264116*^9},ExpressionUUID->"4ffdfe0e-774a-401d-ba25-\
ab0a9cd91077"]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Build your own API maker functions : v01", "Chapter",
 CellChangeTimes->{{3.7736617148084087`*^9, 3.7736617465784335`*^9}, {
  3.7736673099547524`*^9, 3.7736673539397755`*^9}, {3.773667404509841*^9, 
  3.7736674161758194`*^9}},ExpressionUUID->"d40c6ba1-9bcf-48d5-b198-\
46dd20d72e26"],

Cell[BoxData[{
 RowBox[{"ClearAll", "[", 
  RowBox[{"makeAPI", ",", "args", ",", "func", ",", "frmt"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"makeAPI", "[", 
     RowBox[{"args_List", ",", " ", "func_Function", ",", "frmt_String"}], 
     "]"}], ":=", " ", 
    RowBox[{"APIFunction", "[", "\[IndentingNewLine]", 
     RowBox[{
     "args", ",", "\[IndentingNewLine]", "func", ",", "\[IndentingNewLine]", 
      " ", "frmt"}], "\[IndentingNewLine]", "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"ClearAll", "[", 
  RowBox[{"makeCD", ",", "args", ",", "func", ",", "frmt"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"makeCD", "[", 
    RowBox[{
    "args_List", ",", " ", "func_Function", ",", "frmt_String", ",", 
     "endPoint_String", ",", "funcName_String", ",", "permit_String"}], "]"}],
    ":=", 
   RowBox[{"CloudDeploy", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"makeAPI", "[", 
      RowBox[{"args", ",", " ", "func", ",", "frmt"}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
     "\"\</\>\"", "<>", "endPoint", "<>", "\"\</\>\"", "<>", "funcName", 
      "<>", "\"\</\>\""}], ",", "\[IndentingNewLine]", 
     RowBox[{"Permissions", "\[Rule]", "\"\<Public\>\""}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.773580716432955*^9, 3.7735807328389626`*^9}, {
   3.7735808569771433`*^9, 3.7735808796991425`*^9}, {3.7735809141251698`*^9, 
   3.773580922534187*^9}, {3.773600092248564*^9, 3.773600098527587*^9}, {
   3.7736596216758986`*^9, 3.773659735256956*^9}, {3.7736599742873755`*^9, 
   3.7736599853993735`*^9}, {3.773660983524245*^9, 3.773661000424245*^9}, {
   3.7736610465622067`*^9, 3.7736610664822454`*^9}, {3.7736619117906775`*^9, 
   3.7736619121756687`*^9}, {3.773664630770135*^9, 3.7736646353111267`*^9}, {
   3.773667462517838*^9, 3.773667487645849*^9}, 3.7736680855313616`*^9, {
   3.7737458687736235`*^9, 3.7737458918665867`*^9}, {3.7737459561496224`*^9, 
   3.7737459789076176`*^9}, {3.773746051127763*^9, 3.773746060579761*^9}, {
   3.7737470564803343`*^9, 3.7737470569753356`*^9}, {3.773747103230336*^9, 
   3.7737471219803357`*^9}, 3.773747181117334*^9, {3.7737473589023714`*^9, 
   3.7737473592443767`*^9}, {3.773762080995393*^9, 3.7737620868813972`*^9}, {
   3.7740161550988865`*^9, 3.774016176176853*^9}, {3.774016272717852*^9, 
   3.7740162821608553`*^9}, {3.7741750982404776`*^9, 3.7741751277812557`*^9}},
 Background->RGBColor[0.88, 1, 0.88],
 CellLabel->"In[19]:=",ExpressionUUID->"725d77f7-93a5-4ad3-bc6a-c4bd3716c6e5"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"ClearAll", "[", 
  RowBox[{"args", ",", "func", ",", "frmt", ",", "params"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"args", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\"\<x\>\"", "\[Rule]", 
      RowBox[{"Interpreter", "[", "\"\<Integer\>\"", "]"}]}], ",", 
     RowBox[{"\"\<y\>\"", "\[Rule]", 
      RowBox[{"Interpreter", "[", "\"\<Integer\>\"", "]"}]}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"func", "=", 
   RowBox[{"Function", "[", " ", 
    RowBox[{"RandomInteger", "[", 
     RowBox[{"{", 
      RowBox[{"#x", ",", "#y"}], "}"}], "]"}], " ", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"frmt", "=", "\"\<JSON\>\""}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"params", "=", 
   RowBox[{"<|", 
    RowBox[{
     RowBox[{"\"\<x\>\"", "\[Rule]", 
      RowBox[{"-", "10"}]}], ",", 
     RowBox[{"\"\<y\>\"", "\[Rule]", "10"}]}], "|>"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"makeAPI", "[", 
   RowBox[{"args", ",", " ", "func", ",", "frmt"}], "]"}], "[", "params", 
  "]"}]}], "Input",
 CellChangeTimes->{{3.7736618675994525`*^9, 3.77366191484867*^9}, {
   3.773662903846877*^9, 3.7736629081608653`*^9}, 3.7737458834606175`*^9, {
   3.77374673095638*^9, 3.773746808504383*^9}, {3.773746944652049*^9, 
   3.773746955305046*^9}, {3.7738375963626957`*^9, 3.773837622260892*^9}},
 CellLabel->"In[23]:=",ExpressionUUID->"370f31d8-63d6-4ae1-b568-0a8fbf6f63f1"],

Cell[BoxData["2"], "Output",
 CellChangeTimes->{{3.7736619213676796`*^9, 3.7736619344566526`*^9}, 
   3.7736630561768427`*^9, 3.773664408177539*^9, {3.773667530601861*^9, 
   3.7736675370128603`*^9}, {3.7736675751278057`*^9, 3.773667579308942*^9}, 
   3.7736680953913956`*^9, {3.7737459696206207`*^9, 3.773745981221617*^9}, {
   3.773746074712762*^9, 3.7737460834837265`*^9}, {3.7737467451203785`*^9, 
   3.773746777397381*^9}, 3.773746810332381*^9, {3.7737469483790436`*^9, 
   3.773746956693183*^9}, 3.7737472414283333`*^9, 3.7737472973934965`*^9, 
   3.7737473778173733`*^9, 3.7737621021274023`*^9, 3.773837636154719*^9, 
   3.774013939600864*^9, 3.774014087081349*^9, 3.774175609816526*^9, 
   3.7741756576965466`*^9, 3.774175770859595*^9, 3.774176463951833*^9},
 CellLabel->"Out[28]=",ExpressionUUID->"c81b73da-42cf-4ea9-914a-1afeda0c5a3f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"endPoint", "=", "\"\<live-coding-unitTest\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"funcName", "=", "\"\<random-integer\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"permit", "=", "\"\<Public\>\""}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"makeCD", "[", 
  RowBox[{
  "args", ",", " ", "func", ",", "frmt", ",", "endPoint", ",", "funcName", 
   ",", "permit"}], "]"}]}], "Input",
 CellChangeTimes->{{3.7736619871076555`*^9, 3.773662013041643*^9}, 
   3.7736681050253935`*^9, 3.773746071272764*^9, {3.7737473736363707`*^9, 
   3.7737473740623913`*^9}, {3.7737620475613937`*^9, 3.773762094389408*^9}, {
   3.7738376924733276`*^9, 3.773837717800318*^9}},
 CellLabel->"In[29]:=",ExpressionUUID->"a23c238a-f39c-4cda-9ce2-ca353ef5b2e0"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"CloudObject", "[", 
   TemplateBox[{
    "\"https://www.wolframcloud.com/obj/mitch/live-coding-unitTest/random-\
integer\"",
     "https://www.wolframcloud.com/obj/mitch/live-coding-unitTest/random-\
integer"},
    "HyperlinkURL"], "]"}],
  CloudObject[
  "https://www.wolframcloud.com/obj/mitch/live-coding-unitTest/random-\
integer"],
  SelectWithContents->True]], "Output",
 CellChangeTimes->{
  3.7736620213611093`*^9, 3.7736630795368547`*^9, 3.7736644117805057`*^9, 
   3.773667585420095*^9, 3.7736681065653977`*^9, {3.7737459886886168`*^9, 
   3.77374601566864*^9}, {3.7737460771527576`*^9, 3.7737460847147627`*^9}, 
   3.773746749911414*^9, 3.773746814396383*^9, 3.773746958317676*^9, 
   3.773747243291335*^9, 3.7737472986895294`*^9, 3.773747379481369*^9, {
   3.773762104218398*^9, 3.7737621270123997`*^9}, 3.7738377315853205`*^9, 
   3.774013941405862*^9, 3.774014090503397*^9, 3.7741757773695908`*^9, 
   3.774176465867833*^9},
 CellLabel->"Out[32]=",ExpressionUUID->"3f0d46be-6bd0-4ba7-be26-3f55ad4356e0"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Test 1", "Subsubsection",
 CellChangeTimes->{{3.7736676961214037`*^9, 
  3.7736676999553995`*^9}},ExpressionUUID->"94cdac42-45ea-41b6-b1d9-\
3c215566d0f9"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", 
   RowBox[{"url", ",", "session"}], "]"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"url", "=", 
  RowBox[{"URLBuild", "[", " ", 
   RowBox[{
    RowBox[{"makeCD", "[", 
     RowBox[{
     "args", ",", " ", "func", ",", "frmt", ",", "endPoint", ",", "funcName", 
      ",", "permit"}], "]"}], ",", "params"}], " ", "]"}]}], "\n", 
 RowBox[{
  RowBox[{"session", "=", 
   RowBox[{"StartWebSession", "[", "\"\<Chrome\>\"", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"WebExecute", "[", 
   RowBox[{"session", ",", 
    RowBox[{"{", 
     RowBox[{"\"\<OpenPage\>\"", "\[Rule]", "url"}], "}"}]}], "]"}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.7735808996161795`*^9, 3.7735809249151573`*^9}, 
   3.7736607525566893`*^9, {3.773661203762297*^9, 3.7736612043542957`*^9}, 
   3.7736620307897305`*^9, {3.773662696525648*^9, 3.7736626969336395`*^9}, 
   3.7736681170043697`*^9, 3.7737460914147625`*^9, 3.7737473957718883`*^9, {
   3.7737621209833984`*^9, 3.7737621213444366`*^9}, {3.774176520584875*^9, 
   3.7741765216018806`*^9}},
 Background->RGBColor[
  0.87, 0.94, 1],ExpressionUUID->"2fbc15d9-7803-49d9-a984-6e45b5c14c0e"],

Cell[BoxData["\<\"https://www.wolframcloud.com/obj/mitch/live-coding-unitTest/\
random-integer?x=-10&y=10\"\>"], "Output",
 CellChangeTimes->{3.773662037398693*^9, 3.7736630823668222`*^9, 
  3.7736644130515375`*^9, 3.773667597671092*^9, 3.773667632544972*^9, 
  3.773668118720356*^9, 3.7737460178595943`*^9, 3.773746096437769*^9, 
  3.773746893326091*^9, 3.7737469608390613`*^9, 3.7737472459483347`*^9, 
  3.7737473005675287`*^9, 3.7737473983098974`*^9, 3.773762130885397*^9, 
  3.773838278195064*^9, 3.774013943545827*^9, 3.7740141073566246`*^9, 
  3.7741764975138006`*^9},
 CellLabel->"Out[34]=",ExpressionUUID->"9ee9bf0f-aec6-4e3e-8a79-4cf8dbda542a"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Test 2", "Subsubsection",
 CellChangeTimes->{{3.773667707816431*^9, 
  3.77366770942643*^9}},ExpressionUUID->"a09bf26f-61f5-40ad-86c2-\
a450b2166acf"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", 
   RowBox[{
   "args", ",", "func", ",", "frmt", ",", "params", ",", "endPoint", ",", 
    "funcName", ",", "url", ",", "session"}], "]"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"args", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\"\<a\>\"", "\[Rule]", 
      RowBox[{"Interpreter", "[", "\"\<Integer\>\"", "]"}]}], ",", 
     RowBox[{"\"\<b\>\"", "\[Rule]", 
      RowBox[{"Interpreter", "[", "\"\<Integer\>\"", "]"}]}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"func", "=", 
   RowBox[{"Function", "[", "\[IndentingNewLine]", 
    RowBox[{"Framed", "@", 
     RowBox[{"Plot", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Sin", "[", "y", "]"}], ",", 
         RowBox[{"Cos", "[", "y", "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"y", ",", "#a", ",", "#b"}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"PlotLabel", "\[Rule]", 
        RowBox[{"Style", "[", 
         RowBox[{
          RowBox[{"Framed", "[", 
           RowBox[{"\"\<y = Sin[x] between \>\"", "<>", 
            RowBox[{"ToString", "[", "#a", "]"}], "<>", "\"\< and \>\"", "<>", 
            RowBox[{"ToString", "[", "#b", "]"}], "<>", "\"\< in \>\"", "<>", 
            "frmt", "<>", "\"\< Format\>\""}], "]"}], ",", "12", ",", "Black",
           ",", 
          RowBox[{"Background", "\[Rule]", 
           RowBox[{"Lighter", "[", "LightGreen", "]"}]}]}], "]"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"Filling", "\[Rule]", "Axis"}], ",", "\[IndentingNewLine]", 
       RowBox[{"AxesLabel", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"\"\<x\>\"", ",", "\"\<Sin[x]\>\""}], "}"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"AxesStyle", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Directive", "[", 
           RowBox[{"Thin", ",", "Dashed", ",", "Black"}], "]"}], ",", 
          "Blue"}], "}"}]}], ",", "\[IndentingNewLine]", 
       RowBox[{"PlotLegends", "\[Rule]", "\"\<Expressions\>\""}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"Epilog", "\[Rule]", 
        RowBox[{"Flatten", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"PointSize", "[", "0.015", "]"}], ",", 
           RowBox[{
            RowBox[{
             RowBox[{"Point", "[", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"#", "*", "Pi"}], ",", "0"}], "}"}], "]"}], "&"}], "/@", 
            RowBox[{"Range", "[", 
             RowBox[{"#a", ",", "#b", ",", ".5"}], "]"}]}]}], "}"}], "]"}]}], 
       ",", "\[IndentingNewLine]", 
       RowBox[{"ImageSize", "\[Rule]", "Medium"}]}], "]"}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"frmt", "=", "\"\<SVG\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"params", "=", 
    RowBox[{"<|", 
     RowBox[{
      RowBox[{"\"\<a\>\"", "\[Rule]", 
       RowBox[{"-", "3"}]}], ",", 
      RowBox[{"\"\<b\>\"", "\[Rule]", "3"}]}], "|>"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"endPoint", "=", "\"\<live-coding-unitTest\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"funcName", "=", 
   RowBox[{"\"\<sin-\>\"", "<>", 
    RowBox[{"ToLowerCase", "[", "frmt", "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"permit", "=", "\"\<Public\>\""}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"url", "=", 
  RowBox[{"URLBuild", "[", 
   RowBox[{
    RowBox[{"makeCD", "[", 
     RowBox[{
     "args", ",", " ", "func", ",", "frmt", ",", "endPoint", ",", "funcName", 
      ",", "permit"}], "]"}], ",", "params"}], "]"}]}], "\n", 
 RowBox[{
  RowBox[{"session", "=", 
   RowBox[{"StartWebSession", "[", "\"\<Chrome\>\"", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"WebExecute", "[", 
   RowBox[{"session", ",", 
    RowBox[{"{", 
     RowBox[{"\"\<OpenPage\>\"", "\[Rule]", "url"}], "}"}]}], "]"}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.7735808996161795`*^9, 3.7735809249151573`*^9}, 
   3.7736607525566893`*^9, {3.773661203762297*^9, 3.7736612043542957`*^9}, 
   3.7736620307897305`*^9, {3.773662685187646*^9, 3.7736627219256124`*^9}, {
   3.773662758423649*^9, 3.773662843493866*^9}, {3.7736628820558376`*^9, 
   3.7736628897328663`*^9}, {3.7736629249778385`*^9, 3.773662967393873*^9}, {
   3.773663004786618*^9, 3.773663010484652*^9}, {3.773663115013795*^9, 
   3.7736631173247595`*^9}, {3.7736631546897974`*^9, 
   3.7736631861866245`*^9}, {3.773663789125504*^9, 3.7736638078604717`*^9}, {
   3.773663910538672*^9, 3.773663920314642*^9}, {3.773664028386696*^9, 
   3.773664045082075*^9}, {3.7736640831231422`*^9, 3.773664118379194*^9}, {
   3.7736643068086233`*^9, 3.773664310264592*^9}, {3.7736643580926127`*^9, 
   3.773664387572588*^9}, 3.7736644419645367`*^9, {3.7736677805397744`*^9, 
   3.7736677859437723`*^9}, 3.7736679385011907`*^9, 3.7736681694613934`*^9, 
   3.773746136048918*^9, {3.773746290396722*^9, 3.7737463006987534`*^9}, 
   3.773746353204343*^9, 3.7737467282483816`*^9, {3.773746993885614*^9, 
   3.7737469945086136`*^9}, {3.77374704090134*^9, 3.773747045841338*^9}, 
   3.7737473429363704`*^9, 3.773747414811513*^9, {3.7737621545266886`*^9, 
   3.7737621689253244`*^9}, 3.7739981184013042`*^9, 3.774176594650915*^9},
 Background->RGBColor[0.87, 0.94, 1],
 CellLabel->"In[82]:=",ExpressionUUID->"9c743ede-8036-4933-bd0f-05293f601214"],

Cell[BoxData["\<\"https://www.wolframcloud.com/obj/mitch/live-coding-unitTest/\
sin-svg?a=-3&b=3\"\>"], "Output",
 CellChangeTimes->{{3.7736631734547977`*^9, 3.77366318751466*^9}, 
   3.7736633344418035`*^9, 3.7736639220446463`*^9, {3.7736640323398314`*^9, 
   3.7736640488180213`*^9}, {3.7736640912651033`*^9, 
   3.7736641210051594`*^9}, {3.7736643619935884`*^9, 3.773664390679591*^9}, {
   3.7736644278165007`*^9, 3.773664443962531*^9}, 3.7736677276997857`*^9, 
   3.7736679538101897`*^9, 3.773668173246356*^9, 3.77374614413492*^9, 
   3.7737463022317524`*^9, 3.7737463569093056`*^9, 3.7737468511253815`*^9, 
   3.773747254719984*^9, 3.773747323298905*^9, 3.773747418410504*^9, {
   3.7737621581726823`*^9, 3.773762170429333*^9}, 3.77383857409062*^9, 
   3.7741766248819847`*^9, 3.774178678997074*^9},
 CellLabel->"Out[90]=",ExpressionUUID->"b9ef856a-790b-4c65-b53b-6532209ac6b2"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["API-9) Images - Get external data and make geo image", "Chapter",
 CellChangeTimes->{{3.7638903241703033`*^9, 3.763890387306302*^9}, {
  3.7638906383193026`*^9, 3.7638906506213074`*^9}, {3.763976047180131*^9, 
  3.7639760608231316`*^9}, {3.763976112842131*^9, 3.763976117610132*^9}, {
  3.763990612311146*^9, 3.763990612485146*^9}, {3.7639983208147407`*^9, 
  3.7639983210327415`*^9}, {3.76399845428874*^9, 3.763998454495742*^9}, {
  3.7730601343244324`*^9, 3.7730601418604593`*^9}, {3.773484566528428*^9, 
  3.773484577943428*^9}, {3.773996283075507*^9, 
  3.773996283639471*^9}},ExpressionUUID->"389bf249-e632-44c7-bdb6-\
0b9f44175665"],

Cell[CellGroupData[{

Cell["Using the makeAPI functions", "Subchapter",
 CellChangeTimes->{{3.773997790656101*^9, 
  3.7739978031031284`*^9}},ExpressionUUID->"6b7892d5-ab21-4e8f-b33c-\
eba54d95f823"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", 
   RowBox[{"it", ",", "n", ",", "locations"}], "]"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", "aurguments", " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"it", "=", "\"\<users\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"n", "=", "All"}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", "function", " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"locations", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"GeoPosition", "[", 
      RowBox[{"ToExpression", "[", "#", "]"}], "]"}], "&"}], "/@", 
    RowBox[{"Normal", "[", 
     RowBox[{
      RowBox[{"Dataset", "[", 
       RowBox[{"get", "[", "it", "]"}], "]"}], "[", 
      RowBox[{"n", ",", "\"\<address\>\"", ",", "\"\<geo\>\"", ",", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"\"\<lat\>\"", ",", "\"\<lng\>\""}], "}"}], "/*", 
        "Values"}]}], "]"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"GeoGraphics", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{"Blue", ",", "\[IndentingNewLine]", 
      RowBox[{"GeoPath", "[", 
       RowBox[{"locations", ",", "\"\<Geodesic\>\""}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"GeoMarker", "[", "locations", "]"}]}], "\[IndentingNewLine]", 
     "}"}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"GeoRange", "\[Rule]", "\"\<World\>\""}], ",", 
   RowBox[{"GeoProjection", "\[Rule]", "\"\<Robinson\>\""}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.7739984937433195`*^9, 3.7739985495493374`*^9}, {
  3.774178698734297*^9, 3.7741787332812986`*^9}, {3.774178817703828*^9, 
  3.774178862575945*^9}},
 CellLabel->
  "In[115]:=",ExpressionUUID->"da8336b3-e756-475c-84ff-e0ba473ab316"],

Cell[BoxData[
 GraphicsBox[{{
    TagBox[
     {Texture[
       FormBox[
        GraphicsBox[
         TagBox[
          RasterBox[CompressedData["
1:eJztnV2vJcd1npmPi1zmB+QmvyC3uc1lbh3kB9iIY+TGAewAQX6NB4YM0IEE
S0IIDwXw60ISRYv0eESMKJphJJ09hiXKn6INGiPgZJ7T83LXqenvru5V3f0W
8MyZs8/e3b27q1a9tWrVqn/7G//91/7rP3/llVd+9189/+fXfv1//off+Z1f
/1//6V8//+U///bv/rff+u3f/C//8bf/x2/+1m/+zr//jX/x/MV/889eeeXf
PX//v3zFxeWVV37vOze3xhizF6JtpouLS0yJtj3GGFOCaFvq4uKyXom2L8YY
swXRttbFxWVZibYhxhgTSbQNdnFxGV+i7YUxxtREtE12cXFpL9G24ax8/YPL
7WuPb55zuf3q+5e73//geze333h08/zn5fb3370UO9eD7zTH5BzffHS5feej
m9tvfXhz+/qHl9s3ntzcPrlcbn/ys8vt3/395fYfPn969xN+9tfNz7/62+bv
8OlfXm4//Onl9tsfl7s+Y/ZAtK12cTl7ibYBR+EPv0/ff7n9s59cbj/5i8vt
5bPL7dNfXG7/6R+f3v7qiyvogfT3Ifg8nwEd8/1Pm3Px84MfN6+hKXgvfO+T
y+2Pnl7ufqIrdCw+//6nN7fvfXJzd7z82vrgs+gX6RbOqd/RO1yP9Mzvv9to
IXQYGuydjy53oM2+9n78s6qBV9+7udOO+h196nuzT6JtuIvLmUp0e9879MNo
B/Xb/I4PQn4K9fXSE6kOkNbgfV1aAW3x+S+b96JB3v5h4xfh/5wv1UBT9VAJ
+G58B/0ufwyaSfcg/TvXyO9ou7P00fi4/vf377/26nvN80PLoSupN+jeh89/
8n50X6P1pp+Pc6EVx7wXXcm5VJfxvVGfUz1lphFt011cjlqi2/beYWxMvyNN
on4Z/UKfjA9EPg98L7zOXBC+CPkk0DRtekY+Fs3P0J/QD3GMNv9NbeRaKp1f
4p7QVz4Ie26NZkAPNPNwN/f8QOrv1ZcLNMVYLSA4pvxvnAM9iy7gOLzOXB06
Bb8UWgGoI7yf/3M9HGOuhuA8U+4z73/ro/saE6Z+b3OfaFvv4nKEEt2O9wp9
Db4O/k+fgu5IfQm57uBv6BY0il5Dw9CPp9pD2kW+CD4DuT+CcTR9Hf1/tDYZ
C9+L70I/nPsc1oZz4stIfRroPp4H2gDk80qvmeeDRmxii+7f/7wPH6sLmrii
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
r1d+APWxqpPqE/s+y3u7niF/px2N6ZuPhnwoa31X2r/ad1u8EGMX2iztpmT9
4ZjYsei+y+W8pVRd1v7GU9to2u/yWcXLyX5ix/PcEm1rltMcLNrzR2sKlP9N
efv1f/mxc02jNRean5A/mN+H5sylJbQHX3pc2jo6hu+U3idsz8v7HDX2gfuq
/HBct/ZwkZZCV9HfdGkqvZbO2c/dd0/3RHszK//GmrY/3dta91f+l1wT7oEH
L9oKWuXdP7/eQ9WHfN9Mvq/2P6L+vPEkJr5Ha3yVA7FtLqTLL0jbpY3Vmtvw
LKT2EzuY+x2VD5MYHOWExuaQj0dxzm1ry6P7MJdzlRL2T/sIbuXvxb6jB2Q3
/8+fXvtz+USU2z7/rPK2KReLXldciNbYStMw1qcdd62p0XiH9pz24dIH9DOC
fl5+Y/ljeM+z5HvRJ2A7+HtqGzi+vo/yx2p/4WYvogbplzbtqNgc/s53mruu
gXNqf2TuE99rS9ur77+3vWv0rKT39Jzmxo7yeeWLU07lqdf02uOrlm3TV23f
QT7E9HpUp1g3pLyN8hWm79P+UvIjtcW8mm1o2/dDMWx6Joq/Q9/0jUc1b8vz
j+7TXI5dZG+weVPtHZ+RL6KmtiefSIlj6ziKfZHPRnP1xHmwBprXtO+zcrRo
P1v9VPyC+iw+j+3nb/l5f/E3V32i3C3KSZfaCPmI0pgh7Y+E9lJuu/z46mOW
5u3QOpE11hoppiW1o8167+a8NczxTEXxqapHa7Udjkt9aZvbSX2RqY9R+RBV
f3iuigvldc1jpfn3+R59a5kVW4VWyf/GOTgux0LbcFz6yEhbcmbGrkmfqjGj
+ziX45W8Pk4Zvyp/9dHHSvQB2F76HPk1ND/D6+iSfK2P9oGjj5UPRGuW0Qx3
45LHN1/maOk6N2NpxT/kf+vKo6V4Wc0tab+Xru+mPadhqv9FcUrK/1nyvqPN
uIdova61GXtDMdk8z3RP6S3qMHUgnVOjLvM3rfnnNXRMvs5IrDG/w7k1t6t9
BxRPfnS7cjai+zqXY5Su+oUPAdtFPz0mFwg2R/GE0b6XCLCzc+JTtdZx6H2K
X9a50r+17cHCc8t9EvRR6IA+P9SzF8dr5l/G5SFT/zt07Ln3NVpnrAVzhmiF
0log3XOoi3wNFs+wWfujPPzr6gXFJqm+KX+g8hmZ4xPd97nss2huPO9r8Pen
cf/y8+bjeuWsZ5yt8RJjtS3XxtbE2usi5HuQv4Z+5uHIuRI0iPLHNHNLz3Xp
j26+nH959P+aeR7tc8D5NM8wpg8upVvSmGLq3Zx9E+l3mbdL90TQWhj+Jt9X
pO+GdR1prNIadQXtmc5fKn+inrl8dcwj0r5puxFre7gOcrdpHja6HZvtie4L
XfZT6APxGStvWW6zyFmi2FbsvbQJNi7fa6/U/q3m/j3VHr3q397+YeO/p8+j
T+rqF5t9Va7/7+sj0Slomt+7053XGOE09+kQymG+xK+vGE36L3QF1zJHE9D/
Kjaae4e2TnVVuucw14zfI0K7cF1TdAJ+FMXeTh0b5Ll7FC+FDWjbu9OYCKL7
RJe6S1t/lOazV96yrvFs27oa+W9s+8qi/C2g/OjpeqC23CXyt2tvozHj+mZ/
guaziouZ6pOgXim/7ZQ+mTH/2Lw6Y2B9N7puzLwldR2dtLVuYcwwJQY1j5tH
i0xpa/KZAsdCr6Ff7OMw0aR5ZzRei+4jXeorQ+Pmvv0Dgf5T+U7UR2ADz5BD
ak3aYh20pyD9jHLR6W/ybzAPkMZbMg+huOFrrEujRYY0DH/P9x2Y2h+Pzc2X
2i00U2lt0BXPLPAl4uMpqZnGwr58aT7kMdC+9HmuOfd7DqH9BPFlqT7YV2pq
QTkasGcaM0X3lS51lLF2FbuoOeehPJnoHPpHx/8vg/5D/gr5U9Jcepon0Npg
7dGjnMTSG9pLoS2/6qvvXde36rzKQ5vuH7lEu3B+rW0d8715L9e/Rt596i6x
5eiidP9jtHbUHBFxOzw77Ys8RjeoPqA5eKYlYuDTPH7G1IpsUXTf6RJXpthX
xu30fW32/fXHl9Y9is1ylIu2a56mydXStGX8Cen+ANdnd/93xafqd+XIU06Y
Jv666d+ZtyH2YWnsarrXZBdoG+2zHaEhtiTP3zOlTuR5drTH5dw6NientTFz
KeHTw1bg34/uQ122L1N1S59msW5ZB+kW7UPQpV1S3ZLnSW32huzWLdIuaS47
aZeSumVM/4w94jtM2ctvr+TaZYp2wC9l7WL2TL5/xVywGdF9qcs2pYTdZY7B
tm5dlAd9rDZI45HQJop3UXys1rZrH4R0nbD2WuM4yrnO+5lP4hgl9v5h/mdI
v3DOveSV4/vM3V+Az7HOKc9TOAZ0Rq7tluYd0L5W0XXeHJO8jqM3aD/Uualj
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
A/xDWqPkNnl8mr2zxvn2ch9dXqcYh9JWmMOkvVCn23x3aBnFle95H+mxRGsW
SvQ9ODJnnTfCBuS5u0w9dPXhaJWSfXupdUqg9UeAFhnaV1x5YGiD6Vjafpfj
g693SD/Id/f2k2YukXVvaGN0vHyR8juqTfC+VLvg06OO8VPzhmfa797a5Zgo
hyh1n7YU3Z63gnad7lNj6gK73LYPeGmo97WNP8fkWzXHAc0xNH5Srub0d8V2
Kacze3Rpz+hvf3xzZ8/5f57HSHooup5vhXXLMbF2iX8G5mWsXeLbiNmGJdpl
iX6JrudbYu1yXDTP/saT48+1L9mX1cyrW2PfSx3EDm81Z0JdrynWiXvlfP3n
gzo4VDfQH6kG0X7gxKgzT4TmZV5I+5DTltBEbXXb2sW65ShoHxvmRaPb8RrQ
thmTnK3NRqO8vGPeyxx8ZL+t9de0AdYQj4lVoe/gM3y2xD53+AKj24qJgTja
sbF3jb+lyUeleEWtX6vNj1gL1i7HJo1p52fbGru9cfls3fXP1kNlqC1HPXq3
73qVly4FDUNfMjd/xtQ9EcyxYP3P1LUD2B/0M7Z6zbyRe8e65fjIfjL+pM9n
bLnndQ9nyMN0BGqsY7QFNJXWDqU6tS+3G7of7YM/n3akddN8Dp8OGkd/a459
zf0S/Z1NLMqFPKXtUL/OuO/9VKxdjkuqW6xdzJbUWMekXaRf1tMuV/0S/Z1N
LEu0i/VLP9Ytx4W5UuX70mv4I6Pbs8Avqn17uUb+37UnE+89+p6pRwFNMCcv
7tYoJhIdMmddXsT+YeioPdxbc91XjTHj1LloPuNYl2GsXY6LYr/kr2BMuFW7
xbbTJzAeRZsQq6K/KYd2fr20ce1XQ6xj2j94HLIPsLln3hd0zRhlfEfkyUNv
nTUP5d7A1pGPbqx+cczdeKxbjkFXbBc+S2kFxYKt3V7RKfn1aD8Y9ugdmw8S
G61xJj/drren757nsYg815p8exGk68KJ1yx5bNbXpc/Fa7Drp9kvIL4dHxVr
l2NCX6I9fJu92S9f7uG7RjvVuLCkxkjXa2ifYLMdWhv9RjJ2pF7xnNM9oLHP
Nca5bA0+J/yG/L90Tr7Pf/n03jr1hz/Yxo9q5jN1zJXnrjP9WLccky7tskYb
XVu3gLXL9li7TMPaxaSgXaboF2uX6Vi7HA/6FvX/2i+MuZzSayCIaVljPifN
u6E9gs22qM7wE32iHOb8TWuBzxzf0kaT071pb6X1C20ibWvKqXf2ubpaGbNP
Y97eotv83rBuOR7MjwO6n3lX+n/GbcA+pqXa51prl9OxfLNf/P082tH398zg
j2H91xFyHq6Bcr6vEbtMTE1e/xXnnrYXrQs/+t4gtcJzz/cfGmKNfaHPYCut
XY4JYzP8zenaHtm6UrZ0rWtPfUSsk9aek/ycmrfSlOHh432sg44kbRNr7Q/A
mCH1g6ld01+iLck1z9/PtDdrTTCnN7ZN8dx4ZmtolzNg3XJc0Cn0N/JJYk9L
9D9j9h5bAm0aPzljmNxG087PMKaoib3kb4kGf1Q+5i69rhldj2+lbR91zVeh
77/xqDk3c7s8O+V9yv0xyl+gHAdexzQf7t9X329Y2t6i2/xesHY5Ju+8iNlN
95mjXSydj99inMA5Uh8Ltph+QXtmu31vB2PD6H5hLygORfeOuKGSx1euunzO
NvW19K3PJSYU3UNbwpepuKb0746jmQfaUNqV+8rzaHsWY/c3NcNYuxyTvWqX
XLeAtUsc1i7TqEG7dOkXa5f1mKJdrF/KYN1yPOjb0S5ak5DaOmzV3D1vsZ1b
fxf6ztcfX+5IvwPf0Xuvrgt9mecRpsO+R7qHxM6WXkve7NHUtGvOlesNntmS
9Su0LWwE807Klc0YyOvL2snXFsm+Mn/04MX91Lgruk0fDWuXY6I8tfgt0tfn
5NvVvPja16x2nr+W/s26ZRvmatyzk+9/QTvc+hpoq7TxNDfvVNBI6BWOs2aO
y73y7MWzTm0RYy35KrG90W346Fi7HBf8lnk/3+Ton6ZfsGFrXB85acjtxRpu
7dHLHgPYzSbXyMvn5fvAnH3PzDgYM0b3DXuFOpzPe0bqwLk5DWh/9M34XNjv
IGp9PGsma/D5cA340PBDYbO67it2Ce3o3Jrrsyfdwjxt7kcw08G2TskDQZst
qRPoG7EBzL8rBzB+cPzU0lT0Abyn7XmneswxMGXx3jnLafa1ufZdpfNDToG2
OzfGgvaY2gnqxdp1g+Nz3kf/txlf0f4Zy2z13NpexxaRs3xsngb2lbNN2gZr
l3NRk3aRbpmjXaRbbCfKYe1Spg88snZZs37Uql2m6Bdrl+3Yi3YR1Av6Pc8b
TEf9/tT567G+Z2kJbDc2B/2BLUrzUqR75cjGp8+ROWPaP3ZMOUOxGel7NPdl
7VIW1ktE9/1HgHqve6p1f1tD21mSBxtbkc8t873WWI/UrM253OXY+2pLm16z
XqLvmBtjDlvx1dgc4NnRzzjGrk72pFtSGLO/8cTr5qdCO5yacwzbMkYjtOXk
Yq58ig2VHmHMRSyM5rtZ463jOM/uenWD/im67987aX5Ftbct8/ypPy5TJ5q4
F+3RuYYfZEy+bt5Tet0W46Pclsj3WGKfRI+r1meP2gWoz+C5pPEonmxqO0dH
DB2bWNv0Mxq/jG3D6fsYa4GOgXbhGpQHXXnSyVs/dS8R003E2pijQR+b31fq
aul8u11oL8011uaW3B+NcQ1+nDE6AdtAmy+lAdGXbf2G5q/RaEvvlbXL+uxV
u1DvS9SxM6H4kik2ABtDn9bn72jz6459NlN9Z217TOIbsoZZzlp78pyNLt2w
VQ64pTnquyi1Nxq+DcYgU85d2u+T2ye0kcZ1S/1W2Chrl/XZo24Ba5fpTNUt
IO3Sd1xrl2Ng7VKGLr+HtUuD4n6n6BdrF9PGHrWL68a8e8J7pvqv8bHyGdZ7
NXG2DayjePuHNy/lYVD83ZzvgA+ZeN1cL2FrgLxb7358tTP46NFjWqfAe9Ex
9MOK83Vc7/j6Uzqu4KwQO5TrF9rEmudEG6EH1qrrJbQteVtgqt9FoMtK1NE8
lyC5ipXbb8keKMT9Kr/5WhpySfuOvobS7FG7mGXQr6MFpqx7xOaMiZfBLzK3
nRDfiF3hGKn+QdMI7d1Krqh0jMNntdaJsRM/9ff0Pc3PuuxKLXiddDnQ1Pk6
ldL56hg3aGyxtu+RscvS681z6c+h1D3M88jltmIu8q/RlqLbc4q1izkS0gol
10KgG7ZoJ3POIft05LWPfL8567EYb86J5Tbd5HMTPBvy1S49Ls9Jcy9btTcx
11aUus50zhjdNrfO8tk11i3q+eIfQu9F24MjY91ilDsHuwBt9mCMrzbNz1Xr
XA3XVJs/tzRoNI1vx45zo/KRHJl0j+nmWTR7Dc89Hn4LrbOL2udv6r70aIQp
aw6H0Bw1P7FZH/x4fr2V3yrNQ7UEnq+0Hcetzb9boz1eirXLuUm1S9c4Zki7
SLfUrF10TdYuL2PtUp61tIv0S0TdqlG7LNUv1i77xdrFCGwiuf+IN1R+XMUA
klOlS8PIf63cO/yfmBTlaaklF8/Qmu+jMTbX1lY5SM4EbYW2Q97YtP7NORZr
/mhD0e2IWPqx19zE4ZQ7NzYIjZ3v5UwdX/KcGHcRZ7v0+rgujsVzj9KWZ8Pa
xYwFn8WcPV75TA3r2rVXdW1jopI8ePE9id8ciu3BZoNjXdaBev8wiTtHyzx7
oUWGPst78LXQJ/K5uetzSjMmpnutfei7WLr+KM2JPLWt6f/4b3hmc9aBb8ER
4/ysXcwUaJNz1qTgh6nBb3kmv8sQmuebo0fNeIjhVN0fs7dhs143vn6015lh
Pwd9+JZtvcSeFiV8L0AuB+XGwk8V/bygBru7BtYtZirae4i5d8aGac6VLtsw
N+9LaRz//zL499EvY/wBZh60E631z/eZVq4i5lq132h0neiCaxuz3qik32Eo
7wp2SOdVDO7U55Ovm557bx7+oGlPHE9z5qViauaAv0U5JKLrzhpYu5gpWLsc
B8UoWbusr12kX6xdptOnX9q0y1T9orxyS+9NbdoFrF2MaUdrKLpyd9cSI5u2
4Vp98lujPtUxL9ugPU2432iAOf1ldD+kPrnve5bMl6ec3n33Q/NwmgfN9eEY
8py7c9B4TmvZedbR2iW6vqyJtYspAW0kt2nY6FQnLGlH2ADZF2zj1FwX1isv
w1gf6EetX7aBNjIlXvxB8vPBi2cWGQuqvUG6vh86omR/ybinb80cvlT0Qqqb
mjyUjU9xbL1e6ndhLYPWQ3HN0i66X1xjtI45GtYuphTYizQPxJI1B9Im+Euw
QdhE5qqwD8T+sp67Txe12c8jj0GW3GPGqqn9N+vA/FBfH6l1YurvqPc8l+h6
0kbX2voS/osU1lr3tVvul3xBeT5+2Yqh54K+WeIr4jysh5e+5BlrDhDQNfxe
+t6cHesWUxL0i2Jf5uQ7kC3K59WxL8qjoNd4T3POayyL7Adjn8aH3Pwf23T0
3HRTSfes5N6U3CPCtENckeK/uOfsB0hfx71vi9PI89zVAu207fuR57LkeYZ8
TMxZAxqvLRcD452+vbz521K7wPOUb0i+Mekprok1R/y/hrnzo2HtYkqBdknj
5WizUz5Pu2+zMdimtr+lMcLYTcXdXT67xhUwdqtxj9fawMZ6T+lt9As+gjHx
0ej1Wv2Fea5dvlOp9cZizHdHu2BvusZJ6B/0RarN+X8JLcG50SdpPLHySGGv
yP2L7UGjYoeOmGslEmsXU4oatAu6xdplOtYu1i5T2KN2kX5ZU7uAtcs2WLuY
kiiGQr7adF8TftLWgTlzYvP1N/yubf5dXgPmheb2FyX3LzkyzK05brce+tbY
RJOvLaR9aV0hbbvEOcZpl5sv91UbmqPWuKpE3gbOhT7p+jt2j3x13BdpnJLj
p1o17ZZYu5g1SPNB4DfBnn3+y6df7pn0+ouxEP9nbDQUL7rUJ4AtKbl+86g4
brcOao11EfTd8q9KC2jPSF7D17DFdaTrnvp8KdgjfLNT9ot9kP0UjLP6dIs+
Q84XaRzuVSlNZxqsXcxaaN2E8lowl6M1jKB9jHl9qz4BreQ1093MyY9hykJb
2UNsJ36EfO2U1iDN3SsoZyhnH/dJdZa2Xfo7tp17aK9T/s59YLyVjgVqXTe2
V6xdzNporSC+j3RumDYesadO7WPa6GfFPL3njuIovV5nS1LtWyLfPgxpBa2H
xq+7RUzJ0PU0uV0u93QVdo42BVM1ncda7Vi7mLVp0y7a48XapS6sXeKxdrnP
UbSL9Iu1SxmsXUwktPGo/sHxbt2gNefsGz4EfnTZce+j1H5/9rwehTgXfZdS
8fFj8mgrR5HiStaKLWEtlWL20CapDVEszcMkFlj5xtEwUMv+bkto5v3jr8O6
xUQhmxQ1xqdvJo6OcRJ2RXnyI/Ou1wTPpkT8C/cZX04+XnVOvJfBfxD93JdA
n7ZmH9013uD1VDcB67hLjk/4bqmfmGeVrh1SXsz0nNgSaak9+9OMMVc0bxTd
X7RBXJ01TAO+/zZ9iY+eOGvGlthx7hl+A+A17Y83dOzoZ10LTZ4S9299oIuY
82WMQd1JdQI5ivJ7Wmp+GB3flsOBus7aKnI4DOmkM/h5z/AdjWEcA9F9Rhf0
12kOmjOTjh+x4cwHtN0X1o9N3SdTe1qjd+T7Gtqv+Ig4B9EwjHVSX126TxD1
Udo5va9dY5Cx7bprX0fOg69nyrprfYfo+2iMmU/NusXa5T7SLsoVuJZ2kX6x
djFtDGkX6Zex2mVM27Z2McakKJ93xFoj9yl1Q0xk137FR6RtL0HTTjp/g6bI
545y3dulpalj0Ke1u/YpIc586joqncfrhozZN23z0zUylEPTlIccyG1j6COS
+g7MMPj2+MlaH91DtIxi//HnpvUGv8uDLz97XSOT7qWeHl8xt126RbBH0bTr
jr93xphlENu5l36J+QzPG21P7XOKS8BfoNie6Pu8N/CVUDeIj019tunaZWLE
9TdemxJHm2qiPqbGAefrqdnvKPpemnLYn3Z8GAexRiW6/5hCuqekWYd8DJzu
VXMk6PO8hq1MXcEHk6//YT6H+UbWLys3/9BeZrwPHUmdG5uzgbibsbEr33h0
v25zLq7PNuU4WLscH2sX04a1i5laV6xdjDFbQNxrW56E2iG/mu3MtgzFG+wR
cvRF39ej0RU3x3gDe0OeW/Z07vo84+U5OZ6Zk1KcTTMH1KyXI35Je2pzfl7P
89LxHnLnKXbHGFMejXGG9nQdwx7zqDJuox9lnj36WRyVND+pONqe1o5tWQfs
EnalzbYw5nj7h/3+/Dy2dyz4aHQM1om99dFVs6CnQPm68zjdd//8mlvPYyJj
1oGYOKCttfUxY6FNR/cfc2B8hQ1kTMU4S/mAo5/LkcGe71HndrHW/jpnp1lb
dPly/VBbncH3Qexu3zof2vbUZ0pMsD6vNe7UW2yD1jy1aaZX32tsKTZVn1EO
avQOr2tOSZ+xf8aY6dBu4I0njZ2gbU4dK/D+Nfb22xq+A/qFOXHsHTYLSvik
zJW96tw2qC+uG+vxVpJnpW1vV+5/6iPpqm9T7BNaVFoIjaE8dWgSzsc6SuC4
+bmoC6yvlq7hd+KflP9R8TbPvri/9rvtWEtxvTRmmNpz0I2h6zsw3nN+sXIc
SevaR7cu6JLUx9EWTyf90rauWT6NsXOUxNGkn0/3gMQ+NGOZBnwz/GQ9NP9X
XUCH6Hq1pht4jc/reMrPwOtcP/qGNdzEykBfHE8b+HTS+oj+sn4xph9rFzMW
axczFmuX8Vi7GDMN2gdtnvYW3Z+sBXZRawpkh/Tdo+//HuEejl2vWiPy90ff
xzPAfVYcGrqgbd0Qz4M5GY0xiINJ9/sYO0+JdtBnaNvSSugW7VHQd535a7l9
QE+gh5hzuvz88mVcDdqlbeyEPua9fJehuBhpvPScrN+WnrGtMuZlaB97XB89
ljxOEDuGrcGOXj67DOaYMC+DXd2jfuGarVu2hbgTxbd2+VCwP6wX/MqL96T7
Mci3QZ2jLWusleuFNO4k3bcCjcF7+b1LQxCDyznxn6A30EFcE+Oda86a6/Vz
LLQJ/pUxfmvez2f5Hl+ZcO84J/eF79C1V4IZj+/dcaCtHmHOaGl/ptje6Oex
J7Dbe9Mv9EvR9+3stOmXPM9KF3n+fuZutP75j7O9Wen3qZ/4CRVrqzmhXL+i
DVizzTHT3HTy06b7NaKdeO/cuVM+h1Ya248qZphrcd9rTAM2I7o/qQlsnO3D
ePa07giNvnbeXI+Lx0Hfneresdplyj2X70V+C/wo6KaxuRTa9oLMf1L/yWs4
Z/yH7urKbZGem5gc9FK63tt1zJwdaxdrlyXsRbvQt1i71ENp7dL1epd2mXrc
9LnWoF2in58x0Tw86N40S/s57Irzlo1jTv6wreFZQpq3zMTA+h5+EmemONo5
bW2oD+dZc2zpA+2jpJjYKRogjTXR/BG57NK/k79u6n5wmjtq8nM1ENeDxibG
F23EPWK+SOdSjr3o57g3PK44FtiP6H6lVojltY0YhvHgnNztW8IaE1C/aeqg
WavcrN9RzBnrhbvma2BKLlvem/pZct/JFLS+WsdM44kFdWxq3ST+OJ3L4his
Y6JN4W9p8xXyuvKqRz/DNl55XqKvwRwf7MeR8ryXZI2cmUdD49voZ9UH8wVe
G10nPJM0by3wu9ZK44egr27W6TTzLMwDyX8y9ExLjLXzY7Be6PUPX7YNvG/O
/BFzZlP2daHNcT/4CTVpmFdelOjrMOcA+xDdv9RI29jKvAx9S/Sz6oMxLFi7
1At7CFCP0DCi7Vmia6bkaRqztljzMNpnJf3bw8fDexcI9MyQduF7sQY7fW3O
GsdrbrzrvlA1aBhrF7Ml1i7WLkvYg3bp2oPP1EGUdtFczZ61i/a8tHaJw7E0
cSieMbqfqYm+XJxuD1dq1770J4pXiL5Xpp9GPzQ/6ZfRM0BeFOa2lWeOOUD6
fGL2mEOirWiOSTqVY/C7tAuxI7yX+RnmgzkP59Ceizo375UO4PNjrhv9o73t
ySOUahj0yi/+5nIHNoXjM9dDrK7ek4+TxsSW8h3Js6S4IWjium569+dek7Nq
Fz2Pvdjso0HbrT3uciucg3U89B9t+d5rQc/Sz/MYKNcufTY6hH6f9W7KyYve
UM46dARjMvp0xclg5/g/Woi42LdWGKPkeT/RNG11kOtTHdX16TvqPX1xPbyu
9XPpWihpmK2fzZm1i3SL7UwMY/c+OzrOszue13aw1p4xLgx9F+de3z+0Xflr
8hhY/BHoHLTE2mvm0UjSFl3ro7SnnOop+WLQXum6aBjTH3Is4n4BH5T8UVve
+zNrl/Q5RF/DGWG8UPu6kbVxbpdp0FZrX6vG9WHLIfp+mZfrT+lj0venWlVz
KOgC2veW+4gPzVWia/CTcF3EwvDz6x/Mn/eRXtJc0pbP0trF2iUKaxdrl6lY
u5gldWdt7aJYVv5/Ju0SMU9q7WIiOXPM7ph5BfMy5C6PfnZD0C9E3yezLc0e
0NdY7bH7QqRzh/p81/uGjsU8/BR9xjWm66jmxJgr1rn9b+tpmleSEv3szfmg
Xp9xf2nmwaPv/V6Zk1N0a9r8acQZR987UxfoBcYwn/7lNX/tdz9p1jWl2mfM
uhI0BH7sseuVuq4n1TN9jPW1SJOVvG+vZCX6OZpzsoe+qDRd4xTTD3aQNavR
z28IYiLbrr9vXM0aVBF9n812MKekvBHE9QJ1iPV0zD9qbmfITys7ejSfX5tm
G6NdHAtitmAP++yVgO/pOIj55Lm2aoVxdN/3yMeraBr6JnyQXnt0Llg7PVSf
0DB9frt0zWZNORfWqsdL/C6MG7mXbmOmBGnupCPj/LnzweZEP7+x4Bua8t1Y
r6p8R8q9Hn2/TTk0v6LctHodX8mY9QpvP+nPuZv7ImuqP2P2gpqKtYupBeXE
iO5zrF3q5UzaJfpem7LkOfX1+hjtgm6Zol1qqz9baJdUv0zVJDX7OWu9LnOf
2nOmWrvEsidty9zP2PhE4jPTeHXWUUXfa1MG+p43nzTaAo3CnHHajw/NlWuP
iaHcdulcKvOV5IwrHR879/uX1i5tusXxuiYaxgxHzvnifC7zGRMXUAvEJ4wZ
M9En0X+lmv1osZZnhefP/or5OkrqsWJyFZfbV4/G7M/Ytkcp+iX6HuBjYrzW
rBsvc8yp2qVmv0rbtaY/h967l+91FlijV/t+wXM5Ur+0Zbuhj9+TT+5bH/Z/
HzQ6Ojb/TtQP+12OAX6PEvkfGMs9+rQ//rYtXyMaKfoeQDNXVi5HX5d2qSU+
eVzdsPY4Mswhaa/66L6oFM5HN4+9xLpQV4eecd88wVh/jakTxVnzjKGk7eJY
b3103beI8zHO63o/8VM19Of4nrRvwJzPq48n5w1t6wjaBaRfoq/DlMfaxYij
aBf1adYuxyTVLqXt1t61y5zPprplSLtQ9ujLWCN3n6kHcqIMzQ3vgYcj5q7N
y7BXbfSz64O5Aeb1+2w080hDx/Ge4vuFZ4++WHu8hSZhDyLOOTS33pUjcWu+
MvNzzDMxhkWD4afo0y171S6qO9HXYNZ9vnvWL/RvrCmJvo97hDzn0c+vDdaP
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
           "], {{0, 284}, {559, 0}}, {0, 255}, ColorFunction -> RGBColor], 
          BoxForm`ImageTag[
          "Byte", ColorSpace -> "RGB", Interleaving -> True, MetaInformation -> 
           Association[
            "Exif" -> {
              "Software" -> 
               "Created with the Wolfram Language: www.wolfram.com"}, 
             "GeoMetaInformation" -> {
              "Software" -> 
               "Created with the Wolfram Language: www.wolfram.com", 
               "TileSources" -> 
               "Wolfram Knowledgebase with data from \[Copyright] \
OpenStreetMap contributors: http://www.openstreetmap.org/copyright", 
               "Projection" -> {
                "Robinson", "LongitudeDetermination" -> 0, 
                 "GeoRange" -> {{-90., 90.}, {-180., 180.}}, "Centering" -> 
                 GeoPosition[{0, 0}]}, 
               "PlotRange" -> {{-2.6666, 2.6666}, {-1.3537821253923288`, 
                1.3537821253923288`}}, 
               "LonLatBox" -> {{-180, 180}, {-90, 90}}}]], Selectable -> 
          False], DefaultBaseStyle -> "ImageGraphics", 
         ImageSizeRaw -> {559, 284}, PlotRange -> {{0, 559}, {0, 284}}], 
        TraditionalForm]], 
      PolygonBox[{{-2.6666, -1.3537821253923288`}, {-2.6666, 
       1.3537821253923288`}, {2.6666, 1.3537821253923288`}, {
       2.6666, -1.3537821253923288`}, {-2.6666, -1.3537821253923288`}},
       VertexTextureCoordinates->{{0., 0.}, {0., 0.9999999999999999}, {1., 
        0.9999999999999999}, {1., 0.}, {0., 0.}}]},
     Annotation[#, "GeoBackground", "WolframGeoGraphics"]& ], 
    TagBox[
     TagBox[
      TooltipBox[
       {Opacity[0], 
        PolygonBox[{{1.5999600000000003`, -0.8122692752353973}, {
         2.6666, -0.8122692752353973}, {2.6666, -1.3537821253923288`}, {
         1.5999600000000003`, -1.3537821253923288`}, {
         1.5999600000000003`, -0.8122692752353973}}]},
       "\"Wolfram Knowledgebase with data from \[Copyright] OpenStreetMap \
contributors: http://www.openstreetmap.org/copyright\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, 
       "Wolfram Knowledgebase with data from \[Copyright] OpenStreetMap \
contributors: http://www.openstreetmap.org/copyright", "Tooltip"]& ],
     Annotation[#, "Metadata", "WolframGeoGraphics"]& ], {
     {RGBColor[0, 0, 1], LineBox[CompressedData["
1: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
nkoe7Lzf2fA0iwH0fwB+6el3
       "]], LineBox[CompressedData["
1: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
NfDhrejDtyu5iGc6Ml/MVWvgfwHTkFnk
       "]], LineBox[CompressedData["
1:eJwVVHk0FfgffVsZoVQoIrQJNVlKNNXnmxZhUIlixpJso0GSPWaiRilSI0pa
kH3JVjHkIzsv6ytLdu+l7NuzPdvP74/Pueeee889594/PrJWzudsaBQKJXfl
/o9hIZtdQ35aRXwN5V5cOcaCi0//k2QxVpHNqtzX+jtZ0Of0IMNmmkFiFBIi
B943wtFqt6zJ7wyiUZCfyKfTCPafi2JutDLIXNvCn0ltDVCfU8mgMBlkz3Ft
H9afDWASWm/uW8AgHfOlZncX68HXYkiDm8YgUv2Cj2uD68H5TZ+s9UsG+WX7
n0/ipeqBbbkr7lMogzDpu1LlTeugwj3s/F5/Brlv9tJWw7MW1q72L7ntyiDP
fgkVD3hcA/PGIYFfrBmk5aGDo1DWJ/DRClaXNGYQIRngddYw4cqi41UTLQZZ
d1j99NKPapialmXeV2eQJEexehd6NWz751bfW3kGqXidPg9SVXCyVNPqswSD
vGn+Y5ezWiUo8Jd2fRdgEL2WsuerDCoAxjfQxhbohK3SHM1vVw7dC+WOQ8N0
Ej/EtLnpVwbirJHK9k46yeY5Cbs+LoV/lOb/K6qjk06d1AJOSgkY3Eseiiii
k4Mg6t3+sRj6Xaf4rDLp5L23jZ5l80eYypt/vzWGTtTZfMruQ0Wg//tEYs0j
OskpfCa6g1oEcjob7jgF0IlVwmRpl0IhSM4H0qnX6cRg7NpQ4bkC0GVfrr5l
TSd3ph30x73+A5HKe/fnztPJRLbsHf9XuVA5l8ozP0knaO6+26/8HXS67SvP
OUAnHcn9GaODOcDiykfzdtKJg1FceK9wNsT0GR9VEqMTrUH/41YHMmHZYs1Z
o9V00uSz/WduVjrY8HYH/zFNI2fnDtY58JJBL1E64c8+GgnoMloNxxIg36/d
0LyJRs5Fi1wKDIyFmuuVp4+W04jgOsWPOZEv4ZN48S+C72ik55vQTNTOJ2B8
TJxdEUcjUXO6hPsmFJ7E3Zu6+phGEvR4LbWu/lDqp6nAd5tGdDdo7dx/6HcI
XdugHnSdRo4n/DueVu2O7lv3t85dXsnbmiqVcTYI1zk3lhgZ0kh/hFTm2xdh
qCXml/lck0asrC882SQShbbV7r81KNNI3O4zHval0Si6ydFnTIZGpJPv2Zn6
xaG31z9M3joaKW0ZlmEeTMKbllarx5ao5CqDIfl6LBUDhWS+1w1TCc9/4JLd
+Qz8fNZGPrKdSnoyhjUklLJQZqftXX0mlXBZS4csBHLwgfBwyVAelagEaVIU
+95i6x/W4dcTqWStBr/EtaL3KGPaXfgtnEoeJ1YKykfm4WKy/ALcppJMlsiZ
E675uNeoSijAlUo8eRF6ubofcAtTJCf9EpXI8a+x9NqOWDp3KKPYgEra323s
P+JbhKd4Z0sLj1DJg1zWiIn9R0RHm+wYRSr5S1L8yxrDYoz0vX3MSZxKlLUV
43WOlGCOV5OqLB+VmDSD1Ua5UswVij6Tz6WQ4L+mlsyFy7Bo9WWLw70UYqtc
Zys3V4aPYrp3v66jkATHN562PeU4YanmMVFAIXL083xiVRX41WBQVC6ZQuz1
G1v2ZVTibDW98VgEhZyUFolPC6/CmngRb81bFEK/YiRx90Y1BqNx524XCjHi
xjTmX2JiKvu/eq4ZhXRvNDWDU59wZv3SjngdClnTmKQhpFCDVbTCjMMHKUTQ
X7R5q1Atzk0G6+Zup5Ackbkwx9FaZKYL1G0WppAM03XFE/V1aOfXv7dgdhnm
Di7WsC7WI8Z70IQblkFK2y6huLIeBd0Ot+9JWoaf6g28NdUbcC332t8bbi6D
femdaoOEBtzZeSyv6OIySPDcNnwXbcTl731GB5WW4eO7lmLGrUZMXOpRcOdb
ht+UnmvGjTeinq3MBt/OJcjamjxSas7CB3Fyg7pvl+DD3SxxSyYLOxTIs957
SxBOXSPoevAzyoS/FDpmtQRlTj50XsxnfBH2SNVOfQlKkrapjgt9wQsa8Qyj
tUtQKKBdct7zC0Jhvd8aziL4KJ5skOn9grZPn8YH5i1CFc/M+axuEwY1kMBP
IYsQ4J35uje7Cff4flNpvbwIB45IO9ZvaUaucUpxmvoikDG1PLGAZmQYdhnr
CC3CLjlFp8z+ZjwnvWXTm54F6I+ptIkyaMESLzuV9rcLUG14zYmV04KNWmZd
DXcXIO/sNt1z4q3YfPHk76FmCzC65mq2iG8ruheqjW5SXoC1P54ZinW3Ymec
ap89YwFexr36dE7zK2Y8OxER0DwPrFidnLLYrxi+85GlffI8xDoaPXZgtOHm
qBuJm3znQSv3wehh6zak7MvqeGiw8qolV6url7QhLGt6NMvOA3/l/tYLsu24
oJ7N/THJg7fORDXCrx33bhboLC/jwVK2WtT413YsKOGUuETwwPGEsaWVWgeW
//CAAXseiMyYF3NCO5CfHjuhdIgH5esH5l0HOnDH4YnAUwI8eL1cfUTgeCdO
1cZmKbbPQXiiZ0ZcZCfWtyb93JM6B39F/3X96Hgn9t9PKrLznQNz68WY+lNd
GPxq5kCR3hxIftyhf+FZF8pSH1kPSs3B8TfMmzUjXUh9IaY4MDwLxYbUbREy
3Sis/f7qhw+zoMX6qnNIuxsrHivstA2eBSnvlDw9l268kPCUfPt9FhTYVQO1
T7qxqD2o5Jc9s2Bnx2+Sj90Y+2vVO4f5GSAWW/2E+7pxiKqt6Fo9A/cs+FhM
gR4MGuQ7ZPx0Bp44+9QPKPVgjOsgXdR+BiSVzUYdjHowIjMyM0NtBnJHVZK0
vXow7GcjV4VVM5AUGOt5K6oH36mU/x3AmgY+4dnWzdiDKmGfN3+Inoaen2N0
GT09KE93vtniPA1ts+X6J2i9aFB7nq/5yDScV6+1a9rWi5e3ti3mCUyD4OTU
1lzNXmxMSi/0b52C4KV+yvdLvTjb8zBJJWEKjjhbvLT8uxejX27awbw+BaHx
2Q+3vejFEGPTp3qaU7CjKMRNIb8XTVrfeOWvm4I2sbujbs29GFxgckisgwtV
YawU2mQvCtupGFkkc2HIp9e8VoiNf3wzPv3EgwtX9CXKm+TYOBtW87j4BBes
PP0SxY+xsaxYvqRrPRcWjC81h5mw8ZHpHpPxzklgqoruO+WyoldeYs+mTEJK
2fMIxTtsXFb9MDrjOQmypZdWHX/BRjl15bVjJyfBQbTdKyibjWEGp+p7N0xC
2ZZfGZRKNjpJvqls6JoAxxjr4ug2Nl4r/xpUmDoBTj9mux1H2CibcDs52WsC
Dp5IiLKicJBy83R+xKkJuN/6t6bfeg4q+e86E7hxAmZa05RQloN2FyTmvbvH
4USFUPN2ZQ4+CI/59XraOPTuY71PBg6OMPVY173HocxMwv6cHge/eZza4qc1
DqLXvEPFTTn4m15X2kORcXB3CB1esuGgG11mfWbPGPQ/CDhDdeFg/DrDio70
MeBn+b+U9uFgaVSYvviNMYh/cajp4i0OXtl0WcZGewya0zVXp97noGeccmax
2Bio3Qy4sDmMg87Fc122laNQP/fop+eRHPxuWnrP5fIoHO7mc9Z4xcGYcVfF
xKURuNxdMjP0moOmgQ4eQpEj8KJEVe59Igf3XlsUf31gBFxe3X4akcJBHSNM
d2oYhluVn2khaSv9rzZ+dHYchlYt3X2R6RxUbz5el8Q/DDkN6vSCFe6y8aqm
dPwQFNKlfSZX/GEpLm6NmkNwbiIrhaRyUGPpaUZZ1yDoLrA+xiZxsKSRKz9/
YxCkxjxoUvEczJxpYrhJDMKX8PvVqdErefs9zx7IHQBmaW2IYRQHTzOfCB41
HoBoiYi29eEcNHinIv2Q2w+BKVHnf4Ss7F2gZq70bz98rkjLaf6Hgw+djYKk
VPohfr9FTbcvB/8HxwH4rQ==
       "]], {InsetBox[
        GraphicsBox[
         {RGBColor[0.790588, 0.201176, 0.], 
          PolygonBox[{{-0.4, 1.25}, {0, 0}, {0.4, 1.25}}], 
          RectangleBox[{-1, 1.25}, {1, 3.25},
           RoundingRadius->0.6]},
         PlotRangePadding->None], {1.1211415811411853, -0.6249914110045608}, {
        Center, Bottom}, Offset[24]], InsetBox[
        GraphicsBox[
         {RGBColor[0.790588, 0.201176, 0.], 
          PolygonBox[{{-0.4, 1.25}, {0, 0}, {0.4, 1.25}}], 
          RectangleBox[{-1, 1.25}, {1, 3.25},
           RoundingRadius->0.6]},
         PlotRangePadding->None], {-0.460722425599798, -0.7351987615965212}, {
        Center, Bottom}, Offset[24]], InsetBox[
        GraphicsBox[
         {RGBColor[0.790588, 0.201176, 0.], 
          PolygonBox[{{-0.4, 1.25}, {0, 0}, {0.4, 1.25}}], 
          RectangleBox[{-1, 1.25}, {1, 3.25},
           RoundingRadius->0.6]},
         PlotRangePadding->
          None], {-0.5082164378228534, -1.1229316518881758}, {Center, Bottom},
         Offset[24]], InsetBox[
        GraphicsBox[
         {RGBColor[0.790588, 0.201176, 0.], 
          PolygonBox[{{-0.4, 1.25}, {0, 0}, {0.4, 1.25}}], 
          RectangleBox[{-1, 1.25}, {1, 3.25},
           RoundingRadius->0.6]},
         PlotRangePadding->
          None], {-2.3365258833056006, 0.49368127735658646}, {Center, Bottom},
         Offset[24]], InsetBox[
        GraphicsBox[
         {RGBColor[0.790588, 0.201176, 0.], 
          PolygonBox[{{-0.4, 1.25}, {0, 0}, {0.4, 1.25}}], 
          RectangleBox[{-1, 1.25}, {1, 3.25},
           RoundingRadius->0.6]},
         PlotRangePadding->None], {0.882535117321293, -0.5330939299090378}, {
        Center, Bottom}, Offset[24]], InsetBox[
        GraphicsBox[
         {RGBColor[0.790588, 0.201176, 0.], 
          PolygonBox[{{-0.4, 1.25}, {0, 0}, {0.4, 1.25}}], 
          RectangleBox[{-1, 1.25}, {1, 3.25},
           RoundingRadius->0.6]},
         PlotRangePadding->None], {0.7479290973136721, -1.1620469301405179}, {
        Center, Bottom}, Offset[24]], InsetBox[
        GraphicsBox[
         {RGBColor[0.790588, 0.201176, 0.], 
          PolygonBox[{{-0.4, 1.25}, {0, 0}, {0.4, 1.25}}], 
          RectangleBox[{-1, 1.25}, {1, 3.25},
           RoundingRadius->0.6]},
         PlotRangePadding->None], {0.3153665474446323, 0.41722936184437104}, {
        Center, Bottom}, Offset[24]], InsetBox[
        GraphicsBox[
         {RGBColor[0.790588, 0.201176, 0.], 
          PolygonBox[{{-0.4, 1.25}, {0, 0}, {0.4, 1.25}}], 
          RectangleBox[{-1, 1.25}, {1, 3.25},
           RoundingRadius->0.6]},
         PlotRangePadding->
          None], {-1.7731601650380047, -0.24137445078264844}, {
        Center, Bottom}, Offset[24]], InsetBox[
        GraphicsBox[
         {RGBColor[0.790588, 0.201176, 0.], 
          PolygonBox[{{-0.4, 1.25}, {0, 0}, {0.4, 1.25}}], 
          RectangleBox[{-1, 1.25}, {1, 3.25},
           RoundingRadius->0.6]},
         PlotRangePadding->None], {-2.4336851064775162, 0.41311647610637}, {
        Center, Bottom}, Offset[24]], InsetBox[
        GraphicsBox[
         {RGBColor[0.790588, 0.201176, 0.], 
          PolygonBox[{{-0.4, 1.25}, {0, 0}, {0.4, 1.25}}], 
          RectangleBox[{-1, 1.25}, {1, 3.25},
           RoundingRadius->0.6]},
         PlotRangePadding->None], {0.7873676015692455, -0.6403659831209053}, {
        Center, Bottom}, Offset[24]]}}, 
     TagBox[{},
      Annotation[#, "GeoGridLines", "WolframGeoGraphics"]& ]}}, 
   TagBox[{},
    Annotation[#, "GeoScaleBar", "WolframGeoGraphics"]& ]},
  CoordinatesToolOptions:>{
   "DisplayFunction" -> (
     GeoGraphics`GeoGridPositionDisplay[#, {
      "Robinson", "LongitudeDetermination" -> 0, 
       "GeoRange" -> {{-90., 90.}, {-180., 180.}}, "Centering" -> 
       GeoPosition[{0, 0}]}, "ITRF00"]& ), 
    "CopiedValueFunction" -> (
     GeoGraphics`GeoGridPositionCopiedValue[#, {
      "Robinson", "LongitudeDetermination" -> 0, 
       "GeoRange" -> {{-90., 90.}, {-180., 180.}}, "Centering" -> 
       GeoPosition[{0, 0}]}, "ITRF00"]& )},
  DefaultBaseStyle->"GeoGraphics",
  Method->{"OriginalInput" -> HoldForm[
      GeoGraphics[{{
         RGBColor[0, 0, 1], 
         GeoPath[{
           GeoPosition[{-37.3159, 81.1496}], 
           GeoPosition[{-43.9509, -34.4618}], 
           GeoPosition[{-68.6102, -47.0653}], 
           GeoPosition[{29.4572, -164.299}], 
           GeoPosition[{-31.8129, 62.5342}], 
           GeoPosition[{-71.4197, 71.7478}], 
           GeoPosition[{24.8918, 21.8984}], 
           GeoPosition[{-14.399, -120.7677}], 
           GeoPosition[{24.6463, -168.8889}], 
           GeoPosition[{-38.2386, 57.2232}]}, "Geodesic"], 
         GeoMarker[{
           GeoPosition[{-37.3159, 81.1496}], 
           GeoPosition[{-43.9509, -34.4618}], 
           GeoPosition[{-68.6102, -47.0653}], 
           GeoPosition[{29.4572, -164.299}], 
           GeoPosition[{-31.8129, 62.5342}], 
           GeoPosition[{-71.4197, 71.7478}], 
           GeoPosition[{24.8918, 21.8984}], 
           GeoPosition[{-14.399, -120.7677}], 
           GeoPosition[{24.6463, -168.8889}], 
           GeoPosition[{-38.2386, 57.2232}]}]}}, GeoRange -> "World", 
       GeoProjection -> "Robinson"]], 
    "BasicGeoRange" -> {{-90., 90.}, {-180., 180.}}, 
    "GeoGraphicsOptions" -> {
     GeoBackground -> Automatic, GeoCenter -> GeoPosition[{0, 0}], 
      GeoGridLines -> None, GeoGridLinesStyle -> GrayLevel[0.4, 0.3], 
      GeoGridRange -> {{-2.6666, 2.6666}, {-1.3537821253923288`, 
       1.3537821253923288`}}, GeoGridRangePadding -> None, GeoModel -> 
      "ITRF00", 
      GeoProjection -> {"Robinson", "Centering" -> GeoPosition[{0, 0}]}, 
      GeoRange -> {{-90., 90.}, {-180., 180.}}, GeoRangePadding -> Full, 
      GeoResolution -> Automatic, GeoServer -> {Automatic}, GeoZoomLevel -> 1,
       MetaInformation -> {
       "LonLatBox" -> {{-180, 180}, {-90, 90}}, 
        "PlotRange" -> {{-2.6666, 2.6666}, {-1.3537821253923288`, 
         1.3537821253923288`}}, 
        "Projection" -> {
         "Robinson", "LongitudeDetermination" -> 0, 
          "GeoRange" -> {{-90., 90.}, {-180., 180.}}, "Centering" -> 
          GeoPosition[{0, 0}]}, "Software" -> 
        "Created with the Wolfram Language: www.wolfram.com", "TileSources" -> 
        "Wolfram Knowledgebase with data from \[Copyright] OpenStreetMap \
contributors: http://www.openstreetmap.org/copyright"}}},
  PlotRange->{{-2.6666, 2.6666}, {-1.3537821253923288`, 1.3537821253923288`}},
  PlotRangeClipping->True,
  PlotRangePadding->None]], "Output",
 CellChangeTimes->{{3.773998480904319*^9, 3.773998523055337*^9}, 
   3.773998558027336*^9, 3.7741781274804606`*^9, {3.7741786897961206`*^9, 
   3.7741787106322975`*^9}, {3.774178824970826*^9, 3.7741788650779448`*^9}, 
   3.7741789012369485`*^9},
 CellLabel->
  "Out[119]=",ExpressionUUID->"ffac9269-5455-4b99-8d89-f3108a248632"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"\"\<All\>\"", "//", "Head"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ToExpression", "[", "\"\<All\>\"", "]"}], "//", "Head"}]}], "Input",
 CellChangeTimes->{{3.7741789874659452`*^9, 3.7741790032189474`*^9}},
 CellLabel->
  "In[139]:=",ExpressionUUID->"2d776ae1-4faf-4b81-9459-f32fa008844a"],

Cell[BoxData["String"], "Output",
 CellChangeTimes->{{3.774178993550949*^9, 3.7741790037539835`*^9}},
 CellLabel->
  "Out[139]=",ExpressionUUID->"6357b808-1320-4a8b-a190-8e24831de63e"],

Cell[BoxData["Symbol"], "Output",
 CellChangeTimes->{{3.774178993550949*^9, 3.7741790037609453`*^9}},
 CellLabel->
  "Out[140]=",ExpressionUUID->"23ab5d56-a2ab-44a9-9344-a92f09edfd26"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", 
   RowBox[{
   "args", ",", "func", ",", "frmt", ",", "params", ",", "endPoint", ",", 
    "funcName", ",", "url", ",", "session"}], "]"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"args", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\"\<it\>\"", "\[Rule]", "\"\<String\>\""}], ",", 
     RowBox[{"\"\<n\>\"", "\[Rule]", "\"\<String\>\""}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"func", "=", 
   RowBox[{"Function", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"locations", "=", 
      RowBox[{
       RowBox[{
        RowBox[{"GeoPosition", "[", 
         RowBox[{"ToExpression", "[", "#", "]"}], "]"}], "&"}], "/@", 
       RowBox[{"Normal", "[", 
        RowBox[{
         RowBox[{"Dataset", "[", 
          RowBox[{"get", "[", "#it", "]"}], "]"}], "[", 
         RowBox[{
          RowBox[{"ToExpression", "[", "n", "]"}], ",", "\"\<address\>\"", 
          ",", "\"\<geo\>\"", ",", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"\"\<lat\>\"", ",", "\"\<lng\>\""}], "}"}], "/*", 
           "Values"}]}], "]"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"GeoGraphics", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"{", "\[IndentingNewLine]", 
         RowBox[{"Blue", ",", "\[IndentingNewLine]", 
          RowBox[{"GeoPath", "[", 
           RowBox[{"locations", ",", "\"\<Geodesic\>\""}], "]"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"GeoMarker", "[", "locations", "]"}]}], 
         "\[IndentingNewLine]", "}"}], "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{"GeoRange", "\[Rule]", "\"\<World\>\""}], ",", 
       RowBox[{"GeoProjection", "\[Rule]", "\"\<Robinson\>\""}]}], "]"}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"frmt", "=", "\"\<PNG\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"params", "=", 
   RowBox[{"<|", 
    RowBox[{
     RowBox[{"\"\<it\>\"", "\[Rule]", "\"\<users\>\""}], ",", 
     RowBox[{"\"\<n\>\"", "\[Rule]", "\"\<All\>\""}]}], "|>"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"makeAPI", "[", 
   RowBox[{"args", ",", " ", "func", ",", "frmt"}], "]"}], "[", "params", 
  "]"}]}], "Input",
 CellChangeTimes->{{3.7739978231521387`*^9, 3.773997826561101*^9}, {
  3.7739978582211027`*^9, 3.773997884644102*^9}, {3.773998175303272*^9, 
  3.7739982169363174`*^9}, {3.7741789169809446`*^9, 3.774178958620945*^9}},
 CellLabel->
  "In[141]:=",ExpressionUUID->"99e565e7-0def-4a56-93bb-4fded035a9ef"],

Cell[BoxData[
 GraphicsBox[{{
    TagBox[
     {Texture[
       FormBox[
        GraphicsBox[
         TagBox[
          RasterBox[CompressedData["
1:eJztnV2vJcd1npmPi1zmB+QmvyC3uc1lbh3kB9iIY+TGAewAQX6NB4YM0IEE
S0IIDwXw60ISRYv0eESMKJphJJ09hiXKn6INGiPgZJ7T83LXqenvru5V3f0W
8MyZs8/e3b27q1a9tWrVqn/7G//91/7rP3/llVd+9189/+fXfv1//off+Z1f
/1//6V8//+U///bv/rff+u3f/C//8bf/x2/+1m/+zr//jX/x/MV/889eeeXf
PX//v3zFxeWVV37vOze3xhizF6JtpouLS0yJtj3GGFOCaFvq4uKyXom2L8YY
swXRttbFxWVZibYhxhgTSbQNdnFxGV+i7YUxxtREtE12cXFpL9G24ax8/YPL
7WuPb55zuf3q+5e73//geze333h08/zn5fb3370UO9eD7zTH5BzffHS5feej
m9tvfXhz+/qHl9s3ntzcPrlcbn/ys8vt3/395fYfPn969xN+9tfNz7/62+bv
8OlfXm4//Onl9tsfl7s+Y/ZAtK12cTl7ibYBR+EPv0/ff7n9s59cbj/5i8vt
5bPL7dNfXG7/6R+f3v7qiyvogfT3Ifg8nwEd8/1Pm3Px84MfN6+hKXgvfO+T
y+2Pnl7ufqIrdCw+//6nN7fvfXJzd7z82vrgs+gX6RbOqd/RO1yP9Mzvv9to
IXQYGuydjy53oM2+9n78s6qBV9+7udOO+h196nuzT6JtuIvLmUp0e9879MNo
B/Xb/I4PQn4K9fXSE6kOkNbgfV1aAW3x+S+b96JB3v5h4xfh/5wv1UBT9VAJ
+G58B/0ufwyaSfcg/TvXyO9ou7P00fi4/vf377/26nvN80PLoSupN+jeh89/
8n50X6P1pp+Pc6EVx7wXXcm5VJfxvVGfUz1lphFt011cjlqi2/beYWxMvyNN
on4Z/UKfjA9EPg98L7zOXBC+CPkk0DRtekY+Fs3P0J/QD3GMNv9NbeRaKp1f
4p7QVz4Ie26NZkAPNPNwN/f8QOrv1ZcLNMVYLSA4pvxvnAM9iy7gOLzOXB06
Bb8UWgGoI7yf/3M9HGOuhuA8U+4z73/ro/saE6Z+b3OfaFvv4nKEEt2O9wp9
Db4O/k+fgu5IfQm57uBv6BY0il5Dw9CPp9pD2kW+CD4DuT+CcTR9Hf1/tDYZ
C9+L70I/nPsc1oZz4stIfRroPp4H2gDk80qvmeeDRmxii+7f/7wPH6sLmrii
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
r1d+APWxqpPqE/s+y3u7niF/px2N6ZuPhnwoa31X2r/ad1u8EGMX2iztpmT9
4ZjYsei+y+W8pVRd1v7GU9to2u/yWcXLyX5ix/PcEm1rltMcLNrzR2sKlP9N
efv1f/mxc02jNRean5A/mN+H5sylJbQHX3pc2jo6hu+U3idsz8v7HDX2gfuq
/HBct/ZwkZZCV9HfdGkqvZbO2c/dd0/3RHszK//GmrY/3dta91f+l1wT7oEH
L9oKWuXdP7/eQ9WHfN9Mvq/2P6L+vPEkJr5Ha3yVA7FtLqTLL0jbpY3Vmtvw
LKT2EzuY+x2VD5MYHOWExuaQj0dxzm1ry6P7MJdzlRL2T/sIbuXvxb6jB2Q3
/8+fXvtz+USU2z7/rPK2KReLXldciNbYStMw1qcdd62p0XiH9pz24dIH9DOC
fl5+Y/ljeM+z5HvRJ2A7+HtqGzi+vo/yx2p/4WYvogbplzbtqNgc/s53mruu
gXNqf2TuE99rS9ur77+3vWv0rKT39Jzmxo7yeeWLU07lqdf02uOrlm3TV23f
QT7E9HpUp1g3pLyN8hWm79P+UvIjtcW8mm1o2/dDMWx6Joq/Q9/0jUc1b8vz
j+7TXI5dZG+weVPtHZ+RL6KmtiefSIlj6ziKfZHPRnP1xHmwBprXtO+zcrRo
P1v9VPyC+iw+j+3nb/l5f/E3V32i3C3KSZfaCPmI0pgh7Y+E9lJuu/z46mOW
5u3QOpE11hoppiW1o8167+a8NczxTEXxqapHa7Udjkt9aZvbSX2RqY9R+RBV
f3iuigvldc1jpfn3+R59a5kVW4VWyf/GOTgux0LbcFz6yEhbcmbGrkmfqjGj
+ziX45W8Pk4Zvyp/9dHHSvQB2F76HPk1ND/D6+iSfK2P9oGjj5UPRGuW0Qx3
45LHN1/maOk6N2NpxT/kf+vKo6V4Wc0tab+Xru+mPadhqv9FcUrK/1nyvqPN
uIdova61GXtDMdk8z3RP6S3qMHUgnVOjLvM3rfnnNXRMvs5IrDG/w7k1t6t9
BxRPfnS7cjai+zqXY5Su+oUPAdtFPz0mFwg2R/GE0b6XCLCzc+JTtdZx6H2K
X9a50r+17cHCc8t9EvRR6IA+P9SzF8dr5l/G5SFT/zt07Ln3NVpnrAVzhmiF
0log3XOoi3wNFs+wWfujPPzr6gXFJqm+KX+g8hmZ4xPd97nss2huPO9r8Pen
cf/y8+bjeuWsZ5yt8RJjtS3XxtbE2usi5HuQv4Z+5uHIuRI0iPLHNHNLz3Xp
j26+nH959P+aeR7tc8D5NM8wpg8upVvSmGLq3Zx9E+l3mbdL90TQWhj+Jt9X
pO+GdR1prNIadQXtmc5fKn+inrl8dcwj0r5puxFre7gOcrdpHja6HZvtie4L
XfZT6APxGStvWW6zyFmi2FbsvbQJNi7fa6/U/q3m/j3VHr3q397+YeO/p8+j
T+rqF5t9Va7/7+sj0Slomt+7053XGOE09+kQymG+xK+vGE36L3QF1zJHE9D/
Kjaae4e2TnVVuucw14zfI0K7cF1TdAJ+FMXeTh0b5Ll7FC+FDWjbu9OYCKL7
RJe6S1t/lOazV96yrvFs27oa+W9s+8qi/C2g/OjpeqC23CXyt2tvozHj+mZ/
guaziouZ6pOgXim/7ZQ+mTH/2Lw6Y2B9N7puzLwldR2dtLVuYcwwJQY1j5tH
i0xpa/KZAsdCr6Ff7OMw0aR5ZzRei+4jXeorQ+Pmvv0Dgf5T+U7UR2ADz5BD
ak3aYh20pyD9jHLR6W/ybzAPkMZbMg+huOFrrEujRYY0DH/P9x2Y2h+Pzc2X
2i00U2lt0BXPLPAl4uMpqZnGwr58aT7kMdC+9HmuOfd7DqH9BPFlqT7YV2pq
QTkasGcaM0X3lS51lLF2FbuoOeehPJnoHPpHx/8vg/5D/gr5U9Jcepon0Npg
7dGjnMTSG9pLoS2/6qvvXde36rzKQ5vuH7lEu3B+rW0d8715L9e/Rt596i6x
5eiidP9jtHbUHBFxOzw77Ys8RjeoPqA5eKYlYuDTPH7G1IpsUXTf6RJXpthX
xu30fW32/fXHl9Y9is1ylIu2a56mydXStGX8Cen+ANdnd/93xafqd+XIU06Y
Jv666d+ZtyH2YWnsarrXZBdoG+2zHaEhtiTP3zOlTuR5drTH5dw6NientTFz
KeHTw1bg34/uQ122L1N1S59msW5ZB+kW7UPQpV1S3ZLnSW32huzWLdIuaS47
aZeSumVM/4w94jtM2ctvr+TaZYp2wC9l7WL2TL5/xVywGdF9qcs2pYTdZY7B
tm5dlAd9rDZI45HQJop3UXys1rZrH4R0nbD2WuM4yrnO+5lP4hgl9v5h/mdI
v3DOveSV4/vM3V+Az7HOKc9TOAZ0Rq7tluYd0L5W0XXeHJO8jqM3aD/Uualj
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
A/xDWqPkNnl8mr2zxvn2ch9dXqcYh9JWmMOkvVCn23x3aBnFle95H+mxRGsW
SvQ9ODJnnTfCBuS5u0w9dPXhaJWSfXupdUqg9UeAFhnaV1x5YGiD6Vjafpfj
g693SD/Id/f2k2YukXVvaGN0vHyR8juqTfC+VLvg06OO8VPzhmfa797a5Zgo
hyh1n7YU3Z63gnad7lNj6gK73LYPeGmo97WNP8fkWzXHAc0xNH5Srub0d8V2
Kacze3Rpz+hvf3xzZ8/5f57HSHooup5vhXXLMbF2iX8G5mWsXeLbiNmGJdpl
iX6JrudbYu1yXDTP/saT48+1L9mX1cyrW2PfSx3EDm81Z0JdrynWiXvlfP3n
gzo4VDfQH6kG0X7gxKgzT4TmZV5I+5DTltBEbXXb2sW65ShoHxvmRaPb8RrQ
thmTnK3NRqO8vGPeyxx8ZL+t9de0AdYQj4lVoe/gM3y2xD53+AKj24qJgTja
sbF3jb+lyUeleEWtX6vNj1gL1i7HJo1p52fbGru9cfls3fXP1kNlqC1HPXq3
73qVly4FDUNfMjd/xtQ9EcyxYP3P1LUD2B/0M7Z6zbyRe8e65fjIfjL+pM9n
bLnndQ9nyMN0BGqsY7QFNJXWDqU6tS+3G7of7YM/n3akddN8Dp8OGkd/a459
zf0S/Z1NLMqFPKXtUL/OuO/9VKxdjkuqW6xdzJbUWMekXaRf1tMuV/0S/Z1N
LEu0i/VLP9Ytx4W5UuX70mv4I6Pbs8Avqn17uUb+37UnE+89+p6pRwFNMCcv
7tYoJhIdMmddXsT+YeioPdxbc91XjTHj1LloPuNYl2GsXY6LYr/kr2BMuFW7
xbbTJzAeRZsQq6K/KYd2fr20ce1XQ6xj2j94HLIPsLln3hd0zRhlfEfkyUNv
nTUP5d7A1pGPbqx+cczdeKxbjkFXbBc+S2kFxYKt3V7RKfn1aD8Y9ugdmw8S
G61xJj/drren757nsYg815p8exGk68KJ1yx5bNbXpc/Fa7Drp9kvIL4dHxVr
l2NCX6I9fJu92S9f7uG7RjvVuLCkxkjXa2ifYLMdWhv9RjJ2pF7xnNM9oLHP
Nca5bA0+J/yG/L90Tr7Pf/n03jr1hz/Yxo9q5jN1zJXnrjP9WLccky7tskYb
XVu3gLXL9li7TMPaxaSgXaboF2uX6Vi7HA/6FvX/2i+MuZzSayCIaVljPifN
u6E9gs22qM7wE32iHOb8TWuBzxzf0kaT071pb6X1C20ibWvKqXf2ubpaGbNP
Y97eotv83rBuOR7MjwO6n3lX+n/GbcA+pqXa51prl9OxfLNf/P082tH398zg
j2H91xFyHq6Bcr6vEbtMTE1e/xXnnrYXrQs/+t4gtcJzz/cfGmKNfaHPYCut
XY4JYzP8zenaHtm6UrZ0rWtPfUSsk9aek/ycmrfSlOHh432sg44kbRNr7Q/A
mCH1g6ld01+iLck1z9/PtDdrTTCnN7ZN8dx4ZmtolzNg3XJc0Cn0N/JJYk9L
9D9j9h5bAm0aPzljmNxG087PMKaoib3kb4kGf1Q+5i69rhldj2+lbR91zVeh
77/xqDk3c7s8O+V9yv0xyl+gHAdexzQf7t9X329Y2t6i2/xesHY5Ju+8iNlN
95mjXSydj99inMA5Uh8Ltph+QXtmu31vB2PD6H5hLygORfeOuKGSx1euunzO
NvW19K3PJSYU3UNbwpepuKb0746jmQfaUNqV+8rzaHsWY/c3NcNYuxyTvWqX
XLeAtUsc1i7TqEG7dOkXa5f1mKJdrF/KYN1yPOjb0S5ak5DaOmzV3D1vsZ1b
fxf6ztcfX+5IvwPf0Xuvrgt9mecRpsO+R7qHxM6WXkve7NHUtGvOlesNntmS
9Su0LWwE807Klc0YyOvL2snXFsm+Mn/04MX91Lgruk0fDWuXY6I8tfgt0tfn
5NvVvPja16x2nr+W/s26ZRvmatyzk+9/QTvc+hpoq7TxNDfvVNBI6BWOs2aO
y73y7MWzTm0RYy35KrG90W346Fi7HBf8lnk/3+Ton6ZfsGFrXB85acjtxRpu
7dHLHgPYzSbXyMvn5fvAnH3PzDgYM0b3DXuFOpzPe0bqwLk5DWh/9M34XNjv
IGp9PGsma/D5cA340PBDYbO67it2Ce3o3Jrrsyfdwjxt7kcw08G2TskDQZst
qRPoG7EBzL8rBzB+cPzU0lT0Abyn7XmneswxMGXx3jnLafa1ufZdpfNDToG2
OzfGgvaY2gnqxdp1g+Nz3kf/txlf0f4Zy2z13NpexxaRs3xsngb2lbNN2gZr
l3NRk3aRbpmjXaRbbCfKYe1Spg88snZZs37Uql2m6Bdrl+3Yi3YR1Av6Pc8b
TEf9/tT567G+Z2kJbDc2B/2BLUrzUqR75cjGp8+ROWPaP3ZMOUOxGel7NPdl
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
9TdemxJHm2qiPqbGAefrqdnvKPpemnLYn3Z8GAexRiW6/5hCuqekWYd8DJzu
VXMk6PO8hq1MXcEHk6//YT6H+UbWLys3/9BeZrwPHUmdG5uzgbibsbEr33h0
v25zLq7PNuU4WLscH2sX04a1i5laV6xdjDFbQNxrW56E2iG/mu3MtgzFG+wR
cvRF39ej0RU3x3gDe0OeW/Z07vo84+U5OZ6Zk1KcTTMH1KyXI35Je2pzfl7P
89LxHnLnKXbHGFMejXGG9nQdwx7zqDJuox9lnj36WRyVND+pONqe1o5tWQfs
EnalzbYw5nj7h/3+/Dy2dyz4aHQM1om99dFVs6CnQPm68zjdd//8mlvPYyJj
1oGYOKCttfUxY6FNR/cfc2B8hQ1kTMU4S/mAo5/LkcGe71HndrHW/jpnp1lb
dPly/VBbncH3Qexu3zof2vbUZ0pMsD6vNe7UW2yD1jy1aaZX32tsKTZVn1EO
avQOr2tOSZ+xf8aY6dBu4I0njZ2gbU4dK/D+Nfb22xq+A/qFOXHsHTYLSvik
zJW96tw2qC+uG+vxVpJnpW1vV+5/6iPpqm9T7BNaVFoIjaE8dWgSzsc6SuC4
+bmoC6yvlq7hd+KflP9R8TbPvri/9rvtWEtxvTRmmNpz0I2h6zsw3nN+sXIc
SevaR7cu6JLUx9EWTyf90rauWT6NsXOUxNGkn0/3gMQ+NGOZBnwz/GQ9NP9X
XUCH6Hq1pht4jc/reMrPwOtcP/qGNdzEykBfHE8b+HTS+oj+sn4xph9rFzMW
axczFmuX8Vi7GDMN2gdtnvYW3Z+sBXZRawpkh/Tdo+//HuEejl2vWiPy90ff
xzPAfVYcGrqgbd0Qz4M5GY0xiINJ9/sYO0+JdtBnaNvSSugW7VHQd535a7l9
QE+gh5hzuvz88mVcDdqlbeyEPua9fJehuBhpvPScrN+WnrGtMuZlaB97XB89
ljxOEDuGrcGOXj67DOaYMC+DXd2jfuGarVu2hbgTxbd2+VCwP6wX/MqL96T7
Mci3QZ2jLWusleuFNO4k3bcCjcF7+b1LQxCDyznxn6A30EFcE+Oda86a6/Vz
LLQJ/pUxfmvez2f5Hl+ZcO84J/eF79C1V4IZj+/dcaCtHmHOaGl/ptje6Oex
J7Dbe9Mv9EvR9+3stOmXPM9KF3n+fuZutP75j7O9Wen3qZ/4CRVrqzmhXL+i
DVizzTHT3HTy06b7NaKdeO/cuVM+h1Ya248qZphrcd9rTAM2I7o/qQlsnO3D
ePa07giNvnbeXI+Lx0Hfneresdplyj2X70V+C/wo6KaxuRTa9oLMf1L/yWs4
Z/yH7urKbZGem5gc9FK63tt1zJwdaxdrlyXsRbvQt1i71ENp7dL1epd2mXrc
9LnWoF2in58x0Tw86N40S/s57Irzlo1jTv6wreFZQpq3zMTA+h5+EmemONo5
bW2oD+dZc2zpA+2jpJjYKRogjTXR/BG57NK/k79u6n5wmjtq8nM1ENeDxibG
F23EPWK+SOdSjr3o57g3PK44FtiP6H6lVojltY0YhvHgnNztW8IaE1C/aeqg
WavcrN9RzBnrhbvma2BKLlvem/pZct/JFLS+WsdM44kFdWxq3ST+OJ3L4his
Y6JN4W9p8xXyuvKqRz/DNl55XqKvwRwf7MeR8ryXZI2cmUdD49voZ9UH8wVe
G10nPJM0by3wu9ZK44egr27W6TTzLMwDyX8y9ExLjLXzY7Be6PUPX7YNvG/O
/BFzZlP2daHNcT/4CTVpmFdelOjrMOcA+xDdv9RI29jKvAx9S/Sz6oMxLFi7
1At7CFCP0DCi7Vmia6bkaRqztljzMNpnJf3bw8fDexcI9MyQduF7sQY7fW3O
GsdrbrzrvlA1aBhrF7Ml1i7WLkvYg3bp2oPP1EGUdtFczZ61i/a8tHaJw7E0
cSieMbqfqYm+XJxuD1dq1770J4pXiL5Xpp9GPzQ/6ZfRM0BeFOa2lWeOOUD6
fGL2mEOirWiOSTqVY/C7tAuxI7yX+RnmgzkP59Ceizo375UO4PNjrhv9o73t
ySOUahj0yi/+5nIHNoXjM9dDrK7ek4+TxsSW8h3Js6S4IWjium569+dek7Nq
Fz2Pvdjso0HbrT3uciucg3U89B9t+d5rQc/Sz/MYKNcufTY6hH6f9W7KyYve
UM46dARjMvp0xclg5/g/Woi42LdWGKPkeT/RNG11kOtTHdX16TvqPX1xPbyu
9XPpWihpmK2fzZm1i3SL7UwMY/c+OzrOszue13aw1p4xLgx9F+de3z+0Xflr
8hhY/BHoHLTE2mvm0UjSFl3ro7SnnOop+WLQXum6aBjTH3Is4n4BH5T8UVve
+zNrl/Q5RF/DGWG8UPu6kbVxbpdp0FZrX6vG9WHLIfp+mZfrT+lj0venWlVz
KOgC2veW+4gPzVWia/CTcF3EwvDz6x/Mn/eRXtJc0pbP0trF2iUKaxdrl6lY
u5gldWdt7aJYVv5/Ju0SMU9q7WIiOXPM7ph5BfMy5C6PfnZD0C9E3yezLc0e
0NdY7bH7QqRzh/p81/uGjsU8/BR9xjWm66jmxJgr1rn9b+tpmleSEv3szfmg
Xp9xf2nmwaPv/V6Zk1N0a9r8acQZR987UxfoBcYwn/7lNX/tdz9p1jWl2mfM
uhI0BH7sseuVuq4n1TN9jPW1SJOVvG+vZCX6OZpzsoe+qDRd4xTTD3aQNavR
z28IYiLbrr9vXM0aVBF9n812MKekvBHE9QJ1iPV0zD9qbmfITys7ejSfX5tm
G6NdHAtitmAP++yVgO/pOIj55Lm2aoVxdN/3yMeraBr6JnyQXnt0Llg7PVSf
0DB9frt0zWZNORfWqsdL/C6MG7mXbmOmBGnupCPj/LnzweZEP7+x4Bua8t1Y
r6p8R8q9Hn2/TTk0v6LctHodX8mY9QpvP+nPuZv7ImuqP2P2gpqKtYupBeXE
iO5zrF3q5UzaJfpem7LkOfX1+hjtgm6Zol1qqz9baJdUv0zVJDX7OWu9LnOf
2nOmWrvEsidty9zP2PhE4jPTeHXWUUXfa1MG+p43nzTaAo3CnHHajw/NlWuP
iaHcdulcKvOV5IwrHR879/uX1i5tusXxuiYaxgxHzvnifC7zGRMXUAvEJ4wZ
M9En0X+lmv1osZZnhefP/or5OkrqsWJyFZfbV4/G7M/Ytkcp+iX6HuBjYrzW
rBsvc8yp2qVmv0rbtaY/h967l+91FlijV/t+wXM5Ur+0Zbuhj9+TT+5bH/Z/
HzQ6Ojb/TtQP+12OAX6PEvkfGMs9+rQ//rYtXyMaKfoeQDNXVi5HX5d2qSU+
eVzdsPY4Mswhaa/66L6oFM5HN4+9xLpQV4eecd88wVh/jakTxVnzjKGk7eJY
b3103beI8zHO63o/8VM19Of4nrRvwJzPq48n5w1t6wjaBaRfoq/DlMfaxYij
aBf1adYuxyTVLqXt1t61y5zPprplSLtQ9ujLWCN3n6kHcqIMzQ3vgYcj5q7N
y7BXbfSz64O5Aeb1+2w080hDx/Ge4vuFZ4++WHu8hSZhDyLOOTS33pUjcWu+
MvNzzDMxhkWD4afo0y171S6qO9HXYNZ9vnvWL/RvrCmJvo97hDzn0c+vDdaP
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
           "], {{0, 284}, {559, 0}}, {0, 255}, ColorFunction -> RGBColor], 
          BoxForm`ImageTag[
          "Byte", ColorSpace -> "RGB", Interleaving -> True, MetaInformation -> 
           Association[
            "Exif" -> {
              "Software" -> 
               "Created with the Wolfram Language: www.wolfram.com"}, 
             "GeoMetaInformation" -> {
              "Software" -> 
               "Created with the Wolfram Language: www.wolfram.com", 
               "TileSources" -> 
               "Wolfram Knowledgebase with data from \[Copyright] \
OpenStreetMap contributors: http://www.openstreetmap.org/copyright", 
               "Projection" -> {
                "Robinson", "LongitudeDetermination" -> 0, 
                 "GeoRange" -> {{-90., 90.}, {-180., 180.}}, "Centering" -> 
                 GeoPosition[{0, 0}]}, 
               "PlotRange" -> {{-2.6666, 2.6666}, {-1.3537821253923288`, 
                1.3537821253923288`}}, 
               "LonLatBox" -> {{-180, 180}, {-90, 90}}}]], Selectable -> 
          False], DefaultBaseStyle -> "ImageGraphics", 
         ImageSizeRaw -> {559, 284}, PlotRange -> {{0, 559}, {0, 284}}], 
        TraditionalForm]], 
      PolygonBox[{{-2.6666, -1.3537821253923288`}, {-2.6666, 
       1.3537821253923288`}, {2.6666, 1.3537821253923288`}, {
       2.6666, -1.3537821253923288`}, {-2.6666, -1.3537821253923288`}},
       VertexTextureCoordinates->{{0., 0.}, {0., 0.9999999999999999}, {1., 
        0.9999999999999999}, {1., 0.}, {0., 0.}}]},
     Annotation[#, "GeoBackground", "WolframGeoGraphics"]& ], 
    TagBox[
     TagBox[
      TooltipBox[
       {Opacity[0], 
        PolygonBox[{{1.5999600000000003`, -0.8122692752353973}, {
         2.6666, -0.8122692752353973}, {2.6666, -1.3537821253923288`}, {
         1.5999600000000003`, -1.3537821253923288`}, {
         1.5999600000000003`, -0.8122692752353973}}]},
       "\"Wolfram Knowledgebase with data from \[Copyright] OpenStreetMap \
contributors: http://www.openstreetmap.org/copyright\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, 
       "Wolfram Knowledgebase with data from \[Copyright] OpenStreetMap \
contributors: http://www.openstreetmap.org/copyright", "Tooltip"]& ],
     Annotation[#, "Metadata", "WolframGeoGraphics"]& ], {
     {RGBColor[0, 0, 1], LineBox[CompressedData["
1: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
nkoe7Lzf2fA0iwH0fwB+6el3
       "]], LineBox[CompressedData["
1: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
NfDhrejDtyu5iGc6Ml/MVWvgfwHTkFnk
       "]], LineBox[CompressedData["
1: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
VPohfr9FTbcvB/8HxwH4rQ==
       "]], {InsetBox[
        GraphicsBox[
         {RGBColor[0.790588, 0.201176, 0.], 
          PolygonBox[{{-0.4, 1.25}, {0, 0}, {0.4, 1.25}}], 
          RectangleBox[{-1, 1.25}, {1, 3.25},
           RoundingRadius->0.6]},
         PlotRangePadding->None], {1.1211415811411853, -0.6249914110045608}, {
        Center, Bottom}, Offset[24]], InsetBox[
        GraphicsBox[
         {RGBColor[0.790588, 0.201176, 0.], 
          PolygonBox[{{-0.4, 1.25}, {0, 0}, {0.4, 1.25}}], 
          RectangleBox[{-1, 1.25}, {1, 3.25},
           RoundingRadius->0.6]},
         PlotRangePadding->None], {-0.460722425599798, -0.7351987615965212}, {
        Center, Bottom}, Offset[24]], InsetBox[
        GraphicsBox[
         {RGBColor[0.790588, 0.201176, 0.], 
          PolygonBox[{{-0.4, 1.25}, {0, 0}, {0.4, 1.25}}], 
          RectangleBox[{-1, 1.25}, {1, 3.25},
           RoundingRadius->0.6]},
         PlotRangePadding->
          None], {-0.5082164378228534, -1.1229316518881758}, {Center, Bottom},
         Offset[24]], InsetBox[
        GraphicsBox[
         {RGBColor[0.790588, 0.201176, 0.], 
          PolygonBox[{{-0.4, 1.25}, {0, 0}, {0.4, 1.25}}], 
          RectangleBox[{-1, 1.25}, {1, 3.25},
           RoundingRadius->0.6]},
         PlotRangePadding->
          None], {-2.3365258833056006, 0.49368127735658646}, {Center, Bottom},
         Offset[24]], InsetBox[
        GraphicsBox[
         {RGBColor[0.790588, 0.201176, 0.], 
          PolygonBox[{{-0.4, 1.25}, {0, 0}, {0.4, 1.25}}], 
          RectangleBox[{-1, 1.25}, {1, 3.25},
           RoundingRadius->0.6]},
         PlotRangePadding->None], {0.882535117321293, -0.5330939299090378}, {
        Center, Bottom}, Offset[24]], InsetBox[
        GraphicsBox[
         {RGBColor[0.790588, 0.201176, 0.], 
          PolygonBox[{{-0.4, 1.25}, {0, 0}, {0.4, 1.25}}], 
          RectangleBox[{-1, 1.25}, {1, 3.25},
           RoundingRadius->0.6]},
         PlotRangePadding->None], {0.7479290973136721, -1.1620469301405179}, {
        Center, Bottom}, Offset[24]], InsetBox[
        GraphicsBox[
         {RGBColor[0.790588, 0.201176, 0.], 
          PolygonBox[{{-0.4, 1.25}, {0, 0}, {0.4, 1.25}}], 
          RectangleBox[{-1, 1.25}, {1, 3.25},
           RoundingRadius->0.6]},
         PlotRangePadding->None], {0.3153665474446323, 0.41722936184437104}, {
        Center, Bottom}, Offset[24]], InsetBox[
        GraphicsBox[
         {RGBColor[0.790588, 0.201176, 0.], 
          PolygonBox[{{-0.4, 1.25}, {0, 0}, {0.4, 1.25}}], 
          RectangleBox[{-1, 1.25}, {1, 3.25},
           RoundingRadius->0.6]},
         PlotRangePadding->
          None], {-1.7731601650380047, -0.24137445078264844}, {
        Center, Bottom}, Offset[24]], InsetBox[
        GraphicsBox[
         {RGBColor[0.790588, 0.201176, 0.], 
          PolygonBox[{{-0.4, 1.25}, {0, 0}, {0.4, 1.25}}], 
          RectangleBox[{-1, 1.25}, {1, 3.25},
           RoundingRadius->0.6]},
         PlotRangePadding->None], {-2.4336851064775162, 0.41311647610637}, {
        Center, Bottom}, Offset[24]], InsetBox[
        GraphicsBox[
         {RGBColor[0.790588, 0.201176, 0.], 
          PolygonBox[{{-0.4, 1.25}, {0, 0}, {0.4, 1.25}}], 
          RectangleBox[{-1, 1.25}, {1, 3.25},
           RoundingRadius->0.6]},
         PlotRangePadding->None], {0.7873676015692455, -0.6403659831209053}, {
        Center, Bottom}, Offset[24]]}}, 
     TagBox[{},
      Annotation[#, "GeoGridLines", "WolframGeoGraphics"]& ]}}, 
   TagBox[{},
    Annotation[#, "GeoScaleBar", "WolframGeoGraphics"]& ]},
  CoordinatesToolOptions:>{
   "DisplayFunction" -> (
     GeoGraphics`GeoGridPositionDisplay[#, {
      "Robinson", "LongitudeDetermination" -> 0, 
       "GeoRange" -> {{-90., 90.}, {-180., 180.}}, "Centering" -> 
       GeoPosition[{0, 0}]}, "ITRF00"]& ), 
    "CopiedValueFunction" -> (
     GeoGraphics`GeoGridPositionCopiedValue[#, {
      "Robinson", "LongitudeDetermination" -> 0, 
       "GeoRange" -> {{-90., 90.}, {-180., 180.}}, "Centering" -> 
       GeoPosition[{0, 0}]}, "ITRF00"]& )},
  DefaultBaseStyle->"GeoGraphics",
  Method->{"OriginalInput" -> HoldForm[
      GeoGraphics[{{
         RGBColor[0, 0, 1], 
         GeoPath[{
           GeoPosition[{-37.3159, 81.1496}], 
           GeoPosition[{-43.9509, -34.4618}], 
           GeoPosition[{-68.6102, -47.0653}], 
           GeoPosition[{29.4572, -164.299}], 
           GeoPosition[{-31.8129, 62.5342}], 
           GeoPosition[{-71.4197, 71.7478}], 
           GeoPosition[{24.8918, 21.8984}], 
           GeoPosition[{-14.399, -120.7677}], 
           GeoPosition[{24.6463, -168.8889}], 
           GeoPosition[{-38.2386, 57.2232}]}, "Geodesic"], 
         GeoMarker[{
           GeoPosition[{-37.3159, 81.1496}], 
           GeoPosition[{-43.9509, -34.4618}], 
           GeoPosition[{-68.6102, -47.0653}], 
           GeoPosition[{29.4572, -164.299}], 
           GeoPosition[{-31.8129, 62.5342}], 
           GeoPosition[{-71.4197, 71.7478}], 
           GeoPosition[{24.8918, 21.8984}], 
           GeoPosition[{-14.399, -120.7677}], 
           GeoPosition[{24.6463, -168.8889}], 
           GeoPosition[{-38.2386, 57.2232}]}]}}, GeoRange -> "World", 
       GeoProjection -> "Robinson"]], 
    "BasicGeoRange" -> {{-90., 90.}, {-180., 180.}}, 
    "GeoGraphicsOptions" -> {
     GeoBackground -> Automatic, GeoCenter -> GeoPosition[{0, 0}], 
      GeoGridLines -> None, GeoGridLinesStyle -> GrayLevel[0.4, 0.3], 
      GeoGridRange -> {{-2.6666, 2.6666}, {-1.3537821253923288`, 
       1.3537821253923288`}}, GeoGridRangePadding -> None, GeoModel -> 
      "ITRF00", 
      GeoProjection -> {"Robinson", "Centering" -> GeoPosition[{0, 0}]}, 
      GeoRange -> {{-90., 90.}, {-180., 180.}}, GeoRangePadding -> Full, 
      GeoResolution -> Automatic, GeoServer -> {Automatic}, GeoZoomLevel -> 1,
       MetaInformation -> {
       "LonLatBox" -> {{-180, 180}, {-90, 90}}, 
        "PlotRange" -> {{-2.6666, 2.6666}, {-1.3537821253923288`, 
         1.3537821253923288`}}, 
        "Projection" -> {
         "Robinson", "LongitudeDetermination" -> 0, 
          "GeoRange" -> {{-90., 90.}, {-180., 180.}}, "Centering" -> 
          GeoPosition[{0, 0}]}, "Software" -> 
        "Created with the Wolfram Language: www.wolfram.com", "TileSources" -> 
        "Wolfram Knowledgebase with data from \[Copyright] OpenStreetMap \
contributors: http://www.openstreetmap.org/copyright"}}},
  PlotRange->{{-2.6666, 2.6666}, {-1.3537821253923288`, 1.3537821253923288`}},
  PlotRangeClipping->True,
  PlotRangePadding->None]], "Output",
 CellChangeTimes->{
  3.7739982200183496`*^9, {3.7741789371309443`*^9, 3.7741789596489515`*^9}, 
   3.774179099074335*^9},
 CellLabel->
  "Out[146]=",ExpressionUUID->"cc0c843f-af04-47dc-b938-ded3f2f12f7b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"ClearAll", "[", 
  RowBox[{
  "endPoint", ",", "funcName", ",", "permit", ",", "url", ",", "session"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"endPoint", "=", "\"\<live-coding\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"funcName", "=", "\"\<geo-pins\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"permit", "=", "\"\<Public\>\""}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"url", "=", 
  RowBox[{"URLBuild", "[", 
   RowBox[{
    RowBox[{"makeCD", "[", 
     RowBox[{
     "args", ",", " ", "func", ",", "frmt", ",", "endPoint", ",", "funcName", 
      ",", "permit"}], "]"}], ",", "params"}], "]"}]}], "\n", 
 RowBox[{
  RowBox[{"session", "=", 
   RowBox[{"StartWebSession", "[", "\"\<Chrome\>\"", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"WebExecute", "[", 
   RowBox[{"session", ",", 
    RowBox[{"{", 
     RowBox[{"\"\<OpenPage\>\"", "\[Rule]", "url"}], "}"}]}], "]"}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.7739978231521387`*^9, 3.773997826561101*^9}, {
   3.7739978582211027`*^9, 3.773997884644102*^9}, 3.773998175303272*^9, {
   3.7739982302533183`*^9, 3.773998309587319*^9}},
 CellLabel->
  "In[147]:=",ExpressionUUID->"90e0a49a-153e-416a-ae11-f55d5555b68f"],

Cell[BoxData["\<\"https://www.wolframcloud.com/obj/mitch/live-coding/geo-pins?\
it=users&n=All\"\>"], "Output",
 CellChangeTimes->{3.7739983159513164`*^9, 3.7741791084583373`*^9},
 CellLabel->
  "Out[151]=",ExpressionUUID->"267d1364-670e-4934-9352-877df72358f4"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Execute the API build block", "Subsubsection",
 CellChangeTimes->{{3.773998365028145*^9, 3.773998409027355*^9}, {
  3.7741792304601398`*^9, 3.7741792349511414`*^9}, {3.7741793883890853`*^9, 
  3.77417941476411*^9}},ExpressionUUID->"02a021d1-03a1-4565-9e73-\
763c06ac59e2"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", 
   RowBox[{
   "args", ",", "func", ",", "frmt", ",", "params", ",", "endPoint", ",", 
    "funcName", ",", "url", ",", "session"}], "]"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"args", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\"\<it\>\"", "\[Rule]", "\"\<String\>\""}], ",", 
     RowBox[{"\"\<n\>\"", "\[Rule]", "\"\<String\>\""}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"func", "=", 
   RowBox[{"Function", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"locations", "=", 
      RowBox[{
       RowBox[{
        RowBox[{"GeoPosition", "[", 
         RowBox[{"ToExpression", "[", "#", "]"}], "]"}], "&"}], "/@", 
       RowBox[{"Normal", "[", 
        RowBox[{
         RowBox[{"Dataset", "[", 
          RowBox[{"get", "[", "#it", "]"}], "]"}], "[", 
         RowBox[{
          RowBox[{"ToExpression", "[", "n", "]"}], ",", "\"\<address\>\"", 
          ",", "\"\<geo\>\"", ",", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"\"\<lat\>\"", ",", "\"\<lng\>\""}], "}"}], "/*", 
           "Values"}]}], "]"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"GeoGraphics", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"{", "\[IndentingNewLine]", 
         RowBox[{"Blue", ",", "\[IndentingNewLine]", 
          RowBox[{"GeoPath", "[", 
           RowBox[{"locations", ",", "\"\<Geodesic\>\""}], "]"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"GeoMarker", "[", "locations", "]"}]}], 
         "\[IndentingNewLine]", "}"}], "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{"GeoRange", "\[Rule]", "\"\<World\>\""}], ",", 
       RowBox[{"GeoProjection", "\[Rule]", "\"\<Robinson\>\""}]}], "]"}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"frmt", "=", "\"\<PNG\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"params", "=", 
   RowBox[{"<|", 
    RowBox[{
     RowBox[{"\"\<it\>\"", "\[Rule]", "\"\<users\>\""}], ",", 
     RowBox[{"\"\<n\>\"", "\[Rule]", "\"\<All\>\""}]}], "|>"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"endPoint", "=", "\"\<live-coding\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"funcName", "=", "\"\<geo-pins\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"permit", "=", "\"\<Public\>\""}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"url", "=", 
  RowBox[{"URLBuild", "[", 
   RowBox[{
    RowBox[{"makeCD", "[", 
     RowBox[{
     "args", ",", " ", "func", ",", "frmt", ",", "endPoint", ",", "funcName", 
      ",", "permit"}], "]"}], ",", "params"}], "]"}]}], "\n", 
 RowBox[{
  RowBox[{"session", "=", 
   RowBox[{"StartWebSession", "[", "\"\<Chrome\>\"", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"WebExecute", "[", 
   RowBox[{"session", ",", 
    RowBox[{"{", 
     RowBox[{"\"\<OpenPage\>\"", "\[Rule]", "url"}], "}"}]}], "]"}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.7741791721521406`*^9, 3.7741792142631435`*^9}, {
  3.7741792767816076`*^9, 3.77417929024961*^9}},
 CellLabel->
  "In[163]:=",ExpressionUUID->"99db4031-0e2e-4817-b83c-05afd8bbedf4"],

Cell[BoxData["\<\"https://www.wolframcloud.com/obj/mitch/live-coding/geo-pins?\
it=users&n=All\"\>"], "Output",
 CellChangeTimes->{3.773998353537143*^9, 3.774179265983143*^9, 
  3.7741793082486134`*^9},
 CellLabel->
  "Out[171]=",ExpressionUUID->"b8f765bf-ec33-4ccc-8024-6c038b0cb203"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["API - 10) Images - Getting size and aspect ratio \[OpenCurlyQuote]right\
\[CloseCurlyQuote]", "Chapter",
 CellChangeTimes->{{3.773060186399477*^9, 3.7730602219314637`*^9}, {
   3.7734846084834337`*^9, 3.77348460901343*^9}, {3.77383862351206*^9, 
   3.773838625018071*^9}, 3.7738399120953965`*^9, {3.7739962748694696`*^9, 
   3.77399627660047*^9}},ExpressionUUID->"0493cc2b-5455-4cf2-8c5b-\
23605cbe9aff"],

Cell[CellGroupData[{

Cell["\<\
Tips & tricks when it comes to \[OpenCurlyQuote]fitting\[CloseCurlyQuote] a \
WL image into a defined html \[OpenCurlyQuote]image space\[CloseCurlyQuote] \
with required aspect ratio.\
\>", "Section",
 CellChangeTimes->{{3.7662360602315483`*^9, 3.7662361141127214`*^9}, {
  3.7710856451377635`*^9, 3.7710856460737505`*^9}, {3.7736817213628197`*^9, 
  3.7736817320548463`*^9}},ExpressionUUID->"abab56c3-1c64-484a-9f07-\
5879a8efa036"],

Cell[TextData[{
 "Managing the dimensions of images between what is produced by WL and what \
is available/required in the HTML can seem daunting on the first attempt.  I \
will review the steps I go through to meet my needs - almost - every time.  \
First, I\[CloseCurlyQuote]ve found a few common scenarios keep recurring.  \
These are:\n- Graphics\n\t- Graphics[ primitives ] : represents a \
two-dimensional graphical image. \n- Images \n\t- Image[ graphics ] : creates \
a raster image from a graphics object.\n\t- Image[ data ] : represents a \
raster image with pixel values given by the array ",
 Cell[BoxData[
  StyleBox["data", "TI"]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "ed624ed8-a1a3-4c5e-9102-158b172d1c1e"],
 ".\n\nThere are 3 options that will be our friends through this process:\n1) \
ImageSize\n2) AspectRatio \n3) RasterSize\n\nWhat is image size?\nImageSize: \
(from help)\n",
 Cell[BoxData[GridBox[{
    {
     StyleBox["d", "TI"], Cell[TextData[{
      Cell[BoxData[
       StyleBox["d", "TI"]], "InlineFormula",
       FontFamily->"Source Sans Pro",ExpressionUUID->
       "c6cf3193-9f55-49a3-b72b-04a8a1decae5"],
      " printer's points (before magnification) "
     }], "TableText",ExpressionUUID->"e2d45404-9153-4522-8b83-e44cf74ec409"]},
    {
     RowBox[{"72", 
      StyleBox["di", "TI"]}], Cell[TextData[{
      Cell[BoxData[
       StyleBox["di", "TI"]], "InlineFormula",
       FontFamily->"Source Sans Pro",ExpressionUUID->
       "778166ef-ac1d-4326-93ee-b0d4daf03352"],
      " inches (before magnification) "
     }], "TableText",ExpressionUUID->"addfa3ce-5539-4dd1-a136-75c53546ab0d"]}
   }]],
  GridBoxOptions->{
  GridBoxBackground->{
   "Columns" -> {{None}}, 
    "Rows" -> {None, None, None, None, None, None, {None}}},
  GridBoxDividers->{
   "Rows" -> {{True, True, True, True, True, True, True, True}}}},
  ExpressionUUID->"a42d87a9-2712-4f0c-b4be-65c125c2562b"],
 "\n",
 StyleBox["(",
  FontSize->9],
 StyleBox["Wolfram documentation",
  FontSize->9,
  FontSlant->"Italic"],
 StyleBox[")",
  FontSize->9],
 "\nCommon measurement units:\n- dots per inch (dpi)\n- pixels per inch (ppi)\
\n- bits per pixel (bpp)\n",
 StyleBox["(https://en.wikipedia.org/wiki/Pixel)",
  FontSize->9],
 "\n\nWhat is aspect ratio? \nThe aspect ratio of an element describes the \
proportional relationship between its width and its height. Two common video \
aspect ratios are 4:3 (the universal video format of the 20th century), and \
16:9 (universal for HD television and European digital television).\n",
 StyleBox["(https://www.w3schools.com/howto/howto_css_aspect_ratio.asp)",
  FontSize->9],
 "\n\nWe can use the h and w in a unit-less relationship.  Most common aspect \
ratios:\nw:h    \[Rule] ",
 Cell[BoxData[
  FormBox[
   FractionBox["h", "w"], TraditionalForm]],ExpressionUUID->
  "b51d6600-de68-4659-ad4a-af4bf8229305"],
 "\[Rule] approximate real \[Rule] percent\nIn Mathematica terms:\nx:y    \
\[Rule] ",
 Cell[BoxData[
  FormBox[
   FractionBox["y", "x"], TraditionalForm]],ExpressionUUID->
  "14d9b5d7-9bcc-4306-8423-46a3184c8a9d"],
 "\[Rule] approximate real \[Rule] percent\nExamples:\n21:9 \[Rule] ",
 Cell[BoxData[
  FormBox[
   FractionBox["9", "21"], TraditionalForm]],ExpressionUUID->
  "4e5a1f9b-e8bf-4585-a58d-84dbd104675d"],
 "\[Rule] 0.4285 \[Rule] 42.85%\n16:9 \[Rule] ",
 Cell[BoxData[
  FormBox[
   FractionBox["9", "16"], TraditionalForm]],ExpressionUUID->
  "c3110c65-3499-4dfc-907f-217a28b92f65"],
 "\[Rule] 0.5625 \[Rule] 56.25%\n4:3 \[Rule] ",
 Cell[BoxData[
  FormBox[
   FractionBox["3", "4"], TraditionalForm]],ExpressionUUID->
  "a007b603-b043-4b3f-a881-d6d57272db34"],
 "\[Rule] 0.75 \[Rule] 75.0%\n1:1 \[Rule] ",
 Cell[BoxData[
  FormBox[
   FractionBox["1", "1"], TraditionalForm]],ExpressionUUID->
  "3ed84399-9fc9-4eb0-97e8-157e1b61550f"],
 "\[Rule] 1.0 \[Rule] 100.0%\n\nWhat we want to do is dimension the WL output \
for the allocated HTML \[OpenCurlyQuote]image container\[CloseCurlyQuote].  \n\
<img src=\[CloseCurlyDoubleQuote]html5.gif\[CloseCurlyDoubleQuote] alt=\
\[CloseCurlyDoubleQuote]HTML5 Icon\[CloseCurlyDoubleQuote] ",
 StyleBox["width=\[CloseCurlyDoubleQuote]128\[CloseCurlyDoubleQuote] height=\
\[CloseCurlyDoubleQuote]128\[CloseCurlyDoubleQuote]",
  FontWeight->"Bold"],
 ">\n<img src=\[CloseCurlyDoubleQuote]html5.gif\[CloseCurlyDoubleQuote] alt=\
\[CloseCurlyDoubleQuote]HTML5 Icon\[CloseCurlyDoubleQuote] ",
 StyleBox["style=\[CloseCurlyDoubleQuote]width:128px;height:128px;\
\[CloseCurlyDoubleQuote]",
  FontWeight->"Bold"],
 ">\n",
 StyleBox["(https://www.w3schools.com/html/html_images.asp)",
  FontSize->9],
 "\n\nCombine size dimension units: \nWe\[CloseCurlyQuote]ll start with a \
simple Plot then work our way to controlling the aspect ratio and size.  We \
get ourselves in the position of having (or wanting) one dimension (h or w) \
and wanting to know the other (w or h).\n\nLet\[CloseCurlyQuote]s play with \
this a little..."
}], "Text",
 CellChangeTimes->{{3.766243542115674*^9, 3.7662437630609465`*^9}, {
   3.773058644825938*^9, 3.773058712298951*^9}, {3.773240915738126*^9, 
   3.7732410117601595`*^9}, {3.773338234870549*^9, 3.7733383113558226`*^9}, {
   3.773338463298848*^9, 3.7733384748294535`*^9}, {3.7736711654590445`*^9, 
   3.773671233077046*^9}, {3.7736713309371014`*^9, 3.7736713328580847`*^9}, {
   3.773671363710084*^9, 3.7736713676210856`*^9}, {3.773673369015552*^9, 
   3.7736734221395817`*^9}, {3.773675438361664*^9, 3.7736754832043376`*^9}, {
   3.773675559202094*^9, 3.7736755599610944`*^9}, {3.773678832816598*^9, 
   3.7736788336746135`*^9}, {3.773681785549821*^9, 3.7736818988518167`*^9}, {
   3.773682468801708*^9, 3.773682535425657*^9}, {3.773682580220333*^9, 
   3.773682586936335*^9}, {3.773682621522336*^9, 3.773682699556388*^9}, {
   3.773682814788872*^9, 3.7736828644678717`*^9}, {3.7736829033178697`*^9, 
   3.773682907436872*^9}, {3.7736830783151035`*^9, 3.773683095492303*^9}, {
   3.773683180558573*^9, 3.773683480030361*^9}, {3.7736835129643593`*^9, 
   3.773683597616379*^9}, {3.773684284732605*^9, 3.773684291745604*^9}, {
   3.773684324425604*^9, 3.773684332343603*^9}, 3.773684412012543*^9, {
   3.773684464557496*^9, 3.7736845386575637`*^9}, {3.7736868782923603`*^9, 
   3.773686893593362*^9}, {3.7736870294608192`*^9, 3.7736870330168495`*^9}, {
   3.773748649787955*^9, 3.773748650552951*^9}, {3.7737486937399673`*^9, 
   3.7737487018099647`*^9}, {3.773748791922999*^9, 3.773748875258052*^9}, {
   3.7737493870025187`*^9, 3.7737493971725197`*^9}, {3.7737503996243205`*^9, 
   3.7737504148443203`*^9}, {3.7737560431758995`*^9, 
   3.7737560795328975`*^9}, {3.773838684371067*^9, 3.773838773447097*^9}, {
   3.7738389077173033`*^9, 3.7738389803113303`*^9}, {3.7738391505021253`*^9, 
   3.773839201099126*^9}, {3.773839733325061*^9, 3.7738397376390686`*^9}, {
   3.77383984117738*^9, 3.7738398462464056`*^9}, {3.7738399200183916`*^9, 
   3.7738399235014215`*^9}, {3.7738399979509974`*^9, 3.773840124531997*^9}, {
   3.7741795670135508`*^9, 3.774179616351362*^9}, {3.7741796469913607`*^9, 
   3.7741796671533613`*^9}, {3.77417970676136*^9, 3.774179806694366*^9}, {
   3.774179891518364*^9, 3.774179899976364*^9}, {3.7741800578299294`*^9, 
   3.7741800945229053`*^9}, {3.7741801527011194`*^9, 3.774180217126701*^9}, {
   3.7741803020077047`*^9, 3.7741803358257003`*^9}, {3.774180500874787*^9, 
   3.7741805417139673`*^9}},ExpressionUUID->"1b7a4bfe-0a92-451e-b855-\
c338331eea75"],

Cell[CellGroupData[{

Cell["Step 1", "Subsubsection",
 CellChangeTimes->{{3.773750632462901*^9, 
  3.7737506337689075`*^9}},ExpressionUUID->"5e9d7795-49c5-41a3-8221-\
313ddf00674a"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"ClearAll", "[", 
  RowBox[{"plt", ",", "di", ",", "ndi"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"di", "=", "72"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ndi", "=", "3"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"plt", "=", 
   RowBox[{"Plot", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Evaluate", "[", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"BesselJ", "[", 
         RowBox[{"n", ",", "x"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"n", ",", "4"}], "}"}]}], "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", "10"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"ImageSize", "\[Rule]", 
      RowBox[{"di", "*", "ndi"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"AspectRatio", "\[Rule]", "1"}]}], "\[IndentingNewLine]", 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Framed", "[", 
  RowBox[{"plt", "\[IndentingNewLine]", ",", 
   RowBox[{"FrameMargins", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0"}], "}"}]}], "}"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"ContentPadding", "\[Rule]", "False"}], ",", "\[IndentingNewLine]", 
   RowBox[{"FrameStyle", "\[Rule]", "Gray"}]}], "\[IndentingNewLine]", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"plt", "//", "Head"}], "\[IndentingNewLine]", 
 RowBox[{"{", 
  RowBox[{
   RowBox[{"ImageDimensions", "[", "plt", "]"}], ",", 
   RowBox[{"ImageAspectRatio", "[", "plt", "]"}], ",", 
   RowBox[{"N", "@", 
    RowBox[{"ImageAspectRatio", "[", "plt", "]"}]}]}], "}"}]}], "Input",
 CellChangeTimes->{{3.773750461155625*^9, 3.7737505364248877`*^9}, {
   3.773750572871146*^9, 3.7737505760172086`*^9}, {3.7737506142509146`*^9, 
   3.7737506148429236`*^9}, {3.7737518347962947`*^9, 
   3.7737518411742816`*^9}, {3.773751877181346*^9, 3.7737518985327845`*^9}, {
   3.773755707888846*^9, 3.773755709700842*^9}, {3.7738401939954243`*^9, 
   3.773840221403428*^9}, {3.7738402859014816`*^9, 3.773840383194023*^9}, {
   3.773840433031013*^9, 3.7738405298180904`*^9}, {3.7738406596153803`*^9, 
   3.773840671268381*^9}, 3.773840729731558*^9, {3.773840811198557*^9, 
   3.773840858580736*^9}, {3.7738409249377546`*^9, 3.773840928164735*^9}, {
   3.7738409849506087`*^9, 3.7738410923487673`*^9}},
 CellLabel->
  "In[174]:=",ExpressionUUID->"4461d6fc-df5c-4ae2-8bab-5a57b0040b5f"],

Cell[BoxData[
 FrameBox[
  GraphicsBox[{{{}, {}, 
     TagBox[
      {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
       Opacity[1.], LineBox[CompressedData["
1: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
        "]]},
      Annotation[#, "Charting`Private`Tag$77792#1"]& ], 
     TagBox[
      {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], 
       Opacity[1.], LineBox[CompressedData["
1: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
LC4ysNJRfrydjM//AOVW9Fg=
        "]]},
      Annotation[#, "Charting`Private`Tag$77792#2"]& ], 
     TagBox[
      {RGBColor[0.560181, 0.691569, 0.194885], AbsoluteThickness[1.6], 
       Opacity[1.], LineBox[CompressedData["
1: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
So8UNBgbKYT/AXRnwWs=
        "]]},
      Annotation[#, "Charting`Private`Tag$77792#3"]& ], 
     TagBox[
      {RGBColor[0.922526, 0.385626, 0.209179], AbsoluteThickness[1.6], 
       Opacity[1.], LineBox[CompressedData["
1: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
        "]]},
      Annotation[#, "Charting`Private`Tag$77792#4"]& ]}, {}},
   AspectRatio->1,
   Axes->{True, True},
   AxesLabel->{None, None},
   AxesOrigin->{0, 0},
   DisplayFunction->Identity,
   Frame->{{False, False}, {False, False}},
   FrameLabel->{{None, None}, {None, None}},
   FrameTicks->{{Automatic, 
      Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
      Charting`ScaledFrameTicks[{Identity, Identity}]}},
   GridLines->{None, None},
   GridLinesStyle->Directive[
     GrayLevel[0.5, 0.4]],
   ImagePadding->All,
   ImageSize->216,
   Method->{
    "DefaultBoundaryStyle" -> Automatic, 
     "DefaultGraphicsInteraction" -> {
      "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
       "Effects" -> {
        "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
         "Droplines" -> {
          "freeformCursorMode" -> True, 
           "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
     "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None, 
     "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
         (Identity[#]& )[
          Part[#, 1]], 
         (Identity[#]& )[
          Part[#, 2]]}& ), "CopiedValueFunction" -> ({
         (Identity[#]& )[
          Part[#, 1]], 
         (Identity[#]& )[
          Part[#, 2]]}& )}},
   PlotRange->{{0, 10}, {-0.3461261180190739, 0.581865061766651}},
   PlotRangeClipping->True,
   PlotRangePadding->{{
      Scaled[0.02], 
      Scaled[0.02]}, {
      Scaled[0.05], 
      Scaled[0.05]}},
   Ticks->{Automatic, Automatic}],
  ContentPadding->False,
  FrameMargins->{{0, 0}, {0, 0}},
  FrameStyle->GrayLevel[0.5],
  StripOnInput->False]], "Output",
 CellChangeTimes->{{3.7737504672725935`*^9, 3.773750503296589*^9}, 
   3.7737505388148694`*^9, 3.773750577369398*^9, {3.773751836254281*^9, 
   3.773751842213316*^9}, {3.773751879497344*^9, 3.773751899559794*^9}, 
   3.7737557107968407`*^9, 3.7738402245644264`*^9, {3.7738403004035482`*^9, 
   3.773840383670985*^9}, {3.773840433584024*^9, 3.7738405303620863`*^9}, 
   3.7738406607534156`*^9, {3.7738408143325877`*^9, 3.773840861732732*^9}, 
   3.7738409446277766`*^9, {3.7738410060006065`*^9, 3.77384109437777*^9}, 
   3.7741807200477877`*^9},
 CellLabel->
  "Out[178]=",ExpressionUUID->"9a6c2a86-2bd4-4ac6-ac2c-10b63669c11f"],

Cell[BoxData["Graphics"], "Output",
 CellChangeTimes->{{3.7737504672725935`*^9, 3.773750503296589*^9}, 
   3.7737505388148694`*^9, 3.773750577369398*^9, {3.773751836254281*^9, 
   3.773751842213316*^9}, {3.773751879497344*^9, 3.773751899559794*^9}, 
   3.7737557107968407`*^9, 3.7738402245644264`*^9, {3.7738403004035482`*^9, 
   3.773840383670985*^9}, {3.773840433584024*^9, 3.7738405303620863`*^9}, 
   3.7738406607534156`*^9, {3.7738408143325877`*^9, 3.773840861732732*^9}, 
   3.7738409446277766`*^9, {3.7738410060006065`*^9, 3.77384109437777*^9}, 
   3.774180720054788*^9},
 CellLabel->
  "Out[179]=",ExpressionUUID->"d8650a5c-f498-4da0-9932-b4fddcd3cdcd"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"216", ",", "195"}], "}"}], ",", 
   FractionBox["65", "72"], ",", "0.9027777777777778`"}], "}"}]], "Output",
 CellChangeTimes->{{3.7737504672725935`*^9, 3.773750503296589*^9}, 
   3.7737505388148694`*^9, 3.773750577369398*^9, {3.773751836254281*^9, 
   3.773751842213316*^9}, {3.773751879497344*^9, 3.773751899559794*^9}, 
   3.7737557107968407`*^9, 3.7738402245644264`*^9, {3.7738403004035482`*^9, 
   3.773840383670985*^9}, {3.773840433584024*^9, 3.7738405303620863`*^9}, 
   3.7738406607534156`*^9, {3.7738408143325877`*^9, 3.773840861732732*^9}, 
   3.7738409446277766`*^9, {3.7738410060006065`*^9, 3.77384109437777*^9}, 
   3.7741807205197873`*^9},
 CellLabel->
  "Out[180]=",ExpressionUUID->"21315f98-6ac8-4c4a-95a2-ad40e9c9c1f0"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Step 2", "Subsubsection",
 CellChangeTimes->{{3.773750640003887*^9, 
  3.7737506413918867`*^9}},ExpressionUUID->"3aa60cff-ccef-40b5-8390-\
cc14c93a6c54"],

Cell["\<\
Relationship between:
- ImageSize: is an option that specifies the overall size of an image to \
display for an object.
and 
- AspectRatio: is an option for Graphics and related functions that specifies \
the ratio of height to width for a plot.

Make the params for ImageSize and AspectRatio then try removing one then the \
other to see what happens\
\>", "Text",
 CellChangeTimes->{{3.7737508193924513`*^9, 3.773750923442391*^9}, {
  3.7737530112496853`*^9, 
  3.7737530670536776`*^9}},ExpressionUUID->"ee98c2e6-b82e-4d2d-8518-\
8b078ac28a40"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"ClearAll", "[", 
  RowBox[{
  "plt", ",", "di", ",", "ndi", ",", "xBasePX", ",", "yBasePX", ",", "basePX",
    ",", "xAR", ",", "yAR", ",", "xPX", ",", "yPX"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"di", "=", "72"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ndi", "=", "3"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"xAR", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"yAR", "=", "1"}], ";"}], "\n"}], "\[IndentingNewLine]", 
 RowBox[{"xPX", "=", 
  RowBox[{"di", "*", "ndi"}]}], "\[IndentingNewLine]", 
 RowBox[{"yPX", "=", 
  RowBox[{
   RowBox[{"xPX", "*", 
    RowBox[{"(", 
     RowBox[{"yAR", "/", "xAR"}], ")"}]}], "//", "N"}]}]}], "Input",
 CellChangeTimes->{{3.773752421569309*^9, 3.7737524295073*^9}, {
   3.7737524604713554`*^9, 3.773752512027295*^9}, {3.773752644730606*^9, 
   3.7737526453956256`*^9}, {3.7737527308476143`*^9, 3.773752733912608*^9}, {
   3.7737527666086144`*^9, 3.7737527912686157`*^9}, {3.773752891235625*^9, 
   3.773752932347686*^9}, {3.7737530891327367`*^9, 3.773753104057743*^9}, {
   3.773753158219769*^9, 3.7737532635827637`*^9}, {3.773753492165182*^9, 
   3.7737535483599834`*^9}, {3.773753641030986*^9, 3.773753666628013*^9}, {
   3.7737537189579854`*^9, 3.773753743483982*^9}, 3.77375379188907*^9, {
   3.7738412906070986`*^9, 3.7738413141190996`*^9}, {3.7738413578461018`*^9, 
   3.7738413679490986`*^9}, 3.773841405163103*^9, {3.7738414820747604`*^9, 
   3.773841503264757*^9}},
 CellLabel->
  "In[182]:=",ExpressionUUID->"bbf9aa3d-4643-4571-8793-e79173546f7c"],

Cell[BoxData["216"], "Output",
 CellChangeTimes->{{3.7737527785566425`*^9, 3.7737527923966074`*^9}, {
   3.773752892615607*^9, 3.7737529340136595`*^9}, {3.773753165812733*^9, 
   3.7737531956297636`*^9}, {3.773753231921767*^9, 3.7737532662957554`*^9}, 
   3.773841368955098*^9, 3.773841408737099*^9, {3.773841483511757*^9, 
   3.7738415044767494`*^9}, 3.774181741638781*^9},
 CellLabel->
  "Out[187]=",ExpressionUUID->"fc35180d-8ff2-469a-a0d1-09ca41e372f0"],

Cell[BoxData["216.`"], "Output",
 CellChangeTimes->{{3.7737527785566425`*^9, 3.7737527923966074`*^9}, {
   3.773752892615607*^9, 3.7737529340136595`*^9}, {3.773753165812733*^9, 
   3.7737531956297636`*^9}, {3.773753231921767*^9, 3.7737532662957554`*^9}, 
   3.773841368955098*^9, 3.773841408737099*^9, {3.773841483511757*^9, 
   3.7738415044767494`*^9}, 3.7741817416447835`*^9},
 CellLabel->
  "Out[188]=",ExpressionUUID->"602e0ebd-2a6b-4ebf-81ec-0ae52df9a1da"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"ClearAll", "[", "plt", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"plt", "=", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"Evaluate", "[", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"BesselJ", "[", 
         RowBox[{"n", ",", "x"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"n", ",", "4"}], "}"}]}], "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", "10"}], "}"}], ",", 
     RowBox[{"Filling", "\[Rule]", "Axis"}], ",", "\[IndentingNewLine]", 
     RowBox[{"ImageSize", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"xPX", ",", "yPX"}], "}"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"AspectRatio", "\[Rule]", 
      RowBox[{"yPX", "/", "xPX"}]}]}], "\[IndentingNewLine]", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Framed", "[", 
  RowBox[{"plt", ",", "\[IndentingNewLine]", 
   RowBox[{"FrameMargins", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0"}], "}"}]}], "}"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"ContentPadding", "\[Rule]", "False"}], ",", "\[IndentingNewLine]", 
   RowBox[{"FrameStyle", "\[Rule]", "Gray"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"{", 
  RowBox[{
   RowBox[{"ImageDimensions", "[", "plt", "]"}], ",", 
   RowBox[{"ImageAspectRatio", "[", "plt", "]"}], ",", 
   RowBox[{"N", "@", 
    RowBox[{"ImageAspectRatio", "[", "plt", "]"}]}]}], "}"}]}], "Input",
 CellChangeTimes->{{3.7737506491019*^9, 3.7737506615038986`*^9}, {
   3.7737507216746054`*^9, 3.7737507595304317`*^9}, {3.7737519141550355`*^9, 
   3.773751933614104*^9}, {3.773751965659117*^9, 3.7737519980731506`*^9}, {
   3.7737525261144223`*^9, 3.7737525398764386`*^9}, {3.773752600551588*^9, 
   3.773752625747652*^9}, {3.7737528468076153`*^9, 3.7737528743586187`*^9}, {
   3.773752955686663*^9, 3.7737529992086773`*^9}, {3.773841151671733*^9, 
   3.7738411528087697`*^9}, 3.773841428957101*^9},
 CellLabel->
  "In[189]:=",ExpressionUUID->"f6fdfc61-f36d-4451-9047-561dba909801"],

Cell[BoxData[
 FrameBox[
  GraphicsBox[{GraphicsComplexBox[CompressedData["
1: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
Ybu8srmSHQX9ffq1y2VmDR12GlEZxf2Hg+5+KpkoBH7Zf/bdJ3Rg545OYWxi
eP+vvU11wPt/R/O/5Zw5EgxTl4Kvmb9Bajq7+BjC1tHiZtSrGLy/Gx2edupH
hMCfxejwG7yfteyxSinKRJBWqBvkwv3UU+0x99jfVVTqfitvNgL30/orfLr9
gkA8piYwxdCBzcsmKQpkC4Gjer5AAl8HtkE3w3l1kQC3xc3sAnA/7x59efWU
4wbK88eedOJ+vHQ3SD/NRwhcWwPlP+N+bKSIGUb1EiD2irCikAMFaUvnHzHF
1pDDytshU/w+HV94TzgmKAQlUtvE/PB5NqdTpuU4PxFWengHSvD62J64aGUu
r6Ms8dMn/9eP22/vnnK3w9fz7urH03g93QqpSuJn11Bixynyq9hhdGYy+Pcg
ExE2V4boFXA/vnHi8f7eJ0JgXRpQ0SDRgc8LZxTpJwiQYS5wrf0KBb0VrHby
J62j6++EPBfx/FPJcVz+5E4h+PZKqyiQ1IFxVnz5UCpNBFZrKrsR/ryX95mc
ilZI8EF+T2P+43R8ziFWdV5dR7zEc7df/e/3MTLTaePaQtByQuPbfnx9u7yH
F+4qEEEMad+zwOcz+epHAkLzBBDPSno0cp2CxOuYH52+LgQaL2Nu/8Hf7+fQ
Lgbt12uoYXrE1BzP/73Pijvmt+B6Nn7G9yXej1Z0duF+/zpKN5k2DsbX+2xh
JY5gLQTORWyvvuDv9+AjacGfngh8a0vPj+D54XinFsGbYx2tMslM38W/35HZ
+XuUvBBEknjSZPD92RtkXmAvSQRKhajUNF7fpbjDNsoZ66jR/MvKBbye3pAF
qYemQuAZp3xzFH9+MH9wzTshIryJ2ox+i69H86d3WLvgBroSeumVGL4/Vufo
+IqdhaCo41FLCe7PO+WmxzTZ8HwVTf+0E38+k5nR+yjNdRTVqVtwHH8+gXf/
JcF9QpA+Ou//HtfH4XXiG0kSEeSDRj2v4evPk6neeniDBLpVLF2pOa/RP36n
YP+tyyaei5r/+J2H1y1+Nb25RuN3sptO9qVIx9D4HRt98xG6ydc0fkfyNTer
RGAujd95osC94K1YQuN3zvsdJR0tqqTxOz2aWzhqzBpo/M5LUddVyU0yjd9x
HLtvacPTRuN36gy2Ghvt7KTxO+vPj//MrftG43c6giz/OznVQ+N3fN+V24zn
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
kJi+MEM2IqNSHe/pqdV8FPVD8IngrmMo5fATb5Y7rODJdWT/Mn7+e/0Tn/Ls
YIfXuiJbpfD70ZXumWDiLQ71c88IrBtULGXGRNVGTwKmbtU9GJ2jYpfCg6W/
lpIg76lu2VlNMjr1aZ3DyIINdgU+5r6B612J7J+tL7vx+cwrwbUM7/c/HmXs
zkCJAt7PfzzK29Id9KZF1MP6Tg0jrct1SO9G1w1vxutI7obRYfkn3SjjiPeb
tPIYFM8k2VufOoJCqVbBjrbpNH4lSN/iFak9l8aXjDzqOxLV+43Gl0T+tqDr
3+yh8SWKLHVFiSV96FxYc8T7ehYouzctCJX9SFuot/vvPTYQ9Fs2zMDXb3xN
/V6iIgdUcATFyXzuR6dsj5mf+sIJUaKE/QrP+tBzjsUfP1y54WeNWNTbNz3o
u87Z7Ah6HjDTvi92XOkb+seTuNx8taFHV0PjScxzbbb9PtFE40lK5OSqfZgo
mOyTPUZbrMWAf2l08GZ7K2ZrliQdt10cxKoVO5WbqdgA5bNT3W9xYOG/tWbE
04bR7U7gHq/E8/saGBIi8f05Y9UUHS4Jnt9sTKzx/D98bmRCwXkrDFc25zJ5
k7F//MiSpXPVokI5jR/Z+rrorM7uGoTpzP9QLZcBG6Gwvbx7G5DFBf+GqR0k
iC27mPnUspnGlzBaCDNtcpDR29fxFb8+FqGpFnXzVmSBWuO1Gbc1UtHgjT93
FI4GoV53pb1T3oPItM5kzv5JCo0XaZsrnBFa60bPyOekmM8zQZm3egnjfC/i
L/NI0qNjATWWxht7zPsRP/N+0lwqPhMN1N0r4xpAlYJTHzXN2UGm+uaHUeYB
JHYxJcNjlgNC7lr1zqB+9JeJLZXvCRc8mvqx0VnUi1q8M2/WSolCpgLFMpra
gtWTnossTInCzg769McsrZjM0e5MuzIx6Ciw6al3pmK6LWKvJoPFIeWh0eJP
fP5UeXt2PdpSAt47vkU1P6nYdYZxk9sKkmB3+PN/bbxU7L4/RSp+VRIs2vzv
qftTsOwG87vKkTJwY3jR5aRZHd4foS87lmRgMqtqKnymEZ0Cn2um50lAlb2n
+timhcaTtFvXhuzRISPxx20Nv3XeoY+bzG3khf3o4PYnBwLtyagztKqbN+8+
Sj0/+j0ukRmaGA5w1G/pRxpH/Cwp6qzQKn9U8OuffsQU41AtNsEG59xbZMLF
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
xbeAt5fydsrtJ2HkFavfTwqYwOuJ3u/OjbyYwaqm05XE+eHJdlqZ8Uwc686x
P5ocT8cF1o8lV2PEfBWgry5KzDfQp1gtXzAwWyxAPuVpOZf4oLwLZfGp1OGF
yyTscIT/Je3XTODn6r/b4J04pniDX/1GOh2XOCdX/GlDFeCUbWC5M7ZCqU6T
bY6mkbBSndw5IeI89emXDtkuKYFdX4vzXiD+HvoU/aN/ZdYY9VEuyuSy16QS
55Oso84X4n48U3eBZ4pDAstysxm3JN5vxoCd1o2OehCRd0Nr9Kog2MpXGHGR
gxdLXHOzKoOYN0lbbnzSzxPHQnxXZ3tEEd/3//yJ+dRPtaZtFZSC6UvSA34k
7Lh99gkdYr4wZy3PT1gUx45X6ovLEeep0SEWbqeCGsAdIcIj8XgDcOqzLXCd
JmGuw73P44nzNF7uFOVLfQUwP3lmueHlLIXbcmLiUQUJ+1YdYrqH+LxJcRv0
IjdKYBnn17zYQjze2MweV4s6cSyw4UozC3GeQo9yja7jfjG7CHmUEB9xyWF7
A0oT7VsSS584lnBV5r4oMW/wnegn9bSQsO7qvEVhYv2yQszU2MSI/Ukpzvo2
Mb+8MQ2/Mt1TDDitMzP9dGmUx/1nT3AkkbD0HweN3hDrUf9DsaaWlZhfeCtt
9In1u1l3viuLhRfTuyD7ofd/1vc/r3I4MzFDo6+Akmcus+HQV3Hs2IWLpTeJ
eaA+VHj+9RgJk9fQP6VEvL9Zk7Ssr7ueAZmzb+yd2yYp5vx3lWefkLBr4wH9
6cT6qADt31a8Eting4p9BcT7hz7l7NFJg0OFERT7KXd/nX7i+liwMZsjHi+3
YYfdAncpuIANKvnkD1G8Ul+a8q+XwMounHU5TrzeHTvKfs5FPQIsqSWzoWtq
KEJ52JHR3+LY3vGBsDLi8cW2vbJUXiBhazQn9KnE9fGqRC3TooqEfXjwNTWP
ePzpD/TkckEJLHbN92ob4v1An/JFfNMaBY/i/9On8I0/Pt2hRKVAn3L0YI5s
zHc+5FPiVhs+dBzcg3zK+m0577qkDJBPsYnq3f7Y5jLyKV74NpYn+q7Ip9wQ
mW/R6gtEPqUk5+34lwexyKfs2Rlf/wBLRj7FkT+/LrI+C/mUI7dM0tRXFSCf
osh2/nO27lPkUzrPNTJ0ie8p9Cm01Mo7SpmVyKe8LT1DFmLWIJ+inFLIR3v4
FvmUmmnGRRaLZuRT9g0VDa2Lakc+JYJtupX6kop8ygtvc8eqBjryKdzkSPeg
R93IpxSGibC7qfcin/Le7eEN95w+5FOScgJ0jPL/+RT1slUHdU4ykE9xkVyt
W5HAQD6lKHvhnbQlA/kUY6fRwZyCfuRTrKNT+SUd+5BP8dYxfJXT1/PPp7RZ
rAvM6kI+ZcqaduiEAg1An3Lt242TZ/rbAPQpYqEc+9l1GwD0KV9bhemXA3DU
B5Sszp55vLcE9QGFe3xzmQahqA9IxKu7/LDnQ+RTzioN0NfNPkc+JeFKsef2
vhrkUyZksnjWuDYin1I6NZqZztmGfEqAYZel38VO5FMkWiO5VSepyKcc3NhL
ybhFQz5lkX7ib4IfDfmU0g88pvZTVORTDj7TtVgu6MShTyGpRQjPbW7DoU+J
FrRzp6rEIp+it2r45xfqIgX6lKIyiV9cQduQT9HX9DLdkHQY+RTW+bPrqAMX
kE/Jer/5RH35deRTUvPMPB94eSOfsgUb9V6ZD0P9QTI37LjHshJRfxAusNmP
6+991B/EcbmHf2FXLsor8Zf6OsS2+THyJ82XVr2T/NWL/Ill0lQ5/65+5E/4
1ddzsa5lIH/SJ2d/ssSPAWAf0OZoCbt1YQwA+4C0ZP4e8RdkoDwS7pUkIROx
fgDzSFaTX0XuK+0FMI+keFl1UbOtG8A8klcBJj9yneio74dy4Pmz5Zp65E8Y
9fKazcPNyJ9EhCsU1tDbkT8paYx/v2RKRfkjDi+k7nYcouEwf0Tu6dcOixga
DvNHwp0ebmrRpeEwf6SwnLfjgQMV+ZV7hV9YHnN04NCvfA1+yWG8Rx/5Fbtb
pRnPBMco0K+op+gqp09tQX6Fvb7wwEU2gPyKjaoMw5jNEPkVPU2BLma1LfIr
wg6fiz7LeSC/0p4ldEy7OgT1B921olg6xsSj/iAW1wsKFPY01B80kvnhwOSN
h//yTX4w5A1XFyGfIiBy5cGu1F7kU/gVn/sYzvYhn2LOeSkymNmPfMoPl/Ta
MjsGgH1AXSI6I8w4BoB9QAZ7co9tIu4vYH7JjlQ+kYc2/QDml2yv5mlV3tQH
YH7J/XXiIbSzPQDml1hvNDt2n6sL9f38+JBrp3y6DvkUbg7fGJHSJuRTxnGT
2BOLbcinvLePTfBcT0V5JYyNk7dcRGg4zCt5uPHpRHcYDYd5Jbdq9fyVr9Jw
mFey67qx7bZSKvItgUJ89k8/dODQt8xwKK0t9C2nQN8yZ/xT1LyODfkW/2cB
NseP70C+Zd5Y//uH5qPItzxkvy/0y8wC+ZbOu9NXLWWdUL+QwOC5SntZf9Qv
NKvr7bPWOQr1C/Wlv74T/e4O8ivJLyqzlg36kF/JJelEeDr0A9gXtGf64vAj
JQaAfUG/+3xv8EczAOwLih108ZP1YADYF5SfJWZuOtYPYF+QVZawZH9rH+r/
cVcxvODxpwWH/T+ShiupyRkdOOz/MfPgy0/Oo+Kw/2fNvvaLqpf+5Zuo3DWP
142k4TDfBBt+ddRHnIbDfJOCQ3atbDL/PIzBVvZ3ESLtOPQw15e48lr2kJCH
4RFbRar4OECBHuZm1Vm3pF+CyMNUqSxW9T7TQB6muDVyrsXtNPIwMrE+OG/A
FeRhHMaXSPeV3JCHWRpx3N98MBj1C1nwSG/nSIxD/UIvl7NvU9JTUL/QVl+f
Ud272Sg/ZaTzxoPevwXIuyj95q62vdqLvIvZe6psaEsf8i4l48YZknX/vMvp
Nl4BW1MGgH1Bc59a4nKJ8x32BfEcI4sVn2KgfJRcOcXPxeHE5/dfPoqgqUbX
usN9AOajrEvttKy42wNgPorOfWn23nNdqA+oqm07a/OdWuRdcmYU9zttakLe
RUtodYVRQBvyLn0ZYbNSlZ0oD0X20aKlw2oaDvNQ/iQFanYG0nCYh9KYaXc8
+yYNh3kozHunArs6qcjL7K9YaNuj24lDL3Phfd9mwcZsCvQyiw4PWgRmVyjQ
y5yMjQmJ3aOAvMxAVsP+ttAjyMsM24XhuXJmyMtsG84W8a5wQP1D77fhRly9
vqh/KE98xlMyPwL1D10tjL0JXichD3MrYPir6rY+5GE0fSd3fTfoB7BPiF/R
ZoxflAFgn1CCZl+sUSgDwD6hHL2M9b/9id//1ydk2BWgHrDSD2CfUEz93peS
i32oH+h30HbpAocWHPYDPfjlkLRNswOH/UALIyvla4OpOOwH6tK5IiR59l9+
iu0vp7lP0TQc5qfYa8mKDKvScJifwrg/INp97J+vyU30eGSY0I5DXzOwlMtY
DHRBvuaZAHUHe9oXCvQ18UnDZq7OZORryAM9Sx8+HQCKOul2/WrT4IKuYef7
znNg8NWbycYrc0Byxm8wYZs96hvKM3f0857vB7BvyOrnmYdkNwaAfUMXx75J
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
y66UJPr//e//H4Rngnw=
     "], {{
       {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.2], EdgeForm[None], 
        GraphicsGroupBox[PolygonBox[CompressedData["
1:eJwV0jtIlXEYwOEvlwQ1hOx4KfOoaCAZCELQkJe8NDt693TZvIxqKtSSk4Km
lUIQBIJQmi2VXbRGdTIrh8pupqCDtZRm9HzDw/t73z8H5XCyY+01bXFBEBzg
CdvxQbBFij5ChMceS/igh2jgLKnhZ9xL+aiHaaSEZbdafuv7dJLGU7cyPukb
NFHKG7c6/ugHdJHOrFs5a3qEZtbtrSQwZy9jRdezq6foZsfeSYQFewbP9Dk+
61F29VWyaLH/MNtIZN5+0JczoE+G/4f9rdnAnj7sbUxP60Bf13lcsf40u0gl
w9tdc9E9UQ/rIrPIzDUnzTPmUe/PdQUn7F/syeZNe3E47Xv6GqfsUTPTvGee
NmPeN3Q7Bfak8O+bd8xX3uL1oC4kqifC78L9ndnIX53iPq4fhr8J3a/z6bH/
MrtJY8l+jBe6kq/6FhfYtHdwiNf2Ct7rJvb1DL1k8tKtim/6NhepZNWtmX/6
EX0cZ86tmu96jEtUkcW8+3nW9TiXqSZKNjnk8h/qEVqM
          "]]]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.2], EdgeForm[None], 
        GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJwt0slLVWEYB+BTadehMjWFwIQyWiSCcJ2H/ggth3LVrhKjQV3mpnl2IbgQ
BLFyaLKyTdPSoqzUJmuVtgvTZjfa80GLh9/vfc/5LvfeczbvPVjTsjKKohU8
+Z9zSVH0lUw9g3TWk0Y1TVzmEzscuM86vYo9XOJjuNd+lLV6O8P8odFugkp9
NxeZDuft7rFGb2OI3zTYvaZCf0yK3swXGs0X+ECl+S6p+jOy9HbmaTVvlSdY
ZtD8i3r9FeV6vjzPan/II3OPnq0nywPM0mBfYten58hcWSA75GI473rc3KWn
yffmbbLCfIcUc7l5QN8iC2Wh7AzfWz51vVffqG+Q+bJNfuOoa/0y1y5PHmeJ
AftumWH/U6/TX1Kmb5fnSHTtoTlJ388M9eZN8hh/w33md+H76SMk62Nkhv+P
OY6Yr/GDXeZxSvUHxPR9fKbOfJa3lJlv45WKDnOV7+y0e0FJ+CzO8IZSu1vE
9ENcYYFau+cUh7OcZio8D7ub4bnpReE+TjFJsf2N8Pv1BFYR3vc4NZxkIpxz
z3X+ATNqWbo=
           "]], PolygonBox[CompressedData["
1:eJwl0klL1GEABvB/40IFZQZCZRATmqOm1kQQ1AfIPf0GWbmWtt3ay4LqUlDQ
wTY3hDqWttzMJQ2srmXbKXPJDi0Xo34vHn48z/O+ozP/YeJ1bbWtsSiKljDG
3NIomiep73Lx0EWu3CZvslJ/6269fpo/XLKfk6438oUa+zA9/KDW2Su26lso
YQ9tdDNPjftxivWLPCPNbuAz1XYrXXwPf+9sjCK9naek2vV8osoeZbV+nDkO
2Z3hOam2X7JZf0O2forfXLDz5VVSPfMTO0U/wEcqwzPI6yx3P2Jn6seY5aC9
Ubbzl/v2LZnptbN6QlbZoxTaO+0Heo5MyqS8IVfI1+63y047W64Ln1melL84
736H3atvkAlZIq/IFDngvkPP0mMyX+6XH6hw1yfjzorlNZbpw87v6mv0VfIo
M7Q4j4fvhwXu2TNU6iMU6BOs1U/wk3N2nrxMzP/rD783fR+TlNtDZOhHmKY5
vD/TVNjD4XPrZ3kcLf5g63hPmdnEHb5R7myIhH6GR/xjr7N3lOqN3GaKMmcv
yNN30xC+L75S6nyQTXouOfwHCiFgfQ==
           "]]}]}, 
       {RGBColor[0.880722, 0.611041, 0.142051], Opacity[0.2], EdgeForm[None], 
        GraphicsGroupBox[PolygonBox[CompressedData["
1:eJwV0E0s1nEAB/CfstINIV2yttpEObDZpK1DdbC60BZCRXGpUJ1RobhTi/Jy
0SUHntLWOmhzMNGLO5X3zt56WS+f/+Gz7/f7+/2fZ//nOVjTUFK/I4QQR4zv
CSGsUeqwjHLmdoZwnUSm7Cc0cZF5ZzdI4r3dQzObdiuZLNgjVPDFvkky03Yv
LWzZbRxh0R6lkq92PXuZsZ+yKz6ELruAdfsu23o7WSzZMRI912ef4o9dxTe9
gRQ+2OmeGdLP8szebXfrx8nVx+WG80P6qF7KPfuHfEA2Oe7eymXnB/QXepEs
lifklDwvX7pPkv32GXla5ssJWSz/us+UY/Y5WSFPyhl5QV5yv6A3Rr/JTpVH
5Rv50d1+/Xn02ej99UnZ5zxBf6QXkqe/k5vOD+sxvYz79k/5MPpOVuwM98N6
Ca/sZHsgenf+2ZdZ1G+Rxie7nz2eexz9drbsVn7pHRxj1R7jCkv2bfbx2R6g
jd92Z/Tfsma/pppl+w7pzNqDtFPDVa5RSx3/AcsrX4U=
          "]]]}, 
       {RGBColor[0.880722, 0.611041, 0.142051], Opacity[0.2], EdgeForm[None], 
        GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJwVzzsvQ2EAx+G3GERHFkWii8RURGKqmEgkXUoiEpNF3Re3T+BuZ2xdYjJJ
3GKRmCQWt2+A09oZ3J4zPPm9//ecJj3p8fn8XFUIIUGBqDaECvHlSE0I99Uh
9OmY5vRM2zWheb3VHh3Qfi1pg175/bDe2Vkd0kE90Vb98PzaOePcpTv8sel+
VE9p8+zLvnHudu7VPZLOR+5zzsek7Be7xXmFMrPxR8X/iSL13rl0V6HT3uaX
DfuTrPMudd47tJ9ptpeJmLEvKNNhb/HDun3AE032Eu9M2+dEZOLv4ps1e59H
UvYib0zZq5R4oNHdAq9M2gUm+Acj3zhn
           "]], PolygonBox[CompressedData["
1:eJwV00dsT3EAB/DXRY22JxzMtmhCJIQaEao1W6MUPUjs7aD2rHk1WmrFOCFG
0TpIiK1mIrHpsm6CluJiHHx+h8//+/2+95L/y/u/f+qcooKlsVEUxdDMxxDj
c2IUfaJQn8oUJlPAJIo5xCNS4qJoCfVMtDdykIckO7aYOvLtSj6SYW/nFxvs
AzwgyV5ELRPsCj7Q3d7GT9bbPxiol5EQH0X77fu0thdSw3j7Hzn6MVJcd8Ge
qJfT0X5vd9O38oN1dqG8SLrzTfZNvY8+QO4lXt8X7lcfpOfJMfKkbCfvOZcv
r9g9ZSuZIxfIasaFZ2o/1ofKaXKsvCQz5N9wj7LKzpTZcoQ8KpPl+fDc9cF6
vjxLB/2d41f1XnpXuYUm1obvk5WkOffd7q/vIc4us3P1E7S179ot9fm8Cfdm
/2GYfoQk15yz35Jub+Y7a+xvZOqlxLpur11FC3ser8mzy6knzd7EN1bbe7hD
oj2XV+TaZ6kj1S6mkVV2Kbdpbs/hZfgt7NGMYiQjGB7eA1ZSwi2auXY2L8i2
V7A7/N4kODaL5wyzz1BLF3sjDSy3d3GDeHsmz8iyT1ND5/B+85VldiP99BJi
PJ+d9nXi7Bk8De+E/Zss/TCtXXfKnqCfob1dbXcK/wW+UBT+o7KCVOcbwn3p
vfW+cjeRviP8T/SB+hg5Wh6XbeS18B3yst1DxobnIqfLJ/wHPv6Asw==
           "]]}]}, 
       {RGBColor[0.560181, 0.691569, 0.194885], Opacity[0.2], EdgeForm[None], 
        GraphicsGroupBox[PolygonBox[CompressedData["
1:eJwV0LdPVmEAhfFXpHxYwMQyqYjiLFaai7JoxMZgQkRMiC0xgokY/UTsyo4F
pKigLqDiSrcyoYkC6qCDiSVRsAB/AL87PHnOOe+9N/fezPLK4oqEEMIMDOBH
LITvOJ0YQhxnkJIcQl1SCGvxW+9CM6oRc3bdvg5jejdakGFvt23DTLyznUWq
/Ya+HuN6D+5gmb3DVoREvLfVYJb9pr4Bf/RerLJ163sxH3dtmbZH8nYkYdiW
a3spH8BinLPNtt2Sc/BX36QPycfQp2frPXIpFuCebbntsbwDydiiD3MVRpzn
6a/kg9gv/+Il2C1/5hockSf5vOvnyPXyUc7lPfyV/znbLL+RT3AFl/N49Azu
d76ae/XjvC96T/7J1bww+n7+xKc4zod5gi9wq/tX8JPoe3knl/A3TsFWeYRP
YtS1+fpr+RCWolj/Ev3H6HnO5+oNch7+64X6W7kSA/oavU8uwyK02bJsnfIu
xPDBVmAbjN4VGbhoS7PdlvMxoT/Dfay0P43+LVLx0XYJ6fZGvQCT+nM8wGXM
c9Zk34gp/QUe4gqu4hpqMQ2M2GHt
          "]]]}, 
       {RGBColor[0.560181, 0.691569, 0.194885], Opacity[0.2], EdgeForm[None], 
        GraphicsGroupBox[{
          PolygonBox[{{2278, 2279, 1161, 1665, 1524, 1641, 1407, 1502, 1619, 
           1312, 1384, 1479, 1596, 1240, 1290, 1362, 1457, 1574, 1190, 1219, 
           1269, 1341, 1436, 1553, 1160}}], PolygonBox[CompressedData["
1:eJwV1GVsVmcYBuDTIiGB4c4gwd1h/MJdAmQwKA7FobQUKRrcobgv6HDbcPiD
BXeWsAVnONuC/MD1en9cvZ/7Oe+XfHJOC8cn/ZwYG0VRDO39iUsbRY8zRNEI
mcJwhjGUIfzKIf6lSrooWkD69FGUrK/kIM+pbD+fdK4N1q8SqzdjK4XsV9gd
4BmV7OaR1j5Jv0KM3pQtFLRfbpfd3JHDVLDbb/eUivpc0tgl6gXMPTlBDbvL
dpG5CZv50W6ZXTZzBw5R3m6fXYL5AnX0J3oFcyqx+iB9rPkWrfX88jldzfEy
WR6XP8lLzo6TL/VecqgcJv+UjeU310fJh3qcbCwT5CZZQC51fbx8rfeRI2WK
/Fu2kFnlEzqZ42SSPCjLyb1e+7+5h3mgPE9t82P7++ZfzOXlHGLMCfZjzDdp
pecLr+UY1fWL4fc3X6OR/lVvZN5Ifn2JnsXcngOUtdtj94hy+myi8F70C3yh
od0G8tkv1nfzkLJ2s/jGAP08n2mg/0Ze5xfpf/CAMnYz+Up/fSG/8w+l7Wbw
hX56X/rQm170JJ4edGcBu8J3RCmvmc5nuunz2ck9StpN41P47fVzfKK+vp48
3uM8fQd3KWE3lY900c/ykXr6OnI7P1ffzh2K203hA531M3ygrr6WXM6n6pnN
7dhPGbttdrcppk/mfbg/9NO8p46+hpzOztF/CPcC+yhtt9XuFkX1SbwLz5ue
V3bnKNWcO2WXbL5KQ/2dXtu8mhz6bH2E+S+a65lkW/ZSSt/i+gDzOWrpN/Ui
5om8Dc+kPlreoKXreeSz8N2Zu8kjVDWfdO5FeNbD/xl5hQbmt+HeCPejuZZc
RXbzLPtX5t7mFDlcXpfNZEY5Ojwj4TPLNjIx3MeypNwcnn35X/guZH85RJ6V
NeUN10fKe+GzysLh/pUT5Bu+A2nWtOc=
           "]]}]}, 
       {RGBColor[0.922526, 0.385626, 0.209179], Opacity[0.2], EdgeForm[None], 
        GraphicsGroupBox[PolygonBox[CompressedData["
1:eJwV0jdMVWEYBuBf2sVJYYIJrhV0YGAwgIWYOFkGB0siKuiMolIsuwK2gE6g
gyYKooKaYGIwAY2J0QuoMSR2RBcVsWDdeP7hyfd+77l/Ts65J1mzZ2NtWghh
FgPcygrhY3YIH+iSu7nCNvuLRAh7KeST7hE9VLn2UldHks+6x9Trf9qbKSON
q/rt+lfyPubxRZeiQT9tb6GcdK7pd+hfy/uZz6TuqC6DDvtahnWN9l9yKxVk
cF2/U/9GPsACvuqO6TLptK9jRNdk/y0fZzkX7AX0y5m0yXO4JG+KzyIXMyj3
Ol8tv5XruSmXsFDuMPPolQfNFUz5fbOZxSjnXLtjLovPynp7VzzPGAP2B+Zq
xuMZ5w+af/Qp84TZb5bG/yLew37RLOQ5t+33zcp4T7ndnMtl+a5Zzub4vs0l
DMl97lEjv5MbWESnPZ8++ZvrLXKC8/YNPNEdsv+VT7KSBGd0OfGbkrdww+92
xWeRG1nMd91TDuv/2U+xiuz4PvW79e/lJor4oXvGEf1/+2kqmc1ZXS7d8tb4
HchLuSc/NNcwwQwmfWqU
          "]]]}, 
       {RGBColor[0.922526, 0.385626, 0.209179], Opacity[0.2], EdgeForm[None], 
        GraphicsGroupBox[PolygonBox[CompressedData["
1:eJwV1HmUjmUYB+BvdE7J1mKrLB3ltCKEdOrUqWStMGihVbuKtn/aCyEVxjIj
bbbRol0qhBYM7cUw0qaxte+btev3xzX3ff/e75vzve/7PE+LwcOKh9YoFApF
PO3P8L0LheqahcJT6hzKmc0sZrKKbRy6T6EwjCoG+fwM2Uq20lw2lHUMdG26
rIItNJPdwFoucO1JWZG+M2P4jVvlK+SbaWq+nkrOlz8hK+hPYDS/cot8ubyn
fhp7mUexSdbEfB1rOE/2uGyAvpx65hL2yOabm+c+6KQfxS/cbF7m+iJ9yzwX
eug7qQt4RP+RWoP7qfbZr9STWcoLrn+mNmYah5jXq214mSHm99TV6rnqY76/
Ue1CRf5HnqN6FHPpbz5RfZPZ+k/Uukxgt++eqr7Dq641y7Ono769Oj+/Uf8z
N+nf9fmF+sP1c+iun0qRfiTfuv68uVHuk4P11+Z+GGB+1PV++lnUMY9nl6yD
eSQ/cWN+j6ybvoyCeQQbZQeZr+FT+uf5yHZyvHkEP2aNyd+WfUNj89W5Z/rl
N8l20N48nB+y7uRvyb6mkfkqPqZYPlVWRilTmMwkJlLCBMYzjqV5jzT03Svz
junrfzwsW8KXNJBdwYf0ce0h2WK+oL7scj6gt2sPyrbTznwf32cf5D3KNnCg
eTDvc458rOw/2prv5bvsA/ki2eccYL4sa4ez5Q/I/uU48z1sy7qXL5StZ3/z
paziLPkY2T+0Md/NVoZkTcu66kvZk+cqq5Ltp7+ElfSSjZb9TWvzXWzJ2pC/
ITtTP4XduVfZOlk9/cVU0DP7U1asn0lt8zj+krUy38nmrA3Z67Iu+snsyrOQ
rZXV1V/ECnpkXcv66mdQK++JP2XzzE1zznCs/g42ZR2ZX3P9DP0kdua5ySpl
z+kbZr1QR38hy+mefZH3rz9S/yx99NPZN++fP1x/xdwkZxXH6NtlP3K7vjpr
MnvR5xboD9OXc7q+Y54fE/U78l70a3xurr6Bvoza+tbqSwzSL6Nb9lTuJecm
i2VHqM/QW9856ybPQF8za5Hfff6U7K2cQ/LVOZtyPnK0ua06j9uyJnMWZB/k
PrK31NNyLub3yivVFjmPkps3qB3y7ijJ/lC3Z53knMveUU9iSZ5h9r9an1Jq
mavUVrzIwKzZnFVqV/V/6izwfQ==
          
          "]]]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}}, {{}, {}, 
       TagBox[
        {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
         Opacity[1.], LineBox[CompressedData["
1:eJwd1WWgFWUUBdBHSKeUdJd0I43SqISIgJR0SUspIaKkNEh3SKiggEp3d5d0
d4Ok6/PHYu9z5j2YO3FJ36RDzfaRIiIiSkWOiAj5iz8KclAfSE0K4HBEFKLy
Fr/6mUIc0gfxCQWJxm/2hTmsD6YWhdht9wn39Xl0IjpL7IpwRB/CpxRmj10t
Hujz6UwMltoV5ag+lNpcMLcmOqvNRdirf8pD/We6cMf8FYnYbo7J7/p7HNOH
8UzvS2o+M1+UbYjBmvD5XYxh+rvhPMz7ZG0e6W87NlFfoL+W35ORNPZzZVf7
u7IbOewSy+RyhtzhWGx9tJ5X5pUZ5IJwfjKW43/oxchiPm6OL8ebC8gfzf/q
/chlTiNTydnhfsg6jl/S2xKTpHZT5dpw38Lvh3MK/5Z5f/jsPNYX8kb/gUzh
+pnvye4kYWc4b5bpxTmhD6cul83tiMU6czEO6HV4oi+iG3FYbleCk/oI6lGc
g3Z1eaovpjtxWWFXklP6SD6nBPH4074Up/VR1KdkuF4kIGG4VyTilocqsUxC
Uv7ye6X5Rx9Ng/B+kIy/7ctwRh9DQ0pzyK4ez8I7RA/eYaVdWc7qY2lEGQ7b
fc6/4V2iJ8lZZfc+5/RxNOaK+Utis95cliN6fZ6H941e3Df3CPeVXeYUrNY/
4Lw+nuf6t6TlC/NVGb4A4rAhvI+eg+F6znAe5qOyAS/CtXJskr5ED18IA/XM
fG18IHuSjBSOzZS7w33Vx+j5ZL7wLsiF4RmWKR1fo5cjq/lCuDfyJ3PBkOYX
en9ym9OFd1LOCd8Xsonj1/QO4V00xw3/vpwmN4bvCn1EeBdIp88P18L+mGzI
Sz2x/WR9qR5JHxTeLb4xP5S9eIc95lSs1ctzUZ9AU66bOxKPTeZyHNcb8Sp8
v9Cb1Kyzq8AlfSLNKM8Ju8a8Du84fUjDeruKXNYn0ZwKpGWDfSWu6JNpQUXS
kZ4MZOS25zuTzEwWNvqdylzVp9CSSmRlk30VrulTaUVlTobnhTf6MvqSjc12
VbmuT6M1VThl1yRSxP//qSwX/cjOFvOH3NCn04Yb5k7EZ7O5Kqf1pkRiRXjc
3JvB4TkJz6/5UXjuSM5e87ts1T/ipj6Dl/p3pKet+absTIJwT/190+UW+5j6
yPCMhZ/Vfw7naP+PbEZ2u8gyiZwi/3Qsij5EzyOzhfdJzpNFZX/HH4dnKLxH
5hQypZwlC8l9jseVY835ZX6ZSS6SxWUOx7fpH5PNfMucUE4wz9RfyQFkoJ35
luxCQraaY/nZUeHcwvUwn5HNicJf5qiODw2fK1wf8xPZO5wj+8052a5X47Y+
iy/Dc2TuyttsM3/MWb0FUfnbPIBc7DBX544+m/ZU45xdS95ipfl7crPTXIO7
+hw6UJ085CUfuxyvyT19Lh2pwXm7VkRjlfkHnup9SMUBczyfeZxegMz6Ylki
XHvH/gNm6AuM
          "]]},
        Annotation[#, "Charting`Private`Tag$82343#1"]& ], 
       TagBox[
        {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], 
         Opacity[1.], LineBox[CompressedData["
1:eJwV1GW4VFUYBtChG6S7UywQFItGurulW0IFpFFSQbq7u5FUQkC6u0uREKWR
xrV/rOf93r333Dkz95zJ3KRD1fZRIpFI+qiRSEEORYtEGlA0eiQSVeaW62VF
+av95HK2XkqWlh/JnXKIvYh5mDkfecyb5T/WM5uXm6vTQf9bdiMDp/W09heG
92C+Hl+fZC7MU70Qh80NicYmfShRnBuu5+dfvSO3zd3JyBl9AYU5on9BdDbr
P9GJf/QeZOKsvpAiHNUbEYMt+jC+oijHrDUmJlv14XxNMYpTgs8pSSlKc9zZ
JsTiN30E3/Cv3pPMnNMXUYYTelNis00fSWfu6L3Iwnl9MWU5qTcjDtv1UUT1
/YzQP+CO3oW75t5k5YK+hATOTdaL8Ewvxylzc+KyQ0/hzBxzGUbr0fSR5g+5
q2fRV5hr0FW/J/uQjXfs/SIvWk9nXmSuxKfmPXKp9YTmKeYSsmi4ZrldVpbP
7eeUa/Rysq4sJPeH95Pl7Z82t6CYHk++JTeE95G/208p5+qlZVn5sdwlx9iL
bh5lLkBe8xZ5z3pW80pzTb7V78u+ZOeSnt7+4nCNLNMT6VPDNfBCr8AZc0vi
s1MfSwznRodnh/t6Nx6YvyMHl/XlVOSs3ooE7NLH0Z2H+vfk5Iq+gkqc01uT
kN36eHpQmfPW2pCIPfoEelKFqlSjOjWoyY3YkUgtWZs6XPC6trzBXn0ivajL
RWvtSMw+fRK9eaT3IxdX9ZXU45L+JUnYr0+mD4/1/rzJH/oq6nNZb09SDuhT
iOl7HBP+lzzQ+/KfeQC5+VNfzRvOTdOL81JvwBVzB5JxUE/lzLxwfzFVj6WP
NX/C++at8qH1bOZV5lrh/6U/kQPD/ca74TdSXrOewbwkPC+yivxM7pXV5M/2
E8vp+ueyRHiO5A5ZRb6yn0uu1cvLerKwPBDuRdnQ/lVzx/CZ9OTybblRHrKX
2jw/vDZcv3m3nGY9tnlceO7IZ/5NPrKe3bzaXDvcU/pTOSj8Tf7SM9pfaq7K
Gj2JPiNcO6/1L/jD3IkUHNanE8e58eGz81jvxzPz4PCbwHV9LY34U/+KlBzR
Z9Cf5/oP4bvlhr6OxlzTvyYVR/WZDKAJTWlGc1pw033cUraiNX95zTek5pg+
i4G04bq1zqThuD6bQbzQf+Q9burraRueEb0LaTmhz2EwL/Uh5OGWvoF24Vr0
rqTjpD6XuL6nCXpB/tN/4JV5KHn5W99IUudm6iWJhOfH2i35Lek5padxZoG5
AvP0ePpEcyHym7fJJ9ZzhPvQXCd8Lv21/Cnc6+Ez2tskb1vPZF5mLiurhWuU
+2T18JtuP5mcFa5JlpIFwu9tuFdklPAcy3XhemR9WUQeDM+PbO/1/wOl1RB3

          "]]},
        Annotation[#, "Charting`Private`Tag$82343#2"]& ], 
       TagBox[
        {RGBColor[0.560181, 0.691569, 0.194885], AbsoluteThickness[1.6], 
         Opacity[1.], LineBox[CompressedData["
1:eJwV1WW4VFUYhuGhQzoFpLtDEKQbRQUFRZQGaSWlQWlFuiQVpKS7Q7oEKSkB
6ZTuBu/147me733X2mdmz6w9J2PjtjXaRIlEInmiRiK1o0ciD2NEIr3RKmYk
kpE/5TPclf+xXop3yR24JTfk69yTf7eenZfKbbgmf8mXuDu/wVX5CHfiztyU
7/BPrk1i/sVcGp+bz/MjfUXzfnM7NDHf4m36t81/mBugnvkqp0S18F7Da+IL
+x5xH2TCCbm09d3hHjFbziEvC/eKePhAPspdMNh6UvlXcxk8livJB8ztsV0u
LG8MnwXeDPese8x9kRkn5TnIad9y+TPExxBdMt0Uc1k8kXegDp7I/ZAFp+S5
yGXvCrkWEmCoLrluqrkcnso7URdP5f7Iin/leRiGFPb/piuPZ/Iu1MMzeQCy
4bQ8H8OR0v5pugp4Lu9GfTyXByI7zsgLMAIN8EL3A3LgrLwQI9EQjdAYTfAV
mqIZmqMFXrrmR+TEOXkRRqElXukGIRfOy4sxGm96j9N1FfFC/hOt8DqcK+TG
BXkJxiCV/TN0lfBS3oPWiOgH6/LgorwUuXUrw3lEQozVpdbNNFfGK7myfDA8
E9grF5E3mRshFarLJ7gHvrYeRR5izhvOgvksX9KXMf9pbh2uNd/gZfo85lXm
tlyb6/BlToQPzce4M3flZnyXv+efXZuGZ4XX5Spcmy9wN35tvQofkr/ljvwV
3+bv+C/r7/DmcNa5Mdfna5waH5tPhmcf39gbVR5qzofLcll5T3htLJfzyqvD
M4nEGKd7K/xumN9DBPt0RXVbwrOONGiji6YbZs6PK/IK5NOtCc8bkmC8Lq1u
tvl9RMF+XVtE1w+XC+CqvBITkE4/R1cVUXFA1w4x9CPkgrgmr8JEtEdMayP1
hfCfvBqT0AEd8S06oTO64FJs3w13Q3fEcv0o176N6/IaTEYPxLY2Wl8YN+S1
+AXp9XPDbxOi4aCuJ+Lox8hFcFNeh1+RQT8vnA9ExyFdL8TVj5XfwS15PfLr
1oZzhaSYosuom2/+CDHwt66Ybms4I3grnBHdG+GcmYvitlxO3hvOAzbIBeR1
5rpIhqm6TLoF5mqIGb57+e9wBnHY+rvyNnNTNDD/x2nxifkU90IL8/1wzu2P
Zx4XnhsuxrX4HN+xVj6cY3NHbsON+Wb4G+F/h/WCvF5ux/XC++Qr4Vnl5OH+
+Th34W7cnO9x7/A76vrMvDDcL1cPZ5svcqxwBs2HuROO2Ftc3h6eUaRDDfnf
8DmGv2c9vjze/C7uyhXkfeG5x0a5kLwhPINIgWm6LLpF4VlEbBzVldDtCO8V
6dFHl0A3wVwc9+RNmI6s+sXhs0UcHNP1RUL9RLkE7subMQP9kMjaJH1JPJC3
YCb6YwAG4gdcdu5/5MT2T7a3FB7KWzEL2fRLwueAuDiuK6nbGb5fZEBN+XT4
ntHS/CDcDw+y939P5x9F
          "]]},
        Annotation[#, "Charting`Private`Tag$82343#3"]& ], 
       TagBox[
        {RGBColor[0.922526, 0.385626, 0.209179], AbsoluteThickness[1.6], 
         Opacity[1.], LineBox[CompressedData["
1:eJwV1XfcTnUYB+DHCmVlizKztyIUIiPZW/Zrb8ose8te2Xvvmb33DpG9laxK
KSLp+v1xfe7v/T3P6e05zzlH+qiO1TpEi0QiUdEjkQGvRSJl4kQi+2JHIkfM
z83VZk4u8Lr9WzMJp1lm32kW5So/OL+3+Vx/whxnbjLf4zIf2xeY6TnHZvv+
0HOdDc5vbt7SHzN7muvNvGSTZ5pvhb/DWvsesxh/OG+EGYfZ+m3mB1SWl5qZ
2SEfNEsx0OfLmvt19Vgj5+INebKZlOXyWZ/rI7+Qx7NZfp+S8kIzA1vk73yu
hXxb/ooNcj6yy7PM1KyT//S5kXJc5tirsEzOwk55kOPl5ANyfeIxxZ6MFfI5
x/vK/8oTKMVGXUvdHflrcjDbnob18hPHR4Xfjrn2qgzWfWo/KDcgPj/q+ule
yhP5JPx2ula6n+Re5OQv3ehwrZhnr8YQXXn7IbkhCTiv66/7T55E6XD9dK11
P8u9ycXfuqF8pj9sb0RCLugG6F6Fe44ybNG10d2V+5Cbp7phVNAfsTcmERd1
W2mr/8Xelzw80w2nov6ovQlvckm3jXb6e/Z+5OUf3TdU0h+zR5GYy7rttNff
t/cnH8/DvUhl/XF7U5JwRbcj/P5UceyErhlJuarbGX4nqjp2UtecZFzT7QrX
nDGMZRzjmcBEJvEtk5lCNf+N753bguRc1+2mg/6BfQD5eaGbSnX9KXtLUnBD
t4eO+of2gRTgX900aoTn396KlNzUDdRFmGwvy15dJ/ujcF/zHi/Dd9DFY769
OtN1Ne1n5NakYqo9OSvlW44PkqMxxV6ORXJGtsr7HO8s/xru6/AsyvnDcyrP
Md8O75Xw/2MWD/djuIZm/PCdWeDYdrMwNeTlZlbOs8t+yPyEm8xwbq3w/tEf
NduYa83cXAzvJvs0M0X4Pqyy7zI/5Fp4Pzh/sBk9/MZMDfe0WZBP5cVmJrbJ
+332C/m38HxRkLn2d/hOfhXuAzkBC+01mamrbT8rtyU1d3RDdDGYZi/PAd2X
9t/loRQiwix9Hf05uR1p+El3kC76x/ZhfEC08J7R19X/KLfnbX7WHWIOn4fr
qOvAO9zVHWYu9Ry7oOtIWn7RHWEe81nAQhaxmNs+v8RcyjLqh2vuvE6k457u
KMtp4NglXWfSc193jK7h3wr7cAoTnRX6hvrL8hdk4IHuON30f9q/oQgxWKlv
pL8if0lGHoZ3mC4m0+2fcULX3f5EHkFRYrJK31h/Ve5CJh6Fd5guVrjH7BU4
qeth/0seyYfMs6dloxyL8XJCFsm1wneRs7FbXu38JuG+k7uyTs7Du+GZM1Oy
Wt5tfhSen/BeNF8L7w5mOrbVLBS+KxXtS8L54fdme7iPzJLcCOc4v6f5t/64
OcrcaBYIv0X4G/b5Zrpwf7IpPLtmifA35QlmIhbLO8wi1A7X28zOHnmNvxEl
X5e7kZkZ9lSskX8L72o5NrPslTil+8r+VB5NMWIzUfdmuKfkOuE59rmm4bvI
3cnC77rTfK1/Zh9DceKE66lvFt4Lcg+y8lh3hl76f+xjKUFcJukSs1SuG+4D
OQd75cNmaW6x3vn/A2oKVpA=
          "]]},
        Annotation[#, "Charting`Private`Tag$82343#4"]& ]}}], {}},
   AspectRatio->1.,
   Axes->{True, True},
   AxesLabel->{None, None},
   AxesOrigin->{0, 0},
   DisplayFunction->Identity,
   Frame->{{False, False}, {False, False}},
   FrameLabel->{{None, None}, {None, None}},
   FrameTicks->{{Automatic, 
      Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
      Charting`ScaledFrameTicks[{Identity, Identity}]}},
   GridLines->{None, None},
   GridLinesStyle->Directive[
     GrayLevel[0.5, 0.4]],
   ImagePadding->All,
   ImageSize->{216, 216.},
   Method->{
    "DefaultBoundaryStyle" -> Automatic, 
     "DefaultGraphicsInteraction" -> {
      "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
       "Effects" -> {
        "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
         "Droplines" -> {
          "freeformCursorMode" -> True, 
           "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
     "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None, 
     "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
         (Identity[#]& )[
          Part[#, 1]], 
         (Identity[#]& )[
          Part[#, 2]]}& ), "CopiedValueFunction" -> ({
         (Identity[#]& )[
          Part[#, 1]], 
         (Identity[#]& )[
          Part[#, 2]]}& )}, "AxesInFront" -> True},
   PlotRange->{{0, 10}, {-0.3461261180190739, 0.581865061766651}},
   PlotRangeClipping->True,
   PlotRangePadding->{{
      Scaled[0.02], 
      Scaled[0.02]}, {
      Scaled[0.05], 
      Scaled[0.05]}},
   Ticks->{Automatic, Automatic}],
  ContentPadding->False,
  FrameMargins->{{0, 0}, {0, 0}},
  FrameStyle->GrayLevel[0.5],
  StripOnInput->False]], "Output",
 CellChangeTimes->{
  3.7737506628088846`*^9, 3.7737507251355767`*^9, 3.7737507611303983`*^9, {
   3.77375191505704*^9, 3.773751936724105*^9}, {3.773751983357119*^9, 
   3.7737519991221433`*^9}, 3.7737525442465696`*^9, {3.773752603256584*^9, 
   3.7737526272796636`*^9}, 3.773752817162607*^9, {3.773752851669608*^9, 
   3.773752876708639*^9}, {3.773752916134607*^9, 3.7737530010696816`*^9}, {
   3.7737531804847364`*^9, 3.7737531974837313`*^9}, {3.773753235203764*^9, 
   3.773753268172761*^9}, 3.773841443240159*^9, {3.773841484876753*^9, 
   3.773841505785748*^9}, 3.7741817571837835`*^9},
 CellLabel->
  "Out[191]=",ExpressionUUID->"f92a7380-2a61-463e-8bfc-b2b97c348cc4"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"216", ",", "216"}], "}"}], ",", "1", ",", "1.`"}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.7737506628088846`*^9, 3.7737507251355767`*^9, 3.7737507611303983`*^9, {
   3.77375191505704*^9, 3.773751936724105*^9}, {3.773751983357119*^9, 
   3.7737519991221433`*^9}, 3.7737525442465696`*^9, {3.773752603256584*^9, 
   3.7737526272796636`*^9}, 3.773752817162607*^9, {3.773752851669608*^9, 
   3.773752876708639*^9}, {3.773752916134607*^9, 3.7737530010696816`*^9}, {
   3.7737531804847364`*^9, 3.7737531974837313`*^9}, {3.773753235203764*^9, 
   3.773753268172761*^9}, 3.773841443240159*^9, {3.773841484876753*^9, 
   3.773841505785748*^9}, 3.774181757627783*^9},
 CellLabel->
  "Out[192]=",ExpressionUUID->"0397e644-ba75-4427-87f1-8d5e748b4f4c"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Step 3", "Subsubsection",
 CellChangeTimes->{{3.773750640003887*^9, 3.7737506413918867`*^9}, {
  3.773751011875429*^9, 
  3.773751012029435*^9}},ExpressionUUID->"df12afa6-c199-4812-9851-\
3370998754e5"],

Cell["\<\
We can use our aspect ratio to scale our unknown image size parameter.  You \
only need to know the x or y size dimension.\
\>", "Text",
 CellChangeTimes->{{3.7737508193924513`*^9, 3.773750923442391*^9}, {
  3.77375102186946*^9, 3.7737510233564477`*^9}, {3.773751064955467*^9, 
  3.7737511424474506`*^9}, {3.773841670341757*^9, 
  3.7738416763747544`*^9}},ExpressionUUID->"bf405268-dab0-4b7c-937f-\
f87d439e3e67"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", 
   RowBox[{"wPX", ",", "hPX"}], "]"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"bp", " ", "=", " ", 
    RowBox[{"base", " ", 
     RowBox[{"(", 
      RowBox[{"or", " ", "known"}], ")"}], " ", "pixels", " ", "of", " ", 
     "either", " ", "x", " ", 
     RowBox[{"(", "w", ")"}], " ", "or", " ", "y", " ", 
     RowBox[{"(", "h", ")"}]}]}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"wPX", "[", "base_", "]"}], ":=", "base"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"wPX", "[", 
   RowBox[{"base_", ",", "w_", ",", "h_"}], "]"}], ":=", 
  RowBox[{"base", "*", 
   RowBox[{"(", 
    RowBox[{"w", "/", "h"}], ")"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"hPX", "[", "base_", "]"}], ":=", "base"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"hPX", "[", 
   RowBox[{"base_", ",", "w_", ",", "h_"}], "]"}], ":=", 
  RowBox[{"base", "*", 
   RowBox[{"(", 
    RowBox[{"h", "/", "w"}], ")"}]}]}]}], "Input",
 CellChangeTimes->{{3.7737538015371475`*^9, 3.7737538313271513`*^9}, {
   3.7737538730562506`*^9, 3.7737540543343196`*^9}, {3.7737540936373177`*^9, 
   3.7737541457766*^9}, {3.773754206097597*^9, 3.773754283660674*^9}, {
   3.773841721657765*^9, 3.7738417664909935`*^9}, {3.773841847290444*^9, 
   3.773841847447421*^9}, {3.7738420790113745`*^9, 3.7738421128653803`*^9}, {
   3.7738421767783813`*^9, 3.77384218102538*^9}, 3.773842339836381*^9, {
   3.7741819877307835`*^9, 3.774182007646785*^9}},
 Background->RGBColor[0.88, 1, 0.88],
 CellLabel->
  "In[223]:=",ExpressionUUID->"c2d19874-5ae9-4436-82c9-45dfceb0c898"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"bpW", "=", 
   RowBox[{"72", "*", "2"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"wPX", "[", "bpW", "]"}], "\[IndentingNewLine]", 
 RowBox[{"hPX", "[", 
  RowBox[{"bpW", ",", "16", ",", "9"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"%", "/", "%%"}]}], "Input",
 CellChangeTimes->{{3.7737536910199766`*^9, 3.7737537076810126`*^9}, {
  3.7737541248583183`*^9, 3.7737541523716*^9}, {3.7737542439770546`*^9, 
  3.7737542460820866`*^9}, {3.773841783099024*^9, 3.7738417860259876`*^9}, {
  3.773841816418496*^9, 3.7738418196474237`*^9}, {3.773841872125422*^9, 
  3.773841880837423*^9}, {3.7738419187994213`*^9, 3.7738419306634455`*^9}, {
  3.773842059652382*^9, 3.7738420686563807`*^9}, {3.773842470436652*^9, 
  3.7738424726946597`*^9}, {3.774181959833783*^9, 3.7741819650587835`*^9}},
 CellLabel->
  "In[228]:=",ExpressionUUID->"6105afa1-0c82-48e0-957e-0087f7a93d23"],

Cell[BoxData["144"], "Output",
 CellChangeTimes->{{3.773753715096982*^9, 3.773753745796993*^9}, 
   3.7737538473472447`*^9, 3.773754158207591*^9, {3.773754264789666*^9, 
   3.773754286201663*^9}, 3.7738416853737574`*^9, {3.773841820759422*^9, 
   3.7738418818244224`*^9}, {3.7738419216194215`*^9, 3.7738419313864202`*^9}, 
   3.773842380490655*^9, {3.7738424611426525`*^9, 3.77384247923365*^9}, 
   3.7741819243137875`*^9, {3.7741819660467873`*^9, 3.774182010170783*^9}},
 CellLabel->
  "Out[229]=",ExpressionUUID->"853cc6e6-a1b4-4a1a-befe-6d0a1cfbf3c5"],

Cell[BoxData["81"], "Output",
 CellChangeTimes->{{3.773753715096982*^9, 3.773753745796993*^9}, 
   3.7737538473472447`*^9, 3.773754158207591*^9, {3.773754264789666*^9, 
   3.773754286201663*^9}, 3.7738416853737574`*^9, {3.773841820759422*^9, 
   3.7738418818244224`*^9}, {3.7738419216194215`*^9, 3.7738419313864202`*^9}, 
   3.773842380490655*^9, {3.7738424611426525`*^9, 3.77384247923365*^9}, 
   3.7741819243137875`*^9, {3.7741819660467873`*^9, 3.774182010175784*^9}},
 CellLabel->
  "Out[230]=",ExpressionUUID->"bd7ece4e-1892-401a-84ad-7887dde6bf01"],

Cell[BoxData[
 FractionBox["9", "16"]], "Output",
 CellChangeTimes->{{3.773753715096982*^9, 3.773753745796993*^9}, 
   3.7737538473472447`*^9, 3.773754158207591*^9, {3.773754264789666*^9, 
   3.773754286201663*^9}, 3.7738416853737574`*^9, {3.773841820759422*^9, 
   3.7738418818244224`*^9}, {3.7738419216194215`*^9, 3.7738419313864202`*^9}, 
   3.773842380490655*^9, {3.7738424611426525`*^9, 3.77384247923365*^9}, 
   3.7741819243137875`*^9, {3.7741819660467873`*^9, 3.7741820101807976`*^9}},
 CellLabel->
  "Out[231]=",ExpressionUUID->"c9a54b64-b514-4365-9524-5730194e3a42"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"bpH", "=", 
   RowBox[{"72", "*", "2"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"wPX", "[", 
  RowBox[{"bpH", ",", "16", ",", "9"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"hPX", "[", "bpH", "]"}], "\[IndentingNewLine]", 
 RowBox[{"%", "/", "%%"}]}], "Input",
 CellChangeTimes->{{3.7737535791130075`*^9, 3.7737535833259835`*^9}, {
  3.773753731442992*^9, 3.7737537381519856`*^9}, {3.7737541306953135`*^9, 
  3.7737541537046022`*^9}, {3.773754249747053*^9, 3.773754252320056*^9}, {
  3.773841939800421*^9, 3.7738419406654325`*^9}, {3.773842359523547*^9, 
  3.7738423734736543`*^9}, {3.7741820274127927`*^9, 3.7741820278097925`*^9}},
 CellLabel->
  "In[232]:=",ExpressionUUID->"3be342bb-678f-491b-91de-04e745fb322f"],

Cell[BoxData["256"], "Output",
 CellChangeTimes->{
  3.7737535843919797`*^9, {3.773753739003983*^9, 3.7737537470529833`*^9}, 
   3.7737538490512843`*^9, 3.7737541594445963`*^9, 3.7737543027186704`*^9, 
   3.7738419519974203`*^9, 3.7738423828276515`*^9, 3.773842480433652*^9, 
   3.7741820285907927`*^9},
 CellLabel->
  "Out[233]=",ExpressionUUID->"174fbd1f-3923-4a46-b9b6-6de20d3064c7"],

Cell[BoxData["144"], "Output",
 CellChangeTimes->{
  3.7737535843919797`*^9, {3.773753739003983*^9, 3.7737537470529833`*^9}, 
   3.7737538490512843`*^9, 3.7737541594445963`*^9, 3.7737543027186704`*^9, 
   3.7738419519974203`*^9, 3.7738423828276515`*^9, 3.773842480433652*^9, 
   3.7741820285957923`*^9},
 CellLabel->
  "Out[234]=",ExpressionUUID->"62b81601-478b-49ef-8cc1-86d37ffd5b19"],

Cell[BoxData[
 FractionBox["9", "16"]], "Output",
 CellChangeTimes->{
  3.7737535843919797`*^9, {3.773753739003983*^9, 3.7737537470529833`*^9}, 
   3.7737538490512843`*^9, 3.7737541594445963`*^9, 3.7737543027186704`*^9, 
   3.7738419519974203`*^9, 3.7738423828276515`*^9, 3.773842480433652*^9, 
   3.7741820286017923`*^9},
 CellLabel->
  "Out[235]=",ExpressionUUID->"7058f1b6-60fe-4223-8f09-dafa167a67a8"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"ClearAll", "[", 
  RowBox[{"plt", ",", "bp", ",", "bpW", ",", "bpH", ",", "w", ",", "h"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"bpW", "=", "200"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"w", "=", "4"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"h", "=", "3"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"ClearAll", "[", "plt", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"plt", "=", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"Evaluate", "[", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"BesselJ", "[", 
         RowBox[{"n", ",", "x"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"n", ",", "4"}], "}"}]}], "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", "10"}], "}"}], ",", 
     RowBox[{"Filling", "\[Rule]", "Axis"}], ",", "\[IndentingNewLine]", 
     RowBox[{"ImageSize", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"wPX", "[", "bpW", "]"}], ",", 
        RowBox[{"hPX", "[", 
         RowBox[{"bpW", ",", "w", ",", "h"}], "]"}]}], "}"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"AspectRatio", "\[Rule]", 
      RowBox[{
       RowBox[{"hPX", "[", 
        RowBox[{"bpW", ",", "w", ",", "h"}], "]"}], "/", 
       RowBox[{"wPX", "[", "bpW", "]"}]}]}]}], "\[IndentingNewLine]", "]"}]}],
   ";"}], "\[IndentingNewLine]", 
 RowBox[{"Framed", "[", "plt", "]"}], "\[IndentingNewLine]", 
 RowBox[{"{", 
  RowBox[{
   RowBox[{"ImageDimensions", "[", "plt", "]"}], ",", 
   RowBox[{"ImageAspectRatio", "[", "plt", "]"}], ",", 
   RowBox[{"N", "@", 
    RowBox[{"ImageAspectRatio", "[", "plt", "]"}]}]}], "}"}]}], "Input",
 CellChangeTimes->{{3.7737506491019*^9, 3.7737506615038986`*^9}, {
   3.7737507216746054`*^9, 3.7737507595304317`*^9}, {3.7737510439654293`*^9, 
   3.7737510457554417`*^9}, {3.773754346015667*^9, 3.773754467897669*^9}, {
   3.773842576469651*^9, 3.7738426097876663`*^9}, 3.774182169411886*^9, {
   3.77418220878689*^9, 3.7741822127898865`*^9}, {3.7741822434238863`*^9, 
   3.7741822445088863`*^9}},
 CellLabel->
  "In[252]:=",ExpressionUUID->"1b3651fc-0299-4e30-b33b-e00be80f9037"],

Cell[BoxData[
 FrameBox[
  GraphicsBox[{GraphicsComplexBox[CompressedData["
1:eJxEvHk81N/7/2/fZd/FjFHWlFJS6lx2oZSiCJWskSSlUukVWbIrSxQqokRl
KSRP+77MGFv2tSJlz873+f7dfs3HP25uN/Occ13nnMfjcXGHaHfFzIGBjo5u
io2O7n+fn9+zY1G1Dzl8/f/77HP4RX3y1V/SdUjpRPXODbpClP0+uMdNpRtp
HxOMVn1Vh5wQ5emk5wgaV3dyC45sRe5jCiN52ePod8KRX1aZnYiD6C83sH8a
ub/I9zt0rReF8zYovjg/hypvpn3kYh9Edj2nMMbGv6hObbJKyWcIXa3yt7si
t4IU38+YFFgMo48eXCdFj6yjkINS+leThtELH9eJXafpID0/akXw7DB6kLx2
Yn6SHjR0t3/xjB9CdNRBKL7NCBTozLBxHETbvRxvnlJkBu6e7dc3TfrQ6EKc
BedXFpBn3akSavoNGY1duht9lQ1Udawe9p9tQ8dGI5WkpDjg5p5izVjRZjRR
YXe/NosTjjbtHFsurkAqfB1bdc5xgwv3n50CzR8QB1q40Du3BVpGNDHft+GY
wW+rRRlzXnC3PLqzubcA6yq3p7dS5oOD+aJvdhRVYflBlbaEBT4w0GRKVNvb
hDkyXx9sbuYHzO9bh+oIBbvo6ZPPlSAAQZxsa3Tb2rCdTkrNJhcEAYzPbwsN
bcda+JU5r2sIgYQk5zXlbR3Yl+wHicqMwgC2ZrzGne2YD73i8cY+YXgUbH3F
JakN4+i9beieJwKn4SDL8fhWbOw18UnyHVHocO3wO8FHxp7IizEVmovB8jEr
0VG/OiwywbHmAkEcPr10SDEPLsesntg0c/0QB5a3WQlBHp+wJd205eQSCXCc
SrHcERCPjYxp3ywPlISt3t8GftS9QC8PqUo0XdgK72U5tAdOFaCsh9f5nHZI
wThTIbtMbjkKNL9ozLggBVJW94OCUC3a2/viTWCTNPiIPvMYEm1C8QqJWU3G
BCh4Ee+/tJOMfEvD4o0LCeD72oHf+AAFHZUwT6uXJYKMLNPKwm0K0nKvOcsX
TIQXG9XsXOwUlCxpJ9u4QIRztouubz62INmK9NhjZ2WAl4Px7gXdRhS5o1yx
tUQGNIyE5ff8rkGOc0yUOkUSDI8t2lacLEd2H2cJwREkkCeLu/9eKUAlc9uX
NzdJ4Cw3zMSn/Rqx9gzL/ZYuRL3qDtd2ir5BZQJiTzV4f6Phq0/aVxS7UWO8
nEJp4wwyqggf9bbtR0sLPNfNhBdQ9VO0m7NtEF0iT0YW3lpC/Yqin9VWhxBf
Ym23TsEqMhtxOf710TBayZ0R+Lq6gfJvBz/0iBhG0dxqSfwy9NCWVntenX0Y
aRW6H+nKZYD00e7TbNxD6PGrV9ZBZkzQH3NB/K/8AGLe6/vj/Rwz1P9NOehj
14Oq0wR3fY3kA959zDsgpQ7bUvMsefECP0gJOJbrWpGx0YNL9ZfVBCCqdeaU
tBQVq3Ojlr1bF4C1dHbHgdk2bLM4c/J8kyBso7c9W73YjlWdP009niQE3n//
SpwV7cAkznRcv+MhDJNLOXtvn27Hyt3NTLYeEQFFoo/vSC4Vu6l17E+AqCh8
x7SUBhwpWLHTVhPlcVEI1WoajJ1vxBIuu6nsjZIChYcDDK/jqlB//IPbehek
wV3xJS+hox5949xXZihGAMK5qIKe0WbEdV3wVegDAizcmLqu1kxG3y/PSHFO
ESAyfCRM4BoF1eiG0/2xIMJneXWttxYU5FElWOqOEUFe/TBjRCAZDU/524TJ
ywDZp52FWaoZWS3lnecNk4FuKfrDSnvrUWQrV1hlDQlkSBkazdI5iLrq/GRa
+g06dOU4Hb3UUxR/h3jY+9wv9Dr6tHTNTBf61Wue0cIwg6jXPQQSr/QhHb/f
LbcOzqO4ueeaM56D6Hs7IaP/5SIaYVLi+IQNIa0Pr5O+Ta2gAANZr0qvYWTB
75t7SWYDfTzHpfA6cRglVJpWviimA47L6TcE9g0ju3f5Rx2PM4DAfMXUQYsh
ZHSw/NjL74zg5ca4KUA/iGLbZncyRDBDVG0BJ59NLzLNK44PseUDCwnlyqlP
Ndhw+q7NECV+SC+3TZNjaMHSUj6ZJ9ELQN7DYhuewFYs9kr6l94GATiVn+Hl
Gt2GiUS79lnECcKOk1UhP+vasfpCralhVyHgLHcKtsX1xtXvXVCbhjCEtus9
zEtqx6T2H272EhCB22PFtr4727CycPvE299FwFCfvNeMqRU7Hig9PZYjCkc3
95+NftKMpS5PSx87JwVRe0XSE5Qr0e7FWTtZJWl4t210z9yTOrRyh9GYhY4A
76rvpdexNSOzltPyO5wIMBc2eMvkIRntjsPOKrUR4LBcwVSzNQVxfJgx6z1E
BD19m1vs7hTUJfaHG1KJcDjV01sEPx8QMFeqzCMD79W+K49NNyPMJttnp5cM
2KTZsWnoNqDlss2O15kkODluuCb3OB9lnVp+8yF2Fs1k8ue5oQGU5bxbXGlm
Ac0YtJ9UVh5Cf+oLbj05voyK9bHiyB3DaOjhhHD2/TVk3s7/MyV+GCWZ23vx
tG8iy5fb2odvDaNHFqI3/QLpQSHGJSqlbQgRquX0jEQY4dvsrQHGr4PowHc2
uBjPD0kOn9kqt1Ew2U4NOOQkAOlGtdcVM6jYmstmzZ2dglAdY7VdT78d+/Hj
1+olRiFYz/qVryzcgZWyXv5cQhaCbVbmWvob7ViDMt1F2XRhsDWc+vybvh1z
THOsr7onAkolU7cZlKnYowP80Y5x0sDTezf0JEMjKkhwVg/ZTYC6Bmvnj+9a
ULU4ZevkcwJoH+IdiuSgoARd0vAEOxGa0kQSJO9SkP83xezNK0TYW7/9z7wa
BbFdPej5vJsIzi9izuXvJSM/S+GV31oyYKbR8+qlRhOSGxHTGR4hAafe7FZB
gyzkduj65UXpp0is4vVDH+lgxPgxjVc4cAJ9kar/vON4F1rZmHTqfD6NjNR3
vBGa60U/j1jf5W6eQ42nPu4SQoMotatoz1X1RWRhlZUfmTSEvhXF3E8NWUHV
moIPSh2HkX+Znl9Z/joyZb+xrIHnBakUm9PjwXSgcczsQtSRYTS77ZtplhQD
XA5aCdW4OYS2BVIM3n9ghKGvjKLpaoPINlX5VKY1M2z5xP7JoaMXPfnC2+Sp
xwdvG5Un/hRVYybxKyoWvPyg8yPFbVaqGWOhCiXu+8kPutuOh33a14qteUQV
zOcIADdrscFJmzbs1Z2G9hN3BIGC/TqomNWOmXzft55pJgTbi40V/mzvwASe
ikTflxKGCZVJhm/F7VijpFpEypIwVM5QZaKc2zDH/KmrXk0i0Nxj7hRg2oqJ
xxHKy+NEIaT147NfNi1YBsqNt9KXAot2s9rkqxXIertSpwCvNBwwkzIsnKxF
gq5t0vXfpeGvcbbHkcdN6Pqd5Ut3LQnwyLIpc4c1GXVlbr/9pZoAFheUKIJH
KeidA+nOSVUiSBTeTmq5TkFcld15GbFEsNJskGD7TUYelLeedxhkIKR8aePx
yRbkyavEjjnJgDdvJ1mtugFlayyvxj0ngcHvwg/php9R8Y1IlwLVWdT0sPdW
Prkfme18UVPit4BEV/pDDtEPoXdNZsxyY0vIdNzGOEhoGN2K/LZ0U3INVXiq
F3+MHkaNTEq6js6biCqz5QT14TDasns7Z8MperD8vqE0NDWEPiBjg6gxBvCz
Cz/TN4afj47WKzvu8sOG4UhLaRkZ82d/+rD9qADwcn96U2tPxexcxyufCAvC
4tIi2ivVjl1rNZ53+CkInemUVz/YOjBtNbuqwM9CoDnsd2qaqwO7pu3qRg4R
hpnbF+pvqrRjgo+sQ2YuikDA/cEIr6tULM/FiMXijjSkjDhKjLo3IMOTpmvj
2whwj0eP8ZRxCxqv8TyvGUmA9ZmOrwt4/8DyEZ3PGgGkdRmXk25R0PYI684b
F4kwDLnmogYUpCkhL8bSRISkFz2DrOfJKCe1KfPQXhk4u7AmtZLVhHqtBJyp
7SRIMH+VlWT3AclTAyRNtiwhgsbSxfj+IfQm7XPxllOrqNX2gl/F/WEkf7Fg
RCBiAxk4bX/xOXYYCY9rqVpN0UHQu9rOJMIw2uX+taRyVADiBK6M6FW2YSHp
nGNncwQhXqJpS81wO2YYZjIk9lAIOLZJuP1H6MAqLmv5ypsLg5Wp1uz3O+3Y
TplPY71eBHi5yb39eCYZhT44cyhxiAD/nbqw9ZYLBTmvYAoORkSYLTUKf32R
glKv0Dt1fiRC0cboF613ZLSrVuoPffEyejmdsGqsM4yO+KyqjYyuIccrvntD
ng2j/dRjZr0EOni93UzjpeswinUWarA3FIS895uI27UdO7sewughJQRHLiqv
xEl3YId7vN8sjAvhfsF9126yHXt5eWdPYiYB5MfZzRhlKWh+Z3GFlQgR3Pnv
7wzH9WyYtOwfdIcIYQ/XH+kSKMjTlSA1M0OCzpAv2xur3qDnpWHSzIRglGyo
te279C20v+HHrTHxCWQX8kVJcaMTMUQWGJx1nUaKzsG8j3N70cEsgVOn4+YQ
fRZFxEJ2EDF2B94qol9Ev8c2FreF4XoDYTPBlisoJ8lhZM12GImLKfxy811H
ub/jj7zA9WowbJQQ5kEHce6330ebDaOi4QkymZkBLhGqGSKChhD/DsvK/BhG
MB09dqvk6CDSDj3y3VeHGWRzsE0O/j60Dzvg9H0/H+yxEA+VPViN3Y8c0P/C
wA90VL7G4bdN2D63qq8Pevjhj8K9XZbcrdiHqyyf778WgBwmS7korTZs/Orq
iRZ3QTj8ZEXm9PN2LPyOqj+vvhAkZjPmeON69YPUFNvBKwwfLiX9CKpvx2R5
3l/Z90sYJB1qtcb82rACw702M6UicKXaxFLDqxWjkyYqqT4ShUG6qL99pS3Y
WzvB9kENKfjb2ZTfwl+BZg8ZRIUwSIPGQ7JSSWwtSiV9GZXvlgazzxsPPlo0
IZaTRqFpZgTQ33846ro+GSnvswpmLCWAc2VsD58uBd2BYl4eJSLk1IzMfLqJ
3yexE2x9EUTgU82Wcl4lIzbvAGPZNXxeEK3b3O3XghpcxlsCLsiAz8mZc9XM
jSho4Xp4ZCwJptejRNRlClAlq/URzc0ZZLDdpZAlvh+lRZ9JYju6gFqSuu9N
TgwizhZpY4/3Swi9Pl6WzjaMqoQoLrYTq0ho25jqUvgwumi95R3f7k30OMbC
bxLP82TprDb3g/TQLsrdXbc2hG6uWdfmNTKAXLwZ85vlQfSt+XNg9BV+mPMY
k7kaTsbyXhpmELUEwNZgMqJXi4oJu9lWEDgEQc3UfWqWrR0rrPHxGOkWBI72
odetdB2Yf721yeRbIXC8yrnILdCBGTQRrm6/Jwxcau+dXXXaMdc7na6BFiJQ
cWPJjPsxFTvyn2Npkzve7x3Vx5RIDSjyfbntU2k8T7OmPywSbUG3kyr+sw/G
9UmJ7cOtfjJ6PPKVp2KBAAOq9wS+3KCgvy4LrrttiFB38SS2x5SCLDyS3A5U
EyHLxPbqNi8yMjJ64z+mIgPlqgquj743oU/CkSsNzSSIq97tcVPrIwpsO2kX
07WIEo221l1pGUILiu93zBNXkaV/TDKTzzDCihKNsTMbKN2uS+L202HU1VG7
st5OB5frvMrilIbRiPvur8e7BGAxz/JpaWYbRnl28MK3VEGoOCpXRu1ox4JJ
Bs73bgqB4fRlZ0tSBxa39NfvnoEw3Ovl09EOb8dKl1hYmd0JkF2puvoxnowG
uEJNRroJEN8cwBSA65NG+5kSgi4Rthk/dlbC9auk0ruIM5MIrO5NX4O+klFE
3a89xgHL6JacIqFg/zCKoZtLq81ZQ+7q6y86EoYRky+w5DDTgYmXsznXNVzP
XB7VTR8UhIuEH3r8lu3Yi9kvvr95hUCJS8PBRqID873qucuqTwjcxM6qf1lo
x9R0769VpOLnXVb45HsRCjIommp9yUsEwjGtqk+4XuVuRInp3iDCvvEzvH8U
KchE7vmH8QkSmL8R1qoLyERhe5N4sK8ryLR5bQuj+zD67WInITy5ju5pMQYe
fD6MbAITLduCBWHPn+LzzHje4DyuecPgnBDQ88CRSPx+PyTOXbrWRACGqaTe
k+YU1PPo0Y84dSLoJsufBk8K2sE5HPj42BoK0Q9dGI8ZRnuzDHqLkjZRikS0
8Tbcb3b0Sdz8uSAIwQKlkcy8HRh9ktNhUqUQvN5zoo+BpQM7M0NEgnEEUIw5
BBlrZPS72WJmNyMRok4tu2A+FGSeV6H9xYUIMBIfcuYwBdkQSo0VAlaR/ask
IfqAYRTF2e7jXLWBLp9VpDv3eBjp5fQ492OCYK/gEFr+ux1jWTxhlR8lBKER
x4idkh2YxpKsysmfBCifHtLNwOeDeGm5mDfHiWDqxWjlY0NB6wuMlevC62i/
aXNBCd4fITbrwFklIfheP/ytV6YDS0kLyuOXIsLjXxuyr+7gr3//KmRpiQS7
29K1djNloM3qEj8C4RYKm+GpEiW4oJNdQSpNo+PoAeF0Z09bJwo4k6S+1Wwa
1Vs9C33wuBeN2l5Baz5z6JO97Ity4UGUY+UuOfD9L4rA+KsP+A+hBgb2t3dg
BZG3WOdPWA2j75Xiydr266hYZsfeZ7g/lDJlMA9cpIOMWYniEQs835Zdi7Jb
pgce3ghCROQQYqd7zqARxAgGIdzyW60GkRrdmZ0T+5hh+cCxG4k7+xBrmala
ym4+EBU0vtq8UoUlcLW2/l7lA2KnnjHyaMKa929tkW/H/UJEMNd2iYJxzMIn
/RQB+CgxUG+3pw0LdRPg3eIsCEdYXJJ5Y9qx7JrsmnIkBF4eB3Mm8fnwxLjc
U3oOYajb/reSldKOHQ+aPPffqDAcrAi9ohXVhl3g72p9XyQCb3Plzc4EtGKz
di/OOfuJwkWdHq/vMy2Y8rzu3Ks9UpDnH35ecKQcFR8xd69ZlYIhdmtvI9da
NOmrYtBFlQY93f7z0+pNyLRk9pmGKQHus11JMj1IRharc5HpxQTQuf9pSh9R
0GgWW8+kHBG6dGL9f+F5K0+Ha7d3KBHsP7iknWCgoLYj8+pLS0QI7I5zfZzQ
gm7GGuZespUBccPl77u3NaLrJ/M6uR6TwIbxA3d2eAEyJGtpbIzNIK7h9f1n
ffrRMd284CzVBcRa/b09bGAQFZmy/HnyZAkVyTgF0jEMI9cuE5kTlFXUu9Ng
ciJ0GKmw0Z3/IbyJ6KY4dmmFDaOPsR6FpSr0wPd2nYOXcRj1do8F6ZcyQKyT
u54j4xCaN3orUOXMD0MPbnrc8CJjJldSCmsOCMCRdgkO0V1UzGMyvvw7oyDI
2e85yrjRhlmXP1aRaRMEyfzb7q5r7ViqUHdEUqoQMBHvvWoW6sA+RvtcO+Et
DLoJZ85FHG3HYhcErVtNcX9w9+2KfEXFBMO8nrM7SwNltZjSslaP8mzWeK5K
EiA8+svHuY1mVMHuFr30kACmRRq7PTrIqDjjtIjTLAHC5sRqNr0oyLZTax+v
FRGq6W+kMZ6koJEEy9i2ciJsGVJonL5LRsJbRa4WKslAMLNO3CWGZvTKq1nH
sIEEZk/2+eZ9+Ij2mR9gLvq6iDIjmNjSaoZQ4m/F79/ZVlFnBUfOvDc+TzuG
bT45tIHav9nOv8T1tvBo6IBpHR1IlRw1Gts1jDSn3IqFWwXgvOPE6s7kNswr
7qS0aJIgxEgFyt4lt2Nv3Sszd3kKwe2tfdY3ZHF9KjkR8AaEQeth1dP42HaM
3f69yNNLBFAVpkiKRuD5oXXbqcBOPG8wLCxrn6egl9ppQRtABEel0ePvXSnI
eGr3aFo6Ee6VN+35UUVGh41aO664LiM3q7mefXuG0cEKd9svT9fQ9lO8vxpw
P6O+8SzVmN5ETG/KeB7dGEYvxytrP+0VhGyJ2cUq03ZM9zf1kDKHEBwLaekY
EcX1p3jqGlenEMjfdbwnvtKO3X0vz33mBQECqY72GnwU5OEb3K3PTYT/jA5y
PcD9QdKtf4R4jQgcBkN9zLso6MDDnmWHHyRg1T59jMXpHdqzJFb7MXUF1Ytr
TF69NIwKhE61/CKvI3vKgRdNuP7RPcgVEfAThNj3l5s+5bVjyomFhctn8H51
DBd/w/0h+3uop0g9AdyfHW43OUFBuksdH6+rEcFT5tmcJL7/1CYbCNi7hhLe
3WCwfYI/z1IjMtJvE6k+zRne4ofnoc49++SmBCFRZNM7Bp+vZMZH/2v/KgQP
bDKDHrPj9VrXm2Y8JoBHPs8+5wX8vDyZXurYJEBZA/Pzmtu4HxN5uZ86EkHw
PMt8ozYFMY4cZJK8vIqeKct7e+LPt/5cvfPw2w30fLKGVwr3p5/v5rZvLRSE
FIeSqos/2zE57ZbnTiFCoHblSmC1VAdm97Vk7+IoAba8O66i4EZBdGHXzgUe
JQKb9J6CNHy/XxX43pleX0PB6y9E9uL9KWDw0lPdht+nZ+tilsQOrP6STPEn
cSKIv62Y24X3/yH3cJvXAgketlvc4BvLQKaX1dXjEtbRhClr8H1cvy+r5oGt
iRDkslf4NuH9FKRe0VdVIYJ1nb7JGW8Kkj5p/tGVcQ15NWQQxyLxea3pYk7q
kCAoqdzlXGPqwC76DrAd+CgEf7uFlMRwf70kJcsmvUyAGLVibz08/85veRs3
fm0D+cX3pivFDyPnrjrZxntC0K/A9ZUV97NPBrO6qJ8A0b4rPPGOFDR1yPt3
e8Ma6ucCnrLEYbSx+KosW0QIgtLH3J5u7cCkFswbNgSIwCk42VSE1ydT4uEE
rBtIoaTtox8+n00wYbtjHPD8EhHWx4fXE2jo2JLitIaSdfpjzeOGUSX71/Fw
FiJoasY6BuD++T2zTZgxXgjuN7mb5Ip3YLx7Qra//0UAy4c5F/96UNDpPUGc
nLvWEenXJUl5vF+e3Lp1ubuFYNFow4CE39cbg3/euROJMHB5tWkUzwuZJxy0
76yRQPgMj7oqKR1VUgkmp3Ef7j/qbG1OsESDtt/YyurGkejMj2xiaSeq1Yza
eU9vGu2V0Ypx9OtFhepb84+5zyF339a/v3gGEUfi0OWr3/6ievO2ks++Q0hq
VJ/l754VJOy2L6j9zDBqTBC4lWWxjjrWjt8Kwde3q5R9KdCGDsIMp8zpLIfR
8V0FV5Xm6GHV0sfX/8kQ8h8veXH7P0awzdTbpXV+EO04MHAyeRczTP/pYDt5
uA9Na3WL393JBycHY88GdldhGUYNooFLfKCeWEipNmvCxKXrOlcp/NC8ozK8
+TcF27e7P1/huQBkb8s9vl+5Det3kb6SZS8In6o2CR2R7djhy5fHEzWF4FPx
hYOPcT9mMTEXj2MRhilLzoFdbe3Yd13Oru1DwsBpo7/UE9eG7fN+wx3xWQSe
uWyKWEa0YpP+Q8uM90VByCRZRo6ZjE1q2jx4uEsKruXS88g0lKOXpr3WDktS
0IgVwDXzWsSr4rz0niwNsXTVSZ7yTWh+Tj/N7ygBqMLMe9/uJaOJvtIny0UE
CL21LtWiieenUZXSs9uJwPw0jvEGfp9Xusb1Kx8RgX3t1dc8Zlyv9iip2C0S
QfVz5Fe51y2oWXkptddaBjQf2S5Q1BqR24OTa0ZRJIDp91VtlQXoUZ6a6rlv
M2iP3M6Aabd+RNpqt7lJWkCJhXwMlG+DiD/yFpILXEJq9pdVkzeGUEnho3v1
latISltWoStkGAn2L2mYsW8iz4PnAmzw+U3GrDXTRZ4eosIso+VYhtEWI0UX
niIGuFdfl3+AbQjRB7+ytHXgByO52uv2TmQs3tykPEFdAGz0e/fIyFGxZ8r7
yuvoBIH77Ysh76U2LBtLDisjC8LZhMwUAq7fal/iP3q/EIKOrjtOEiIdmONC
xvz3a8Kwr95gJsQM19ucPW3eJiJwaNbCuDSTii1Hr4ak20vDp+PSXg/G61G1
2tOfveIEWLH61jEz04ycUWmCtj8BVNr5E8+0ktGJEFmJwmkC2L+yreXB9Zh/
i7OE7xkiVBWnbu09RUGKu9QziWVEELZ1CK96QEZ3WI45kRRl4JNUYgjwNqOE
V5edA+pIMMhuX6z38yMKj8myMPmwiBLof/DkVAyhP83O2ufXVpBUEsvz87h/
eWgGfNvcuYF4Q3J1FHD9UGT/Q1kqpwNMet3kPu5/Ljs5ipebBaDG5oNaW3wb
Vv3k3L3PCYLwm60q7kBTO3ZA0K+J/YoQHPygwD2D3+9PBF9WdEgYHi5ZD2Ql
4PnyKSNhxJmA+23rg/2PyOh53uzpb+0E8H3WIhhhi8+ftxouX0ZEGJ7+/XwI
1+9of97l2TQi7Ekc38pcT0axj/TkGWyX0V0dXSdnPB+Ep74rUgtbQ3qR6tcO
4H5c4OuakDq8ibKjf/EdvDmMWhTsap/uFoTOuv3SXMZ4PpoYeNbAIgRhJXbL
Efh+7bLLjhmjCgHfcg9lH56vZMbuCL1Mxufn6mqvX9wUxGxn0R/PSYSvmm2X
zHG9JL9kqou8SoRUw757D3ZT0K6821KpYyQweF1sKND5DgV8Oy2rFL+C9lt9
R8+dh1HSL5M3FhXraGGQKYAN1xczX+xGjq8gmPs56i59aMeK4WZPq7kQ7Psw
+WQC11udOssbLrUE2DWQNbsPn8eXVNZjR3cTgUV+KXAV3//t7xOfbcqvoS4i
eTwEn5e+q+y+tHp9E33vLMau++PnvR3FVP8SBH/1Mb1qjg4sJ/zVq+wiIXhX
/N3VkLMD042WOjMbRQDdA6wG+TNklHnj65r8Bu7/rSaOGvj99Tyzb5bVgQhN
l5urF3Xx/ai8dT7m/CoSCR5mlX4wjLTDMPY3zzaQ6Nu44Cncjw+83XxYnC8I
+Z8j5Z+PtWMFP8IwCBICxt/iIW+lO7DF5BCNIyMEUPI4otd5Cc/rFU91/xoT
Ybu8srmSHQX9ffq1y2VmDR12GlEZxf2Hg+5+KpkoBH7Zf/bdJ3Rg545OYWxi
eP+vvU11wPt/R/O/5Zw5EgxTl4Kvmb9Bajq7+BjC1tHiZtSrGLy/Gx2edupH
hMCfxejwG7yfteyxSinKRJBWqBvkwv3UU+0x99jfVVTqfitvNgL30/orfLr9
gkA8piYwxdCBzcsmKQpkC4Gjer5AAl8HtkE3w3l1kQC3xc3sAnA/7x59efWU
4wbK88eedOJ+vHQ3SD/NRwhcWwPlP+N+bKSIGUb1EiD2irCikAMFaUvnHzHF
1pDDytshU/w+HV94TzgmKAQlUtvE/PB5NqdTpuU4PxFWengHSvD62J64aGUu
r6Ms8dMn/9eP22/vnnK3w9fz7urH03g93QqpSuJn11Bixynyq9hhdGYy+Pcg
ExE2V4boFXA/vnHi8f7eJ0JgXRpQ0SDRgc8LZxTpJwiQYS5wrf0KBb0VrHby
J62j6++EPBfx/FPJcVz+5E4h+PZKqyiQ1IFxVnz5UCpNBFZrKrsR/ryX95mc
ilZI8EF+T2P+43R8ziFWdV5dR7zEc7df/e/3MTLTaePaQtByQuPbfnx9u7yH
F+4qEEEMad+zwOcz+epHAkLzBBDPSno0cp2CxOuYH52+LgQaL2Nu/8Hf7+fQ
Lgbt12uoYXrE1BzP/73Pijvmt+B6Nn7G9yXej1Z0duF+/zpKN5k2DsbX+2xh
JY5gLQTORWyvvuDv9+AjacGfngh8a0vPj+D54XinFsGbYx2tMslM38W/35HZ
+XuUvBBEknjSZPD92RtkXmAvSQRKhajUNF7fpbjDNsoZ66jR/MvKBbye3pAF
qYemQuAZp3xzFH9+MH9wzTshIryJ2ox+i69H86d3WLvgBroSeumVGL4/Vufo
+IqdhaCo41FLCe7PO+WmxzTZ8HwVTf+0E38+k5nR+yjNdRTVqVtwHH8+gXf/
JcF9QpA+Ou//HtfH4XXiG0kSEeSDRj2v4evPk6neeniDBLpVLF2pOa/RP36n
YP+tyyaei5r/+J2H1y1+Nb25RuN3sptO9qVIx9D4HRt98xG6ydc0fkfyNTer
RGAujd95osC94K1YQuN3zvsdJR0tqqTxOz2aWzhqzBpo/M5LUddVyU0yjd9x
HLtvacPTRuN36gy2Ghvt7KTxO+vPj//MrftG43c6giz/OznVQ+N3fN+V24zn
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
kJi+MEM2IqNSHe/pqdV8FPVD8IngrmMo5fATb5Y7rODJdWT/Mn7+e/0Tn/Ls
YIfXuiJbpfD70ZXumWDiLQ71c88IrBtULGXGRNVGTwKmbtU9GJ2jYpfCg6W/
lpIg76lu2VlNMjr1aZ3DyIINdgU+5r6B612J7J+tL7vx+cwrwbUM7/c/HmXs
zkCJAt7PfzzK29Id9KZF1MP6Tg0jrct1SO9G1w1vxutI7obRYfkn3SjjiPeb
tPIYFM8k2VufOoJCqVbBjrbpNH4lSN/iFak9l8aXjDzqOxLV+43Gl0T+tqDr
3+yh8SWKLHVFiSV96FxYc8T7ehYouzctCJX9SFuot/vvPTYQ9Fs2zMDXb3xN
/V6iIgdUcATFyXzuR6dsj5mf+sIJUaKE/QrP+tBzjsUfP1y54WeNWNTbNz3o
u87Z7Ah6HjDTvi92XOkb+seTuNx8taFHV0PjScxzbbb9PtFE40lK5OSqfZgo
mOyTPUZbrMWAf2l08GZ7K2ZrliQdt10cxKoVO5WbqdgA5bNT3W9xYOG/tWbE
04bR7U7gHq/E8/saGBIi8f05Y9UUHS4Jnt9sTKzx/D98bmRCwXkrDFc25zJ5
k7F//MiSpXPVokI5jR/Z+rrorM7uGoTpzP9QLZcBG6Gwvbx7G5DFBf+GqR0k
iC27mPnUspnGlzBaCDNtcpDR29fxFb8+FqGpFnXzVmSBWuO1Gbc1UtHgjT93
FI4GoV53pb1T3oPItM5kzv5JCo0XaZsrnBFa60bPyOekmM8zQZm3egnjfC/i
L/NI0qNjATWWxht7zPsRP/N+0lwqPhMN1N0r4xpAlYJTHzXN2UGm+uaHUeYB
JHYxJcNjlgNC7lr1zqB+9JeJLZXvCRc8mvqx0VnUi1q8M2/WSolCpgLFMpra
gtWTnossTInCzg769McsrZjM0e5MuzIx6Ciw6al3pmK6LWKvJoPFIeWh0eJP
fP5UeXt2PdpSAt47vkU1P6nYdYZxk9sKkmB3+PN/bbxU7L4/RSp+VRIs2vzv
qftTsOwG87vKkTJwY3jR5aRZHd4foS87lmRgMqtqKnymEZ0Cn2um50lAlb2n
+timhcaTtFvXhuzRISPxx20Nv3XeoY+bzG3khf3o4PYnBwLtyagztKqbN+8+
Sj0/+j0ukRmaGA5w1G/pRxpH/Cwp6qzQKn9U8OuffsQU41AtNsEG59xbZMLF
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
xbeAt5fydsrtJ2HkFavfTwqYwOuJ3u/OjbyYwaqm05XE+eHJdlqZ8Uwc686x
P5ocT8cF1o8lV2PEfBWgry5KzDfQp1gtXzAwWyxAPuVpOZf4oLwLZfGp1OGF
yyTscIT/Je3XTODn6r/b4J04pniDX/1GOh2XOCdX/GlDFeCUbWC5M7ZCqU6T
bY6mkbBSndw5IeI89emXDtkuKYFdX4vzXiD+HvoU/aN/ZdYY9VEuyuSy16QS
55Oso84X4n48U3eBZ4pDAstysxm3JN5vxoCd1o2OehCRd0Nr9Kog2MpXGHGR
gxdLXHOzKoOYN0lbbnzSzxPHQnxXZ3tEEd/3//yJ+dRPtaZtFZSC6UvSA34k
7Lh99gkdYr4wZy3PT1gUx45X6ovLEeep0SEWbqeCGsAdIcIj8XgDcOqzLXCd
JmGuw73P44nzNF7uFOVLfQUwP3lmueHlLIXbcmLiUQUJ+1YdYrqH+LxJcRv0
IjdKYBnn17zYQjze2MweV4s6cSyw4UozC3GeQo9yja7jfjG7CHmUEB9xyWF7
A0oT7VsSS584lnBV5r4oMW/wnegn9bSQsO7qvEVhYv2yQszU2MSI/Ukpzvo2
Mb+8MQ2/Mt1TDDitMzP9dGmUx/1nT3AkkbD0HweN3hDrUf9DsaaWlZhfeCtt
9In1u1l3viuLhRfTuyD7ofd/1vc/r3I4MzFDo6+Akmcus+HQV3Hs2IWLpTeJ
eaA+VHj+9RgJk9fQP6VEvL9Zk7Ssr7ueAZmzb+yd2yYp5vx3lWefkLBr4wH9
6cT6qADt31a8Eting4p9BcT7hz7l7NFJg0OFERT7KXd/nX7i+liwMZsjHi+3
YYfdAncpuIANKvnkD1G8Ul+a8q+XwMounHU5TrzeHTvKfs5FPQIsqSWzoWtq
KEJ52JHR3+LY3vGBsDLi8cW2vbJUXiBhazQn9KnE9fGqRC3TooqEfXjwNTWP
ePzpD/TkckEJLHbN92ob4v1An/JFfNMaBY/i/9On8I0/Pt2hRKVAn3L0YI5s
zHc+5FPiVhs+dBzcg3zK+m0577qkDJBPsYnq3f7Y5jLyKV74NpYn+q7Ip9wQ
mW/R6gtEPqUk5+34lwexyKfs2Rlf/wBLRj7FkT+/LrI+C/mUI7dM0tRXFSCf
osh2/nO27lPkUzrPNTJ0ie8p9Cm01Mo7SpmVyKe8LT1DFmLWIJ+inFLIR3v4
FvmUmmnGRRaLZuRT9g0VDa2Lakc+JYJtupX6kop8ygtvc8eqBjryKdzkSPeg
R93IpxSGibC7qfcin/Le7eEN95w+5FOScgJ0jPL/+RT1slUHdU4ykE9xkVyt
W5HAQD6lKHvhnbQlA/kUY6fRwZyCfuRTrKNT+SUd+5BP8dYxfJXT1/PPp7RZ
rAvM6kI+ZcqaduiEAg1An3Lt242TZ/rbAPQpYqEc+9l1GwD0KV9bhemXA3DU
B5Sszp55vLcE9QGFe3xzmQahqA9IxKu7/LDnQ+RTzioN0NfNPkc+JeFKsef2
vhrkUyZksnjWuDYin1I6NZqZztmGfEqAYZel38VO5FMkWiO5VSepyKcc3NhL
ybhFQz5lkX7ib4IfDfmU0g88pvZTVORTDj7TtVgu6MShTyGpRQjPbW7DoU+J
FrRzp6rEIp+it2r45xfqIgX6lKIyiV9cQduQT9HX9DLdkHQY+RTW+bPrqAMX
kE/Jer/5RH35deRTUvPMPB94eSOfsgUb9V6ZD0P9QTI37LjHshJRfxAusNmP
6+991B/EcbmHf2FXLsor8Zf6OsS2+THyJ82XVr2T/NWL/Ill0lQ5/65+5E/4
1ddzsa5lIH/SJ2d/ssSPAWAf0OZoCbt1YQwA+4C0ZP4e8RdkoDwS7pUkIROx
fgDzSFaTX0XuK+0FMI+keFl1UbOtG8A8klcBJj9yneio74dy4Pmz5Zp65E8Y
9fKazcPNyJ9EhCsU1tDbkT8paYx/v2RKRfkjDi+k7nYcouEwf0Tu6dcOixga
DvNHwp0ebmrRpeEwf6SwnLfjgQMV+ZV7hV9YHnN04NCvfA1+yWG8Rx/5Fbtb
pRnPBMco0K+op+gqp09tQX6Fvb7wwEU2gPyKjaoMw5jNEPkVPU2BLma1LfIr
wg6fiz7LeSC/0p4ldEy7OgT1B921olg6xsSj/iAW1wsKFPY01B80kvnhwOSN
h//yTX4w5A1XFyGfIiBy5cGu1F7kU/gVn/sYzvYhn2LOeSkymNmPfMoPl/Ta
MjsGgH1AXSI6I8w4BoB9QAZ7co9tIu4vYH7JjlQ+kYc2/QDml2yv5mlV3tQH
YH7J/XXiIbSzPQDml1hvNDt2n6sL9f38+JBrp3y6DvkUbg7fGJHSJuRTxnGT
2BOLbcinvLePTfBcT0V5JYyNk7dcRGg4zCt5uPHpRHcYDYd5Jbdq9fyVr9Jw
mFey67qx7bZSKvItgUJ89k8/dODQt8xwKK0t9C2nQN8yZ/xT1LyODfkW/2cB
NseP70C+Zd5Y//uH5qPItzxkvy/0y8wC+ZbOu9NXLWWdUL+QwOC5SntZf9Qv
NKvr7bPWOQr1C/Wlv74T/e4O8ivJLyqzlg36kF/JJelEeDr0A9gXtGf64vAj
JQaAfUG/+3xv8EczAOwLih108ZP1YADYF5SfJWZuOtYPYF+QVZawZH9rH+r/
cVcxvODxpwWH/T+ShiupyRkdOOz/MfPgy0/Oo+Kw/2fNvvaLqpf+5Zuo3DWP
142k4TDfBBt+ddRHnIbDfJOCQ3atbDL/PIzBVvZ3ESLtOPQw15e48lr2kJCH
4RFbRar4OECBHuZm1Vm3pF+CyMNUqSxW9T7TQB6muDVyrsXtNPIwMrE+OG/A
FeRhHMaXSPeV3JCHWRpx3N98MBj1C1nwSG/nSIxD/UIvl7NvU9JTUL/QVl+f
Ud272Sg/ZaTzxoPevwXIuyj95q62vdqLvIvZe6psaEsf8i4l48YZknX/vMvp
Nl4BW1MGgH1Bc59a4nKJ8x32BfEcI4sVn2KgfJRcOcXPxeHE5/dfPoqgqUbX
usN9AOajrEvttKy42wNgPorOfWn23nNdqA+oqm07a/OdWuRdcmYU9zttakLe
RUtodYVRQBvyLn0ZYbNSlZ0oD0X20aKlw2oaDvNQ/iQFanYG0nCYh9KYaXc8
+yYNh3kozHunArs6qcjL7K9YaNuj24lDL3Phfd9mwcZsCvQyiw4PWgRmVyjQ
y5yMjQmJ3aOAvMxAVsP+ttAjyMsM24XhuXJmyMtsG84W8a5wQP1D77fhRly9
vqh/KE98xlMyPwL1D10tjL0JXichD3MrYPir6rY+5GE0fSd3fTfoB7BPiF/R
ZoxflAFgn1CCZl+sUSgDwD6hHL2M9b/9id//1ydk2BWgHrDSD2CfUEz93peS
i32oH+h30HbpAocWHPYDPfjlkLRNswOH/UALIyvla4OpOOwH6tK5IiR59l9+
iu0vp7lP0TQc5qfYa8mKDKvScJifwrg/INp97J+vyU30eGSY0I5DXzOwlMtY
DHRBvuaZAHUHe9oXCvQ18UnDZq7OZORryAM9Sx8+HQCKOul2/WrT4IKuYef7
znNg8NWbycYrc0Byxm8wYZs96hvKM3f0857vB7BvyOrnmYdkNwaAfUMXx75J
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
y66UJPr//e//H4Rngnw=
     "], {{
       {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.2], EdgeForm[None], 
        GraphicsGroupBox[PolygonBox[CompressedData["
1:eJwV0jtIlXEYwOEvlwQ1hOx4KfOoaCAZCELQkJe8NDt693TZvIxqKtSSk4Km
lUIQBIJQmi2VXbRGdTIrh8pupqCDtZRm9HzDw/t73z8H5XCyY+01bXFBEBzg
CdvxQbBFij5ChMceS/igh2jgLKnhZ9xL+aiHaaSEZbdafuv7dJLGU7cyPukb
NFHKG7c6/ugHdJHOrFs5a3qEZtbtrSQwZy9jRdezq6foZsfeSYQFewbP9Dk+
61F29VWyaLH/MNtIZN5+0JczoE+G/4f9rdnAnj7sbUxP60Bf13lcsf40u0gl
w9tdc9E9UQ/rIrPIzDUnzTPmUe/PdQUn7F/syeZNe3E47Xv6GqfsUTPTvGee
NmPeN3Q7Bfak8O+bd8xX3uL1oC4kqifC78L9ndnIX53iPq4fhr8J3a/z6bH/
MrtJY8l+jBe6kq/6FhfYtHdwiNf2Ct7rJvb1DL1k8tKtim/6NhepZNWtmX/6
EX0cZ86tmu96jEtUkcW8+3nW9TiXqSZKNjnk8h/qEVqM
          "]]]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.2], EdgeForm[None], 
        GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJwt0slLVWEYB+BTadehMjWFwIQyWiSCcJ2H/ggth3LVrhKjQV3mpnl2IbgQ
BLFyaLKyTdPSoqzUJmuVtgvTZjfa80GLh9/vfc/5LvfeczbvPVjTsjKKohU8
+Z9zSVH0lUw9g3TWk0Y1TVzmEzscuM86vYo9XOJjuNd+lLV6O8P8odFugkp9
NxeZDuft7rFGb2OI3zTYvaZCf0yK3swXGs0X+ECl+S6p+jOy9HbmaTVvlSdY
ZtD8i3r9FeV6vjzPan/II3OPnq0nywPM0mBfYten58hcWSA75GI473rc3KWn
yffmbbLCfIcUc7l5QN8iC2Wh7AzfWz51vVffqG+Q+bJNfuOoa/0y1y5PHmeJ
AftumWH/U6/TX1Kmb5fnSHTtoTlJ388M9eZN8hh/w33md+H76SMk62Nkhv+P
OY6Yr/GDXeZxSvUHxPR9fKbOfJa3lJlv45WKDnOV7+y0e0FJ+CzO8IZSu1vE
9ENcYYFau+cUh7OcZio8D7ub4bnpReE+TjFJsf2N8Pv1BFYR3vc4NZxkIpxz
z3X+ATNqWbo=
           "]], PolygonBox[CompressedData["
1:eJwl0klL1GEABvB/40IFZQZCZRATmqOm1kQQ1AfIPf0GWbmWtt3ay4LqUlDQ
wTY3hDqWttzMJQ2srmXbKXPJDi0Xo34vHn48z/O+ozP/YeJ1bbWtsSiKljDG
3NIomiep73Lx0EWu3CZvslJ/6269fpo/XLKfk6438oUa+zA9/KDW2Su26lso
YQ9tdDNPjftxivWLPCPNbuAz1XYrXXwPf+9sjCK9naek2vV8osoeZbV+nDkO
2Z3hOam2X7JZf0O2forfXLDz5VVSPfMTO0U/wEcqwzPI6yx3P2Jn6seY5aC9
Ubbzl/v2LZnptbN6QlbZoxTaO+0Heo5MyqS8IVfI1+63y047W64Ln1melL84
736H3atvkAlZIq/IFDngvkPP0mMyX+6XH6hw1yfjzorlNZbpw87v6mv0VfIo
M7Q4j4fvhwXu2TNU6iMU6BOs1U/wk3N2nrxMzP/rD783fR+TlNtDZOhHmKY5
vD/TVNjD4XPrZ3kcLf5g63hPmdnEHb5R7myIhH6GR/xjr7N3lOqN3GaKMmcv
yNN30xC+L75S6nyQTXouOfwHCiFgfQ==
           "]]}]}, 
       {RGBColor[0.880722, 0.611041, 0.142051], Opacity[0.2], EdgeForm[None], 
        GraphicsGroupBox[PolygonBox[CompressedData["
1:eJwV0E0s1nEAB/CfstINIV2yttpEObDZpK1DdbC60BZCRXGpUJ1RobhTi/Jy
0SUHntLWOmhzMNGLO5X3zt56WS+f/+Gz7/f7+/2fZ//nOVjTUFK/I4QQR4zv
CSGsUeqwjHLmdoZwnUSm7Cc0cZF5ZzdI4r3dQzObdiuZLNgjVPDFvkky03Yv
LWzZbRxh0R6lkq92PXuZsZ+yKz6ELruAdfsu23o7WSzZMRI912ef4o9dxTe9
gRQ+2OmeGdLP8szebXfrx8nVx+WG80P6qF7KPfuHfEA2Oe7eymXnB/QXepEs
lifklDwvX7pPkv32GXla5ssJWSz/us+UY/Y5WSFPyhl5QV5yv6A3Rr/JTpVH
5Rv50d1+/Xn02ej99UnZ5zxBf6QXkqe/k5vOD+sxvYz79k/5MPpOVuwM98N6
Ca/sZHsgenf+2ZdZ1G+Rxie7nz2eexz9drbsVn7pHRxj1R7jCkv2bfbx2R6g
jd92Z/Tfsma/pppl+w7pzNqDtFPDVa5RSx3/AcsrX4U=
          "]]]}, 
       {RGBColor[0.880722, 0.611041, 0.142051], Opacity[0.2], EdgeForm[None], 
        GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJwVzzsvQ2EAx+G3GERHFkWii8RURGKqmEgkXUoiEpNF3Re3T+BuZ2xdYjJJ
3GKRmCQWt2+A09oZ3J4zPPm9//ecJj3p8fn8XFUIIUGBqDaECvHlSE0I99Uh
9OmY5vRM2zWheb3VHh3Qfi1pg175/bDe2Vkd0kE90Vb98PzaOePcpTv8sel+
VE9p8+zLvnHudu7VPZLOR+5zzsek7Be7xXmFMrPxR8X/iSL13rl0V6HT3uaX
DfuTrPMudd47tJ9ptpeJmLEvKNNhb/HDun3AE032Eu9M2+dEZOLv4ps1e59H
UvYib0zZq5R4oNHdAq9M2gUm+Acj3zhn
           "]], PolygonBox[CompressedData["
1:eJwV00dsT3EAB/DXRY22JxzMtmhCJIQaEao1W6MUPUjs7aD2rHk1WmrFOCFG
0TpIiK1mIrHpsm6CluJiHHx+h8//+/2+95L/y/u/f+qcooKlsVEUxdDMxxDj
c2IUfaJQn8oUJlPAJIo5xCNS4qJoCfVMtDdykIckO7aYOvLtSj6SYW/nFxvs
AzwgyV5ELRPsCj7Q3d7GT9bbPxiol5EQH0X77fu0thdSw3j7Hzn6MVJcd8Ge
qJfT0X5vd9O38oN1dqG8SLrzTfZNvY8+QO4lXt8X7lcfpOfJMfKkbCfvOZcv
r9g9ZSuZIxfIasaFZ2o/1ofKaXKsvCQz5N9wj7LKzpTZcoQ8KpPl+fDc9cF6
vjxLB/2d41f1XnpXuYUm1obvk5WkOffd7q/vIc4us3P1E7S179ot9fm8Cfdm
/2GYfoQk15yz35Jub+Y7a+xvZOqlxLpur11FC3ser8mzy6knzd7EN1bbe7hD
oj2XV+TaZ6kj1S6mkVV2Kbdpbs/hZfgt7NGMYiQjGB7eA1ZSwi2auXY2L8i2
V7A7/N4kODaL5wyzz1BLF3sjDSy3d3GDeHsmz8iyT1ND5/B+85VldiP99BJi
PJ+d9nXi7Bk8De+E/Zss/TCtXXfKnqCfob1dbXcK/wW+UBT+o7KCVOcbwn3p
vfW+cjeRviP8T/SB+hg5Wh6XbeS18B3yst1DxobnIqfLJ/wHPv6Asw==
           "]]}]}, 
       {RGBColor[0.560181, 0.691569, 0.194885], Opacity[0.2], EdgeForm[None], 
        GraphicsGroupBox[PolygonBox[CompressedData["
1:eJwV0LdPVmEAhfFXpHxYwMQyqYjiLFaai7JoxMZgQkRMiC0xgokY/UTsyo4F
pKigLqDiSrcyoYkC6qCDiSVRsAB/AL87PHnOOe+9N/fezPLK4oqEEMIMDOBH
LITvOJ0YQhxnkJIcQl1SCGvxW+9CM6oRc3bdvg5jejdakGFvt23DTLyznUWq
/Ya+HuN6D+5gmb3DVoREvLfVYJb9pr4Bf/RerLJ163sxH3dtmbZH8nYkYdiW
a3spH8BinLPNtt2Sc/BX36QPycfQp2frPXIpFuCebbntsbwDydiiD3MVRpzn
6a/kg9gv/+Il2C1/5hockSf5vOvnyPXyUc7lPfyV/znbLL+RT3AFl/N49Azu
d76ae/XjvC96T/7J1bww+n7+xKc4zod5gi9wq/tX8JPoe3knl/A3TsFWeYRP
YtS1+fpr+RCWolj/Ev3H6HnO5+oNch7+64X6W7kSA/oavU8uwyK02bJsnfIu
xPDBVmAbjN4VGbhoS7PdlvMxoT/Dfay0P43+LVLx0XYJ6fZGvQCT+nM8wGXM
c9Zk34gp/QUe4gqu4hpqMQ2M2GHt
          "]]]}, 
       {RGBColor[0.560181, 0.691569, 0.194885], Opacity[0.2], EdgeForm[None], 
        GraphicsGroupBox[{
          PolygonBox[{{2278, 2279, 1161, 1665, 1524, 1641, 1407, 1502, 1619, 
           1312, 1384, 1479, 1596, 1240, 1290, 1362, 1457, 1574, 1190, 1219, 
           1269, 1341, 1436, 1553, 1160}}], PolygonBox[CompressedData["
1:eJwV1GVsVmcYBuDTIiGB4c4gwd1h/MJdAmQwKA7FobQUKRrcobgv6HDbcPiD
BXeWsAVnONuC/MD1en9cvZ/7Oe+XfHJOC8cn/ZwYG0VRDO39iUsbRY8zRNEI
mcJwhjGUIfzKIf6lSrooWkD69FGUrK/kIM+pbD+fdK4N1q8SqzdjK4XsV9gd
4BmV7OaR1j5Jv0KM3pQtFLRfbpfd3JHDVLDbb/eUivpc0tgl6gXMPTlBDbvL
dpG5CZv50W6ZXTZzBw5R3m6fXYL5AnX0J3oFcyqx+iB9rPkWrfX88jldzfEy
WR6XP8lLzo6TL/VecqgcJv+UjeU310fJh3qcbCwT5CZZQC51fbx8rfeRI2WK
/Fu2kFnlEzqZ42SSPCjLyb1e+7+5h3mgPE9t82P7++ZfzOXlHGLMCfZjzDdp
pecLr+UY1fWL4fc3X6OR/lVvZN5Ifn2JnsXcngOUtdtj94hy+myi8F70C3yh
od0G8tkv1nfzkLJ2s/jGAP08n2mg/0Ze5xfpf/CAMnYz+Up/fSG/8w+l7Wbw
hX56X/rQm170JJ4edGcBu8J3RCmvmc5nuunz2ck9StpN41P47fVzfKK+vp48
3uM8fQd3KWE3lY900c/ykXr6OnI7P1ffzh2K203hA531M3ygrr6WXM6n6pnN
7dhPGbttdrcppk/mfbg/9NO8p46+hpzOztF/CPcC+yhtt9XuFkX1SbwLz5ue
V3bnKNWcO2WXbL5KQ/2dXtu8mhz6bH2E+S+a65lkW/ZSSt/i+gDzOWrpN/Ui
5om8Dc+kPlreoKXreeSz8N2Zu8kjVDWfdO5FeNbD/xl5hQbmt+HeCPejuZZc
RXbzLPtX5t7mFDlcXpfNZEY5Ojwj4TPLNjIx3MeypNwcnn35X/guZH85RJ6V
NeUN10fKe+GzysLh/pUT5Bu+A2nWtOc=
           "]]}]}, 
       {RGBColor[0.922526, 0.385626, 0.209179], Opacity[0.2], EdgeForm[None], 
        GraphicsGroupBox[PolygonBox[CompressedData["
1:eJwV0jdMVWEYBuBf2sVJYYIJrhV0YGAwgIWYOFkGB0siKuiMolIsuwK2gE6g
gyYKooKaYGIwAY2J0QuoMSR2RBcVsWDdeP7hyfd+77l/Ts65J1mzZ2NtWghh
FgPcygrhY3YIH+iSu7nCNvuLRAh7KeST7hE9VLn2UldHks+6x9Trf9qbKSON
q/rt+lfyPubxRZeiQT9tb6GcdK7pd+hfy/uZz6TuqC6DDvtahnWN9l9yKxVk
cF2/U/9GPsACvuqO6TLptK9jRNdk/y0fZzkX7AX0y5m0yXO4JG+KzyIXMyj3
Ol8tv5XruSmXsFDuMPPolQfNFUz5fbOZxSjnXLtjLovPynp7VzzPGAP2B+Zq
xuMZ5w+af/Qp84TZb5bG/yLew37RLOQ5t+33zcp4T7ndnMtl+a5Zzub4vs0l
DMl97lEjv5MbWESnPZ8++ZvrLXKC8/YNPNEdsv+VT7KSBGd0OfGbkrdww+92
xWeRG1nMd91TDuv/2U+xiuz4PvW79e/lJor4oXvGEf1/+2kqmc1ZXS7d8tb4
HchLuSc/NNcwwQwmfWqU
          "]]]}, 
       {RGBColor[0.922526, 0.385626, 0.209179], Opacity[0.2], EdgeForm[None], 
        GraphicsGroupBox[PolygonBox[CompressedData["
1:eJwV1HmUjmUYB+BvdE7J1mKrLB3ltCKEdOrUqWStMGihVbuKtn/aCyEVxjIj
bbbRol0qhBYM7cUw0qaxte+btev3xzX3ff/e75vzve/7PE+LwcOKh9YoFApF
PO3P8L0LheqahcJT6hzKmc0sZrKKbRy6T6EwjCoG+fwM2Uq20lw2lHUMdG26
rIItNJPdwFoucO1JWZG+M2P4jVvlK+SbaWq+nkrOlz8hK+hPYDS/cot8ubyn
fhp7mUexSdbEfB1rOE/2uGyAvpx65hL2yOabm+c+6KQfxS/cbF7m+iJ9yzwX
eug7qQt4RP+RWoP7qfbZr9STWcoLrn+mNmYah5jXq214mSHm99TV6rnqY76/
Ue1CRf5HnqN6FHPpbz5RfZPZ+k/Uukxgt++eqr7Dq641y7Ono769Oj+/Uf8z
N+nf9fmF+sP1c+iun0qRfiTfuv68uVHuk4P11+Z+GGB+1PV++lnUMY9nl6yD
eSQ/cWN+j6ybvoyCeQQbZQeZr+FT+uf5yHZyvHkEP2aNyd+WfUNj89W5Z/rl
N8l20N48nB+y7uRvyb6mkfkqPqZYPlVWRilTmMwkJlLCBMYzjqV5jzT03Svz
junrfzwsW8KXNJBdwYf0ce0h2WK+oL7scj6gt2sPyrbTznwf32cf5D3KNnCg
eTDvc458rOw/2prv5bvsA/ki2eccYL4sa4ez5Q/I/uU48z1sy7qXL5StZ3/z
paziLPkY2T+0Md/NVoZkTcu66kvZk+cqq5Ltp7+ElfSSjZb9TWvzXWzJ2pC/
ITtTP4XduVfZOlk9/cVU0DP7U1asn0lt8zj+krUy38nmrA3Z67Iu+snsyrOQ
rZXV1V/ECnpkXcv66mdQK++JP2XzzE1zznCs/g42ZR2ZX3P9DP0kdua5ySpl
z+kbZr1QR38hy+mefZH3rz9S/yx99NPZN++fP1x/xdwkZxXH6NtlP3K7vjpr
MnvR5xboD9OXc7q+Y54fE/U78l70a3xurr6Bvoza+tbqSwzSL6Nb9lTuJecm
i2VHqM/QW9856ybPQF8za5Hfff6U7K2cQ/LVOZtyPnK0ua06j9uyJnMWZB/k
PrK31NNyLub3yivVFjmPkps3qB3y7ijJ/lC3Z53knMveUU9iSZ5h9r9an1Jq
mavUVrzIwKzZnFVqV/V/6izwfQ==
          
          "]]]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}}, {{}, {}, 
       TagBox[
        {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
         Opacity[1.], LineBox[CompressedData["
1:eJwd1WWgFWUUBdBHSKeUdJd0I43SqISIgJR0SUspIaKkNEh3SKiggEp3d5d0
d4Ok6/PHYu9z5j2YO3FJ36RDzfaRIiIiSkWOiAj5iz8KclAfSE0K4HBEFKLy
Fr/6mUIc0gfxCQWJxm/2hTmsD6YWhdht9wn39Xl0IjpL7IpwRB/CpxRmj10t
Hujz6UwMltoV5ag+lNpcMLcmOqvNRdirf8pD/We6cMf8FYnYbo7J7/p7HNOH
8UzvS2o+M1+UbYjBmvD5XYxh+rvhPMz7ZG0e6W87NlFfoL+W35ORNPZzZVf7
u7IbOewSy+RyhtzhWGx9tJ5X5pUZ5IJwfjKW43/oxchiPm6OL8ebC8gfzf/q
/chlTiNTydnhfsg6jl/S2xKTpHZT5dpw38Lvh3MK/5Z5f/jsPNYX8kb/gUzh
+pnvye4kYWc4b5bpxTmhD6cul83tiMU6czEO6HV4oi+iG3FYbleCk/oI6lGc
g3Z1eaovpjtxWWFXklP6SD6nBPH4074Up/VR1KdkuF4kIGG4VyTilocqsUxC
Uv7ye6X5Rx9Ng/B+kIy/7ctwRh9DQ0pzyK4ez8I7RA/eYaVdWc7qY2lEGQ7b
fc6/4V2iJ8lZZfc+5/RxNOaK+Utis95cliN6fZ6H941e3Df3CPeVXeYUrNY/
4Lw+nuf6t6TlC/NVGb4A4rAhvI+eg+F6znAe5qOyAS/CtXJskr5ED18IA/XM
fG18IHuSjBSOzZS7w33Vx+j5ZL7wLsiF4RmWKR1fo5cjq/lCuDfyJ3PBkOYX
en9ym9OFd1LOCd8Xsonj1/QO4V00xw3/vpwmN4bvCn1EeBdIp88P18L+mGzI
Sz2x/WR9qR5JHxTeLb4xP5S9eIc95lSs1ctzUZ9AU66bOxKPTeZyHNcb8Sp8
v9Cb1Kyzq8AlfSLNKM8Ju8a8Du84fUjDeruKXNYn0ZwKpGWDfSWu6JNpQUXS
kZ4MZOS25zuTzEwWNvqdylzVp9CSSmRlk30VrulTaUVlTobnhTf6MvqSjc12
VbmuT6M1VThl1yRSxP//qSwX/cjOFvOH3NCn04Yb5k7EZ7O5Kqf1pkRiRXjc
3JvB4TkJz6/5UXjuSM5e87ts1T/ipj6Dl/p3pKet+absTIJwT/190+UW+5j6
yPCMhZ/Vfw7naP+PbEZ2u8gyiZwi/3Qsij5EzyOzhfdJzpNFZX/HH4dnKLxH
5hQypZwlC8l9jseVY835ZX6ZSS6SxWUOx7fpH5PNfMucUE4wz9RfyQFkoJ35
luxCQraaY/nZUeHcwvUwn5HNicJf5qiODw2fK1wf8xPZO5wj+8052a5X47Y+
iy/Dc2TuyttsM3/MWb0FUfnbPIBc7DBX544+m/ZU45xdS95ipfl7crPTXIO7
+hw6UJ085CUfuxyvyT19Lh2pwXm7VkRjlfkHnup9SMUBczyfeZxegMz6Ylki
XHvH/gNm6AuM
          "]]},
        Annotation[#, "Charting`Private`Tag$98722#1"]& ], 
       TagBox[
        {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], 
         Opacity[1.], LineBox[CompressedData["
1:eJwV1GW4VFUYBtChG6S7UywQFItGurulW0IFpFFSQbq7u5FUQkC6u0uREKWR
xrV/rOf93r333Dkz95zJ3KRD1fZRIpFI+qiRSEEORYtEGlA0eiQSVeaW62VF
+av95HK2XkqWlh/JnXKIvYh5mDkfecyb5T/WM5uXm6vTQf9bdiMDp/W09heG
92C+Hl+fZC7MU70Qh80NicYmfShRnBuu5+dfvSO3zd3JyBl9AYU5on9BdDbr
P9GJf/QeZOKsvpAiHNUbEYMt+jC+oijHrDUmJlv14XxNMYpTgs8pSSlKc9zZ
JsTiN30E3/Cv3pPMnNMXUYYTelNis00fSWfu6L3Iwnl9MWU5qTcjDtv1UUT1
/YzQP+CO3oW75t5k5YK+hATOTdaL8Ewvxylzc+KyQ0/hzBxzGUbr0fSR5g+5
q2fRV5hr0FW/J/uQjXfs/SIvWk9nXmSuxKfmPXKp9YTmKeYSsmi4ZrldVpbP
7eeUa/Rysq4sJPeH95Pl7Z82t6CYHk++JTeE95G/208p5+qlZVn5sdwlx9iL
bh5lLkBe8xZ5z3pW80pzTb7V78u+ZOeSnt7+4nCNLNMT6VPDNfBCr8AZc0vi
s1MfSwznRodnh/t6Nx6YvyMHl/XlVOSs3ooE7NLH0Z2H+vfk5Iq+gkqc01uT
kN36eHpQmfPW2pCIPfoEelKFqlSjOjWoyY3YkUgtWZs6XPC6trzBXn0ivajL
RWvtSMw+fRK9eaT3IxdX9ZXU45L+JUnYr0+mD4/1/rzJH/oq6nNZb09SDuhT
iOl7HBP+lzzQ+/KfeQC5+VNfzRvOTdOL81JvwBVzB5JxUE/lzLxwfzFVj6WP
NX/C++at8qH1bOZV5lrh/6U/kQPD/ca74TdSXrOewbwkPC+yivxM7pXV5M/2
E8vp+ueyRHiO5A5ZRb6yn0uu1cvLerKwPBDuRdnQ/lVzx/CZ9OTybblRHrKX
2jw/vDZcv3m3nGY9tnlceO7IZ/5NPrKe3bzaXDvcU/pTOSj8Tf7SM9pfaq7K
Gj2JPiNcO6/1L/jD3IkUHNanE8e58eGz81jvxzPz4PCbwHV9LY34U/+KlBzR
Z9Cf5/oP4bvlhr6OxlzTvyYVR/WZDKAJTWlGc1pw033cUraiNX95zTek5pg+
i4G04bq1zqThuD6bQbzQf+Q9burraRueEb0LaTmhz2EwL/Uh5OGWvoF24Vr0
rqTjpD6XuL6nCXpB/tN/4JV5KHn5W99IUudm6iWJhOfH2i35Lek5padxZoG5
AvP0ePpEcyHym7fJJ9ZzhPvQXCd8Lv21/Cnc6+Ez2tskb1vPZF5mLiurhWuU
+2T18JtuP5mcFa5JlpIFwu9tuFdklPAcy3XhemR9WUQeDM+PbO/1/wOl1RB3

          "]]},
        Annotation[#, "Charting`Private`Tag$98722#2"]& ], 
       TagBox[
        {RGBColor[0.560181, 0.691569, 0.194885], AbsoluteThickness[1.6], 
         Opacity[1.], LineBox[CompressedData["
1:eJwV1WW4VFUYhuGhQzoFpLtDEKQbRQUFRZQGaSWlQWlFuiQVpKS7Q7oEKSkB
6ZTuBu/147me733X2mdmz6w9J2PjtjXaRIlEInmiRiK1o0ciD2NEIr3RKmYk
kpE/5TPclf+xXop3yR24JTfk69yTf7eenZfKbbgmf8mXuDu/wVX5CHfiztyU
7/BPrk1i/sVcGp+bz/MjfUXzfnM7NDHf4m36t81/mBugnvkqp0S18F7Da+IL
+x5xH2TCCbm09d3hHjFbziEvC/eKePhAPspdMNh6UvlXcxk8livJB8ztsV0u
LG8MnwXeDPese8x9kRkn5TnIad9y+TPExxBdMt0Uc1k8kXegDp7I/ZAFp+S5
yGXvCrkWEmCoLrluqrkcnso7URdP5f7Iin/leRiGFPb/piuPZ/Iu1MMzeQCy
4bQ8H8OR0v5pugp4Lu9GfTyXByI7zsgLMAIN8EL3A3LgrLwQI9EQjdAYTfAV
mqIZmqMFXrrmR+TEOXkRRqElXukGIRfOy4sxGm96j9N1FfFC/hOt8DqcK+TG
BXkJxiCV/TN0lfBS3oPWiOgH6/LgorwUuXUrw3lEQozVpdbNNFfGK7myfDA8
E9grF5E3mRshFarLJ7gHvrYeRR5izhvOgvksX9KXMf9pbh2uNd/gZfo85lXm
tlyb6/BlToQPzce4M3flZnyXv+efXZuGZ4XX5Spcmy9wN35tvQofkr/ljvwV
3+bv+C/r7/DmcNa5Mdfna5waH5tPhmcf39gbVR5qzofLcll5T3htLJfzyqvD
M4nEGKd7K/xumN9DBPt0RXVbwrOONGiji6YbZs6PK/IK5NOtCc8bkmC8Lq1u
tvl9RMF+XVtE1w+XC+CqvBITkE4/R1cVUXFA1w4x9CPkgrgmr8JEtEdMayP1
hfCfvBqT0AEd8S06oTO64FJs3w13Q3fEcv0o176N6/IaTEYPxLY2Wl8YN+S1
+AXp9XPDbxOi4aCuJ+Lox8hFcFNeh1+RQT8vnA9ExyFdL8TVj5XfwS15PfLr
1oZzhaSYosuom2/+CDHwt66Ybms4I3grnBHdG+GcmYvitlxO3hvOAzbIBeR1
5rpIhqm6TLoF5mqIGb57+e9wBnHY+rvyNnNTNDD/x2nxifkU90IL8/1wzu2P
Zx4XnhsuxrX4HN+xVj6cY3NHbsON+Wb4G+F/h/WCvF5ux/XC++Qr4Vnl5OH+
+Th34W7cnO9x7/A76vrMvDDcL1cPZ5svcqxwBs2HuROO2Ftc3h6eUaRDDfnf
8DmGv2c9vjze/C7uyhXkfeG5x0a5kLwhPINIgWm6LLpF4VlEbBzVldDtCO8V
6dFHl0A3wVwc9+RNmI6s+sXhs0UcHNP1RUL9RLkE7subMQP9kMjaJH1JPJC3
YCb6YwAG4gdcdu5/5MT2T7a3FB7KWzEL2fRLwueAuDiuK6nbGb5fZEBN+XT4
ntHS/CDcDw+y939P5x9F
          "]]},
        Annotation[#, "Charting`Private`Tag$98722#3"]& ], 
       TagBox[
        {RGBColor[0.922526, 0.385626, 0.209179], AbsoluteThickness[1.6], 
         Opacity[1.], LineBox[CompressedData["
1:eJwV1XfcTnUYB+DHCmVlizKztyIUIiPZW/Zrb8ose8te2Xvvmb33DpG9laxK
KSLp+v1xfe7v/T3P6e05zzlH+qiO1TpEi0QiUdEjkQGvRSJl4kQi+2JHIkfM
z83VZk4u8Lr9WzMJp1lm32kW5So/OL+3+Vx/whxnbjLf4zIf2xeY6TnHZvv+
0HOdDc5vbt7SHzN7muvNvGSTZ5pvhb/DWvsesxh/OG+EGYfZ+m3mB1SWl5qZ
2SEfNEsx0OfLmvt19Vgj5+INebKZlOXyWZ/rI7+Qx7NZfp+S8kIzA1vk73yu
hXxb/ooNcj6yy7PM1KyT//S5kXJc5tirsEzOwk55kOPl5ANyfeIxxZ6MFfI5
x/vK/8oTKMVGXUvdHflrcjDbnob18hPHR4Xfjrn2qgzWfWo/KDcgPj/q+ule
yhP5JPx2ula6n+Re5OQv3ehwrZhnr8YQXXn7IbkhCTiv66/7T55E6XD9dK11
P8u9ycXfuqF8pj9sb0RCLugG6F6Fe44ybNG10d2V+5Cbp7phVNAfsTcmERd1
W2mr/8Xelzw80w2nov6ovQlvckm3jXb6e/Z+5OUf3TdU0h+zR5GYy7rttNff
t/cnH8/DvUhl/XF7U5JwRbcj/P5UceyErhlJuarbGX4nqjp2UtecZFzT7QrX
nDGMZRzjmcBEJvEtk5lCNf+N753bguRc1+2mg/6BfQD5eaGbSnX9KXtLUnBD
t4eO+of2gRTgX900aoTn396KlNzUDdRFmGwvy15dJ/ujcF/zHi/Dd9DFY769
OtN1Ne1n5NakYqo9OSvlW44PkqMxxV6ORXJGtsr7HO8s/xru6/AsyvnDcyrP
Md8O75Xw/2MWD/djuIZm/PCdWeDYdrMwNeTlZlbOs8t+yPyEm8xwbq3w/tEf
NduYa83cXAzvJvs0M0X4Pqyy7zI/5Fp4Pzh/sBk9/MZMDfe0WZBP5cVmJrbJ
+332C/m38HxRkLn2d/hOfhXuAzkBC+01mamrbT8rtyU1d3RDdDGYZi/PAd2X
9t/loRQiwix9Hf05uR1p+El3kC76x/ZhfEC08J7R19X/KLfnbX7WHWIOn4fr
qOvAO9zVHWYu9Ry7oOtIWn7RHWEe81nAQhaxmNs+v8RcyjLqh2vuvE6k457u
KMtp4NglXWfSc193jK7h3wr7cAoTnRX6hvrL8hdk4IHuON30f9q/oQgxWKlv
pL8if0lGHoZ3mC4m0+2fcULX3f5EHkFRYrJK31h/Ve5CJh6Fd5guVrjH7BU4
qeth/0seyYfMs6dloxyL8XJCFsm1wneRs7FbXu38JuG+k7uyTs7Du+GZM1Oy
Wt5tfhSen/BeNF8L7w5mOrbVLBS+KxXtS8L54fdme7iPzJLcCOc4v6f5t/64
OcrcaBYIv0X4G/b5Zrpwf7IpPLtmifA35QlmIhbLO8wi1A7X28zOHnmNvxEl
X5e7kZkZ9lSskX8L72o5NrPslTil+8r+VB5NMWIzUfdmuKfkOuE59rmm4bvI
3cnC77rTfK1/Zh9DceKE66lvFt4Lcg+y8lh3hl76f+xjKUFcJukSs1SuG+4D
OQd75cNmaW6x3vn/A2oKVpA=
          "]]},
        Annotation[#, "Charting`Private`Tag$98722#4"]& ]}}], {}},
   AspectRatio->NCache[
     Rational[3, 4], 0.75],
   Axes->{True, True},
   AxesLabel->{None, None},
   AxesOrigin->{0, 0},
   DisplayFunction->Identity,
   Frame->{{False, False}, {False, False}},
   FrameLabel->{{None, None}, {None, None}},
   FrameTicks->{{Automatic, 
      Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
      Charting`ScaledFrameTicks[{Identity, Identity}]}},
   GridLines->{None, None},
   GridLinesStyle->Directive[
     GrayLevel[0.5, 0.4]],
   ImagePadding->All,
   ImageSize->{200, 150},
   Method->{
    "DefaultBoundaryStyle" -> Automatic, 
     "DefaultGraphicsInteraction" -> {
      "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
       "Effects" -> {
        "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
         "Droplines" -> {
          "freeformCursorMode" -> True, 
           "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
     "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None, 
     "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
         (Identity[#]& )[
          Part[#, 1]], 
         (Identity[#]& )[
          Part[#, 2]]}& ), "CopiedValueFunction" -> ({
         (Identity[#]& )[
          Part[#, 1]], 
         (Identity[#]& )[
          Part[#, 2]]}& )}, "AxesInFront" -> True},
   PlotRange->{{0, 10}, {-0.3461261180190739, 0.581865061766651}},
   PlotRangeClipping->True,
   PlotRangePadding->{{
      Scaled[0.02], 
      Scaled[0.02]}, {
      Scaled[0.05], 
      Scaled[0.05]}},
   Ticks->{Automatic, Automatic}],
  StripOnInput->False]], "Output",
 CellChangeTimes->{
  3.7737506628088846`*^9, 3.7737507251355767`*^9, 3.7737507611303983`*^9, 
   3.7737544709416656`*^9, {3.7738425674696517`*^9, 3.773842611222667*^9}, 
   3.77418218042992*^9, 3.774182214113922*^9, 3.7741822459748864`*^9},
 CellLabel->
  "Out[258]=",ExpressionUUID->"c90a1406-79fa-48ca-a010-fd23684c7eed"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"200", ",", "150"}], "}"}], ",", 
   FractionBox["3", "4"], ",", "0.75`"}], "}"}]], "Output",
 CellChangeTimes->{
  3.7737506628088846`*^9, 3.7737507251355767`*^9, 3.7737507611303983`*^9, 
   3.7737544709416656`*^9, {3.7738425674696517`*^9, 3.773842611222667*^9}, 
   3.77418218042992*^9, 3.774182214113922*^9, 3.7741822463728857`*^9},
 CellLabel->
  "Out[259]=",ExpressionUUID->"5a6a6cd9-1414-410e-9803-3c588b3ff7c4"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Step 4", "Subsubsection",
 CellChangeTimes->{{3.773750983247436*^9, 3.7737509865554733`*^9}, {
  3.773754609589663*^9, 
  3.7737546097356653`*^9}},ExpressionUUID->"70669eee-dc0b-4af5-a555-\
76be7202e8ec"],

Cell["\<\
OK so far!  Now we need to add all sorts of goodies to out graphics like \
legends, labels, frame, axes labels and ticks and on and on...

Now let see what happens when we decrease the size... we will need to style \
the font size down.\
\>", "Text",
 CellChangeTimes->{{3.7737545198176675`*^9, 3.7737545883957167`*^9}, {
  3.773754796739723*^9, 3.773754800870673*^9}, {3.7737550326814966`*^9, 
  3.7737550936204453`*^9}, {3.77418229179589*^9, 
  3.7741823010308857`*^9}},ExpressionUUID->"9cf411a6-b7ad-4030-aa13-\
d6d1fd6308ba"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"ClearAll", "[", 
  RowBox[{"plt", ",", "bp", ",", "bpW", ",", "bpH", ",", "w", ",", "h"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"bpW", "=", 
   RowBox[{"72", "*", "3"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"w", "=", "4"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"h", "=", "3"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"plt", "=", "\[IndentingNewLine]", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"Evaluate", "[", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"BesselJ", "[", 
         RowBox[{"n", ",", "x"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"n", ",", "4"}], "}"}]}], "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", "10"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"Filling", "\[Rule]", "Axis"}], ",", "\[IndentingNewLine]", 
     RowBox[{"ImageSize", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"wPX", "[", "bpW", "]"}], ",", 
        RowBox[{"hPX", "[", 
         RowBox[{"bpW", ",", "w", ",", "h"}], "]"}]}], "}"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"AspectRatio", "\[Rule]", 
      RowBox[{
       RowBox[{"hPX", "[", 
        RowBox[{"bpW", ",", "w", ",", "h"}], "]"}], "/", 
       RowBox[{"wPX", "[", "bpW", "]"}]}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"PlotLabel", "\[Rule]", 
      RowBox[{"Style", "[", 
       RowBox[{"\"\<Plot label\>\"", ",", "9"}], "]"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"PlotLegends", "\[Rule]", 
        RowBox[{"Placed", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
           "\"\<1\>\"", ",", "\"\<2\>\"", ",", "\"\<3\>\"", ",", 
            "\"\<4\>\""}], "}"}], ",", "Below"}], "]"}]}], ","}], "*)"}], " ",
      "\[IndentingNewLine]", 
     RowBox[{"Frame", "\[Rule]", "True"}], ",", "\[IndentingNewLine]", 
     RowBox[{"FrameTicks", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"Automatic", ",", "None"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"Automatic", ",", "None"}], "}"}]}], "}"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"FrameTicksStyle", "\[Rule]", 
      RowBox[{"Directive", "[", 
       RowBox[{"Blue", ",", "8"}], "]"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"FrameLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"Style", "[", 
           RowBox[{"#", ",", "8"}], "]"}], "&"}], "/@", 
         RowBox[{"{", 
          RowBox[{"\"\<y on left\>\"", ",", "\"\<y on right\>\""}], "}"}]}], 
        ",", 
        RowBox[{
         RowBox[{
          RowBox[{"Style", "[", 
           RowBox[{"#", ",", "8"}], "]"}], "&"}], "/@", 
         RowBox[{"{", 
          RowBox[{"\"\<x on bottom\>\"", ",", "\"\<x on top\>\""}], "}"}]}]}],
        "}"}]}]}], "\[IndentingNewLine]", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Framed", "[", 
  RowBox[{"plt", ",", "\[IndentingNewLine]", 
   RowBox[{"FrameMargins", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0"}], "}"}]}], "}"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"ContentPadding", "\[Rule]", "False"}], ",", "\[IndentingNewLine]", 
   RowBox[{"FrameStyle", "\[Rule]", "LightRed"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"{", 
  RowBox[{
   RowBox[{"ImageDimensions", "[", "plt", "]"}], ",", 
   RowBox[{"ImageAspectRatio", "[", "plt", "]"}], ",", 
   RowBox[{"N", "@", 
    RowBox[{"ImageAspectRatio", "[", "plt", "]"}]}]}], "}"}]}], "Input",
 CellChangeTimes->{{3.7736852425484896`*^9, 3.7736852921794767`*^9}, {
   3.773685366345023*^9, 3.7736853781200576`*^9}, {3.7736857713466883`*^9, 
   3.773686026041995*^9}, {3.7736860609830856`*^9, 3.7736860986621294`*^9}, {
   3.7736861318913927`*^9, 3.7736862656659327`*^9}, {3.7736863595790324`*^9, 
   3.7736863997000237`*^9}, {3.773686431410022*^9, 3.7736864343090367`*^9}, {
   3.773686501954136*^9, 3.7736865894076815`*^9}, {3.7736866478554*^9, 
   3.773686695091587*^9}, {3.7736867534999723`*^9, 3.7736868517504168`*^9}, {
   3.7736869018463635`*^9, 3.773686957186064*^9}, {3.773686995005577*^9, 
   3.7736870837378235`*^9}, {3.7736871269569035`*^9, 3.773687236231*^9}, {
   3.7736872899212317`*^9, 3.7736872984282274`*^9}, {3.773687342261194*^9, 
   3.7736874023452177`*^9}, {3.7737496750023966`*^9, 
   3.7737496880303974`*^9}, {3.773749725378558*^9, 3.7737497383885536`*^9}, {
   3.7737497697745943`*^9, 3.7737498544861946`*^9}, {3.773750011672186*^9, 
   3.7737501317241864`*^9}, {3.7737501804711957`*^9, 
   3.7737502062579484`*^9}, {3.7737502369237037`*^9, 
   3.7737502607526984`*^9}, {3.7737503152232733`*^9, 
   3.7737503370272703`*^9}, {3.773754822538678*^9, 3.77375492084675*^9}, {
   3.7737549525220604`*^9, 3.773755011736452*^9}, {3.773755098010441*^9, 
   3.7737551764005737`*^9}, {3.7737552278785686`*^9, 3.773755421712679*^9}, {
   3.7738428654134035`*^9, 3.773842890400402*^9}, {3.7738429868685865`*^9, 
   3.773842989003584*^9}, {3.7738430489545836`*^9, 3.7738430618615847`*^9}, {
   3.774182361710887*^9, 3.774182365846888*^9}, {3.774182402964918*^9, 
   3.774182405428876*^9}, 3.7741826255017157`*^9, {3.7741827131198893`*^9, 
   3.774182714852888*^9}, {3.7741827840808954`*^9, 3.774182786395935*^9}},
 CellLabel->
  "In[300]:=",ExpressionUUID->"d695f85e-40d9-49f6-a068-ceb7af352078"],

Cell[BoxData[
 FrameBox[
  GraphicsBox[{GraphicsComplexBox[CompressedData["
1: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
Ybu8srmSHQX9ffq1y2VmDR12GlEZxf2Hg+5+KpkoBH7Zf/bdJ3Rg545OYWxi
eP+vvU11wPt/R/O/5Zw5EgxTl4Kvmb9Bajq7+BjC1tHiZtSrGLy/Gx2edupH
hMCfxejwG7yfteyxSinKRJBWqBvkwv3UU+0x99jfVVTqfitvNgL30/orfLr9
gkA8piYwxdCBzcsmKQpkC4Gjer5AAl8HtkE3w3l1kQC3xc3sAnA/7x59efWU
4wbK88eedOJ+vHQ3SD/NRwhcWwPlP+N+bKSIGUb1EiD2irCikAMFaUvnHzHF
1pDDytshU/w+HV94TzgmKAQlUtvE/PB5NqdTpuU4PxFWengHSvD62J64aGUu
r6Ms8dMn/9eP22/vnnK3w9fz7urH03g93QqpSuJn11Bixynyq9hhdGYy+Pcg
ExE2V4boFXA/vnHi8f7eJ0JgXRpQ0SDRgc8LZxTpJwiQYS5wrf0KBb0VrHby
J62j6++EPBfx/FPJcVz+5E4h+PZKqyiQ1IFxVnz5UCpNBFZrKrsR/ryX95mc
ilZI8EF+T2P+43R8ziFWdV5dR7zEc7df/e/3MTLTaePaQtByQuPbfnx9u7yH
F+4qEEEMad+zwOcz+epHAkLzBBDPSno0cp2CxOuYH52+LgQaL2Nu/8Hf7+fQ
Lgbt12uoYXrE1BzP/73Pijvmt+B6Nn7G9yXej1Z0duF+/zpKN5k2DsbX+2xh
JY5gLQTORWyvvuDv9+AjacGfngh8a0vPj+D54XinFsGbYx2tMslM38W/35HZ
+XuUvBBEknjSZPD92RtkXmAvSQRKhajUNF7fpbjDNsoZ66jR/MvKBbye3pAF
qYemQuAZp3xzFH9+MH9wzTshIryJ2ox+i69H86d3WLvgBroSeumVGL4/Vufo
+IqdhaCo41FLCe7PO+WmxzTZ8HwVTf+0E38+k5nR+yjNdRTVqVtwHH8+gXf/
JcF9QpA+Ou//HtfH4XXiG0kSEeSDRj2v4evPk6neeniDBLpVLF2pOa/RP36n
YP+tyyaei5r/+J2H1y1+Nb25RuN3sptO9qVIx9D4HRt98xG6ydc0fkfyNTer
RGAujd95osC94K1YQuN3zvsdJR0tqqTxOz2aWzhqzBpo/M5LUddVyU0yjd9x
HLtvacPTRuN36gy2Ghvt7KTxO+vPj//MrftG43c6giz/OznVQ+N3fN+V24zn
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
kJi+MEM2IqNSHe/pqdV8FPVD8IngrmMo5fATb5Y7rODJdWT/Mn7+e/0Tn/Ls
YIfXuiJbpfD70ZXumWDiLQ71c88IrBtULGXGRNVGTwKmbtU9GJ2jYpfCg6W/
lpIg76lu2VlNMjr1aZ3DyIINdgU+5r6B612J7J+tL7vx+cwrwbUM7/c/HmXs
zkCJAt7PfzzK29Id9KZF1MP6Tg0jrct1SO9G1w1vxutI7obRYfkn3SjjiPeb
tPIYFM8k2VufOoJCqVbBjrbpNH4lSN/iFak9l8aXjDzqOxLV+43Gl0T+tqDr
3+yh8SWKLHVFiSV96FxYc8T7ehYouzctCJX9SFuot/vvPTYQ9Fs2zMDXb3xN
/V6iIgdUcATFyXzuR6dsj5mf+sIJUaKE/QrP+tBzjsUfP1y54WeNWNTbNz3o
u87Z7Ah6HjDTvi92XOkb+seTuNx8taFHV0PjScxzbbb9PtFE40lK5OSqfZgo
mOyTPUZbrMWAf2l08GZ7K2ZrliQdt10cxKoVO5WbqdgA5bNT3W9xYOG/tWbE
04bR7U7gHq/E8/saGBIi8f05Y9UUHS4Jnt9sTKzx/D98bmRCwXkrDFc25zJ5
k7F//MiSpXPVokI5jR/Z+rrorM7uGoTpzP9QLZcBG6Gwvbx7G5DFBf+GqR0k
iC27mPnUspnGlzBaCDNtcpDR29fxFb8+FqGpFnXzVmSBWuO1Gbc1UtHgjT93
FI4GoV53pb1T3oPItM5kzv5JCo0XaZsrnBFa60bPyOekmM8zQZm3egnjfC/i
L/NI0qNjATWWxht7zPsRP/N+0lwqPhMN1N0r4xpAlYJTHzXN2UGm+uaHUeYB
JHYxJcNjlgNC7lr1zqB+9JeJLZXvCRc8mvqx0VnUi1q8M2/WSolCpgLFMpra
gtWTnossTInCzg769McsrZjM0e5MuzIx6Ciw6al3pmK6LWKvJoPFIeWh0eJP
fP5UeXt2PdpSAt47vkU1P6nYdYZxk9sKkmB3+PN/bbxU7L4/RSp+VRIs2vzv
qftTsOwG87vKkTJwY3jR5aRZHd4foS87lmRgMqtqKnymEZ0Cn2um50lAlb2n
+timhcaTtFvXhuzRISPxx20Nv3XeoY+bzG3khf3o4PYnBwLtyagztKqbN+8+
Sj0/+j0ukRmaGA5w1G/pRxpH/Cwp6qzQKn9U8OuffsQU41AtNsEG59xbZMLF
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
xbeAt5fydsrtJ2HkFavfTwqYwOuJ3u/OjbyYwaqm05XE+eHJdlqZ8Uwc686x
P5ocT8cF1o8lV2PEfBWgry5KzDfQp1gtXzAwWyxAPuVpOZf4oLwLZfGp1OGF
yyTscIT/Je3XTODn6r/b4J04pniDX/1GOh2XOCdX/GlDFeCUbWC5M7ZCqU6T
bY6mkbBSndw5IeI89emXDtkuKYFdX4vzXiD+HvoU/aN/ZdYY9VEuyuSy16QS
55Oso84X4n48U3eBZ4pDAstysxm3JN5vxoCd1o2OehCRd0Nr9Kog2MpXGHGR
gxdLXHOzKoOYN0lbbnzSzxPHQnxXZ3tEEd/3//yJ+dRPtaZtFZSC6UvSA34k
7Lh99gkdYr4wZy3PT1gUx45X6ovLEeep0SEWbqeCGsAdIcIj8XgDcOqzLXCd
JmGuw73P44nzNF7uFOVLfQUwP3lmueHlLIXbcmLiUQUJ+1YdYrqH+LxJcRv0
IjdKYBnn17zYQjze2MweV4s6cSyw4UozC3GeQo9yja7jfjG7CHmUEB9xyWF7
A0oT7VsSS584lnBV5r4oMW/wnegn9bSQsO7qvEVhYv2yQszU2MSI/Ukpzvo2
Mb+8MQ2/Mt1TDDitMzP9dGmUx/1nT3AkkbD0HweN3hDrUf9DsaaWlZhfeCtt
9In1u1l3viuLhRfTuyD7ofd/1vc/r3I4MzFDo6+Akmcus+HQV3Hs2IWLpTeJ
eaA+VHj+9RgJk9fQP6VEvL9Zk7Ssr7ueAZmzb+yd2yYp5vx3lWefkLBr4wH9
6cT6qADt31a8Eting4p9BcT7hz7l7NFJg0OFERT7KXd/nX7i+liwMZsjHi+3
YYfdAncpuIANKvnkD1G8Ul+a8q+XwMounHU5TrzeHTvKfs5FPQIsqSWzoWtq
KEJ52JHR3+LY3vGBsDLi8cW2vbJUXiBhazQn9KnE9fGqRC3TooqEfXjwNTWP
ePzpD/TkckEJLHbN92ob4v1An/JFfNMaBY/i/9On8I0/Pt2hRKVAn3L0YI5s
zHc+5FPiVhs+dBzcg3zK+m0577qkDJBPsYnq3f7Y5jLyKV74NpYn+q7Ip9wQ
mW/R6gtEPqUk5+34lwexyKfs2Rlf/wBLRj7FkT+/LrI+C/mUI7dM0tRXFSCf
osh2/nO27lPkUzrPNTJ0ie8p9Cm01Mo7SpmVyKe8LT1DFmLWIJ+inFLIR3v4
FvmUmmnGRRaLZuRT9g0VDa2Lakc+JYJtupX6kop8ygtvc8eqBjryKdzkSPeg
R93IpxSGibC7qfcin/Le7eEN95w+5FOScgJ0jPL/+RT1slUHdU4ykE9xkVyt
W5HAQD6lKHvhnbQlA/kUY6fRwZyCfuRTrKNT+SUd+5BP8dYxfJXT1/PPp7RZ
rAvM6kI+ZcqaduiEAg1An3Lt242TZ/rbAPQpYqEc+9l1GwD0KV9bhemXA3DU
B5Sszp55vLcE9QGFe3xzmQahqA9IxKu7/LDnQ+RTzioN0NfNPkc+JeFKsef2
vhrkUyZksnjWuDYin1I6NZqZztmGfEqAYZel38VO5FMkWiO5VSepyKcc3NhL
ybhFQz5lkX7ib4IfDfmU0g88pvZTVORTDj7TtVgu6MShTyGpRQjPbW7DoU+J
FrRzp6rEIp+it2r45xfqIgX6lKIyiV9cQduQT9HX9DLdkHQY+RTW+bPrqAMX
kE/Jer/5RH35deRTUvPMPB94eSOfsgUb9V6ZD0P9QTI37LjHshJRfxAusNmP
6+991B/EcbmHf2FXLsor8Zf6OsS2+THyJ82XVr2T/NWL/Ill0lQ5/65+5E/4
1ddzsa5lIH/SJ2d/ssSPAWAf0OZoCbt1YQwA+4C0ZP4e8RdkoDwS7pUkIROx
fgDzSFaTX0XuK+0FMI+keFl1UbOtG8A8klcBJj9yneio74dy4Pmz5Zp65E8Y
9fKazcPNyJ9EhCsU1tDbkT8paYx/v2RKRfkjDi+k7nYcouEwf0Tu6dcOixga
DvNHwp0ebmrRpeEwf6SwnLfjgQMV+ZV7hV9YHnN04NCvfA1+yWG8Rx/5Fbtb
pRnPBMco0K+op+gqp09tQX6Fvb7wwEU2gPyKjaoMw5jNEPkVPU2BLma1LfIr
wg6fiz7LeSC/0p4ldEy7OgT1B921olg6xsSj/iAW1wsKFPY01B80kvnhwOSN
h//yTX4w5A1XFyGfIiBy5cGu1F7kU/gVn/sYzvYhn2LOeSkymNmPfMoPl/Ta
MjsGgH1AXSI6I8w4BoB9QAZ7co9tIu4vYH7JjlQ+kYc2/QDml2yv5mlV3tQH
YH7J/XXiIbSzPQDml1hvNDt2n6sL9f38+JBrp3y6DvkUbg7fGJHSJuRTxnGT
2BOLbcinvLePTfBcT0V5JYyNk7dcRGg4zCt5uPHpRHcYDYd5Jbdq9fyVr9Jw
mFey67qx7bZSKvItgUJ89k8/dODQt8xwKK0t9C2nQN8yZ/xT1LyODfkW/2cB
NseP70C+Zd5Y//uH5qPItzxkvy/0y8wC+ZbOu9NXLWWdUL+QwOC5SntZf9Qv
NKvr7bPWOQr1C/Wlv74T/e4O8ivJLyqzlg36kF/JJelEeDr0A9gXtGf64vAj
JQaAfUG/+3xv8EczAOwLih108ZP1YADYF5SfJWZuOtYPYF+QVZawZH9rH+r/
cVcxvODxpwWH/T+ShiupyRkdOOz/MfPgy0/Oo+Kw/2fNvvaLqpf+5Zuo3DWP
142k4TDfBBt+ddRHnIbDfJOCQ3atbDL/PIzBVvZ3ESLtOPQw15e48lr2kJCH
4RFbRar4OECBHuZm1Vm3pF+CyMNUqSxW9T7TQB6muDVyrsXtNPIwMrE+OG/A
FeRhHMaXSPeV3JCHWRpx3N98MBj1C1nwSG/nSIxD/UIvl7NvU9JTUL/QVl+f
Ud272Sg/ZaTzxoPevwXIuyj95q62vdqLvIvZe6psaEsf8i4l48YZknX/vMvp
Nl4BW1MGgH1Bc59a4nKJ8x32BfEcI4sVn2KgfJRcOcXPxeHE5/dfPoqgqUbX
usN9AOajrEvttKy42wNgPorOfWn23nNdqA+oqm07a/OdWuRdcmYU9zttakLe
RUtodYVRQBvyLn0ZYbNSlZ0oD0X20aKlw2oaDvNQ/iQFanYG0nCYh9KYaXc8
+yYNh3kozHunArs6qcjL7K9YaNuj24lDL3Phfd9mwcZsCvQyiw4PWgRmVyjQ
y5yMjQmJ3aOAvMxAVsP+ttAjyMsM24XhuXJmyMtsG84W8a5wQP1D77fhRly9
vqh/KE98xlMyPwL1D10tjL0JXichD3MrYPir6rY+5GE0fSd3fTfoB7BPiF/R
ZoxflAFgn1CCZl+sUSgDwD6hHL2M9b/9id//1ydk2BWgHrDSD2CfUEz93peS
i32oH+h30HbpAocWHPYDPfjlkLRNswOH/UALIyvla4OpOOwH6tK5IiR59l9+
iu0vp7lP0TQc5qfYa8mKDKvScJifwrg/INp97J+vyU30eGSY0I5DXzOwlMtY
DHRBvuaZAHUHe9oXCvQ18UnDZq7OZORryAM9Sx8+HQCKOul2/WrT4IKuYef7
znNg8NWbycYrc0Byxm8wYZs96hvKM3f0857vB7BvyOrnmYdkNwaAfUMXx75J
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
y66UJPr//e//H4Rngnw=
     "], {{
       {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.2], EdgeForm[None], 
        GraphicsGroupBox[PolygonBox[CompressedData["
1:eJwV0jtIlXEYwOEvlwQ1hOx4KfOoaCAZCELQkJe8NDt693TZvIxqKtSSk4Km
lUIQBIJQmi2VXbRGdTIrh8pupqCDtZRm9HzDw/t73z8H5XCyY+01bXFBEBzg
CdvxQbBFij5ChMceS/igh2jgLKnhZ9xL+aiHaaSEZbdafuv7dJLGU7cyPukb
NFHKG7c6/ugHdJHOrFs5a3qEZtbtrSQwZy9jRdezq6foZsfeSYQFewbP9Dk+
61F29VWyaLH/MNtIZN5+0JczoE+G/4f9rdnAnj7sbUxP60Bf13lcsf40u0gl
w9tdc9E9UQ/rIrPIzDUnzTPmUe/PdQUn7F/syeZNe3E47Xv6GqfsUTPTvGee
NmPeN3Q7Bfak8O+bd8xX3uL1oC4kqifC78L9ndnIX53iPq4fhr8J3a/z6bH/
MrtJY8l+jBe6kq/6FhfYtHdwiNf2Ct7rJvb1DL1k8tKtim/6NhepZNWtmX/6
EX0cZ86tmu96jEtUkcW8+3nW9TiXqSZKNjnk8h/qEVqM
          "]]]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.2], EdgeForm[None], 
        GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJwt0slLVWEYB+BTadehMjWFwIQyWiSCcJ2H/ggth3LVrhKjQV3mpnl2IbgQ
BLFyaLKyTdPSoqzUJmuVtgvTZjfa80GLh9/vfc/5LvfeczbvPVjTsjKKohU8
+Z9zSVH0lUw9g3TWk0Y1TVzmEzscuM86vYo9XOJjuNd+lLV6O8P8odFugkp9
NxeZDuft7rFGb2OI3zTYvaZCf0yK3swXGs0X+ECl+S6p+jOy9HbmaTVvlSdY
ZtD8i3r9FeV6vjzPan/II3OPnq0nywPM0mBfYten58hcWSA75GI473rc3KWn
yffmbbLCfIcUc7l5QN8iC2Wh7AzfWz51vVffqG+Q+bJNfuOoa/0y1y5PHmeJ
AftumWH/U6/TX1Kmb5fnSHTtoTlJ388M9eZN8hh/w33md+H76SMk62Nkhv+P
OY6Yr/GDXeZxSvUHxPR9fKbOfJa3lJlv45WKDnOV7+y0e0FJ+CzO8IZSu1vE
9ENcYYFau+cUh7OcZio8D7ub4bnpReE+TjFJsf2N8Pv1BFYR3vc4NZxkIpxz
z3X+ATNqWbo=
           "]], PolygonBox[CompressedData["
1:eJwl0klL1GEABvB/40IFZQZCZRATmqOm1kQQ1AfIPf0GWbmWtt3ay4LqUlDQ
wTY3hDqWttzMJQ2srmXbKXPJDi0Xo34vHn48z/O+ozP/YeJ1bbWtsSiKljDG
3NIomiep73Lx0EWu3CZvslJ/6269fpo/XLKfk6438oUa+zA9/KDW2Su26lso
YQ9tdDNPjftxivWLPCPNbuAz1XYrXXwPf+9sjCK9naek2vV8osoeZbV+nDkO
2Z3hOam2X7JZf0O2forfXLDz5VVSPfMTO0U/wEcqwzPI6yx3P2Jn6seY5aC9
Ubbzl/v2LZnptbN6QlbZoxTaO+0Heo5MyqS8IVfI1+63y047W64Ln1melL84
736H3atvkAlZIq/IFDngvkPP0mMyX+6XH6hw1yfjzorlNZbpw87v6mv0VfIo
M7Q4j4fvhwXu2TNU6iMU6BOs1U/wk3N2nrxMzP/rD783fR+TlNtDZOhHmKY5
vD/TVNjD4XPrZ3kcLf5g63hPmdnEHb5R7myIhH6GR/xjr7N3lOqN3GaKMmcv
yNN30xC+L75S6nyQTXouOfwHCiFgfQ==
           "]]}]}, 
       {RGBColor[0.880722, 0.611041, 0.142051], Opacity[0.2], EdgeForm[None], 
        GraphicsGroupBox[PolygonBox[CompressedData["
1:eJwV0E0s1nEAB/CfstINIV2yttpEObDZpK1DdbC60BZCRXGpUJ1RobhTi/Jy
0SUHntLWOmhzMNGLO5X3zt56WS+f/+Gz7/f7+/2fZ//nOVjTUFK/I4QQR4zv
CSGsUeqwjHLmdoZwnUSm7Cc0cZF5ZzdI4r3dQzObdiuZLNgjVPDFvkky03Yv
LWzZbRxh0R6lkq92PXuZsZ+yKz6ELruAdfsu23o7WSzZMRI912ef4o9dxTe9
gRQ+2OmeGdLP8szebXfrx8nVx+WG80P6qF7KPfuHfEA2Oe7eymXnB/QXepEs
lifklDwvX7pPkv32GXla5ssJWSz/us+UY/Y5WSFPyhl5QV5yv6A3Rr/JTpVH
5Rv50d1+/Xn02ej99UnZ5zxBf6QXkqe/k5vOD+sxvYz79k/5MPpOVuwM98N6
Ca/sZHsgenf+2ZdZ1G+Rxie7nz2eexz9drbsVn7pHRxj1R7jCkv2bfbx2R6g
jd92Z/Tfsma/pppl+w7pzNqDtFPDVa5RSx3/AcsrX4U=
          "]]]}, 
       {RGBColor[0.880722, 0.611041, 0.142051], Opacity[0.2], EdgeForm[None], 
        GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJwVzzsvQ2EAx+G3GERHFkWii8RURGKqmEgkXUoiEpNF3Re3T+BuZ2xdYjJJ
3GKRmCQWt2+A09oZ3J4zPPm9//ecJj3p8fn8XFUIIUGBqDaECvHlSE0I99Uh
9OmY5vRM2zWheb3VHh3Qfi1pg175/bDe2Vkd0kE90Vb98PzaOePcpTv8sel+
VE9p8+zLvnHudu7VPZLOR+5zzsek7Be7xXmFMrPxR8X/iSL13rl0V6HT3uaX
DfuTrPMudd47tJ9ptpeJmLEvKNNhb/HDun3AE032Eu9M2+dEZOLv4ps1e59H
UvYib0zZq5R4oNHdAq9M2gUm+Acj3zhn
           "]], PolygonBox[CompressedData["
1:eJwV00dsT3EAB/DXRY22JxzMtmhCJIQaEao1W6MUPUjs7aD2rHk1WmrFOCFG
0TpIiK1mIrHpsm6CluJiHHx+h8//+/2+95L/y/u/f+qcooKlsVEUxdDMxxDj
c2IUfaJQn8oUJlPAJIo5xCNS4qJoCfVMtDdykIckO7aYOvLtSj6SYW/nFxvs
AzwgyV5ELRPsCj7Q3d7GT9bbPxiol5EQH0X77fu0thdSw3j7Hzn6MVJcd8Ge
qJfT0X5vd9O38oN1dqG8SLrzTfZNvY8+QO4lXt8X7lcfpOfJMfKkbCfvOZcv
r9g9ZSuZIxfIasaFZ2o/1ofKaXKsvCQz5N9wj7LKzpTZcoQ8KpPl+fDc9cF6
vjxLB/2d41f1XnpXuYUm1obvk5WkOffd7q/vIc4us3P1E7S179ot9fm8Cfdm
/2GYfoQk15yz35Jub+Y7a+xvZOqlxLpur11FC3ser8mzy6knzd7EN1bbe7hD
oj2XV+TaZ6kj1S6mkVV2Kbdpbs/hZfgt7NGMYiQjGB7eA1ZSwi2auXY2L8i2
V7A7/N4kODaL5wyzz1BLF3sjDSy3d3GDeHsmz8iyT1ND5/B+85VldiP99BJi
PJ+d9nXi7Bk8De+E/Zss/TCtXXfKnqCfob1dbXcK/wW+UBT+o7KCVOcbwn3p
vfW+cjeRviP8T/SB+hg5Wh6XbeS18B3yst1DxobnIqfLJ/wHPv6Asw==
           "]]}]}, 
       {RGBColor[0.560181, 0.691569, 0.194885], Opacity[0.2], EdgeForm[None], 
        GraphicsGroupBox[PolygonBox[CompressedData["
1:eJwV0LdPVmEAhfFXpHxYwMQyqYjiLFaai7JoxMZgQkRMiC0xgokY/UTsyo4F
pKigLqDiSrcyoYkC6qCDiSVRsAB/AL87PHnOOe+9N/fezPLK4oqEEMIMDOBH
LITvOJ0YQhxnkJIcQl1SCGvxW+9CM6oRc3bdvg5jejdakGFvt23DTLyznUWq
/Ya+HuN6D+5gmb3DVoREvLfVYJb9pr4Bf/RerLJ163sxH3dtmbZH8nYkYdiW
a3spH8BinLPNtt2Sc/BX36QPycfQp2frPXIpFuCebbntsbwDydiiD3MVRpzn
6a/kg9gv/+Il2C1/5hockSf5vOvnyPXyUc7lPfyV/znbLL+RT3AFl/N49Azu
d76ae/XjvC96T/7J1bww+n7+xKc4zod5gi9wq/tX8JPoe3knl/A3TsFWeYRP
YtS1+fpr+RCWolj/Ev3H6HnO5+oNch7+64X6W7kSA/oavU8uwyK02bJsnfIu
xPDBVmAbjN4VGbhoS7PdlvMxoT/Dfay0P43+LVLx0XYJ6fZGvQCT+nM8wGXM
c9Zk34gp/QUe4gqu4hpqMQ2M2GHt
          "]]]}, 
       {RGBColor[0.560181, 0.691569, 0.194885], Opacity[0.2], EdgeForm[None], 
        GraphicsGroupBox[{
          PolygonBox[{{2278, 2279, 1161, 1665, 1524, 1641, 1407, 1502, 1619, 
           1312, 1384, 1479, 1596, 1240, 1290, 1362, 1457, 1574, 1190, 1219, 
           1269, 1341, 1436, 1553, 1160}}], PolygonBox[CompressedData["
1:eJwV1GVsVmcYBuDTIiGB4c4gwd1h/MJdAmQwKA7FobQUKRrcobgv6HDbcPiD
BXeWsAVnONuC/MD1en9cvZ/7Oe+XfHJOC8cn/ZwYG0VRDO39iUsbRY8zRNEI
mcJwhjGUIfzKIf6lSrooWkD69FGUrK/kIM+pbD+fdK4N1q8SqzdjK4XsV9gd
4BmV7OaR1j5Jv0KM3pQtFLRfbpfd3JHDVLDbb/eUivpc0tgl6gXMPTlBDbvL
dpG5CZv50W6ZXTZzBw5R3m6fXYL5AnX0J3oFcyqx+iB9rPkWrfX88jldzfEy
WR6XP8lLzo6TL/VecqgcJv+UjeU310fJh3qcbCwT5CZZQC51fbx8rfeRI2WK
/Fu2kFnlEzqZ42SSPCjLyb1e+7+5h3mgPE9t82P7++ZfzOXlHGLMCfZjzDdp
pecLr+UY1fWL4fc3X6OR/lVvZN5Ifn2JnsXcngOUtdtj94hy+myi8F70C3yh
od0G8tkv1nfzkLJ2s/jGAP08n2mg/0Ze5xfpf/CAMnYz+Up/fSG/8w+l7Wbw
hX56X/rQm170JJ4edGcBu8J3RCmvmc5nuunz2ck9StpN41P47fVzfKK+vp48
3uM8fQd3KWE3lY900c/ykXr6OnI7P1ffzh2K203hA531M3ygrr6WXM6n6pnN
7dhPGbttdrcppk/mfbg/9NO8p46+hpzOztF/CPcC+yhtt9XuFkX1SbwLz5ue
V3bnKNWcO2WXbL5KQ/2dXtu8mhz6bH2E+S+a65lkW/ZSSt/i+gDzOWrpN/Ui
5om8Dc+kPlreoKXreeSz8N2Zu8kjVDWfdO5FeNbD/xl5hQbmt+HeCPejuZZc
RXbzLPtX5t7mFDlcXpfNZEY5Ojwj4TPLNjIx3MeypNwcnn35X/guZH85RJ6V
NeUN10fKe+GzysLh/pUT5Bu+A2nWtOc=
           "]]}]}, 
       {RGBColor[0.922526, 0.385626, 0.209179], Opacity[0.2], EdgeForm[None], 
        GraphicsGroupBox[PolygonBox[CompressedData["
1:eJwV0jdMVWEYBuBf2sVJYYIJrhV0YGAwgIWYOFkGB0siKuiMolIsuwK2gE6g
gyYKooKaYGIwAY2J0QuoMSR2RBcVsWDdeP7hyfd+77l/Ts65J1mzZ2NtWghh
FgPcygrhY3YIH+iSu7nCNvuLRAh7KeST7hE9VLn2UldHks+6x9Trf9qbKSON
q/rt+lfyPubxRZeiQT9tb6GcdK7pd+hfy/uZz6TuqC6DDvtahnWN9l9yKxVk
cF2/U/9GPsACvuqO6TLptK9jRNdk/y0fZzkX7AX0y5m0yXO4JG+KzyIXMyj3
Ol8tv5XruSmXsFDuMPPolQfNFUz5fbOZxSjnXLtjLovPynp7VzzPGAP2B+Zq
xuMZ5w+af/Qp84TZb5bG/yLew37RLOQ5t+33zcp4T7ndnMtl+a5Zzub4vs0l
DMl97lEjv5MbWESnPZ8++ZvrLXKC8/YNPNEdsv+VT7KSBGd0OfGbkrdww+92
xWeRG1nMd91TDuv/2U+xiuz4PvW79e/lJor4oXvGEf1/+2kqmc1ZXS7d8tb4
HchLuSc/NNcwwQwmfWqU
          "]]]}, 
       {RGBColor[0.922526, 0.385626, 0.209179], Opacity[0.2], EdgeForm[None], 
        GraphicsGroupBox[PolygonBox[CompressedData["
1:eJwV1HmUjmUYB+BvdE7J1mKrLB3ltCKEdOrUqWStMGihVbuKtn/aCyEVxjIj
bbbRol0qhBYM7cUw0qaxte+btev3xzX3ff/e75vzve/7PE+LwcOKh9YoFApF
PO3P8L0LheqahcJT6hzKmc0sZrKKbRy6T6EwjCoG+fwM2Uq20lw2lHUMdG26
rIItNJPdwFoucO1JWZG+M2P4jVvlK+SbaWq+nkrOlz8hK+hPYDS/cot8ubyn
fhp7mUexSdbEfB1rOE/2uGyAvpx65hL2yOabm+c+6KQfxS/cbF7m+iJ9yzwX
eug7qQt4RP+RWoP7qfbZr9STWcoLrn+mNmYah5jXq214mSHm99TV6rnqY76/
Ue1CRf5HnqN6FHPpbz5RfZPZ+k/Uukxgt++eqr7Dq641y7Ono769Oj+/Uf8z
N+nf9fmF+sP1c+iun0qRfiTfuv68uVHuk4P11+Z+GGB+1PV++lnUMY9nl6yD
eSQ/cWN+j6ybvoyCeQQbZQeZr+FT+uf5yHZyvHkEP2aNyd+WfUNj89W5Z/rl
N8l20N48nB+y7uRvyb6mkfkqPqZYPlVWRilTmMwkJlLCBMYzjqV5jzT03Svz
junrfzwsW8KXNJBdwYf0ce0h2WK+oL7scj6gt2sPyrbTznwf32cf5D3KNnCg
eTDvc458rOw/2prv5bvsA/ki2eccYL4sa4ez5Q/I/uU48z1sy7qXL5StZ3/z
paziLPkY2T+0Md/NVoZkTcu66kvZk+cqq5Ltp7+ElfSSjZb9TWvzXWzJ2pC/
ITtTP4XduVfZOlk9/cVU0DP7U1asn0lt8zj+krUy38nmrA3Z67Iu+snsyrOQ
rZXV1V/ECnpkXcv66mdQK++JP2XzzE1zznCs/g42ZR2ZX3P9DP0kdua5ySpl
z+kbZr1QR38hy+mefZH3rz9S/yx99NPZN++fP1x/xdwkZxXH6NtlP3K7vjpr
MnvR5xboD9OXc7q+Y54fE/U78l70a3xurr6Bvoza+tbqSwzSL6Nb9lTuJecm
i2VHqM/QW9856ybPQF8za5Hfff6U7K2cQ/LVOZtyPnK0ua06j9uyJnMWZB/k
PrK31NNyLub3yivVFjmPkps3qB3y7ijJ/lC3Z53knMveUU9iSZ5h9r9an1Jq
mavUVrzIwKzZnFVqV/V/6izwfQ==
          
          "]]]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}}, {{}, {}, 
       TagBox[
        {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
         Opacity[1.], LineBox[CompressedData["
1:eJwd1WWgFWUUBdBHSKeUdJd0I43SqISIgJR0SUspIaKkNEh3SKiggEp3d5d0
d4Ok6/PHYu9z5j2YO3FJ36RDzfaRIiIiSkWOiAj5iz8KclAfSE0K4HBEFKLy
Fr/6mUIc0gfxCQWJxm/2hTmsD6YWhdht9wn39Xl0IjpL7IpwRB/CpxRmj10t
Hujz6UwMltoV5ag+lNpcMLcmOqvNRdirf8pD/We6cMf8FYnYbo7J7/p7HNOH
8UzvS2o+M1+UbYjBmvD5XYxh+rvhPMz7ZG0e6W87NlFfoL+W35ORNPZzZVf7
u7IbOewSy+RyhtzhWGx9tJ5X5pUZ5IJwfjKW43/oxchiPm6OL8ebC8gfzf/q
/chlTiNTydnhfsg6jl/S2xKTpHZT5dpw38Lvh3MK/5Z5f/jsPNYX8kb/gUzh
+pnvye4kYWc4b5bpxTmhD6cul83tiMU6czEO6HV4oi+iG3FYbleCk/oI6lGc
g3Z1eaovpjtxWWFXklP6SD6nBPH4074Up/VR1KdkuF4kIGG4VyTilocqsUxC
Uv7ye6X5Rx9Ng/B+kIy/7ctwRh9DQ0pzyK4ez8I7RA/eYaVdWc7qY2lEGQ7b
fc6/4V2iJ8lZZfc+5/RxNOaK+Utis95cliN6fZ6H941e3Df3CPeVXeYUrNY/
4Lw+nuf6t6TlC/NVGb4A4rAhvI+eg+F6znAe5qOyAS/CtXJskr5ED18IA/XM
fG18IHuSjBSOzZS7w33Vx+j5ZL7wLsiF4RmWKR1fo5cjq/lCuDfyJ3PBkOYX
en9ym9OFd1LOCd8Xsonj1/QO4V00xw3/vpwmN4bvCn1EeBdIp88P18L+mGzI
Sz2x/WR9qR5JHxTeLb4xP5S9eIc95lSs1ctzUZ9AU66bOxKPTeZyHNcb8Sp8
v9Cb1Kyzq8AlfSLNKM8Ju8a8Du84fUjDeruKXNYn0ZwKpGWDfSWu6JNpQUXS
kZ4MZOS25zuTzEwWNvqdylzVp9CSSmRlk30VrulTaUVlTobnhTf6MvqSjc12
VbmuT6M1VThl1yRSxP//qSwX/cjOFvOH3NCn04Yb5k7EZ7O5Kqf1pkRiRXjc
3JvB4TkJz6/5UXjuSM5e87ts1T/ipj6Dl/p3pKet+absTIJwT/190+UW+5j6
yPCMhZ/Vfw7naP+PbEZ2u8gyiZwi/3Qsij5EzyOzhfdJzpNFZX/HH4dnKLxH
5hQypZwlC8l9jseVY835ZX6ZSS6SxWUOx7fpH5PNfMucUE4wz9RfyQFkoJ35
luxCQraaY/nZUeHcwvUwn5HNicJf5qiODw2fK1wf8xPZO5wj+8052a5X47Y+
iy/Dc2TuyttsM3/MWb0FUfnbPIBc7DBX544+m/ZU45xdS95ipfl7crPTXIO7
+hw6UJ085CUfuxyvyT19Lh2pwXm7VkRjlfkHnup9SMUBczyfeZxegMz6Ylki
XHvH/gNm6AuM
          "]]},
        Annotation[#, "Charting`Private`Tag$115936#1"]& ], 
       TagBox[
        {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], 
         Opacity[1.], LineBox[CompressedData["
1:eJwV1GW4VFUYBtChG6S7UywQFItGurulW0IFpFFSQbq7u5FUQkC6u0uREKWR
xrV/rOf93r333Dkz95zJ3KRD1fZRIpFI+qiRSEEORYtEGlA0eiQSVeaW62VF
+av95HK2XkqWlh/JnXKIvYh5mDkfecyb5T/WM5uXm6vTQf9bdiMDp/W09heG
92C+Hl+fZC7MU70Qh80NicYmfShRnBuu5+dfvSO3zd3JyBl9AYU5on9BdDbr
P9GJf/QeZOKsvpAiHNUbEYMt+jC+oijHrDUmJlv14XxNMYpTgs8pSSlKc9zZ
JsTiN30E3/Cv3pPMnNMXUYYTelNis00fSWfu6L3Iwnl9MWU5qTcjDtv1UUT1
/YzQP+CO3oW75t5k5YK+hATOTdaL8Ewvxylzc+KyQ0/hzBxzGUbr0fSR5g+5
q2fRV5hr0FW/J/uQjXfs/SIvWk9nXmSuxKfmPXKp9YTmKeYSsmi4ZrldVpbP
7eeUa/Rysq4sJPeH95Pl7Z82t6CYHk++JTeE95G/208p5+qlZVn5sdwlx9iL
bh5lLkBe8xZ5z3pW80pzTb7V78u+ZOeSnt7+4nCNLNMT6VPDNfBCr8AZc0vi
s1MfSwznRodnh/t6Nx6YvyMHl/XlVOSs3ooE7NLH0Z2H+vfk5Iq+gkqc01uT
kN36eHpQmfPW2pCIPfoEelKFqlSjOjWoyY3YkUgtWZs6XPC6trzBXn0ivajL
RWvtSMw+fRK9eaT3IxdX9ZXU45L+JUnYr0+mD4/1/rzJH/oq6nNZb09SDuhT
iOl7HBP+lzzQ+/KfeQC5+VNfzRvOTdOL81JvwBVzB5JxUE/lzLxwfzFVj6WP
NX/C++at8qH1bOZV5lrh/6U/kQPD/ca74TdSXrOewbwkPC+yivxM7pXV5M/2
E8vp+ueyRHiO5A5ZRb6yn0uu1cvLerKwPBDuRdnQ/lVzx/CZ9OTybblRHrKX
2jw/vDZcv3m3nGY9tnlceO7IZ/5NPrKe3bzaXDvcU/pTOSj8Tf7SM9pfaq7K
Gj2JPiNcO6/1L/jD3IkUHNanE8e58eGz81jvxzPz4PCbwHV9LY34U/+KlBzR
Z9Cf5/oP4bvlhr6OxlzTvyYVR/WZDKAJTWlGc1pw033cUraiNX95zTek5pg+
i4G04bq1zqThuD6bQbzQf+Q9burraRueEb0LaTmhz2EwL/Uh5OGWvoF24Vr0
rqTjpD6XuL6nCXpB/tN/4JV5KHn5W99IUudm6iWJhOfH2i35Lek5padxZoG5
AvP0ePpEcyHym7fJJ9ZzhPvQXCd8Lv21/Cnc6+Ez2tskb1vPZF5mLiurhWuU
+2T18JtuP5mcFa5JlpIFwu9tuFdklPAcy3XhemR9WUQeDM+PbO/1/wOl1RB3

          "]]},
        Annotation[#, "Charting`Private`Tag$115936#2"]& ], 
       TagBox[
        {RGBColor[0.560181, 0.691569, 0.194885], AbsoluteThickness[1.6], 
         Opacity[1.], LineBox[CompressedData["
1:eJwV1WW4VFUYhuGhQzoFpLtDEKQbRQUFRZQGaSWlQWlFuiQVpKS7Q7oEKSkB
6ZTuBu/147me733X2mdmz6w9J2PjtjXaRIlEInmiRiK1o0ciD2NEIr3RKmYk
kpE/5TPclf+xXop3yR24JTfk69yTf7eenZfKbbgmf8mXuDu/wVX5CHfiztyU
7/BPrk1i/sVcGp+bz/MjfUXzfnM7NDHf4m36t81/mBugnvkqp0S18F7Da+IL
+x5xH2TCCbm09d3hHjFbziEvC/eKePhAPspdMNh6UvlXcxk8livJB8ztsV0u
LG8MnwXeDPese8x9kRkn5TnIad9y+TPExxBdMt0Uc1k8kXegDp7I/ZAFp+S5
yGXvCrkWEmCoLrluqrkcnso7URdP5f7Iin/leRiGFPb/piuPZ/Iu1MMzeQCy
4bQ8H8OR0v5pugp4Lu9GfTyXByI7zsgLMAIN8EL3A3LgrLwQI9EQjdAYTfAV
mqIZmqMFXrrmR+TEOXkRRqElXukGIRfOy4sxGm96j9N1FfFC/hOt8DqcK+TG
BXkJxiCV/TN0lfBS3oPWiOgH6/LgorwUuXUrw3lEQozVpdbNNFfGK7myfDA8
E9grF5E3mRshFarLJ7gHvrYeRR5izhvOgvksX9KXMf9pbh2uNd/gZfo85lXm
tlyb6/BlToQPzce4M3flZnyXv+efXZuGZ4XX5Spcmy9wN35tvQofkr/ljvwV
3+bv+C/r7/DmcNa5Mdfna5waH5tPhmcf39gbVR5qzofLcll5T3htLJfzyqvD
M4nEGKd7K/xumN9DBPt0RXVbwrOONGiji6YbZs6PK/IK5NOtCc8bkmC8Lq1u
tvl9RMF+XVtE1w+XC+CqvBITkE4/R1cVUXFA1w4x9CPkgrgmr8JEtEdMayP1
hfCfvBqT0AEd8S06oTO64FJs3w13Q3fEcv0o176N6/IaTEYPxLY2Wl8YN+S1
+AXp9XPDbxOi4aCuJ+Lox8hFcFNeh1+RQT8vnA9ExyFdL8TVj5XfwS15PfLr
1oZzhaSYosuom2/+CDHwt66Ybms4I3grnBHdG+GcmYvitlxO3hvOAzbIBeR1
5rpIhqm6TLoF5mqIGb57+e9wBnHY+rvyNnNTNDD/x2nxifkU90IL8/1wzu2P
Zx4XnhsuxrX4HN+xVj6cY3NHbsON+Wb4G+F/h/WCvF5ux/XC++Qr4Vnl5OH+
+Th34W7cnO9x7/A76vrMvDDcL1cPZ5svcqxwBs2HuROO2Ftc3h6eUaRDDfnf
8DmGv2c9vjze/C7uyhXkfeG5x0a5kLwhPINIgWm6LLpF4VlEbBzVldDtCO8V
6dFHl0A3wVwc9+RNmI6s+sXhs0UcHNP1RUL9RLkE7subMQP9kMjaJH1JPJC3
YCb6YwAG4gdcdu5/5MT2T7a3FB7KWzEL2fRLwueAuDiuK6nbGb5fZEBN+XT4
ntHS/CDcDw+y939P5x9F
          "]]},
        Annotation[#, "Charting`Private`Tag$115936#3"]& ], 
       TagBox[
        {RGBColor[0.922526, 0.385626, 0.209179], AbsoluteThickness[1.6], 
         Opacity[1.], LineBox[CompressedData["
1:eJwV1XfcTnUYB+DHCmVlizKztyIUIiPZW/Zrb8ose8te2Xvvmb33DpG9laxK
KSLp+v1xfe7v/T3P6e05zzlH+qiO1TpEi0QiUdEjkQGvRSJl4kQi+2JHIkfM
z83VZk4u8Lr9WzMJp1lm32kW5So/OL+3+Vx/whxnbjLf4zIf2xeY6TnHZvv+
0HOdDc5vbt7SHzN7muvNvGSTZ5pvhb/DWvsesxh/OG+EGYfZ+m3mB1SWl5qZ
2SEfNEsx0OfLmvt19Vgj5+INebKZlOXyWZ/rI7+Qx7NZfp+S8kIzA1vk73yu
hXxb/ooNcj6yy7PM1KyT//S5kXJc5tirsEzOwk55kOPl5ANyfeIxxZ6MFfI5
x/vK/8oTKMVGXUvdHflrcjDbnob18hPHR4Xfjrn2qgzWfWo/KDcgPj/q+ule
yhP5JPx2ula6n+Re5OQv3ehwrZhnr8YQXXn7IbkhCTiv66/7T55E6XD9dK11
P8u9ycXfuqF8pj9sb0RCLugG6F6Fe44ybNG10d2V+5Cbp7phVNAfsTcmERd1
W2mr/8Xelzw80w2nov6ovQlvckm3jXb6e/Z+5OUf3TdU0h+zR5GYy7rttNff
t/cnH8/DvUhl/XF7U5JwRbcj/P5UceyErhlJuarbGX4nqjp2UtecZFzT7QrX
nDGMZRzjmcBEJvEtk5lCNf+N753bguRc1+2mg/6BfQD5eaGbSnX9KXtLUnBD
t4eO+of2gRTgX900aoTn396KlNzUDdRFmGwvy15dJ/ujcF/zHi/Dd9DFY769
OtN1Ne1n5NakYqo9OSvlW44PkqMxxV6ORXJGtsr7HO8s/xru6/AsyvnDcyrP
Md8O75Xw/2MWD/djuIZm/PCdWeDYdrMwNeTlZlbOs8t+yPyEm8xwbq3w/tEf
NduYa83cXAzvJvs0M0X4Pqyy7zI/5Fp4Pzh/sBk9/MZMDfe0WZBP5cVmJrbJ
+332C/m38HxRkLn2d/hOfhXuAzkBC+01mamrbT8rtyU1d3RDdDGYZi/PAd2X
9t/loRQiwix9Hf05uR1p+El3kC76x/ZhfEC08J7R19X/KLfnbX7WHWIOn4fr
qOvAO9zVHWYu9Ry7oOtIWn7RHWEe81nAQhaxmNs+v8RcyjLqh2vuvE6k457u
KMtp4NglXWfSc193jK7h3wr7cAoTnRX6hvrL8hdk4IHuON30f9q/oQgxWKlv
pL8if0lGHoZ3mC4m0+2fcULX3f5EHkFRYrJK31h/Ve5CJh6Fd5guVrjH7BU4
qeth/0seyYfMs6dloxyL8XJCFsm1wneRs7FbXu38JuG+k7uyTs7Du+GZM1Oy
Wt5tfhSen/BeNF8L7w5mOrbVLBS+KxXtS8L54fdme7iPzJLcCOc4v6f5t/64
OcrcaBYIv0X4G/b5Zrpwf7IpPLtmifA35QlmIhbLO8wi1A7X28zOHnmNvxEl
X5e7kZkZ9lSskX8L72o5NrPslTil+8r+VB5NMWIzUfdmuKfkOuE59rmm4bvI
3cnC77rTfK1/Zh9DceKE66lvFt4Lcg+y8lh3hl76f+xjKUFcJukSs1SuG+4D
OQd75cNmaW6x3vn/A2oKVpA=
          "]]},
        Annotation[#, "Charting`Private`Tag$115936#4"]& ]}}], {}},
   AspectRatio->NCache[
     Rational[3, 4], 0.75],
   Axes->{True, True},
   AxesLabel->{None, None},
   AxesOrigin->{0, 0},
   DisplayFunction->Identity,
   Frame->{{True, True}, {True, True}},
   FrameLabel->{{
      FormBox[
       StyleBox["\"y on left\"", 8, StripOnInput -> False], TraditionalForm], 
      FormBox[
       StyleBox["\"y on right\"", 8, StripOnInput -> False], 
       TraditionalForm]}, {
      FormBox[
       StyleBox["\"x on bottom\"", 8, StripOnInput -> False], 
       TraditionalForm], 
      FormBox[
       StyleBox["\"x on top\"", 8, StripOnInput -> False], TraditionalForm]}},
   FrameTicks->{{Automatic, {}}, {Automatic, {}}},
   FrameTicksStyle->Directive[
     RGBColor[0, 0, 1], 8],
   GridLines->{None, None},
   GridLinesStyle->Directive[
     GrayLevel[0.5, 0.4]],
   ImagePadding->All,
   ImageSize->{216, 162},
   Method->{
    "DefaultBoundaryStyle" -> Automatic, 
     "DefaultGraphicsInteraction" -> {
      "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
       "Effects" -> {
        "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
         "Droplines" -> {
          "freeformCursorMode" -> True, 
           "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
     "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None, 
     "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
         (Identity[#]& )[
          Part[#, 1]], 
         (Identity[#]& )[
          Part[#, 2]]}& ), "CopiedValueFunction" -> ({
         (Identity[#]& )[
          Part[#, 1]], 
         (Identity[#]& )[
          Part[#, 2]]}& )}, "AxesInFront" -> True},
   PlotLabel->FormBox[
     StyleBox["\"Plot label\"", 9, StripOnInput -> False], TraditionalForm],
   PlotRange->{{0, 10}, {-0.3461261180190739, 0.581865061766651}},
   PlotRangeClipping->True,
   PlotRangePadding->{{
      Scaled[0.02], 
      Scaled[0.02]}, {
      Scaled[0.05], 
      Scaled[0.05]}},
   Ticks->{Automatic, Automatic}],
  ContentPadding->False,
  FrameMargins->{{0, 0}, {0, 0}},
  FrameStyle->RGBColor[1, 0.85, 0.85],
  StripOnInput->False]], "Output",
 CellChangeTimes->{
  3.773687053237857*^9, {3.773687176856907*^9, 3.7736872384579782`*^9}, 
   3.7736872994752007`*^9, {3.773687348475229*^9, 3.773687403753231*^9}, {
   3.7737498471072187`*^9, 3.773749855912183*^9}, {3.773750118259189*^9, 
   3.7737501327151856`*^9}, {3.773750185958519*^9, 3.773750207459958*^9}, {
   3.7737502386766896`*^9, 3.773750261796719*^9}, {3.7737503198962717`*^9, 
   3.77375033856328*^9}, 3.7737549221587067`*^9, {3.7737549648883057`*^9, 
   3.7737550134214697`*^9}, {3.773755099352467*^9, 3.773755108420434*^9}, {
   3.773755140870578*^9, 3.773755146315572*^9}, 3.7737551786945763`*^9, {
   3.7737552373185773`*^9, 3.773755432282642*^9}, {3.7738428764554005`*^9, 
   3.773842891622402*^9}, 3.7738429898205824`*^9, 3.773843062802579*^9, 
   3.7741823229849234`*^9, 3.7741823667938986`*^9, 3.774182407197875*^9, 
   3.7741826270487137`*^9, 3.774182715973889*^9, 3.77418278737589*^9},
 CellLabel->
  "Out[305]=",ExpressionUUID->"3b43006d-19a7-4f0c-99aa-4ff55a08b94b"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"216", ",", "162"}], "}"}], ",", 
   FractionBox["3", "4"], ",", "0.75`"}], "}"}]], "Output",
 CellChangeTimes->{
  3.773687053237857*^9, {3.773687176856907*^9, 3.7736872384579782`*^9}, 
   3.7736872994752007`*^9, {3.773687348475229*^9, 3.773687403753231*^9}, {
   3.7737498471072187`*^9, 3.773749855912183*^9}, {3.773750118259189*^9, 
   3.7737501327151856`*^9}, {3.773750185958519*^9, 3.773750207459958*^9}, {
   3.7737502386766896`*^9, 3.773750261796719*^9}, {3.7737503198962717`*^9, 
   3.77375033856328*^9}, 3.7737549221587067`*^9, {3.7737549648883057`*^9, 
   3.7737550134214697`*^9}, {3.773755099352467*^9, 3.773755108420434*^9}, {
   3.773755140870578*^9, 3.773755146315572*^9}, 3.7737551786945763`*^9, {
   3.7737552373185773`*^9, 3.773755432282642*^9}, {3.7738428764554005`*^9, 
   3.773842891622402*^9}, 3.7738429898205824`*^9, 3.773843062802579*^9, 
   3.7741823229849234`*^9, 3.7741823667938986`*^9, 3.774182407197875*^9, 
   3.7741826270487137`*^9, 3.774182715973889*^9, 3.7741827879698887`*^9},
 CellLabel->
  "Out[306]=",ExpressionUUID->"581c4176-d248-43ae-a49f-a0bf05727a1a"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["On to Images...", "Subchapter",
 CellChangeTimes->{{3.773843130162216*^9, 
  3.773843134432211*^9}},ExpressionUUID->"1bd1934c-c8be-4b54-93f4-\
3118a6d0fb6d"],

Cell["\<\
So far we\[CloseCurlyQuote]ve seen how to control and size and aspect ratio \
of graphics.  How about images made from arbitrary stuff like equations, \
tables, grids and so on?

Make an equation:\
\>", "Text",
 CellChangeTimes->{{3.7737556648748436`*^9, 3.7737556893468757`*^9}, {
   3.7737557288298435`*^9, 3.7737558046128807`*^9}, 
   3.7737561659740047`*^9},ExpressionUUID->"32994b4f-7559-4aa8-97eb-\
8d66dc153992"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"ClearAll", "[", "equ", "]"}], "\[IndentingNewLine]", 
 RowBox[{"equ", "=", 
  RowBox[{"1", "+", 
   RowBox[{"a", " ", 
    SuperscriptBox["x", "2"]}], "+", 
   SqrtBox[
    FractionBox[
     RowBox[{"b", " ", 
      SuperscriptBox["y", "3"]}], 
     RowBox[{"a", "+", "x"}]]]}]}], "\[IndentingNewLine]", 
 RowBox[{"equ", "//", "Head"}], "\[IndentingNewLine]", 
 RowBox[{"equ", "//", "FullForm"}]}], "Input",
 CellChangeTimes->{{3.773680955062899*^9, 3.773680999093988*^9}, {
  3.7736812017819614`*^9, 3.7736812054819984`*^9}, {3.7736819519011526`*^9, 
  3.773681963439205*^9}, {3.7738480569757237`*^9, 3.7738481557492*^9}, {
  3.7738481944301696`*^9, 3.773848218442196*^9}, {3.7738482748371964`*^9, 
  3.7738483059582047`*^9}},
 CellLabel->
  "In[307]:=",ExpressionUUID->"e384f534-f64b-4b5e-963d-253d55ae6140"],

Cell[BoxData[
 RowBox[{"1", "+", 
  RowBox[{"a", " ", 
   SuperscriptBox["x", "2"]}], "+", 
  SqrtBox[
   FractionBox[
    RowBox[{"b", " ", 
     SuperscriptBox["y", "3"]}], 
    RowBox[{"a", "+", "x"}]]]}]], "Output",
 CellChangeTimes->{{3.773848156243206*^9, 3.7738482205351954`*^9}, {
   3.773848277234169*^9, 3.7738483069072247`*^9}, 3.7741825178589387`*^9, 
   3.7741828894398885`*^9},
 CellLabel->
  "Out[308]=",ExpressionUUID->"ad491d5e-87c3-4708-9383-68b10bc2765c"],

Cell[BoxData["Plus"], "Output",
 CellChangeTimes->{{3.773848156243206*^9, 3.7738482205351954`*^9}, {
   3.773848277234169*^9, 3.7738483069072247`*^9}, 3.7741825178589387`*^9, 
   3.774182889446889*^9},
 CellLabel->
  "Out[309]=",ExpressionUUID->"c9749b2e-8311-4ac5-9ffa-aca0e7c35b95"],

Cell[BoxData[
 TagBox[
  StyleBox[
   RowBox[{"Plus", "[", 
    RowBox[{"1", ",", 
     RowBox[{"Times", "[", 
      RowBox[{"a", ",", 
       RowBox[{"Power", "[", 
        RowBox[{"x", ",", "2"}], "]"}]}], "]"}], ",", 
     RowBox[{"Power", "[", 
      RowBox[{
       RowBox[{"Times", "[", 
        RowBox[{"b", ",", 
         RowBox[{"Power", "[", 
          RowBox[{
           RowBox[{"Plus", "[", 
            RowBox[{"a", ",", "x"}], "]"}], ",", 
           RowBox[{"-", "1"}]}], "]"}], ",", 
         RowBox[{"Power", "[", 
          RowBox[{"y", ",", "3"}], "]"}]}], "]"}], ",", 
       RowBox[{"Rational", "[", 
        RowBox[{"1", ",", "2"}], "]"}]}], "]"}]}], "]"}],
   ShowSpecialCharacters->False,
   ShowStringCharacters->True,
   NumberMarks->True],
  FullForm]], "Output",
 CellChangeTimes->{{3.773848156243206*^9, 3.7738482205351954`*^9}, {
   3.773848277234169*^9, 3.7738483069072247`*^9}, 3.7741825178589387`*^9, 
   3.7741828894548893`*^9},
 CellLabel->
  "Out[310]//FullForm=",ExpressionUUID->"aa67d2aa-22f4-40b8-967d-\
b9111bafd6de"]
}, Open  ]],

Cell["\<\
Frame the equation to see the area WL gives the equation automatically.\
\>", "Text",
 CellChangeTimes->{{3.773755867784748*^9, 3.7737559022601337`*^9}, 
   3.773756173574005*^9},ExpressionUUID->"06906aaa-cd5b-4252-9f6c-\
8473961526a7"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Framed", "[", "\[IndentingNewLine]", 
  RowBox[{"equ", ",", "\[IndentingNewLine]", 
   RowBox[{"FrameMargins", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0"}], "}"}]}], "}"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"ContentPadding", "\[Rule]", "False"}], ",", "\[IndentingNewLine]", 
   RowBox[{"FrameStyle", "\[Rule]", "LightRed"}]}], "\[IndentingNewLine]", 
  "]"}]], "Input",
 CellChangeTimes->{{3.774182613829718*^9, 3.7741826143367186`*^9}},
 CellLabel->
  "In[311]:=",ExpressionUUID->"85ff80ca-acf9-454b-8ea7-abcfb57df5ec"],

Cell[BoxData[
 FrameBox[
  RowBox[{"1", "+", 
   RowBox[{"a", " ", 
    SuperscriptBox["x", "2"]}], "+", 
   SqrtBox[
    FractionBox[
     RowBox[{"b", " ", 
      SuperscriptBox["y", "3"]}], 
     RowBox[{"a", "+", "x"}]]]}],
  ContentPadding->False,
  FrameMargins->{{0, 0}, {0, 0}},
  FrameStyle->RGBColor[1, 0.85, 0.85],
  StripOnInput->False]], "Output",
 CellChangeTimes->{
  3.7737558612348814`*^9, 3.77384315890421*^9, 3.7738482306182036`*^9, {
   3.77384828042617*^9, 3.773848309100204*^9}, 3.7741826154227147`*^9, 
   3.7741828950608916`*^9},
 CellLabel->
  "Out[311]=",ExpressionUUID->"c38f6c99-3199-4410-8861-e03440d6c352"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"ClearAll", "[", "rstr", "]"}], "\[IndentingNewLine]", 
 RowBox[{"rstr", "=", 
  RowBox[{"Rasterize", "[", "\[IndentingNewLine]", 
   RowBox[{"Framed", "[", "\[IndentingNewLine]", 
    RowBox[{"equ", ",", "\[IndentingNewLine]", 
     RowBox[{"FrameMargins", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0"}], "}"}]}], "}"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"ContentPadding", "\[Rule]", "False"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"FrameStyle", "\[Rule]", "LightRed"}]}], "\[IndentingNewLine]", 
    "]"}], "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"rstr", "//", "Head"}], "\[IndentingNewLine]", 
 RowBox[{"{", 
  RowBox[{
   RowBox[{"ImageDimensions", "[", "rstr", "]"}], ",", 
   RowBox[{"ImageAspectRatio", "[", "rstr", "]"}], ",", 
   RowBox[{"N", "@", 
    RowBox[{"ImageAspectRatio", "[", "rstr", "]"}]}]}], "}"}]}], "Input",
 CellChangeTimes->{{3.7737559289521465`*^9, 3.773755986179902*^9}, {
  3.773757959362917*^9, 3.7737579734558964`*^9}, {3.774182969935899*^9, 
  3.7741829704488935`*^9}},
 CellLabel->
  "In[312]:=",ExpressionUUID->"7d3c277a-7cdc-4acc-94df-d5e06cf2ce69"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJztmz2P2jAYx1G7dOxX6NwvUGXrRter+gHuVHx04RBXqXRiZMQbIyMjWxgZ
MzKiUwZuY2TMmD52SEgi24+T+LDi5q+ASOzYl5/8vDm6Tw9Pd+Rdr9d7/gBf
d/d/vk4m93+/f4STH6PnX4+jwc9vo9+Dx8Hky8N7uPgZPk/wYb/jTgb1+hq/
vHSHgSMh2cmIEqRuaTwez26ozWZzmdhFmMPh0M7ELsKElWlnYudgns/n6XRq
Z27nYO73+/V6bWdu52ACySAIjA0X+sRjIn6Id3YO5nw+B0uXNPqkR/w6o4bU
07jROZjK6FMPZgjLk+jc18FEFfq+T8l/uTKVoZzDhC8ujxbcIFhy7lLxTNPO
3YIJ3hJ8prydc0yglGklrekV1sr7hZRweYTiEcgtmFhelDfzjFehOaEJbZ4G
vLLcggkkgae8HYGZQqwb9N2COZvNoiiSt+coMYsXEIO0ktK6CZQ1mOCMeDJc
w5rkwqryNPYI4k+hSz2WFmGGDZyTTAaq8lwUqizLZq5XWWirMUyJ8WvKKkyW
d5hDCXnRYrGofXviAhrZyRUmi2713UV1MZJGHWYQBNdNbyu6wEw8hShbeCPx
deB5JmMQ5EWHw8HIUDVVMHMMJlSpkufOh8nyCIX4yE50TUk+nVBYXvT2qgTT
pzgG4RipX68WKnWmywlgKprMSrzLpwszZIKn8/kPwYPnlqZojIoeGZtOJAXM
G0kPZsi2odhGFKH8R/nxRFsEpREoc4+aMLHpxGoLzItkdpfbgREXEBfYgp0a
lSTTnU4nqHS2223pYpO8yIyu0bwgMVK5E8vuF1S2+ZjDrV2Xp2S65XIJ6Eov
xyEvKuG1oNZudJSiwGq1Oh6P9v4crtbChJQSlmh2at9hxi2GGRf3iDqYDQUR
JzPtDmZDQRjK3vgoX/0wqWq0TLKaS7OIazPMOLV0oJr3n4gUCaCi5tIp4loO
M3npA3nRbrdDuiI1Gl5z4UVcy2FGUQQGDnkRLE5lR6RG06m58CKu5TBjvruO
Oky8RkukNnO0iGs/TDDwfr+PdlPVaNdOEpiaRVz7YcZG3qMZkRMwMYd5KwFJ
iF3W/4PGjUN357WTlv4BFfEM2Q==
    "], {{0, 43}, {111, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSizeRaw->{111, 43},
  PlotRange->{{0, 111}, {0, 43}}]], "Output",
 CellChangeTimes->{{3.773755965682828*^9, 3.7737559882069044`*^9}, 
   3.773757975521891*^9, 3.77384317200121*^9, 3.773848233700205*^9, 
   3.7738483104591684`*^9, 3.774182974319888*^9},
 CellLabel->
  "Out[313]=",ExpressionUUID->"7d25b0eb-4fb9-4d60-a32d-40d760c82b32"],

Cell[BoxData["Image"], "Output",
 CellChangeTimes->{{3.773755965682828*^9, 3.7737559882069044`*^9}, 
   3.773757975521891*^9, 3.77384317200121*^9, 3.773848233700205*^9, 
   3.7738483104591684`*^9, 3.7741829743258905`*^9},
 CellLabel->
  "Out[314]=",ExpressionUUID->"3428cf20-63da-4d44-a938-6b516b4b33fb"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"111", ",", "43"}], "}"}], ",", 
   FractionBox["43", "111"], ",", "0.38738738738738737`"}], "}"}]], "Output",
 CellChangeTimes->{{3.773755965682828*^9, 3.7737559882069044`*^9}, 
   3.773757975521891*^9, 3.77384317200121*^9, 3.773848233700205*^9, 
   3.7738483104591684`*^9, 3.7741829743308883`*^9},
 CellLabel->
  "Out[315]=",ExpressionUUID->"403cdd2f-7570-4190-bb74-3b96dd4200b8"]
}, Open  ]],

Cell[TextData[{
 "Rasterize[ ] and it\[CloseCurlyQuote]s option RasterSize:\nThe option for ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["Rasterize"]],"paclet:ref/Rasterize"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "626fc34f-0a5b-403f-97a1-f925cc792308"],
 " and related functions that determines the absolute pixel size of the \
raster generated.\n",
 Cell[BoxData[GridBox[{
    {
     StyleBox["w", "TI"], Cell[TextData[{
      "width ",
      Cell[BoxData[
       StyleBox["w", "TI"]], "InlineFormula",
       FontFamily->"Source Sans Pro",ExpressionUUID->
       "85ac9da7-4504-4de7-9a91-37a9c972a477"],
      " pixels"
     }], "TableText",ExpressionUUID->"93da5a60-16d2-4041-bd13-2c9b564bef97"]},
    {
     RowBox[{"{", 
      RowBox[{
       StyleBox["w", "TI"], ",", 
       StyleBox["h", "TI"]}], "}"}], Cell[
     "explicit pixel width and height ", "TableText",ExpressionUUID->
      "1c1f8a8a-038a-4db9-83b5-0410d88a136a"]},
    {
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        SubscriptBox[
         StyleBox["w", "TI"], 
         StyleBox["max", "TI"]], "}"}], ",", 
       RowBox[{"{", 
        SubscriptBox[
         StyleBox["h", "TI"], 
         StyleBox["max", "TI"]], "}"}]}], "}"}], Cell[
     "pixel width and height maximums", "TableText",ExpressionUUID->
      "788b22c8-3215-4186-b2da-d2840749bda2"]},
    {
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         SubscriptBox[
          StyleBox["w", "TI"], 
          StyleBox["min", "TI"]], ",", 
         SubscriptBox[
          StyleBox["w", "TI"], 
          StyleBox["max", "TI"]]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         SubscriptBox[
          StyleBox["h", "TI"], 
          StyleBox["min", "TI"]], ",", 
         SubscriptBox[
          StyleBox["h", "TI"], 
          StyleBox["max", "TI"]]}], "}"}]}], "}"}], Cell[
     "pixel width and height ranges", "TableText",ExpressionUUID->
      "54c4c882-8071-4d09-9049-17cb3acbeabc"]}
   },
   GridBoxAlignment->{
    "Columns" -> {Left, {Left}}, "ColumnsIndexed" -> {}, 
     "Rows" -> {{Baseline}}, "RowsIndexed" -> {}}]],
  GridBoxOptions->{
  GridBoxBackground->{
   "Columns" -> {{None}}, "Rows" -> {None, None, None, {None}}},
  GridBoxDividers->{"Rows" -> {{True, True, True, True, True}}}},
  ExpressionUUID->"31d0f279-3ce9-46e3-b28c-369dc9de8076"],
 "\n",
 StyleBox["(",
  FontSize->9],
 StyleBox["Wolfram documentation",
  FontSize->9,
  FontSlant->"Italic"],
 StyleBox[")\n\n",
  FontSize->9],
 StyleBox["Note the use of Framed so that we can use the option, ImageSize!\n\
\nPlay with rsMult, you will notice:\n- as rsMult goes from 1 to n aspect \
ratio converges and ImageDimensions (gives the pixel dimensions of an image) \
increases.  \n- the overlap of the raster area and the frame border at \
various increments \n- as the ImageDimensions -> screen resolution (my \
screen: 1920 x 1020) clarity/crispness improves.",
  FontSize->16]
}], "Text",
 CellChangeTimes->{
  3.7737561050198975`*^9, {3.773844156130589*^9, 3.7738442352222624`*^9}, {
   3.773845184184346*^9, 3.7738451957603483`*^9}, {3.7738452462373066`*^9, 
   3.773845329674717*^9}, {3.7738456929834833`*^9, 3.7738457053145113`*^9}, {
   3.7738459955054045`*^9, 3.7738460094024053`*^9}, {3.7738462532834787`*^9, 
   3.7738464050917807`*^9}},ExpressionUUID->"e2f37ecf-78d3-47c6-bf31-\
743c3660c360"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"ClearAll", "[", 
  RowBox[{"rstr", ",", "bpW", ",", "w", ",", "h", ",", "fs", ",", "rsMult"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"bpW", "=", 
   RowBox[{"72", "*", "2"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"w", "=", "16"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"h", "=", "9"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"fs", "=", "12"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"rsMult", "=", "13"}], ";"}], "\n"}], "\[IndentingNewLine]", 
 RowBox[{"rstr", "=", 
  RowBox[{"Rasterize", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Framed", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Item", "[", 
       RowBox[{
        RowBox[{"Style", "[", 
         RowBox[{"equ", ",", 
          RowBox[{"FontFamily", "\[Rule]", "\"\<Arabic Transparent\>\""}], 
          ",", 
          RowBox[{"FontSize", "\[Rule]", "fs"}]}], "]"}], ",", 
        RowBox[{"Alignment", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"Center", ",", "Center"}], "}"}]}]}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", "equ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"ImageSize", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"wPX", "[", "bpW", "]"}], ",", 
         RowBox[{"hPX", "[", 
          RowBox[{"bpW", ",", "w", ",", "h"}], "]"}]}], "}"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"FrameMargins", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "0"}], "}"}]}], "}"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"ContentPadding", "\[Rule]", "False"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"RoundingRadius", "\[Rule]", "10"}], ","}], "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"FrameStyle", "\[Rule]", 
       RowBox[{"Directive", "[", 
        RowBox[{"Red", ",", 
         RowBox[{"Thickness", "[", "1", "]"}]}], "]"}]}]}], 
     "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
    RowBox[{"RasterSize", "\[Rule]", 
     RowBox[{"rsMult", "*", "bpW"}]}], ",", "\[IndentingNewLine]", 
    RowBox[{"Background", "\[Rule]", "LightYellow"}]}], "\[IndentingNewLine]",
    "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"rstr", "//", "Head"}], "\[IndentingNewLine]", 
 RowBox[{"{", 
  RowBox[{
   RowBox[{"ImageDimensions", "[", "rstr", "]"}], ",", 
   RowBox[{"ImageAspectRatio", "[", "rstr", "]"}], ",", 
   RowBox[{"N", "@", 
    RowBox[{"ImageAspectRatio", "[", "rstr", "]"}]}]}], "}"}]}], "Input",
 CellChangeTimes->{{3.7737562503420277`*^9, 3.773756313264044*^9}, {
   3.773756420822807*^9, 3.7737564453228073`*^9}, {3.7737565114628077`*^9, 
   3.7737565271559925`*^9}, {3.773757099552533*^9, 3.7737571055715218`*^9}, {
   3.7737571833315325`*^9, 3.773757283134532*^9}, {3.7737573407067065`*^9, 
   3.7737573515496664`*^9}, {3.773757386904709*^9, 3.7737574151507034`*^9}, {
   3.7737579871949263`*^9, 3.773758000187888*^9}, {3.773758035341983*^9, 
   3.7737580962805853`*^9}, {3.7737581767666187`*^9, 
   3.7737582726935325`*^9}, {3.773758338097466*^9, 3.7737583689978204`*^9}, {
   3.7737584284428015`*^9, 3.773758430162786*^9}, {3.7738435291819305`*^9, 
   3.7738436072690344`*^9}, {3.7738436726165404`*^9, 3.773844023920564*^9}, {
   3.7738440894386015`*^9, 3.773844120654598*^9}, {3.773844269675296*^9, 
   3.773844324027296*^9}, {3.773844365029296*^9, 3.77384440788128*^9}, {
   3.773844445525466*^9, 3.7738444471364565`*^9}, {3.77384461870486*^9, 
   3.773844672561909*^9}, {3.773844985405224*^9, 3.7738451153934035`*^9}, {
   3.7738451531804094`*^9, 3.7738451533323936`*^9}, {3.773845202565351*^9, 
   3.77384522033735*^9}, {3.7738453844554462`*^9, 3.773845507987485*^9}, {
   3.7738455782274933`*^9, 3.7738456392984595`*^9}, {3.773845725940874*^9, 
   3.7738458390333614`*^9}, {3.773845878045066*^9, 3.7738459072720613`*^9}, {
   3.77384594555044*^9, 3.7738459874604335`*^9}, {3.773846030984442*^9, 
   3.7738460507324066`*^9}, {3.773846093196441*^9, 3.773846181282486*^9}, {
   3.773846217166461*^9, 3.7738462216394553`*^9}, 3.773846452543023*^9, {
   3.773847428857753*^9, 3.773847668798529*^9}, {3.7738477025905457`*^9, 
   3.773847731867457*^9}, {3.773847776365458*^9, 3.7738477826164613`*^9}, {
   3.7738482476251955`*^9, 3.773848257507194*^9}, {3.7738483198011694`*^9, 
   3.7738483303701687`*^9}, {3.7741831925508933`*^9, 3.774183225926893*^9}, {
   3.7741832778619432`*^9, 3.774183285818637*^9}, {3.7741833186391726`*^9, 
   3.7741833546521697`*^9}, {3.7741833975667686`*^9, 3.774183419896674*^9}, {
   3.774183489115881*^9, 3.7741834968860626`*^9}},
 CellLabel->
  "In[433]:=",ExpressionUUID->"81540305-a488-4b3e-b33b-80d208413e79"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
AAAAlEHeCwAAAABQBnkvAAAAAEAZ5L0AAAAAAGWQ9wIAAAAAlEHeCwAAAABQ
BnkvAAAAAEAZ5L0AAAAAAGWQ9wIAAAAAlEHeCwAAAABQBnkvAAAAAEAZ5L0A
AAAAAGWQ9wIAAAAAlEHeCwAAAABQBnkvAAAAAEAZ5L0AAAAAAGWQ9wIAAAAA
lEHeCwAAAABQBnkvAAAAAEAZ5L0AAAAAAGWQ9wIAAAAAlEHeCwAAAABQBnkv
AAAAAEAZ5L0AAAAAAGWQ9wIAAAAAlEHeCwAAAABQBnkvAAAAAEAZ5L0AAAAA
AGWQ9wIAAAAAlEHeCwAAAABQBnkvAAAAAEAZ5L0AAAAAAGWQ9wIAAAAAlEHe
CwAAAABQBnkvAAAAAEAZ5L0AAAAAAGWQ9wIAAAAAlEHeCwAAAABQBnkvAAAA
AEAZ5L0AAAAAAGWQ9wIAAAAAlEHeCwAAAABQBnkvAAAAAEAZ5L0AAAAAAGWQ
9wIAAAAAlEHeCwAAAABQBnkvAAAAAEAZ5L0AAAAAAGWQ9wIAAAAAlEHeCwAA
AABQBnkvAAAAAEAZ5L0AAAAAAGWQ9wIAAAAAlEHeCwAAAABQBnkvAAAAAEAZ
5L0AAAAAAGWQ9wIAAAAAlEHeCwAAAABQBnkvAAAAAEAZ5L0AAAAAAGWQ9wIA
AAAAlEHeCwAAAABQBnkvAAAAAEAZ5L0AAAAAAGWQ9wIAAAAAlEHeCwAAAABQ
BnkvAAAAAEAZ5L0AAAAAAGWQ9wIAAAAAlEHeCwAAAABQBnkvAAAAAEAZ5L0A
AAAAAGWQ9wIAAAAAlEHeCwAAAABQBnkvAAAAAEAZ5L0AAAAAAGWQ9wIAAAAA
lEHeCwAAAABQBnkvAAAAAEAZ5L0AAAAAAGWQ9wIAAAAAlEHeCwAAAABQBnkv
AAAAAEAZ5L0AAAAAAGWQ9wIAAAAAlEHeCwAAAABQBnkvAAAAAEAZ5L0AAAAA
AGWQ9wIAAAAAlEHeCwAAAABQBnkvAAAAAEAZ5L0AAAAAAGWQ9wIAAAAAlEHe
CwAAAABQBnkvAAAAAEAZ5L0AAAAAAGWQ9wIAAAAAlEHeCwAAAABQBnkvAAAA
AEAZ5L0AAAAAAGWQ9wIAAAAAlEHeCwAAAABQBnkvAAAAAEAZ5L0AAAAAAGWQ
9wIAAAAAlEHeCwAAAABQBnkvAAAAAEAZ5L0AAAAAAGWQ9wIAAAAAlEHeCwAA
AABQBnkvAAAAAEAZ5L0AAAAAAGWQ9wIAAAAAlEHeCwAAAABQBnkvAAAAAEAZ
5L0AAAAAAGWQ9wIAAAAAlEHeCwAAAABQBnkvAAAAAEAZ5L0AAAAAAGWQ9wIA
AAAAlEHeCwAAAABQBnkvAAAAAEAZ5L0AAAAAAGWQ9wIAAAAAlEHeCwAAAABQ
BnkvAAAAAEAZ5L0AAAAAAGWQ9wIAAAAAlEHeCwAAAABQBnkvAAAAAEAZ5L0A
AAAAAGWQ9wIAAAAAlEHeCwAAAABQBnkvAAAAAEAZ5L0AAAAAAGWQ9wIAAAAA
lEHeCwAAAABQBnkvAAAAAEAZ5L0AAAAAAGWQ9wIAAAAAlEHeCwAAAABQBnkv
AAAAAEAZ5L0AAAAAAGWQ9wIAAAAAlEHeCwAAAABQBnkvAAAAAEAZ5L0AAAAA
AGWQ9wIAAAAAlEHeCwAAAABQBnkvAAAAAEAZ5L0AAAAAAGWQ9wIAAAAAlEHe
CwAAAABQBnkvAAAAAEAZ5L0AAAAAAGWQ9wIAAAAAlEHeCwAAAABQBnkvAAAA
AEAZ5L0AAAAAAGWQ9wIAAAAAlEHeCwAAAABQBnkvAAAAAEAZ5L0AAAAAAGWQ
9wIAAAAAlEHeCwAAAABQBnkvAAAAAEAZ5L0AAAAAAGVIyXsBAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAKA9/vd/AAAAAAAU4P8BptDpjw==
    "], {{0, 1055}, {1872, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->{200, 112.5},
  ImageSizeRaw->{1872, 1055},
  PlotRange->{{0, 1872}, {0, 1055}}]], "Output",
 CellChangeTimes->{
  3.7737563227090545`*^9, {3.773756435692774*^9, 3.7737564469937744`*^9}, {
   3.7737565128118095`*^9, 3.7737565291969786`*^9}, 3.7737571075675077`*^9, {
   3.77375722252054*^9, 3.7737572362605033`*^9}, {3.773757275989503*^9, 
   3.7737572841965246`*^9}, {3.7737573447906914`*^9, 
   3.7737573523796687`*^9}, {3.773757387890701*^9, 3.773757415965699*^9}, 
   3.7737580044978895`*^9, {3.7737580520535603`*^9, 3.7737580638115807`*^9}, {
   3.773758204936632*^9, 3.773758242623262*^9}, 3.7737582747945423`*^9, {
   3.77375834146246*^9, 3.773758370694784*^9}, 3.773758432607817*^9, 
   3.77384353745093*^9, {3.7738435937899475`*^9, 3.7738436094860353`*^9}, {
   3.773843675043536*^9, 3.773843728755546*^9}, 3.7738437656546*^9, {
   3.773843811952606*^9, 3.7738438823975973`*^9}, {3.7738439580645638`*^9, 
   3.7738439820735774`*^9}, 3.773844042148589*^9, {3.7738440971365623`*^9, 
   3.773844121810561*^9}, {3.773844271058296*^9, 3.7738443253332963`*^9}, 
   3.7738443732692976`*^9, 3.77384440962429*^9, 3.7738444495834885`*^9, {
   3.773844630269823*^9, 3.7738446672148504`*^9}, 3.7738449085731907`*^9, {
   3.773844986146226*^9, 3.7738451168603716`*^9}, 3.773845156191723*^9, 
   3.7738452254782467`*^9, {3.77384538519845*^9, 3.7738455088554974`*^9}, {
   3.7738455792155085`*^9, 3.7738455920154943`*^9}, 3.7738456250864964`*^9, 
   3.773845675496497*^9, {3.773845729018845*^9, 3.773845839964354*^9}, {
   3.7738458792520313`*^9, 3.773845886177035*^9}, {3.773845927671777*^9, 
   3.773845973027441*^9}, {3.7738460267774043`*^9, 3.7738460521394067`*^9}, {
   3.7738460949104033`*^9, 3.77384618379849*^9}, 3.773846223515484*^9, 
   3.773847446776619*^9, {3.7738474789251313`*^9, 3.7738475197380943`*^9}, 
   3.7738476913275127`*^9, {3.773847723739175*^9, 3.7738477335744925`*^9}, {
   3.773847778361458*^9, 3.773847783644457*^9}, 3.773847832175463*^9, {
   3.7738482411071835`*^9, 3.7738482590021715`*^9}, {3.7738483151852036`*^9, 
   3.7738483314321747`*^9}, {3.774183206571889*^9, 3.774183227038891*^9}, {
   3.774183278759906*^9, 3.7741832874501696`*^9}, {3.7741833193791704`*^9, 
   3.774183355835168*^9}, {3.7741833986247673`*^9, 3.774183420860671*^9}, {
   3.774183491492062*^9, 3.774183497828062*^9}},
 CellLabel->
  "Out[439]=",ExpressionUUID->"d7e176c9-0b9d-4b42-9f18-c2a0a76ab67f"],

Cell[BoxData["Image"], "Output",
 CellChangeTimes->{
  3.7737563227090545`*^9, {3.773756435692774*^9, 3.7737564469937744`*^9}, {
   3.7737565128118095`*^9, 3.7737565291969786`*^9}, 3.7737571075675077`*^9, {
   3.77375722252054*^9, 3.7737572362605033`*^9}, {3.773757275989503*^9, 
   3.7737572841965246`*^9}, {3.7737573447906914`*^9, 
   3.7737573523796687`*^9}, {3.773757387890701*^9, 3.773757415965699*^9}, 
   3.7737580044978895`*^9, {3.7737580520535603`*^9, 3.7737580638115807`*^9}, {
   3.773758204936632*^9, 3.773758242623262*^9}, 3.7737582747945423`*^9, {
   3.77375834146246*^9, 3.773758370694784*^9}, 3.773758432607817*^9, 
   3.77384353745093*^9, {3.7738435937899475`*^9, 3.7738436094860353`*^9}, {
   3.773843675043536*^9, 3.773843728755546*^9}, 3.7738437656546*^9, {
   3.773843811952606*^9, 3.7738438823975973`*^9}, {3.7738439580645638`*^9, 
   3.7738439820735774`*^9}, 3.773844042148589*^9, {3.7738440971365623`*^9, 
   3.773844121810561*^9}, {3.773844271058296*^9, 3.7738443253332963`*^9}, 
   3.7738443732692976`*^9, 3.77384440962429*^9, 3.7738444495834885`*^9, {
   3.773844630269823*^9, 3.7738446672148504`*^9}, 3.7738449085731907`*^9, {
   3.773844986146226*^9, 3.7738451168603716`*^9}, 3.773845156191723*^9, 
   3.7738452254782467`*^9, {3.77384538519845*^9, 3.7738455088554974`*^9}, {
   3.7738455792155085`*^9, 3.7738455920154943`*^9}, 3.7738456250864964`*^9, 
   3.773845675496497*^9, {3.773845729018845*^9, 3.773845839964354*^9}, {
   3.7738458792520313`*^9, 3.773845886177035*^9}, {3.773845927671777*^9, 
   3.773845973027441*^9}, {3.7738460267774043`*^9, 3.7738460521394067`*^9}, {
   3.7738460949104033`*^9, 3.77384618379849*^9}, 3.773846223515484*^9, 
   3.773847446776619*^9, {3.7738474789251313`*^9, 3.7738475197380943`*^9}, 
   3.7738476913275127`*^9, {3.773847723739175*^9, 3.7738477335744925`*^9}, {
   3.773847778361458*^9, 3.773847783644457*^9}, 3.773847832175463*^9, {
   3.7738482411071835`*^9, 3.7738482590021715`*^9}, {3.7738483151852036`*^9, 
   3.7738483314321747`*^9}, {3.774183206571889*^9, 3.774183227038891*^9}, {
   3.774183278759906*^9, 3.7741832874501696`*^9}, {3.7741833193791704`*^9, 
   3.774183355835168*^9}, {3.7741833986247673`*^9, 3.774183420860671*^9}, {
   3.774183491492062*^9, 3.7741834978760624`*^9}},
 CellLabel->
  "Out[440]=",ExpressionUUID->"8999ce1d-f26a-46a0-b77d-a1a001d4d370"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1872", ",", "1055"}], "}"}], ",", 
   FractionBox["1055", "1872"], ",", "0.5635683760683761`"}], "}"}]], "Output",
 CellChangeTimes->{
  3.7737563227090545`*^9, {3.773756435692774*^9, 3.7737564469937744`*^9}, {
   3.7737565128118095`*^9, 3.7737565291969786`*^9}, 3.7737571075675077`*^9, {
   3.77375722252054*^9, 3.7737572362605033`*^9}, {3.773757275989503*^9, 
   3.7737572841965246`*^9}, {3.7737573447906914`*^9, 
   3.7737573523796687`*^9}, {3.773757387890701*^9, 3.773757415965699*^9}, 
   3.7737580044978895`*^9, {3.7737580520535603`*^9, 3.7737580638115807`*^9}, {
   3.773758204936632*^9, 3.773758242623262*^9}, 3.7737582747945423`*^9, {
   3.77375834146246*^9, 3.773758370694784*^9}, 3.773758432607817*^9, 
   3.77384353745093*^9, {3.7738435937899475`*^9, 3.7738436094860353`*^9}, {
   3.773843675043536*^9, 3.773843728755546*^9}, 3.7738437656546*^9, {
   3.773843811952606*^9, 3.7738438823975973`*^9}, {3.7738439580645638`*^9, 
   3.7738439820735774`*^9}, 3.773844042148589*^9, {3.7738440971365623`*^9, 
   3.773844121810561*^9}, {3.773844271058296*^9, 3.7738443253332963`*^9}, 
   3.7738443732692976`*^9, 3.77384440962429*^9, 3.7738444495834885`*^9, {
   3.773844630269823*^9, 3.7738446672148504`*^9}, 3.7738449085731907`*^9, {
   3.773844986146226*^9, 3.7738451168603716`*^9}, 3.773845156191723*^9, 
   3.7738452254782467`*^9, {3.77384538519845*^9, 3.7738455088554974`*^9}, {
   3.7738455792155085`*^9, 3.7738455920154943`*^9}, 3.7738456250864964`*^9, 
   3.773845675496497*^9, {3.773845729018845*^9, 3.773845839964354*^9}, {
   3.7738458792520313`*^9, 3.773845886177035*^9}, {3.773845927671777*^9, 
   3.773845973027441*^9}, {3.7738460267774043`*^9, 3.7738460521394067`*^9}, {
   3.7738460949104033`*^9, 3.77384618379849*^9}, 3.773846223515484*^9, 
   3.773847446776619*^9, {3.7738474789251313`*^9, 3.7738475197380943`*^9}, 
   3.7738476913275127`*^9, {3.773847723739175*^9, 3.7738477335744925`*^9}, {
   3.773847778361458*^9, 3.773847783644457*^9}, 3.773847832175463*^9, {
   3.7738482411071835`*^9, 3.7738482590021715`*^9}, {3.7738483151852036`*^9, 
   3.7738483314321747`*^9}, {3.774183206571889*^9, 3.774183227038891*^9}, {
   3.774183278759906*^9, 3.7741832874501696`*^9}, {3.7741833193791704`*^9, 
   3.774183355835168*^9}, {3.7741833986247673`*^9, 3.774183420860671*^9}, {
   3.774183491492062*^9, 3.774183497880064*^9}},
 CellLabel->
  "Out[441]=",ExpressionUUID->"9ce563b2-bdad-4e16-a016-2a65314eb65f"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Graphic and Image options of interest", "Subsubsection",
 CellChangeTimes->{{3.7737575167657623`*^9, 
  3.7737575380057907`*^9}},ExpressionUUID->"5d754b71-44d2-4f12-80d4-\
2be63962d981"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "ImageSize"}]], "Input",
 CellChangeTimes->{{3.773242271260158*^9, 3.7732422716181917`*^9}, {
  3.7736683370927286`*^9, 3.773668372254249*^9}, {3.7736689312312913`*^9, 
  3.7736689706193204`*^9}, {3.773670666851754*^9, 3.773670669426715*^9}},
 CellLabel->
  "In[1296]:=",ExpressionUUID->"a651e608-8727-41fd-86f8-fcf085233817"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = True, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox[
           PaneBox[
            TooltipBox[
             ButtonBox[
              PaneSelectorBox[{False->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIcon"],
                ImageSizeCache->{16., {5., 11.}}], True->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIconHot"],
                ImageSizeCache->{16., {5., 11.}}]}, Dynamic[
                CurrentValue["MouseOver"]]],
              Appearance->None,
              BaseStyle->"Link",
              ButtonData->"paclet:ref/ImageSize",
              ButtonNote->"paclet:ref/ImageSize"],
             "\"paclet:ref/ImageSize\""],
            FrameMargins->{{0, 4}, {0, 2}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"ImageSize is an option that specifies the overall \
size of an image to display for an object. \"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False, False, False, False, 
                False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                   
                   TemplateBox[{
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", "paclet:ref/ImageSize", 
                    "paclet:ref/ImageSize", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"],"\"  \"",StyleBox[
                    "\"|\"", "InformationRowLabel", StripOnInput -> False],
                    "\"  \"",TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    "http://reference.wolfram.com/language/ref/ImageSize.\
html"], None}, "http://reference.wolfram.com/language/ref/ImageSize.html", 
                    "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                   RowBox[{"{", "Protected", "}"}]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`ImageSize\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->6], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"],
               ImageSizeCache->{13., {3., 10.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"],
               ImageSizeCache->{13., {3., 10.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox[
           PaneBox[
            TooltipBox[
             ButtonBox[
              PaneSelectorBox[{False->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIcon"],
                ImageSizeCache->{16., {5., 11.}}], True->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIconHot"],
                ImageSizeCache->{16., {5., 11.}}]}, Dynamic[
                CurrentValue["MouseOver"]]],
              Appearance->None,
              BaseStyle->"Link",
              ButtonData->"paclet:ref/ImageSize",
              ButtonNote->"paclet:ref/ImageSize"],
             "\"paclet:ref/ImageSize\""],
            FrameMargins->{{0, 4}, {0, 2}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"ImageSize is an option that specifies the overall \
size of an image to display for an object. \"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{13., {3., 10.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{13., {3., 10.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[
   Association[
   "ObjectType" -> "Symbol", "Usage" -> 
    "ImageSize is an option that specifies the overall size of an image to \
display for an object. ", "Documentation" -> 
    Association[
     "Local" -> "paclet:ref/ImageSize", "Web" -> 
      "http://reference.wolfram.com/language/ref/ImageSize.html"], 
    "OwnValues" -> None, "UpValues" -> None, "DownValues" -> None, 
    "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
    "FormatValues" -> None, "Options" -> None, "Attributes" -> {Protected}, 
    "FullName" -> "System`ImageSize"], False]]], "Output",
 CellChangeTimes->{3.77367067075872*^9},
 CellLabel->
  "Out[1296]=",ExpressionUUID->"b6d41644-b26b-4889-b66e-29c4102010d7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "FrameMargins"}]], "Input",
 CellChangeTimes->{{3.773242271260158*^9, 3.7732422716181917`*^9}, {
  3.7736683370927286`*^9, 3.773668372254249*^9}, {3.7736689312312913`*^9, 
  3.7736689706193204`*^9}, {3.773670666851754*^9, 3.773670703013042*^9}},
 CellLabel->
  "In[1298]:=",ExpressionUUID->"67caa394-6043-46e6-ab8a-9451613cdcec"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox[
           PaneBox[
            TooltipBox[
             ButtonBox[
              PaneSelectorBox[{False->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIcon"]], True->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                CurrentValue["MouseOver"]]],
              Appearance->None,
              BaseStyle->"Link",
              ButtonData->"paclet:ref/FrameMargins",
              ButtonNote->"paclet:ref/FrameMargins"],
             "\"paclet:ref/FrameMargins\""],
            FrameMargins->{{0, 4}, {0, 2}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"FrameMargins is an option for objects that can be \
displayed with frames which specifies the absolute margins in printer's \
points to leave inside the frame. \"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False, False, False, False, 
                False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                   
                   TemplateBox[{
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", "paclet:ref/FrameMargins", 
                    "paclet:ref/FrameMargins", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"],"\"  \"",StyleBox[
                    "\"|\"", "InformationRowLabel", StripOnInput -> False],
                    "\"  \"",TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    "http://reference.wolfram.com/language/ref/FrameMargins.\
html"], None}, "http://reference.wolfram.com/language/ref/FrameMargins.html", 
                    "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                   RowBox[{"{", "Protected", "}"}]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`FrameMargins\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->6], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox[
           PaneBox[
            TooltipBox[
             ButtonBox[
              PaneSelectorBox[{False->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIcon"],
                ImageSizeCache->{16., {5., 11.}}], True->
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIconHot"],
                ImageSizeCache->{16., {5., 11.}}]}, Dynamic[
                CurrentValue["MouseOver"]]],
              Appearance->None,
              BaseStyle->"Link",
              ButtonData->"paclet:ref/FrameMargins",
              ButtonNote->"paclet:ref/FrameMargins"],
             "\"paclet:ref/FrameMargins\""],
            FrameMargins->{{0, 4}, {0, 2}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"FrameMargins is an option for objects that can be \
displayed with frames which specifies the absolute margins in printer's \
points to leave inside the frame. \"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{13., {3., 10.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{13., {3., 10.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[
   Association[
   "ObjectType" -> "Symbol", "Usage" -> 
    "FrameMargins is an option for objects that can be displayed with frames \
which specifies the absolute margins in printer's points to leave inside the \
frame. ", "Documentation" -> 
    Association[
     "Local" -> "paclet:ref/FrameMargins", "Web" -> 
      "http://reference.wolfram.com/language/ref/FrameMargins.html"], 
    "OwnValues" -> None, "UpValues" -> None, "DownValues" -> None, 
    "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
    "FormatValues" -> None, "Options" -> None, "Attributes" -> {Protected}, 
    "FullName" -> "System`FrameMargins"], False]]], "Output",
 CellChangeTimes->{3.77367070463404*^9},
 CellLabel->
  "Out[1298]=",ExpressionUUID->"951fa4d0-c8a7-4c3b-bde3-5abaac78ac50"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "ImageMargins"}]], "Input",
 CellChangeTimes->{{3.773242271260158*^9, 3.7732422716181917`*^9}, {
  3.7736683370927286`*^9, 3.773668372254249*^9}, {3.7736689312312913`*^9, 
  3.7736689706193204`*^9}, {3.773670666851754*^9, 3.7736706864610357`*^9}},
 CellLabel->
  "In[1297]:=",ExpressionUUID->"48343c3d-1367-4e55-9628-c0ed67c4e1a0"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox[
           PaneBox[
            TooltipBox[
             ButtonBox[
              PaneSelectorBox[{False->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIcon"]], True->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                CurrentValue["MouseOver"]]],
              Appearance->None,
              BaseStyle->"Link",
              ButtonData->"paclet:ref/ImageMargins",
              ButtonNote->"paclet:ref/ImageMargins"],
             "\"paclet:ref/ImageMargins\""],
            FrameMargins->{{0, 4}, {0, 2}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"ImageMargins is an option that specifies the \
absolute margins to leave around the image displayed for an object. \"\>", 
             "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False, False, False, False, 
                False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                   
                   TemplateBox[{
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", "paclet:ref/ImageMargins", 
                    "paclet:ref/ImageMargins", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"],"\"  \"",StyleBox[
                    "\"|\"", "InformationRowLabel", StripOnInput -> False],
                    "\"  \"",TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    "http://reference.wolfram.com/language/ref/ImageMargins.\
html"], None}, "http://reference.wolfram.com/language/ref/ImageMargins.html", 
                    "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                   RowBox[{"{", "Protected", "}"}]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`ImageMargins\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->6], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox[
           PaneBox[
            TooltipBox[
             ButtonBox[
              PaneSelectorBox[{False->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIcon"],
                ImageSizeCache->{16., {5., 11.}}], True->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIconHot"],
                ImageSizeCache->{16., {5., 11.}}]}, Dynamic[
                CurrentValue["MouseOver"]]],
              Appearance->None,
              BaseStyle->"Link",
              ButtonData->"paclet:ref/ImageMargins",
              ButtonNote->"paclet:ref/ImageMargins"],
             "\"paclet:ref/ImageMargins\""],
            FrameMargins->{{0, 4}, {0, 2}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"ImageMargins is an option that specifies the \
absolute margins to leave around the image displayed for an object. \"\>", 
             "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{13., {3., 10.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{13., {3., 10.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[
   Association[
   "ObjectType" -> "Symbol", "Usage" -> 
    "ImageMargins is an option that specifies the absolute margins to leave \
around the image displayed for an object. ", "Documentation" -> 
    Association[
     "Local" -> "paclet:ref/ImageMargins", "Web" -> 
      "http://reference.wolfram.com/language/ref/ImageMargins.html"], 
    "OwnValues" -> None, "UpValues" -> None, "DownValues" -> None, 
    "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
    "FormatValues" -> None, "Options" -> None, "Attributes" -> {Protected}, 
    "FullName" -> "System`ImageMargins"], False]]], "Output",
 CellChangeTimes->{3.7736706893430786`*^9},
 CellLabel->
  "Out[1297]=",ExpressionUUID->"e24dc544-1596-4a55-bcf3-cb8ec9147a1f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "ImageDimensions"}]], "Input",
 CellChangeTimes->{{3.7736685123019605`*^9, 3.7736685126269917`*^9}, {
  3.77366855954957*^9, 3.77366855998868*^9}, {3.7736707293600664`*^9, 
  3.7736707319420733`*^9}},
 CellLabel->
  "In[1301]:=",ExpressionUUID->"76e483d8-6603-4f1c-8ce1-c6019a2a996c"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox[
           PaneBox[
            TooltipBox[
             ButtonBox[
              PaneSelectorBox[{False->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIcon"]], True->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                CurrentValue["MouseOver"]]],
              Appearance->None,
              BaseStyle->"Link",
              ButtonData->"paclet:ref/ImageDimensions",
              ButtonNote->"paclet:ref/ImageDimensions"],
             "\"paclet:ref/ImageDimensions\""],
            FrameMargins->{{0, 4}, {0, 2}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[{\\\"ImageDimensions\\\", \
\\\"[\\\", StyleBox[\\\"image\\\", \\\"TI\\\"], \\\"]\\\"}]\\) gives the \
pixel dimensions of an Image or Image3D object \
\\!\\(\\*StyleBox[\\\"image\\\", \\\"TI\\\"]\\).\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False, False, False, False, 
                False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                   
                   TemplateBox[{
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", 
                    "paclet:ref/ImageDimensions", 
                    "paclet:ref/ImageDimensions", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"],"\"  \"",StyleBox[
                    "\"|\"", "InformationRowLabel", StripOnInput -> False],
                    "\"  \"",TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    "http://reference.wolfram.com/language/ref/\
ImageDimensions.html"], None}, 
                    "http://reference.wolfram.com/language/ref/\
ImageDimensions.html", "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                   RowBox[{"{", "Protected", "}"}]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`ImageDimensions\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->6], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox[
           PaneBox[
            TooltipBox[
             ButtonBox[
              PaneSelectorBox[{False->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIcon"],
                ImageSizeCache->{16., {5., 11.}}], True->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIconHot"],
                ImageSizeCache->{16., {5., 11.}}]}, Dynamic[
                CurrentValue["MouseOver"]]],
              Appearance->None,
              BaseStyle->"Link",
              ButtonData->"paclet:ref/ImageDimensions",
              ButtonNote->"paclet:ref/ImageDimensions"],
             "\"paclet:ref/ImageDimensions\""],
            FrameMargins->{{0, 4}, {0, 2}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[{\\\"ImageDimensions\\\", \
\\\"[\\\", StyleBox[\\\"image\\\", \\\"TI\\\"], \\\"]\\\"}]\\) gives the \
pixel dimensions of an Image or Image3D object \
\\!\\(\\*StyleBox[\\\"image\\\", \\\"TI\\\"]\\).\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{13., {3., 10.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{13., {3., 10.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[
   Association[
   "ObjectType" -> "Symbol", "Usage" -> 
    "\!\(\*RowBox[{\"ImageDimensions\", \"[\", StyleBox[\"image\", \"TI\"], \
\"]\"}]\) gives the pixel dimensions of an Image or Image3D object \
\!\(\*StyleBox[\"image\", \"TI\"]\).", "Documentation" -> 
    Association[
     "Local" -> "paclet:ref/ImageDimensions", "Web" -> 
      "http://reference.wolfram.com/language/ref/ImageDimensions.html"], 
    "OwnValues" -> None, "UpValues" -> None, "DownValues" -> None, 
    "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
    "FormatValues" -> None, "Options" -> None, "Attributes" -> {Protected}, 
    "FullName" -> "System`ImageDimensions"], False]]], "Output",
 CellChangeTimes->{3.7736707351230764`*^9},
 CellLabel->
  "Out[1301]=",ExpressionUUID->"86293a27-2d7c-43f1-84a1-249ba1c52224"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "ImageAspectRatio"}]], "Input",
 CellChangeTimes->{{3.7736685123019605`*^9, 3.7736685126269917`*^9}, {
  3.77366855954957*^9, 3.77366855998868*^9}, {3.7736707293600664`*^9, 
  3.7736707433150344`*^9}},
 CellLabel->
  "In[1302]:=",ExpressionUUID->"da9265a3-4ba3-4ea1-8104-c39a31809af4"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox[
           PaneBox[
            TooltipBox[
             ButtonBox[
              PaneSelectorBox[{False->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIcon"]], True->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                CurrentValue["MouseOver"]]],
              Appearance->None,
              BaseStyle->"Link",
              ButtonData->"paclet:ref/ImageAspectRatio",
              ButtonNote->"paclet:ref/ImageAspectRatio"],
             "\"paclet:ref/ImageAspectRatio\""],
            FrameMargins->{{0, 4}, {0, 2}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[{\\\"ImageAspectRatio\\\", \
\\\"[\\\", StyleBox[\\\"image\\\", \\\"TI\\\"], \\\"]\\\"}]\\) gives the \
ratio of height to width for \\!\\(\\*StyleBox[\\\"image\\\", \\\"TI\\\"]\\).\
\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False, False, False, False, 
                False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                   
                   TemplateBox[{
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", 
                    "paclet:ref/ImageAspectRatio", 
                    "paclet:ref/ImageAspectRatio", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"],"\"  \"",StyleBox[
                    "\"|\"", "InformationRowLabel", StripOnInput -> False],
                    "\"  \"",TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    "http://reference.wolfram.com/language/ref/\
ImageAspectRatio.html"], None}, 
                    "http://reference.wolfram.com/language/ref/\
ImageAspectRatio.html", "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                   RowBox[{"{", "Protected", "}"}]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`ImageAspectRatio\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->6], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox[
           PaneBox[
            TooltipBox[
             ButtonBox[
              PaneSelectorBox[{False->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIcon"],
                ImageSizeCache->{16., {5., 11.}}], True->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIconHot"],
                ImageSizeCache->{16., {5., 11.}}]}, Dynamic[
                CurrentValue["MouseOver"]]],
              Appearance->None,
              BaseStyle->"Link",
              ButtonData->"paclet:ref/ImageAspectRatio",
              ButtonNote->"paclet:ref/ImageAspectRatio"],
             "\"paclet:ref/ImageAspectRatio\""],
            FrameMargins->{{0, 4}, {0, 2}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[{\\\"ImageAspectRatio\\\", \
\\\"[\\\", StyleBox[\\\"image\\\", \\\"TI\\\"], \\\"]\\\"}]\\) gives the \
ratio of height to width for \\!\\(\\*StyleBox[\\\"image\\\", \\\"TI\\\"]\\).\
\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{13., {3., 10.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{13., {3., 10.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[
   Association[
   "ObjectType" -> "Symbol", "Usage" -> 
    "\!\(\*RowBox[{\"ImageAspectRatio\", \"[\", StyleBox[\"image\", \"TI\"], \
\"]\"}]\) gives the ratio of height to width for \!\(\*StyleBox[\"image\", \
\"TI\"]\).", "Documentation" -> 
    Association[
     "Local" -> "paclet:ref/ImageAspectRatio", "Web" -> 
      "http://reference.wolfram.com/language/ref/ImageAspectRatio.html"], 
    "OwnValues" -> None, "UpValues" -> None, "DownValues" -> None, 
    "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
    "FormatValues" -> None, "Options" -> None, "Attributes" -> {Protected}, 
    "FullName" -> "System`ImageAspectRatio"], False]]], "Output",
 CellChangeTimes->{3.7736707447954006`*^9},
 CellLabel->
  "Out[1302]=",ExpressionUUID->"1a54ed4a-17a1-42f7-a86e-47e202d54978"]
}, Open  ]],

Cell[TextData[{
 Cell[BoxData[
  RowBox[{
   TemplateBox[{Cell[
      TextData["ImageResolution"]],"paclet:ref/ImageResolution"},
    "RefLink",
    BaseStyle->{"InlineFormula"}], "->", 
   StyleBox["r", "TI"]}]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "b8da993d-fe6c-4511-b288-62659883665a"],
 " specifies that a bitmap should be rendered at a resolution of ",
 Cell[BoxData[
  StyleBox["r", "TI"]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "4d125b7d-bba1-473f-aa60-7db554659cc4"],
 " dpi. \n",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["ImageResolution"]],"paclet:ref/ImageResolution"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "c49427a2-d942-4a49-8ca3-00f811f21165"],
 " is relevant only for bitmap graphics formats such as \
\[OpenCurlyDoubleQuote]PGN\[CloseCurlyDoubleQuote], and not for resolution\
\[Hyphen]independent formats such as \[OpenCurlyDoubleQuote]SVG\
\[CloseCurlyDoubleQuote].\n\nRaserSize overrides."
}], "Text",
 CellChangeTimes->{{3.773674615525097*^9, 3.7736746609100723`*^9}, {
  3.773674696979711*^9, 
  3.7736747088437495`*^9}},ExpressionUUID->"3dd5c710-6100-448b-9f09-\
4c48d9e10853"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "ImageResolution"}]], "Input",
 CellChangeTimes->{{3.7736745907581067`*^9, 3.773674591486108*^9}},
 CellLabel->
  "In[1618]:=",ExpressionUUID->"17d735a2-d236-47f7-9655-6cfd2228eaa6"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox[
           PaneBox[
            TooltipBox[
             ButtonBox[
              PaneSelectorBox[{False->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIcon"],
                ImageSizeCache->{16., {5., 11.}}], True->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIconHot"],
                ImageSizeCache->{16., {5., 11.}}]}, Dynamic[
                CurrentValue["MouseOver"]]],
              Appearance->None,
              BaseStyle->"Link",
              ButtonData->"paclet:ref/ImageResolution",
              ButtonNote->"paclet:ref/ImageResolution"],
             "\"paclet:ref/ImageResolution\""],
            FrameMargins->{{0, 4}, {0, 2}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"ImageResolution is an option for Export, Rasterize, \
and related functions that specifies at what resolution bitmap images should \
be rendered. \"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False, False, False, False, 
                False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                   
                   TemplateBox[{
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", 
                    "paclet:ref/ImageResolution", 
                    "paclet:ref/ImageResolution", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"],"\"  \"",StyleBox[
                    "\"|\"", "InformationRowLabel", StripOnInput -> False],
                    "\"  \"",TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    "http://reference.wolfram.com/language/ref/\
ImageResolution.html"], None}, 
                    "http://reference.wolfram.com/language/ref/\
ImageResolution.html", "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                   RowBox[{"{", "Protected", "}"}]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`ImageResolution\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->6], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"],
               ImageSizeCache->{13., {3., 10.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"],
               ImageSizeCache->{13., {3., 10.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox[
           PaneBox[
            TooltipBox[
             ButtonBox[
              PaneSelectorBox[{False->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIcon"],
                ImageSizeCache->{16., {5., 11.}}], True->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIconHot"],
                ImageSizeCache->{16., {5., 11.}}]}, Dynamic[
                CurrentValue["MouseOver"]]],
              Appearance->None,
              BaseStyle->"Link",
              ButtonData->"paclet:ref/ImageResolution",
              ButtonNote->"paclet:ref/ImageResolution"],
             "\"paclet:ref/ImageResolution\""],
            FrameMargins->{{0, 4}, {0, 2}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"ImageResolution is an option for Export, Rasterize, \
and related functions that specifies at what resolution bitmap images should \
be rendered. \"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{13., {3., 10.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{13., {3., 10.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[
   Association[
   "ObjectType" -> "Symbol", "Usage" -> 
    "ImageResolution is an option for Export, Rasterize, and related \
functions that specifies at what resolution bitmap images should be rendered. \
", "Documentation" -> 
    Association[
     "Local" -> "paclet:ref/ImageResolution", "Web" -> 
      "http://reference.wolfram.com/language/ref/ImageResolution.html"], 
    "OwnValues" -> None, "UpValues" -> None, "DownValues" -> None, 
    "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
    "FormatValues" -> None, "Options" -> None, "Attributes" -> {Protected}, 
    "FullName" -> "System`ImageResolution"], False]]], "Output",
 CellChangeTimes->{3.7736745922640715`*^9},
 CellLabel->
  "Out[1618]=",ExpressionUUID->"b9d5a84d-9b6a-4c66-9bca-9da1f037682f"]
}, Open  ]],

Cell["Graphics", "Text",
 CellChangeTimes->{{3.7736709090878525`*^9, 
  3.7736709105558558`*^9}},ExpressionUUID->"d70427fd-99aa-4962-bf11-\
971362fa5ac9"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "AspectRatio"}]], "Input",
 CellChangeTimes->{{3.7736685123019605`*^9, 3.7736685126269917`*^9}, {
  3.77366855954957*^9, 3.77366855998868*^9}, {3.7736707293600664`*^9, 
  3.7736707433150344`*^9}},
 CellLabel->
  "In[1303]:=",ExpressionUUID->"31dd5fc2-a540-424d-ba4d-12c7ea37ba72"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox[
           PaneBox[
            TooltipBox[
             ButtonBox[
              PaneSelectorBox[{False->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIcon"]], True->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                CurrentValue["MouseOver"]]],
              Appearance->None,
              BaseStyle->"Link",
              ButtonData->"paclet:ref/AspectRatio",
              ButtonNote->"paclet:ref/AspectRatio"],
             "\"paclet:ref/AspectRatio\""],
            FrameMargins->{{0, 4}, {0, 2}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"AspectRatio is an option for Graphics and related \
functions that specifies the ratio of height to width for a plot. \"\>", 
             "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False, False, False, False, 
                False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                   
                   TemplateBox[{
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", "paclet:ref/AspectRatio", 
                    "paclet:ref/AspectRatio", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"],"\"  \"",StyleBox[
                    "\"|\"", "InformationRowLabel", StripOnInput -> False],
                    "\"  \"",TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    "http://reference.wolfram.com/language/ref/AspectRatio.\
html"], None}, "http://reference.wolfram.com/language/ref/AspectRatio.html", 
                    "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                   RowBox[{"{", "Protected", "}"}]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`AspectRatio\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->6], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox[
           PaneBox[
            TooltipBox[
             ButtonBox[
              PaneSelectorBox[{False->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIcon"],
                ImageSizeCache->{16., {5., 11.}}], True->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIconHot"],
                ImageSizeCache->{16., {5., 11.}}]}, Dynamic[
                CurrentValue["MouseOver"]]],
              Appearance->None,
              BaseStyle->"Link",
              ButtonData->"paclet:ref/AspectRatio",
              ButtonNote->"paclet:ref/AspectRatio"],
             "\"paclet:ref/AspectRatio\""],
            FrameMargins->{{0, 4}, {0, 2}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"AspectRatio is an option for Graphics and related \
functions that specifies the ratio of height to width for a plot. \"\>", 
             "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{13., {3., 10.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{13., {3., 10.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[
   Association[
   "ObjectType" -> "Symbol", "Usage" -> 
    "AspectRatio is an option for Graphics and related functions that \
specifies the ratio of height to width for a plot. ", "Documentation" -> 
    Association[
     "Local" -> "paclet:ref/AspectRatio", "Web" -> 
      "http://reference.wolfram.com/language/ref/AspectRatio.html"], 
    "OwnValues" -> None, "UpValues" -> None, "DownValues" -> None, 
    "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
    "FormatValues" -> None, "Options" -> None, "Attributes" -> {Protected}, 
    "FullName" -> "System`AspectRatio"], False]]], "Output",
 CellChangeTimes->{3.773670754993597*^9},
 CellLabel->
  "Out[1303]=",ExpressionUUID->"4c41a154-507c-4129-af8d-1e079f6ed6b7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "BoxRatios", " ", 
  RowBox[{"(*", " ", 
   RowBox[{"for", " ", "3", "D", " ", "graphics"}], " ", "*)"}]}]], "Input",
 CellChangeTimes->{{3.773242271260158*^9, 3.7732422716181917`*^9}, {
  3.7736683370927286`*^9, 3.773668372254249*^9}, {3.7736689312312913`*^9, 
  3.7736689706193204`*^9}, {3.773670666851754*^9, 3.773670723907051*^9}},
 CellLabel->
  "In[1300]:=",ExpressionUUID->"002d2161-d12b-4480-b05c-a456e899cb82"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox[
           PaneBox[
            TooltipBox[
             ButtonBox[
              PaneSelectorBox[{False->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIcon"]], True->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                CurrentValue["MouseOver"]]],
              Appearance->None,
              BaseStyle->"Link",
              ButtonData->"paclet:ref/BoxRatios",
              ButtonNote->"paclet:ref/BoxRatios"],
             "\"paclet:ref/BoxRatios\""],
            FrameMargins->{{0, 4}, {0, 2}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"BoxRatios is an option for Graphics3D that gives \
the ratios of side lengths for the bounding box of the \
three\[Hyphen]dimensional picture. \"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False, False, False, False, 
                False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                   
                   TemplateBox[{
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", "paclet:ref/BoxRatios", 
                    "paclet:ref/BoxRatios", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"],"\"  \"",StyleBox[
                    "\"|\"", "InformationRowLabel", StripOnInput -> False],
                    "\"  \"",TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    "http://reference.wolfram.com/language/ref/BoxRatios.\
html"], None}, "http://reference.wolfram.com/language/ref/BoxRatios.html", 
                    "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                   RowBox[{"{", "Protected", "}"}]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`BoxRatios\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->6], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox[
           PaneBox[
            TooltipBox[
             ButtonBox[
              PaneSelectorBox[{False->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIcon"],
                ImageSizeCache->{16., {5., 11.}}], True->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIconHot"],
                ImageSizeCache->{16., {5., 11.}}]}, Dynamic[
                CurrentValue["MouseOver"]]],
              Appearance->None,
              BaseStyle->"Link",
              ButtonData->"paclet:ref/BoxRatios",
              ButtonNote->"paclet:ref/BoxRatios"],
             "\"paclet:ref/BoxRatios\""],
            FrameMargins->{{0, 4}, {0, 2}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"BoxRatios is an option for Graphics3D that gives \
the ratios of side lengths for the bounding box of the \
three\[Hyphen]dimensional picture. \"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{13., {3., 10.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{13., {3., 10.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[
   Association[
   "ObjectType" -> "Symbol", "Usage" -> 
    "BoxRatios is an option for Graphics3D that gives the ratios of side \
lengths for the bounding box of the three\[Hyphen]dimensional picture. ", 
    "Documentation" -> 
    Association[
     "Local" -> "paclet:ref/BoxRatios", "Web" -> 
      "http://reference.wolfram.com/language/ref/BoxRatios.html"], 
    "OwnValues" -> None, "UpValues" -> None, "DownValues" -> None, 
    "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
    "FormatValues" -> None, "Options" -> None, "Attributes" -> {Protected}, 
    "FullName" -> "System`BoxRatios"], False]]], "Output",
 CellChangeTimes->{3.7736707258730764`*^9},
 CellLabel->
  "Out[1300]=",ExpressionUUID->"bd58dc0c-c695-4319-a8ca-43f120c29358"]
}, Open  ]],

Cell["Grids", "Text",
 CellChangeTimes->{{3.773670925990881*^9, 
  3.7736709269578867`*^9}},ExpressionUUID->"4cfd789f-8715-43e7-a065-\
5cdfd8f86ec6"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "Spacings"}]], "Input",
 CellChangeTimes->{{3.773242271260158*^9, 3.7732422716181917`*^9}, {
  3.7736683370927286`*^9, 3.773668372254249*^9}, {3.7736689312312913`*^9, 
  3.7736689706193204`*^9}, {3.773670666851754*^9, 3.773670710511037*^9}},
 CellLabel->
  "In[1299]:=",ExpressionUUID->"d3f5a675-7bbb-4f00-8bf4-1c9d93a54e10"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox[
           PaneBox[
            TooltipBox[
             ButtonBox[
              PaneSelectorBox[{False->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIcon"]], True->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                CurrentValue["MouseOver"]]],
              Appearance->None,
              BaseStyle->"Link",
              ButtonData->"paclet:ref/Spacings",
              ButtonNote->"paclet:ref/Spacings"],
             "\"paclet:ref/Spacings\""],
            FrameMargins->{{0, 4}, {0, 2}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"Spacings is an option to Grid and related \
constructs that specifies the spacings to leave between successive objects.\"\
\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False, False, False, False, 
                False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                   
                   TemplateBox[{
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", "paclet:ref/Spacings", 
                    "paclet:ref/Spacings", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"],"\"  \"",StyleBox[
                    "\"|\"", "InformationRowLabel", StripOnInput -> False],
                    "\"  \"",TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    "http://reference.wolfram.com/language/ref/Spacings.html"]\
, None}, "http://reference.wolfram.com/language/ref/Spacings.html", 
                    "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                   RowBox[{"{", "Protected", "}"}]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`Spacings\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->6], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox[
           PaneBox[
            TooltipBox[
             ButtonBox[
              PaneSelectorBox[{False->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIcon"],
                ImageSizeCache->{16., {5., 11.}}], True->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIconHot"],
                ImageSizeCache->{16., {5., 11.}}]}, Dynamic[
                CurrentValue["MouseOver"]]],
              Appearance->None,
              BaseStyle->"Link",
              ButtonData->"paclet:ref/Spacings",
              ButtonNote->"paclet:ref/Spacings"],
             "\"paclet:ref/Spacings\""],
            FrameMargins->{{0, 4}, {0, 2}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"Spacings is an option to Grid and related \
constructs that specifies the spacings to leave between successive objects.\"\
\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{13., {3., 10.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{13., {3., 10.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[
   Association[
   "ObjectType" -> "Symbol", "Usage" -> 
    "Spacings is an option to Grid and related constructs that specifies the \
spacings to leave between successive objects.", "Documentation" -> 
    Association[
     "Local" -> "paclet:ref/Spacings", "Web" -> 
      "http://reference.wolfram.com/language/ref/Spacings.html"], "OwnValues" -> 
    None, "UpValues" -> None, "DownValues" -> None, "SubValues" -> None, 
    "DefaultValues" -> None, "NValues" -> None, "FormatValues" -> None, 
    "Options" -> None, "Attributes" -> {Protected}, "FullName" -> 
    "System`Spacings"], False]]], "Output",
 CellChangeTimes->{3.7736707120360837`*^9},
 CellLabel->
  "Out[1299]=",ExpressionUUID->"2a07cfa0-073b-4912-bee9-76641b22c7ef"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "ItemSize"}]], "Input",
 CellChangeTimes->{{3.773670987785959*^9, 3.7736709884479256`*^9}},
 CellLabel->
  "In[1304]:=",ExpressionUUID->"c41f3aea-6e0d-4966-9ed0-588fce93c98e"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox[
           PaneBox[
            TooltipBox[
             ButtonBox[
              PaneSelectorBox[{False->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIcon"]], True->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                CurrentValue["MouseOver"]]],
              Appearance->None,
              BaseStyle->"Link",
              ButtonData->"paclet:ref/ItemSize",
              ButtonNote->"paclet:ref/ItemSize"],
             "\"paclet:ref/ItemSize\""],
            FrameMargins->{{0, 4}, {0, 2}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"ItemSize is an option for Grid, Column, and related \
constructs that specifies the sizes to allow for items.\"\>", 
             "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False, False, False, False, 
                False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                   
                   TemplateBox[{
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", "paclet:ref/ItemSize", 
                    "paclet:ref/ItemSize", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"],"\"  \"",StyleBox[
                    "\"|\"", "InformationRowLabel", StripOnInput -> False],
                    "\"  \"",TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    "http://reference.wolfram.com/language/ref/ItemSize.html"]\
, None}, "http://reference.wolfram.com/language/ref/ItemSize.html", 
                    "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                   RowBox[{"{", "Protected", "}"}]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`ItemSize\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->6], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox[
           PaneBox[
            TooltipBox[
             ButtonBox[
              PaneSelectorBox[{False->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIcon"],
                ImageSizeCache->{16., {5., 11.}}], True->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIconHot"],
                ImageSizeCache->{16., {5., 11.}}]}, Dynamic[
                CurrentValue["MouseOver"]]],
              Appearance->None,
              BaseStyle->"Link",
              ButtonData->"paclet:ref/ItemSize",
              ButtonNote->"paclet:ref/ItemSize"],
             "\"paclet:ref/ItemSize\""],
            FrameMargins->{{0, 4}, {0, 2}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"ItemSize is an option for Grid, Column, and related \
constructs that specifies the sizes to allow for items.\"\>", 
             "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{13., {3., 10.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{13., {3., 10.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[
   Association[
   "ObjectType" -> "Symbol", "Usage" -> 
    "ItemSize is an option for Grid, Column, and related constructs that \
specifies the sizes to allow for items.", "Documentation" -> 
    Association[
     "Local" -> "paclet:ref/ItemSize", "Web" -> 
      "http://reference.wolfram.com/language/ref/ItemSize.html"], "OwnValues" -> 
    None, "UpValues" -> None, "DownValues" -> None, "SubValues" -> None, 
    "DefaultValues" -> None, "NValues" -> None, "FormatValues" -> None, 
    "Options" -> None, "Attributes" -> {Protected}, "FullName" -> 
    "System`ItemSize"], False]]], "Output",
 CellChangeTimes->{3.773670989394956*^9},
 CellLabel->
  "Out[1304]=",ExpressionUUID->"db82f969-9337-49dd-82c1-647b63ff78a8"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Back to making APIs (for <img /> tags)", "Subsection",
 CellChangeTimes->{{3.7737576725087852`*^9, 
  3.7737577035637903`*^9}},ExpressionUUID->"48f51a77-e5a5-44f2-b150-\
475e96dee4e4"],

Cell["\<\
With the basics out of the way let\[CloseCurlyQuote]s get back to making \
APIs.  We\[CloseCurlyQuote]ll use Solve[ ] to produce a couple equations then \
make an image of the result and return it via an API.\
\>", "Text",
 CellChangeTimes->{{3.773237398764903*^9, 3.773237453820902*^9}, {
   3.7732375041236167`*^9, 3.7732376113342266`*^9}, 3.7734106399747686`*^9, {
   3.7736721324796143`*^9, 3.7736721744215827`*^9}, {3.77375854683528*^9, 
   3.7737585998729672`*^9}},ExpressionUUID->"4ae43a17-c9e7-4bd3-a4b9-\
39952928628f"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"ClearAll", "[", "eq", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"eq", "=", 
   RowBox[{"Solve", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"x", "^", "2"}], "+", 
       RowBox[{"a", " ", "x"}], "+", "1"}], "\[Equal]", "0"}], ",", "x"}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", "eq", "\[IndentingNewLine]", 
 RowBox[{"eq", "//", "Head"}], "\[IndentingNewLine]", 
 RowBox[{"eq", "//", "FullForm"}]}], "Input",
 CellChangeTimes->{{3.7734117686554127`*^9, 3.77341189587471*^9}, {
  3.7741836450850253`*^9, 3.774183648515025*^9}},
 CellLabel->
  "In[446]:=",ExpressionUUID->"5f73716e-fa95-4c87-9e40-73a8f478a273"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     RowBox[{
      FractionBox["1", "2"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "a"}], "-", 
        SqrtBox[
         RowBox[{
          RowBox[{"-", "4"}], "+", 
          SuperscriptBox["a", "2"]}]]}], ")"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     RowBox[{
      FractionBox["1", "2"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "a"}], "+", 
        SqrtBox[
         RowBox[{
          RowBox[{"-", "4"}], "+", 
          SuperscriptBox["a", "2"]}]]}], ")"}]}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.7734118970246677`*^9, 3.7735870558557453`*^9, 3.7736721849525814`*^9, 
   3.773758930895404*^9, 3.7738471375036864`*^9, 3.773848370844616*^9, {
   3.7741836204765286`*^9, 3.774183649215025*^9}},
 CellLabel->
  "Out[448]=",ExpressionUUID->"09bb586e-eba9-4b7a-bb86-6ca761fde1e1"],

Cell[BoxData["List"], "Output",
 CellChangeTimes->{
  3.7734118970246677`*^9, 3.7735870558557453`*^9, 3.7736721849525814`*^9, 
   3.773758930895404*^9, 3.7738471375036864`*^9, 3.773848370844616*^9, {
   3.7741836204765286`*^9, 3.7741836492330256`*^9}},
 CellLabel->
  "Out[449]=",ExpressionUUID->"1ab5d274-6f6a-413e-a023-5340d82fe500"],

Cell[BoxData[
 TagBox[
  StyleBox[
   RowBox[{"List", "[", 
    RowBox[{
     RowBox[{"List", "[", 
      RowBox[{"Rule", "[", 
       RowBox[{"x", ",", 
        RowBox[{"Times", "[", 
         RowBox[{
          RowBox[{"Rational", "[", 
           RowBox[{"1", ",", "2"}], "]"}], ",", 
          RowBox[{"Plus", "[", 
           RowBox[{
            RowBox[{"Times", "[", 
             RowBox[{
              RowBox[{"-", "1"}], ",", "a"}], "]"}], ",", 
            RowBox[{"Times", "[", 
             RowBox[{
              RowBox[{"-", "1"}], ",", 
              RowBox[{"Power", "[", 
               RowBox[{
                RowBox[{"Plus", "[", 
                 RowBox[{
                  RowBox[{"-", "4"}], ",", 
                  RowBox[{"Power", "[", 
                   RowBox[{"a", ",", "2"}], "]"}]}], "]"}], ",", 
                RowBox[{"Rational", "[", 
                 RowBox[{"1", ",", "2"}], "]"}]}], "]"}]}], "]"}]}], "]"}]}], 
         "]"}]}], "]"}], "]"}], ",", 
     RowBox[{"List", "[", 
      RowBox[{"Rule", "[", 
       RowBox[{"x", ",", 
        RowBox[{"Times", "[", 
         RowBox[{
          RowBox[{"Rational", "[", 
           RowBox[{"1", ",", "2"}], "]"}], ",", 
          RowBox[{"Plus", "[", 
           RowBox[{
            RowBox[{"Times", "[", 
             RowBox[{
              RowBox[{"-", "1"}], ",", "a"}], "]"}], ",", 
            RowBox[{"Power", "[", 
             RowBox[{
              RowBox[{"Plus", "[", 
               RowBox[{
                RowBox[{"-", "4"}], ",", 
                RowBox[{"Power", "[", 
                 RowBox[{"a", ",", "2"}], "]"}]}], "]"}], ",", 
              RowBox[{"Rational", "[", 
               RowBox[{"1", ",", "2"}], "]"}]}], "]"}]}], "]"}]}], "]"}]}], 
       "]"}], "]"}]}], "]"}],
   ShowSpecialCharacters->False,
   ShowStringCharacters->True,
   NumberMarks->True],
  FullForm]], "Output",
 CellChangeTimes->{
  3.7734118970246677`*^9, 3.7735870558557453`*^9, 3.7736721849525814`*^9, 
   3.773758930895404*^9, 3.7738471375036864`*^9, 3.773848370844616*^9, {
   3.7741836204765286`*^9, 3.7741836492410245`*^9}},
 CellLabel->
  "Out[450]//FullForm=",ExpressionUUID->"ed3deea1-40cc-4881-b64b-\
4956e656d0ef"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"eq", "[", 
  RowBox[{"[", 
   RowBox[{"1", ",", "1", ",", "1"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.7741836807990265`*^9, 3.7741836837400312`*^9}},
 CellLabel->
  "In[451]:=",ExpressionUUID->"3b19828c-5184-4045-8d98-8161a2e1fcb1"],

Cell[BoxData["x"], "Output",
 CellChangeTimes->{3.7741836845600595`*^9},
 CellLabel->
  "Out[451]=",ExpressionUUID->"8edbc983-9d16-464c-8269-ed54642f571b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"Text", "[", 
     RowBox[{"Style", "[", 
      RowBox[{"#", ",", "Black", ",", "Italic", ",", "24"}], "]"}], "]"}], 
    "}"}], "&"}], "/@", 
  RowBox[{"Flatten", "[", "eq", "]"}]}]], "Input",
 CellChangeTimes->{{3.773763433688249*^9, 3.773763436912247*^9}, {
   3.773763478990281*^9, 3.7737636164355555`*^9}, {3.773765332563197*^9, 
   3.7737653346412067`*^9}, {3.7737654076312785`*^9, 3.7737654207222595`*^9}, 
   3.77384718851464*^9, 3.774183718699025*^9},
 CellLabel->
  "In[452]:=",ExpressionUUID->"234fad72-ed17-4005-8971-c52163b57aa5"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    InterpretationBox[Cell[BoxData[
      FormBox[
       StyleBox[
        RowBox[{"x", "\[Rule]", 
         RowBox[{
          FractionBox["1", "2"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "a"}], "-", 
            SqrtBox[
             RowBox[{
              RowBox[{"-", "4"}], "+", 
              SuperscriptBox["a", "2"]}]]}], ")"}]}]}],
        StripOnInput->False,
        LineColor->GrayLevel[0],
        FrontFaceColor->GrayLevel[0],
        BackFaceColor->GrayLevel[0],
        GraphicsColor->GrayLevel[0],
        FontSize->24,
        FontSlant->Italic,
        FontColor->GrayLevel[0]], TextForm]], "InlineText",ExpressionUUID->
      "cba003b9-8c87-454b-8598-f1d6f63b1657"],
     Text[
      Style[$CellContext`x -> 
       Rational[1, 2] (-$CellContext`a - (-4 + $CellContext`a^2)^
         Rational[1, 2]), 
       GrayLevel[0], Italic, 24]]], "}"}], ",", 
   RowBox[{"{", 
    InterpretationBox[Cell[BoxData[
      FormBox[
       StyleBox[
        RowBox[{"x", "\[Rule]", 
         RowBox[{
          FractionBox["1", "2"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "a"}], "+", 
            SqrtBox[
             RowBox[{
              RowBox[{"-", "4"}], "+", 
              SuperscriptBox["a", "2"]}]]}], ")"}]}]}],
        StripOnInput->False,
        LineColor->GrayLevel[0],
        FrontFaceColor->GrayLevel[0],
        BackFaceColor->GrayLevel[0],
        GraphicsColor->GrayLevel[0],
        FontSize->24,
        FontSlant->Italic,
        FontColor->GrayLevel[0]], TextForm]], "InlineText",ExpressionUUID->
      "a803c525-cc6a-4916-b845-f5d6c710e336"],
     Text[
      Style[$CellContext`x -> 
       Rational[
         1, 2] (-$CellContext`a + (-4 + $CellContext`a^2)^Rational[1, 2]), 
       GrayLevel[0], Italic, 24]]], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.773763438030247*^9, {3.773763498061245*^9, 3.7737635320327916`*^9}, {
   3.7737635637131796`*^9, 3.773763572597475*^9}, 3.773763620501549*^9, 
   3.773765335645197*^9, 3.7737654232392616`*^9, 3.7738471402936926`*^9, 
   3.7738471894116745`*^9, 3.773848373126582*^9, 3.774183721819025*^9},
 CellLabel->
  "Out[452]=",ExpressionUUID->"24beeb1a-52d9-4d82-8e1e-8d4afe40aba2"]
}, Open  ]],

Cell["\<\
We use Grid to have access to each \[OpenCurlyQuote]cell\[CloseCurlyQuote] \
and the spacing and styles for each, as needed.
Must use Framed[ ] to have access to ImageSize.   \
\>", "Text",
 CellChangeTimes->{{3.7737587118819666`*^9, 3.7737587989429445`*^9}, {
  3.773849579802812*^9, 3.773849598100813*^9}, {3.773999050459941*^9, 
  3.7739990878839655`*^9}},ExpressionUUID->"7730933e-1b87-4cf1-a0b2-\
c92103180b26"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"ClearAll", "[", 
  RowBox[{
  "grd", ",", "frmd", ",", "rstr", ",", "bpW", ",", "w", ",", "h", ",", "xL", 
   ",", "xR", ",", "yT", ",", "yC", ",", "yB", ",", "fs", ",", "rsMult"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"xL", "=", "0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"xR", "=", "0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"yT", "=", "0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"yC", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"yB", "=", "0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"bpW", "=", "200"}], ";", 
  RowBox[{"(*", 
   RowBox[{"base", " ", "pixels", " ", "width"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"w", "=", "16"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"h", "=", "9"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"fs", "=", "17.5"}], ";", 
   RowBox[{"(*", 
    RowBox[{"font", " ", "size"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"rsMult", "=", "9"}], ";", 
   RowBox[{"(*", 
    RowBox[{"RasterSize", " ", "multipule"}], "*)"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"grd", "=", 
    RowBox[{"Grid", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{"Text", "[", 
          RowBox[{"Style", "[", 
           RowBox[{"#", ",", "Black", ",", "fs"}], "]"}], "]"}], "}"}], "&"}],
        "/@", 
       RowBox[{"Flatten", "[", "eq", "]"}]}], ",", "\[IndentingNewLine]", 
      RowBox[{"Spacings", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"xL", ",", "xR"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"yT", ",", "yC", ",", "yB"}], "}"}]}], "}"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"Frame", "\[Rule]", "All"}], ",", "\[IndentingNewLine]", 
      RowBox[{"FrameStyle", "\[Rule]", 
       RowBox[{"Directive", "[", 
        RowBox[{"Red", ",", "Dashed", ",", 
         RowBox[{"Thickness", "[", "1", "]"}]}], "]"}]}]}], 
     "\[IndentingNewLine]", "]"}]}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"frmd", "=", 
   RowBox[{"Framed", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Item", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Style", "[", "\[IndentingNewLine]", 
        RowBox[{"grd", ",", "\[IndentingNewLine]", 
         RowBox[{"FontFamily", "\[Rule]", "\"\<Arabic Transparent\>\""}], ",", 
         RowBox[{"FontSize", "\[Rule]", "fs"}]}], "\[IndentingNewLine]", 
        "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"Alignment", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"Center", ",", "Center"}], "}"}]}]}], "\[IndentingNewLine]", 
      "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"ImageSize", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"wPX", "[", "bpW", "]"}], ",", 
        RowBox[{"hPX", "[", 
         RowBox[{"bpW", ",", "w", ",", "h"}], "]"}]}], "}"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"FrameMargins", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0"}], "}"}]}], "}"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"ContentPadding", "\[Rule]", "False"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"RoundingRadius", "\[Rule]", "0"}], ",", "\[IndentingNewLine]", 
     RowBox[{"FrameStyle", "\[Rule]", "Red"}]}], "\[IndentingNewLine]", 
    "]"}]}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"rstr", "=", 
   RowBox[{"Rasterize", "[", "\[IndentingNewLine]", 
    RowBox[{"frmd", ",", "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{"must", " ", "include", " ", "ImageSize", " ", 
       RowBox[{"here", ".", "  ", "try"}], " ", "changing", " ", "bpW", " ", 
       "to", " ", "see", " ", 
       RowBox[{"why", "."}]}], "  ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{"ImageSize", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"wPX", "[", "bpW", "]"}], ",", 
        RowBox[{"hPX", "[", 
         RowBox[{"bpW", ",", "w", ",", "h"}], "]"}]}], "}"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"RasterSize", "\[Rule]", 
      RowBox[{"rsMult", "*", "bpW"}]}]}], "\[IndentingNewLine]", "]"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"grd", "//", "Head"}], "\[IndentingNewLine]", 
 RowBox[{"frmd", "//", "Head"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"rstr", "//", "Head"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"{", 
  RowBox[{
   RowBox[{"ImageDimensions", "[", "rstr", "]"}], ",", 
   RowBox[{"ImageAspectRatio", "[", "rstr", "]"}], ",", 
   RowBox[{"N", "@", 
    RowBox[{"ImageAspectRatio", "[", "rstr", "]"}]}]}], "}"}]}], "Input",
 CellChangeTimes->{{3.7734117686554127`*^9, 3.773411918150736*^9}, {
   3.773587109266794*^9, 3.773587109739748*^9}, {3.7736722231116066`*^9, 
   3.7736722263516083`*^9}, 3.7736737022112017`*^9, {3.7737588430719123`*^9, 
   3.773758987423379*^9}, {3.773759017853423*^9, 3.773759212573621*^9}, {
   3.7737592590356574`*^9, 3.7737594770822134`*^9}, {3.773759508707223*^9, 
   3.7737595464434166`*^9}, 3.773760133753598*^9, {3.7737601682586036`*^9, 
   3.7737602118676534`*^9}, {3.773760811558463*^9, 3.7737608349134645`*^9}, {
   3.773760917697462*^9, 3.7737609901634617`*^9}, 3.7737612887118144`*^9, {
   3.77376305682791*^9, 3.773763072658911*^9}, {3.77376363285756*^9, 
   3.7737636428275585`*^9}, {3.7737642118959794`*^9, 3.773764215895997*^9}, {
   3.7738483954345813`*^9, 3.773848412648607*^9}, {3.773848450569605*^9, 
   3.7738484624094095`*^9}, {3.7738494316562414`*^9, 3.773849522128753*^9}, {
   3.773849605131816*^9, 3.7738496087047925`*^9}, 3.773999067610938*^9, {
   3.7741837875569067`*^9, 3.7741837882188954`*^9}, {3.7741838257694426`*^9, 
   3.774183896743442*^9}, {3.774183942912444*^9, 3.774184004989441*^9}, {
   3.7741840791764407`*^9, 3.774184092079441*^9}, 3.774185015636557*^9},
 CellLabel->
  "In[568]:=",ExpressionUUID->"191ae26d-4ce5-4588-971a-ffcdb37f8193"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     InterpretationBox[Cell[BoxData[
       FormBox[
        StyleBox[
         RowBox[{"x", "\[Rule]", 
          RowBox[{
           FractionBox["1", "2"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "a"}], "-", 
             SqrtBox[
              RowBox[{
               RowBox[{"-", "4"}], "+", 
               SuperscriptBox["a", "2"]}]]}], ")"}]}]}],
         StripOnInput->False,
         LineColor->GrayLevel[0],
         FrontFaceColor->GrayLevel[0],
         BackFaceColor->GrayLevel[0],
         GraphicsColor->GrayLevel[0],
         FontSize->17.5,
         FontColor->GrayLevel[0]], TextForm]], "InlineText",ExpressionUUID->
       "f6f8cab2-68af-4c8e-baae-90a5e17e2736"],
      Text[
       Style[$CellContext`x -> 
        Rational[1, 2] (-$CellContext`a - (-4 + $CellContext`a^2)^
          Rational[1, 2]), 
        GrayLevel[0], 17.5]]]},
    {
     InterpretationBox[Cell[BoxData[
       FormBox[
        StyleBox[
         RowBox[{"x", "\[Rule]", 
          RowBox[{
           FractionBox["1", "2"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "a"}], "+", 
             SqrtBox[
              RowBox[{
               RowBox[{"-", "4"}], "+", 
               SuperscriptBox["a", "2"]}]]}], ")"}]}]}],
         StripOnInput->False,
         LineColor->GrayLevel[0],
         FrontFaceColor->GrayLevel[0],
         BackFaceColor->GrayLevel[0],
         GraphicsColor->GrayLevel[0],
         FontSize->17.5,
         FontColor->GrayLevel[0]], TextForm]], "InlineText",ExpressionUUID->
       "db12e6a8-bec4-40e0-9459-2ee36be3e8d8"],
      Text[
       Style[$CellContext`x -> 
        Rational[
          1, 2] (-$CellContext`a + (-4 + $CellContext`a^2)^Rational[1, 2]), 
        GrayLevel[0], 17.5]]]}
   },
   AutoDelete->False,
   FrameStyle->Directive[
     RGBColor[1, 0, 0], 
     Dashing[{Small, Small}], 
     Thickness[1]],
   GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {0, 0}, "Rows" -> {0, 1, 0}}],
  "Grid"]], "Output",
 CellChangeTimes->{
  3.7734117868263717`*^9, 3.773411819736863*^9, {3.773411898449669*^9, 
   3.7734119188087025`*^9}, {3.773587103163744*^9, 3.7735871105657434`*^9}, {
   3.773672210057596*^9, 3.7736722275446115`*^9}, 3.773673703035163*^9, {
   3.773758923086372*^9, 3.773758988296391*^9}, 3.7737590576676254`*^9, {
   3.773759109220629*^9, 3.773759126680628*^9}, {3.773759179331628*^9, 
   3.7737592130836177`*^9}, {3.7737593241005483`*^9, 3.773759546923412*^9}, 
   3.7737601358546*^9, {3.7737601699056034`*^9, 3.7737602123776035`*^9}, 
   3.773760837610461*^9, 3.773762236565733*^9, 3.7737636455765524`*^9, 
   3.773764218156974*^9, {3.7738483803065796`*^9, 3.773848413504616*^9}, 
   3.773848465319419*^9, {3.773849433444242*^9, 3.773849459740341*^9}, 
   3.7738495229927535`*^9, 3.773849625382823*^9, {3.7741838403684397`*^9, 
   3.7741838978844376`*^9}, {3.774183992197439*^9, 3.7741840076044455`*^9}, 
   3.774184094744439*^9, 3.7741850187261057`*^9},
 CellLabel->
  "Out[576]=",ExpressionUUID->"e942fada-3db9-4a85-929c-313d127c60fe"],

Cell[BoxData[
 FrameBox[
  ItemBox[
   StyleBox[
    TagBox[GridBox[{
       {
        InterpretationBox[Cell[BoxData[
          FormBox[
           StyleBox[
            RowBox[{"x", "\[Rule]", 
             RowBox[{
              FractionBox["1", "2"], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "a"}], "-", 
                SqrtBox[
                 RowBox[{
                  RowBox[{"-", "4"}], "+", 
                  SuperscriptBox["a", "2"]}]]}], ")"}]}]}],
            StripOnInput->False,
            LineColor->GrayLevel[0],
            FrontFaceColor->GrayLevel[0],
            BackFaceColor->GrayLevel[0],
            GraphicsColor->GrayLevel[0],
            FontSize->17.5,
            FontColor->GrayLevel[0]], TextForm]], "InlineText",ExpressionUUID->
          "0ecdf4bc-3b9d-4424-8ff7-6d7afcd3d271"],
         Text[
          
          Style[$CellContext`x -> 
           Rational[1, 2] (-$CellContext`a - (-4 + $CellContext`a^2)^
             Rational[1, 2]), 
           GrayLevel[0], 17.5]]]},
       {
        InterpretationBox[Cell[BoxData[
          FormBox[
           StyleBox[
            RowBox[{"x", "\[Rule]", 
             RowBox[{
              FractionBox["1", "2"], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "a"}], "+", 
                SqrtBox[
                 RowBox[{
                  RowBox[{"-", "4"}], "+", 
                  SuperscriptBox["a", "2"]}]]}], ")"}]}]}],
            StripOnInput->False,
            LineColor->GrayLevel[0],
            FrontFaceColor->GrayLevel[0],
            BackFaceColor->GrayLevel[0],
            GraphicsColor->GrayLevel[0],
            FontSize->17.5,
            FontColor->GrayLevel[0]], TextForm]], "InlineText",ExpressionUUID->
          "06288376-6596-4436-820d-1e113f9cd2ef"],
         Text[
          Style[$CellContext`x -> 
           Rational[
             1, 2] (-$CellContext`a + (-4 + $CellContext`a^2)^Rational[1, 2]), 
           GrayLevel[0], 17.5]]]}
      },
      AutoDelete->False,
      FrameStyle->Directive[
        RGBColor[1, 0, 0], 
        Dashing[{Small, Small}], 
        Thickness[1]],
      GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {0, 0}, "Rows" -> {0, 1, 0}}],
     "Grid"],
    StripOnInput->False,
    FontFamily->"Arabic Transparent",
    FontSize->17.5],
   Alignment->{Center, Center},
   StripOnInput->False],
  ContentPadding->False,
  FrameMargins->{{0, 0}, {0, 0}},
  FrameStyle->RGBColor[1, 0, 0],
  ImageSize->{200, 
    Rational[225, 2]},
  RoundingRadius->0,
  StripOnInput->False]], "Output",
 CellChangeTimes->{
  3.7734117868263717`*^9, 3.773411819736863*^9, {3.773411898449669*^9, 
   3.7734119188087025`*^9}, {3.773587103163744*^9, 3.7735871105657434`*^9}, {
   3.773672210057596*^9, 3.7736722275446115`*^9}, 3.773673703035163*^9, {
   3.773758923086372*^9, 3.773758988296391*^9}, 3.7737590576676254`*^9, {
   3.773759109220629*^9, 3.773759126680628*^9}, {3.773759179331628*^9, 
   3.7737592130836177`*^9}, {3.7737593241005483`*^9, 3.773759546923412*^9}, 
   3.7737601358546*^9, {3.7737601699056034`*^9, 3.7737602123776035`*^9}, 
   3.773760837610461*^9, 3.773762236565733*^9, 3.7737636455765524`*^9, 
   3.773764218156974*^9, {3.7738483803065796`*^9, 3.773848413504616*^9}, 
   3.773848465319419*^9, {3.773849433444242*^9, 3.773849459740341*^9}, 
   3.7738495229927535`*^9, 3.773849625382823*^9, {3.7741838403684397`*^9, 
   3.7741838978844376`*^9}, {3.774183992197439*^9, 3.7741840076044455`*^9}, 
   3.774184094744439*^9, 3.774185018758073*^9},
 CellLabel->
  "Out[577]=",ExpressionUUID->"3b014b38-0a84-4b51-8833-10ef4264389b"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJzs3T9QI90aJ+YpO7BCQoU4I1RIEeEMZ6p1uYqQ3fKyONlV7brKOCIkZDJC
QkIyCAkJCQkICBUSKhyLYb75mBlGOqfVp9/+8zylunXv3Bn08krqPuen033+
1//03/7D8f/05cuX/zFa/sd/+I//7//23//7f/z//o+t5f/4P//r//i//8t/
/c//1//+X/+f//xf/vN/3/1P//PyDxfL/xj9L1++vP33bwAAAAAAQ/Pli4eH
h4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eH
h4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4dHHx4AAAAAAH0l
FwUAAAAAhkYuCgAAAAAMjVwUAAAAABgauSgAAAAAMDRyUQAAAABgaOSiAAAA
AMDQyEUBAAAAgKGRiwIAAAAAQyMXBQAAAACGRi4KAAAAAAyNXBQAAAAAGBq5
KAAAAAAwNHJRAAAAAGBo5KIAAAAAwNDIRQEAAACAoZGLAgAAAABDIxcFAAAA
AIZGLgoAAAAADI1cFAAAAAAYGrkoAAAAADA0clEAAAAAYGjkogAAAADA0MhF
AQAAAIChkYsCAAAAAEMjFwUAAAAAhkYuCgAAAAAMjVwUAAAAABgauSgAAAAA
MDRyUQAAAABgaOSiAAAAAMDQyEUBAAAAgKGRiwIAAAAAQyMXBQAAAACGRi4K
AAAAAAyNXBQAAAAAGBq5KAAAAAAwNHJRAAAAAGBo5KIAAAAAwNDIRQEAAACA
oZGLAgAAAABDIxcFAAAAAIZGLgoAAAAADI1cFAAAAAAYGrkoAAAAADA0clEA
AAAAYGjkogAAAADA0MhFAQAAAIChkYsCAAAAAEMjFwUAAAAAhkYuCgAAAAAM
jVwUAAAAABgauSgAAAAAMDRyUQAAAABgaOSiAAAAAMDQyEUBAAAAgKGRiwIA
AAAAQyMXBQAAAACGRi4KAAAAAAyNXBQAAAAAGBq5aIhP+/y3/vtzf+7P/bk/
9+f+3J/7c3/uz/25P/fn/tyf+/Nh/jnlfOy5/jdGhwEAAABYQXxUmlw0hA4D
AAAAsIL4qDS5KAAAAAAwNHJRAAAAAGBo5KIAAAAAwNDIRQEAAACAoZGLhtBh
AAAAAFYQH5UmFw2hwwAAAACsID4qTS4aQocBAAAAWEF8VJpcNIQOAwAAALCC
+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
j5Xfg5eXl80Uubu7m1KPTZeGIvkC+pKHSbnoRhJ7F11mlxmZ8Af7LnWPXDRE
iQ7XkYz2dTyxcWP4RfTrSbflvt/alouW+Ey1SnSDf/plpUUj04y/aOXsI7Af
zYhucBHT6bRaNyaTSTMVJl7s3+Sl/UVVezk6ZLP2tCIVHUIuWvXl7YzoBtfI
yIQkctHukYuGKNPhTZPRro4m1tuoLXwm+iWlw3LfbHLRhgX29vnHfbcipxqf
aOXsI7opxUU3uIhNlow2sM9Renl3d3eli2lG5ZejKzZpTuxmSx/IRTsvusEb
MTKhArlo98hFQ5Tq8CbJaFfHEikqN4UVol9Vuir3nSYXbVjjHX3fjzX6116h
lbOP6KYUF93gUiovGT04OChdW/o87vX1tXQxzaj2WnRI5c60KYtsUy1lVH15
OyO6wRUYmbARuWj3yEX7Jvnb3V91dSSRplJLWC/6haWTct9mctGGNdfK59s6
9mQtr5Wzj+imFBfd4FI2WTK6/LdFaxvgpkuVX4uuqNiXdiWR7aqmhKovb2dE
NziHkQl1sO9S98hFe6fKmtG+H1qzG0Ky6NeW7sl9j8lFG9ZAD5/f5h3Rv2e6
Vp4io5tSXHSDC5pMJtV6cnh4WLSwAW66VO2F6JBKXWnBFvTV6pGLtlV0g5MY
mVAjuWj3yEX7puJ60X4fXCu1hFTRLy8dk/sGk4s2rGz7nm/bfWXaZ1p5goxu
SnHRDS7o5uamWk9Go9F8Pi9U1WKxGNqmS998jj7Tks2WPpCLdl50g9cxMqFu
ctHukYv2S8VUtO+H18pNIVH0K0yX5L675KINK9e657ZMPPaOv94+p0+1W3l6
LNqgNohucFmVl4zOZrNCJQ1w06VvPkef2GAm0TXtSVGjO1FcdINXMTKhBLlo
98hFQxTq8IZjmf4eYDdqC+tEv7x0TO4bTC7asDJt22RbwJrsvU868itq5cmx
aKvaILrBZVVeMrq1tbVYLEqUdHl5mVhDbzZd+uZz9Am5aIDoThQX3eC/MTKh
FPsudY9cNESRDtcwkunrIXbjxvBX0a8t3ZP7HpOLNqxAz+Lu2bWccfwy5fig
47OPom1rg+gGF1d5yejFxUWJek5OTlKevWdrWqq9BB2S3xK5aIDoThQX3eBP
GZlQkFy0e+SiIervcF1fePXzIFtLa/hT9AtLJ+W+zeSiDau7Yc1OPfa+zze+
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
89PT09WJ6G8XFxfR9f4hcdOl5a9FV0orFEpF5aIbSuxddJkNGt7IRC7aPPsu
dY9ctO2aSEbNFPsh90WMrpeByn2jykW7K/ME1sjazOwT3hBPd4mtiS6z1ebz
+Ww2G41G6W+1yWQSXfUffm8LtVoL7wBA85KPrBWO83LRjST2LrrM5gxwZCIX
bZ5ctHvkou1XOhmVivZI7isZXS9DlPsulYt2Vt7Zq7ETS+ZJb4hX0ie2JrrM
lqqQiP7Wng2MbLpEhiK3Fc1/dPOTzyT2LrrMxhiZ0AS5aPfIRbugZDIqFe2b
3Jczul4GJ/ctKhftqqxTV6MnlrwT3wDPeYmdiS6zdTZJRN/t7+9H/xG/pG+6
tPyro4slVtlUVC66ocTeRZfZFCMTGiEX7R65aIjsDuenl2mHy/zH9f1U22W+
oG+iS2ZYct+fctGOypl8NH5maXVx8RI7E11mi7y8vBwdHaW/qVZ4fHyM/mve
JG66NB6PoyslWPLRtHKQIxfdSGLvostsSKtP/q0ujjz2XeoeuWiICh0ukYw2
ut89zcl9Wb/5yNOg3DenXLSbck4wAXPZjPIGeOJL7Ex0ma1QYyL6riXbGB0c
HHSoWsIU22zpA7noRhJ7F11mM4xMaIhctHvkoiEqdbjuZFQq2me5r+03n3qa
kvvOlIt2UutH9xkFDm+qndiY6DKD1Z6IvhuNRm24Mn1rayulWpsuDVsTqahc
dEOJvYsusxFGJjRFLto9ctEQFTtcZzIqFe293Bf4mw8+jch9W8pFuyjjdBV0
bsmocHizj8TGRJcZ5unpqUQi+ttsNov9A19eXhJLtenSgJXcgr7aEw3wYJ0g
sXfRZTbByITGyEW7Ry7aLdnJ6BeHdanoAOS+xO+iqw5TrV1tEN25bLl/oFy0
g7owtE8/Dw5v9pHYmOgyAzw+Pk6n09R3TlWj0WixWAT+mTZdYq3Smy1VeaoB
HqwTJPYuuswGGJnQHPsudY9ctGtqSEZtQT8Yua/zu+iqY1TrVRtEdy5b7h8o
F+2o56Xb29vvx8fHe0tfvLxxZ5f0U+HwvhdMbEx0mY1qJhH97eLiIvCPPT09
TSnSpkvDVX6zpQ/kohtJ7F10mQ0xMqEZctHukYt2T3as+efBXSo6LLkv9rvo
qgNUa1QbRHcuW+4fKBftkQ8zkuOfM5LAgb3Zx9f6evCppuFE9N14PA5cMmrT
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
jj+UlpOL9k1iN6LLLMvIhIbZd6l75KJdk393lM9O+5LRgcl8z/wnunB6KPdN
KBftlLxzVNy0NOcsOLwzYGJjosvslfl8nvHJ+WAymWzyvK+vr4lPVMs1+5Av
/bQykKQzT2LvosssysiEpslFu0cu2i31pKJvJKPDkfmW+U904fRT7vtQLtop
WeeWuMlH1sl0eOe/xMZEl9k30+k049Pzwc3NTeUnXR5gE5/FoZggctGNJPYu
usyijExomly0e+SiXVJfKvpGMjoUmW+aX6Krprdy34om413SkVF9Ry6pC5PY
mOgy++bx8THjbfnBdDqt/KQ2XaL15KIbSexddJklGZnQOLlo98hFQ1TqcL2p
6BvJ6ABkvmd+ia6aPst9N8pFuyTrRBU2hc09nQ5urp3Yl+gye6jyktHHx8dq
z3h4eJjy+Ds7O/X+pZBMLrqRxN5Fl1mSkQmNs+9S98hFQ1TocP2p6BvJaL9l
vmV+ia6anst9Q8pFu6QTN8fKPp8ObvaR2JfoMnuo8pLRo6Ojas+4s7OT8vg2
XSKOXHQjib2LLrMkIxMaJxftHrloiOwO5+8OmXiwLBO30ga5b5l30VXTf7nv
Sblol3Rh9lHshNofiX2JLrOfqi0ZHY1G8/k897lsukQXyEU3kti76DJLMjKh
cXLR7pGLhsjscNFDpWS0l3LfMe+iq2YQct+WctEuaf/mBvkn1AGe9RL7El1m
P6VvhPSX2WxW7rkch4kjF91IYu+iyyzJyITGyUW7Ry7afsW/QJKM9lDue+ab
Tz1NyX1nmo93Sdvv4lVl7jHAc15iX6LL7K3JZFLhbToejxeLRdYTnZ+fJz64
TZeIIxfdSGLvosssyciExtl3qXvkom2Xfaissv5fMtovmS/mm+iSGZDcN6dc
tEvyziZNn0mqzT0GeMZL7Et0mb11c3NT7Z2ae7V74jX7Nl0ilFx0I4m9iy6z
JCMTGicX7R65aLs1koq+kYz2Rubr+Ca6ZIYl9/0pF+2UvLNWkyeS/NPcb4Pb
cjCxL9Fl9lm1JaO5E6vl76c8rE2XCCUX3Uhi76LLLMrIhKbJRbtHLtpi+YfK
TY6QktE+yHwJ30SXzODkvkXlop2SeSpp6jzyXHVBxk+Dm30k9iW6zD6rvGR0
+Q8Tn8KmS3SEXHQjib2LLrMoIxOaJhftHrloiJQON5uKVntG44+2yXwBfdIJ
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
n/u5n/u5n/u5n/u5nw/z55Tzsef6DwAAAAAMgVwUAAAAABgauSgAAAAAMDRy
UQAAAABgaOSiAAAAAMDQyEUBAAAAgKGRiwIAAAAAQyMXBQAAAACGRi4KAAAA
AAyNXBQA/teOHdAAAMAwCPPv+gom4KENKgAAAKDGFwUAAAAAanxRAAAAAKDG
FwUAAAAAanxRAAAAAKDGFwUAAAAAanxRAAAAAKDGFwUAAAAAanxRAAAAAKDG
FwUAAAAAanxRAAAAAKDGFwUAAAAAanxRAAAAAKDGFwUAAAAAanxRAAAAAKDG
FwUAAAAAanxRAAAAAKDGFwUAAAAAanxRAAAAAKDGFwUAAAAAanxRAAAAAKDG
FwUAAAAAanxRAAAAAKDGFwUAAAAAanxRAAAAAKDGFwUAAAAAanxRAAAAAKDG
FwUAAAAAanxRAAAAAKDGFwUAAAAAanxRAAAAAKDGFwUAAAAAanxRAAAAAKDG
FwUAAAAAanxRAAAAAKDGFwUAAAAAanxRAAAAAKDGFwUAAAAAanxRAAAAAKDG
FwUAAAAAanxRAAAAAKDGFwUAAAAAanxRAAAAAKDGFwUAAAAAanxRAAAAAKDG
FwUAAAAAanxRAAAAAKDGFwUAAAAAanxRAAAAAKDGFwUAAAAAanxRAAAAAKDG
FwUAAAAAatYXlSRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkvQrAAAA
AICYA1GNuFk=
    "], {{0, 1015}, {1800, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->{200, 
    Rational[225, 2]},
  ImageSizeRaw->{1800, 1015},
  PlotRange->{{0, 1800}, {0, 1015}}]], "Output",
 CellChangeTimes->{
  3.7734117868263717`*^9, 3.773411819736863*^9, {3.773411898449669*^9, 
   3.7734119188087025`*^9}, {3.773587103163744*^9, 3.7735871105657434`*^9}, {
   3.773672210057596*^9, 3.7736722275446115`*^9}, 3.773673703035163*^9, {
   3.773758923086372*^9, 3.773758988296391*^9}, 3.7737590576676254`*^9, {
   3.773759109220629*^9, 3.773759126680628*^9}, {3.773759179331628*^9, 
   3.7737592130836177`*^9}, {3.7737593241005483`*^9, 3.773759546923412*^9}, 
   3.7737601358546*^9, {3.7737601699056034`*^9, 3.7737602123776035`*^9}, 
   3.773760837610461*^9, 3.773762236565733*^9, 3.7737636455765524`*^9, 
   3.773764218156974*^9, {3.7738483803065796`*^9, 3.773848413504616*^9}, 
   3.773848465319419*^9, {3.773849433444242*^9, 3.773849459740341*^9}, 
   3.7738495229927535`*^9, 3.773849625382823*^9, {3.7741838403684397`*^9, 
   3.7741838978844376`*^9}, {3.774183992197439*^9, 3.7741840076044455`*^9}, 
   3.774184094744439*^9, 3.774185019369071*^9},
 CellLabel->
  "Out[578]=",ExpressionUUID->"d297b5b4-8234-44b4-a07d-015499c2c8f7"],

Cell[BoxData["Grid"], "Output",
 CellChangeTimes->{
  3.7734117868263717`*^9, 3.773411819736863*^9, {3.773411898449669*^9, 
   3.7734119188087025`*^9}, {3.773587103163744*^9, 3.7735871105657434`*^9}, {
   3.773672210057596*^9, 3.7736722275446115`*^9}, 3.773673703035163*^9, {
   3.773758923086372*^9, 3.773758988296391*^9}, 3.7737590576676254`*^9, {
   3.773759109220629*^9, 3.773759126680628*^9}, {3.773759179331628*^9, 
   3.7737592130836177`*^9}, {3.7737593241005483`*^9, 3.773759546923412*^9}, 
   3.7737601358546*^9, {3.7737601699056034`*^9, 3.7737602123776035`*^9}, 
   3.773760837610461*^9, 3.773762236565733*^9, 3.7737636455765524`*^9, 
   3.773764218156974*^9, {3.7738483803065796`*^9, 3.773848413504616*^9}, 
   3.773848465319419*^9, {3.773849433444242*^9, 3.773849459740341*^9}, 
   3.7738495229927535`*^9, 3.773849625382823*^9, {3.7741838403684397`*^9, 
   3.7741838978844376`*^9}, {3.774183992197439*^9, 3.7741840076044455`*^9}, 
   3.774184094744439*^9, 3.774185019411073*^9},
 CellLabel->
  "Out[579]=",ExpressionUUID->"93ab4eb3-e4ae-4d06-80fb-c00968ff18ba"],

Cell[BoxData["Framed"], "Output",
 CellChangeTimes->{
  3.7734117868263717`*^9, 3.773411819736863*^9, {3.773411898449669*^9, 
   3.7734119188087025`*^9}, {3.773587103163744*^9, 3.7735871105657434`*^9}, {
   3.773672210057596*^9, 3.7736722275446115`*^9}, 3.773673703035163*^9, {
   3.773758923086372*^9, 3.773758988296391*^9}, 3.7737590576676254`*^9, {
   3.773759109220629*^9, 3.773759126680628*^9}, {3.773759179331628*^9, 
   3.7737592130836177`*^9}, {3.7737593241005483`*^9, 3.773759546923412*^9}, 
   3.7737601358546*^9, {3.7737601699056034`*^9, 3.7737602123776035`*^9}, 
   3.773760837610461*^9, 3.773762236565733*^9, 3.7737636455765524`*^9, 
   3.773764218156974*^9, {3.7738483803065796`*^9, 3.773848413504616*^9}, 
   3.773848465319419*^9, {3.773849433444242*^9, 3.773849459740341*^9}, 
   3.7738495229927535`*^9, 3.773849625382823*^9, {3.7741838403684397`*^9, 
   3.7741838978844376`*^9}, {3.774183992197439*^9, 3.7741840076044455`*^9}, 
   3.774184094744439*^9, 3.7741850194150743`*^9},
 CellLabel->
  "Out[580]=",ExpressionUUID->"0794f847-7fd2-492a-92a2-7a05efcf98fb"],

Cell[BoxData["Image"], "Output",
 CellChangeTimes->{
  3.7734117868263717`*^9, 3.773411819736863*^9, {3.773411898449669*^9, 
   3.7734119188087025`*^9}, {3.773587103163744*^9, 3.7735871105657434`*^9}, {
   3.773672210057596*^9, 3.7736722275446115`*^9}, 3.773673703035163*^9, {
   3.773758923086372*^9, 3.773758988296391*^9}, 3.7737590576676254`*^9, {
   3.773759109220629*^9, 3.773759126680628*^9}, {3.773759179331628*^9, 
   3.7737592130836177`*^9}, {3.7737593241005483`*^9, 3.773759546923412*^9}, 
   3.7737601358546*^9, {3.7737601699056034`*^9, 3.7737602123776035`*^9}, 
   3.773760837610461*^9, 3.773762236565733*^9, 3.7737636455765524`*^9, 
   3.773764218156974*^9, {3.7738483803065796`*^9, 3.773848413504616*^9}, 
   3.773848465319419*^9, {3.773849433444242*^9, 3.773849459740341*^9}, 
   3.7738495229927535`*^9, 3.773849625382823*^9, {3.7741838403684397`*^9, 
   3.7741838978844376`*^9}, {3.774183992197439*^9, 3.7741840076044455`*^9}, 
   3.774184094744439*^9, 3.774185019420071*^9},
 CellLabel->
  "Out[581]=",ExpressionUUID->"111f77bb-a833-4fe5-9b43-73f16f1ff4aa"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1800", ",", "1015"}], "}"}], ",", 
   FractionBox["203", "360"], ",", "0.5638888888888889`"}], "}"}]], "Output",
 CellChangeTimes->{
  3.7734117868263717`*^9, 3.773411819736863*^9, {3.773411898449669*^9, 
   3.7734119188087025`*^9}, {3.773587103163744*^9, 3.7735871105657434`*^9}, {
   3.773672210057596*^9, 3.7736722275446115`*^9}, 3.773673703035163*^9, {
   3.773758923086372*^9, 3.773758988296391*^9}, 3.7737590576676254`*^9, {
   3.773759109220629*^9, 3.773759126680628*^9}, {3.773759179331628*^9, 
   3.7737592130836177`*^9}, {3.7737593241005483`*^9, 3.773759546923412*^9}, 
   3.7737601358546*^9, {3.7737601699056034`*^9, 3.7737602123776035`*^9}, 
   3.773760837610461*^9, 3.773762236565733*^9, 3.7737636455765524`*^9, 
   3.773764218156974*^9, {3.7738483803065796`*^9, 3.773848413504616*^9}, 
   3.773848465319419*^9, {3.773849433444242*^9, 3.773849459740341*^9}, 
   3.7738495229927535`*^9, 3.773849625382823*^9, {3.7741838403684397`*^9, 
   3.7741838978844376`*^9}, {3.774183992197439*^9, 3.7741840076044455`*^9}, 
   3.774184094744439*^9, 3.7741850194250717`*^9},
 CellLabel->
  "Out[582]=",ExpressionUUID->"5b38f10f-667f-46c2-aaf2-e4945170ead5"]
}, Open  ]],

Cell["\<\
Note the interaction between font size, image size and aspect ratio.

Comment: 
make sure to load custom functions used in the Function block into kernel \
memory before evaluating APIFunction[ ].  Or, add the custom function into \
the Function block.

Really helpful tip:
don\[CloseCurlyQuote]t send Symbols to HTML!  Replace them with Strings.
/. is shorthand for ReplaceAll[...]\
\>", "Text",
 CellChangeTimes->{{3.7732376341601996`*^9, 3.77323777440237*^9}, {
  3.7732378332349944`*^9, 3.7732378807279987`*^9}, {3.773759591894573*^9, 
  3.773759654310676*^9}, {3.773761439846795*^9, 3.773761444634794*^9}, {
  3.773761476012164*^9, 3.77376157438065*^9}, {3.7737692178810887`*^9, 
  3.773769246338586*^9}, {3.773769431927166*^9, 3.773769460971424*^9}, {
  3.7738486144726524`*^9, 3.773848614970671*^9}, {3.7741850719791126`*^9, 
  3.7741850906140747`*^9}},ExpressionUUID->"e420b43f-c97e-449f-9672-\
3b777dd62622"],

Cell[CellGroupData[{

Cell[BoxData[{"eq", "\[IndentingNewLine]", 
 RowBox[{"%", "//", "FullForm"}], "\[IndentingNewLine]", 
 RowBox[{"eq", "/.", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"x", "\[Rule]", "\"\<x\>\""}], ",", 
    RowBox[{"a", "\[Rule]", "\"\<a\>\""}]}], "}"}]}], "\[IndentingNewLine]", 
 RowBox[{"%", "//", "FullForm"}]}], "Input",
 CellChangeTimes->{{3.773775096864229*^9, 3.773775097176188*^9}, {
  3.7741849859499574`*^9, 3.7741849869269924`*^9}, {3.7741850287130733`*^9, 
  3.774185037314074*^9}},
 CellLabel->
  "In[587]:=",ExpressionUUID->"583a8907-5751-405b-8574-27bd41cc8683"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     RowBox[{
      FractionBox["1", "2"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "a"}], "-", 
        SqrtBox[
         RowBox[{
          RowBox[{"-", "4"}], "+", 
          SuperscriptBox["a", "2"]}]]}], ")"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     RowBox[{
      FractionBox["1", "2"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "a"}], "+", 
        SqrtBox[
         RowBox[{
          RowBox[{"-", "4"}], "+", 
          SuperscriptBox["a", "2"]}]]}], ")"}]}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.773774947759201*^9, 3.773775097899188*^9, 
  3.773848760235318*^9, 3.774185038453072*^9, 3.774185129300074*^9},
 CellLabel->
  "Out[587]=",ExpressionUUID->"4a57f3d4-f4fb-4cf3-acf2-a007e4bce792"],

Cell[BoxData[
 TagBox[
  StyleBox[
   RowBox[{"List", "[", 
    RowBox[{
     RowBox[{"List", "[", 
      RowBox[{"Rule", "[", 
       RowBox[{"x", ",", 
        RowBox[{"Times", "[", 
         RowBox[{
          RowBox[{"Rational", "[", 
           RowBox[{"1", ",", "2"}], "]"}], ",", 
          RowBox[{"Plus", "[", 
           RowBox[{
            RowBox[{"Times", "[", 
             RowBox[{
              RowBox[{"-", "1"}], ",", "a"}], "]"}], ",", 
            RowBox[{"Times", "[", 
             RowBox[{
              RowBox[{"-", "1"}], ",", 
              RowBox[{"Power", "[", 
               RowBox[{
                RowBox[{"Plus", "[", 
                 RowBox[{
                  RowBox[{"-", "4"}], ",", 
                  RowBox[{"Power", "[", 
                   RowBox[{"a", ",", "2"}], "]"}]}], "]"}], ",", 
                RowBox[{"Rational", "[", 
                 RowBox[{"1", ",", "2"}], "]"}]}], "]"}]}], "]"}]}], "]"}]}], 
         "]"}]}], "]"}], "]"}], ",", 
     RowBox[{"List", "[", 
      RowBox[{"Rule", "[", 
       RowBox[{"x", ",", 
        RowBox[{"Times", "[", 
         RowBox[{
          RowBox[{"Rational", "[", 
           RowBox[{"1", ",", "2"}], "]"}], ",", 
          RowBox[{"Plus", "[", 
           RowBox[{
            RowBox[{"Times", "[", 
             RowBox[{
              RowBox[{"-", "1"}], ",", "a"}], "]"}], ",", 
            RowBox[{"Power", "[", 
             RowBox[{
              RowBox[{"Plus", "[", 
               RowBox[{
                RowBox[{"-", "4"}], ",", 
                RowBox[{"Power", "[", 
                 RowBox[{"a", ",", "2"}], "]"}]}], "]"}], ",", 
              RowBox[{"Rational", "[", 
               RowBox[{"1", ",", "2"}], "]"}]}], "]"}]}], "]"}]}], "]"}]}], 
       "]"}], "]"}]}], "]"}],
   ShowSpecialCharacters->False,
   ShowStringCharacters->True,
   NumberMarks->True],
  FullForm]], "Output",
 CellChangeTimes->{3.773774947759201*^9, 3.773775097899188*^9, 
  3.773848760235318*^9, 3.774185038453072*^9, 3.774185129317072*^9},
 CellLabel->
  "Out[588]//FullForm=",ExpressionUUID->"fbe2eafd-8b35-4344-850a-\
9cc36268d7de"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\<\"x\"\>", "\[Rule]", 
     RowBox[{
      FractionBox["1", "2"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "\<\"a\"\>"}], "-", 
        SqrtBox[
         RowBox[{
          RowBox[{"-", "4"}], "+", 
          SuperscriptBox["\<\"a\"\>", "2"]}]]}], ")"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"x\"\>", "\[Rule]", 
     RowBox[{
      FractionBox["1", "2"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "\<\"a\"\>"}], "+", 
        SqrtBox[
         RowBox[{
          RowBox[{"-", "4"}], "+", 
          SuperscriptBox["\<\"a\"\>", "2"]}]]}], ")"}]}]}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.773774947759201*^9, 3.773775097899188*^9, 
  3.773848760235318*^9, 3.774185038453072*^9, 3.774185129323072*^9},
 CellLabel->
  "Out[589]=",ExpressionUUID->"20830c05-5d20-4e8e-b50c-49be3d3f0297"],

Cell[BoxData[
 TagBox[
  StyleBox[
   RowBox[{"List", "[", 
    RowBox[{
     RowBox[{"List", "[", 
      RowBox[{"Rule", "[", 
       RowBox[{"\"\<x\>\"", ",", 
        RowBox[{"Times", "[", 
         RowBox[{
          RowBox[{"Rational", "[", 
           RowBox[{"1", ",", "2"}], "]"}], ",", 
          RowBox[{"Plus", "[", 
           RowBox[{
            RowBox[{"Times", "[", 
             RowBox[{
              RowBox[{"-", "1"}], ",", "\"\<a\>\""}], "]"}], ",", 
            RowBox[{"Times", "[", 
             RowBox[{
              RowBox[{"-", "1"}], ",", 
              RowBox[{"Power", "[", 
               RowBox[{
                RowBox[{"Plus", "[", 
                 RowBox[{
                  RowBox[{"-", "4"}], ",", 
                  RowBox[{"Power", "[", 
                   RowBox[{"\"\<a\>\"", ",", "2"}], "]"}]}], "]"}], ",", 
                RowBox[{"Rational", "[", 
                 RowBox[{"1", ",", "2"}], "]"}]}], "]"}]}], "]"}]}], "]"}]}], 
         "]"}]}], "]"}], "]"}], ",", 
     RowBox[{"List", "[", 
      RowBox[{"Rule", "[", 
       RowBox[{"\"\<x\>\"", ",", 
        RowBox[{"Times", "[", 
         RowBox[{
          RowBox[{"Rational", "[", 
           RowBox[{"1", ",", "2"}], "]"}], ",", 
          RowBox[{"Plus", "[", 
           RowBox[{
            RowBox[{"Times", "[", 
             RowBox[{
              RowBox[{"-", "1"}], ",", "\"\<a\>\""}], "]"}], ",", 
            RowBox[{"Power", "[", 
             RowBox[{
              RowBox[{"Plus", "[", 
               RowBox[{
                RowBox[{"-", "4"}], ",", 
                RowBox[{"Power", "[", 
                 RowBox[{"\"\<a\>\"", ",", "2"}], "]"}]}], "]"}], ",", 
              RowBox[{"Rational", "[", 
               RowBox[{"1", ",", "2"}], "]"}]}], "]"}]}], "]"}]}], "]"}]}], 
       "]"}], "]"}]}], "]"}],
   ShowSpecialCharacters->False,
   ShowStringCharacters->True,
   NumberMarks->True],
  FullForm]], "Output",
 CellChangeTimes->{3.773774947759201*^9, 3.773775097899188*^9, 
  3.773848760235318*^9, 3.774185038453072*^9, 3.7741851293390713`*^9},
 CellLabel->
  "Out[590]//FullForm=",ExpressionUUID->"de31fb75-20c7-44e8-a111-\
f3e2cb0bdc28"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{"ClearAll", "[", 
  RowBox[{
  "grd", ",", "rstr", ",", "bpW", ",", "w", ",", "h", ",", "xL", ",", "xR", 
   ",", "yT", ",", "yC", ",", "yB", ",", "fs", ",", "rsMult"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"xL", "=", "0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"xR", "=", "0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"yT", "=", "0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"yC", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"yB", "=", "0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"bpW", "=", "200"}], ";"}], 
  RowBox[{"(*", 
   RowBox[{"base", " ", "pixels", " ", "width"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"w", "=", "16"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"h", "=", "9"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"fs", "=", "17.5"}], ";"}], 
  RowBox[{"(*", 
   RowBox[{"font", " ", "size"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"rsMult", "=", "3"}], ";"}], 
  RowBox[{"(*", 
   RowBox[{"RasterSize", " ", "multiple"}], "*)"}]}]}], "Input",
 CellChangeTimes->{{3.7734117686554127`*^9, 3.773411918150736*^9}, {
   3.773587109266794*^9, 3.773587109739748*^9}, {3.7736722231116066`*^9, 
   3.7736722263516083`*^9}, 3.7736737022112017`*^9, {3.7737588430719123`*^9, 
   3.773758987423379*^9}, {3.773759017853423*^9, 3.773759212573621*^9}, {
   3.7737592590356574`*^9, 3.7737594770822134`*^9}, {3.773759508707223*^9, 
   3.7737595464434166`*^9}, 3.773760133753598*^9, {3.7737601682586036`*^9, 
   3.7737602118676534`*^9}, {3.7737606536145945`*^9, 
   3.7737606999914665`*^9}, {3.7737607898345013`*^9, 3.773760802354459*^9}, {
   3.7737608431674595`*^9, 3.773760848878462*^9}, {3.7737608863854675`*^9, 
   3.7737609047165003`*^9}, 3.773761025584462*^9, {3.7737612323187895`*^9, 
   3.773761257721845*^9}, {3.7738488149827166`*^9, 
   3.7738488159367065`*^9}},ExpressionUUID->"30bb4b9f-bc98-4728-be09-\
63fdf6cc06f3"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"makeAPI", ",", " ", "makeCD", ",", " ", 
    RowBox[{"and", " ", "WebExecute"}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"ClearAll", "[", 
    RowBox[{
    "args", ",", "func", ",", "frmt", ",", "params", ",", "endPoint", ",", 
     "funcName", ",", "permit", ",", "url", ",", "session"}], "]"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"required", " ", "custom", " ", "functions"}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{"ClearAll", "[", 
    RowBox[{"wPX", ",", "hPX", ",", "bp", ",", "w", ",", "h"}], "]"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"wPX", "[", "base_", "]"}], ":=", "base"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"wPX", "[", 
     RowBox[{"base_", ",", "w_", ",", "h_"}], "]"}], ":=", 
    RowBox[{
     RowBox[{"base", "*", 
      RowBox[{"(", 
       RowBox[{"w", "/", "h"}], ")"}]}], "//", "N"}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"hPX", "[", "base_", "]"}], ":=", "base"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"hPX", "[", 
     RowBox[{"base_", ",", "w_", ",", "h_"}], "]"}], ":=", 
    RowBox[{
     RowBox[{"base", "*", 
      RowBox[{"(", 
       RowBox[{"h", "/", "w"}], ")"}]}], "//", "N"}]}], "\[IndentingNewLine]",
    "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"args", "=", 
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"\"\<xL\>\"", "\[Rule]", "\"\<Number\>\""}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"\"\<xR\>\"", "\[Rule]", "\"\<Number\>\""}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"\"\<yT\>\"", "\[Rule]", "\"\<Number\>\""}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"\"\<yC\>\"", "\[Rule]", "\"\<Number\>\""}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"\"\<yB\>\"", "\[Rule]", "\"\<Number\>\""}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"\"\<bpW\>\"", "\[Rule]", "\"\<Number\>\""}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"\"\<w\>\"", "\[Rule]", "\"\<Number\>\""}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"\"\<h\>\"", "\[Rule]", "\"\<Number\>\""}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"\"\<fs\>\"", "\[Rule]", "\"\<Number\>\""}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"\"\<rsMult\>\"", "\[Rule]", "\"\<Number\>\""}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"\"\<gridFrame\>\"", "\[Rule]", "\"\<Boolean\>\""}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"\"\<imageFrame\>\"", "\[Rule]", "\"\<Boolean\>\""}]}], 
      "\[IndentingNewLine]", "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"func", "=", 
     RowBox[{"Function", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"ClearAll", "[", 
        RowBox[{"a", ",", "x"}], "]"}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"Rasterize", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Framed", "[", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"Item", "[", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"Style", "[", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{
               "Grid", "[", "\[IndentingNewLine]", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"Solve", "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{
                    RowBox[{"x", "^", "2"}], "+", 
                    RowBox[{"a", " ", "x"}], "+", "1"}], "\[Equal]", "0"}], 
                   ",", "x"}], "]"}], ",", "\[IndentingNewLine]", 
                 "\[IndentingNewLine]", 
                 RowBox[{"Spacings", "\[Rule]", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"#xL", ",", "#xR"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"#yT", ",", "#yC", ",", "#yB"}], "}"}]}], "}"}]}],
                  ",", "\[IndentingNewLine]", 
                 RowBox[{"Frame", "\[Rule]", "All"}], ",", 
                 RowBox[{"FrameStyle", "\[Rule]", 
                  RowBox[{"If", "[", 
                   RowBox[{"#gridFrame", ",", "Gray", ",", "White"}], 
                   "]"}]}]}], "\[IndentingNewLine]", "]"}], ",", 
               "\[IndentingNewLine]", 
               RowBox[{
               "FontFamily", "\[Rule]", "\"\<Arabic Transparent\>\""}], ",", 
               RowBox[{"FontSize", "\[Rule]", "#fs"}]}], 
              "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
             RowBox[{"Alignment", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{"Center", ",", "Center"}], "}"}]}]}], 
            "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
           RowBox[{"ImageSize", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"wPX", "[", "#bpW", "]"}], ",", 
              RowBox[{"hPX", "[", 
               RowBox[{"#bpW", ",", "#w", ",", "#h"}], "]"}]}], "}"}]}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"FrameMargins", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"0", ",", "0"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"0", ",", "0"}], "}"}]}], "}"}]}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"ContentPadding", "\[Rule]", "False"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"RoundingRadius", "\[Rule]", "0"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"FrameStyle", "\[Rule]", 
            RowBox[{"If", "[", 
             RowBox[{"#imageFrame", ",", "Red", ",", "White"}], "]"}]}]}], 
          "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
         RowBox[{"ImageSize", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"wPX", "[", "#bpW", "]"}], ",", 
            RowBox[{"hPX", "[", 
             RowBox[{"#bpW", ",", "#w", ",", "#h"}], "]"}]}], "}"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"RasterSize", "\[Rule]", 
          RowBox[{"#rsMult", "*", "#bpW"}]}]}], "\[IndentingNewLine]", 
        "]"}]}], "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"frmt", "=", "\"\<PNG\>\""}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"params", "=", 
     RowBox[{"<|", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"\"\<xL\>\"", "\[Rule]", "0"}], ",", "\[IndentingNewLine]", 
       RowBox[{"\"\<xR\>\"", "\[Rule]", "0"}], ",", "\[IndentingNewLine]", 
       RowBox[{"\"\<yT\>\"", "\[Rule]", "0"}], ",", "\[IndentingNewLine]", 
       RowBox[{"\"\<yC\>\"", "\[Rule]", "0"}], ",", "\[IndentingNewLine]", 
       RowBox[{"\"\<yB\>\"", "\[Rule]", "0"}], ",", "\[IndentingNewLine]", 
       RowBox[{"\"\<bpW\>\"", "\[Rule]", "200"}], ",", "\[IndentingNewLine]", 
       RowBox[{"\"\<w\>\"", "\[Rule]", "16"}], ",", "\[IndentingNewLine]", 
       RowBox[{"\"\<h\>\"", "\[Rule]", "9"}], ",", "\[IndentingNewLine]", 
       RowBox[{"\"\<fs\>\"", "\[Rule]", "17.5"}], ",", "\[IndentingNewLine]", 
       RowBox[{"\"\<rsMult\>\"", "\[Rule]", "3"}], ",", "\[IndentingNewLine]", 
       RowBox[{"\"\<gridFrame\>\"", "\[Rule]", "True"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"\"\<imageFrame\>\"", "\[Rule]", "True"}]}], 
      "\[IndentingNewLine]", "|>"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"endPoint", "=", "\"\<live-coding\>\""}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"funcName", "=", "\"\<equation\>\""}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"permit", "=", "\"\<Public\>\""}], ";"}]}]}]], "Input",
 CellChangeTimes->{
  3.773760569173571*^9, {3.7737611866761217`*^9, 3.7737612086117945`*^9}, {
   3.7737612444167943`*^9, 3.7737612789917965`*^9}, {3.773761317261825*^9, 
   3.7737614181707993`*^9}, {3.773761632567605*^9, 3.7737616574226317`*^9}, {
   3.773761707236599*^9, 3.773761724894602*^9}, {3.773761784041605*^9, 
   3.7737618386406007`*^9}, {3.773762265637114*^9, 3.7737622806491156`*^9}, {
   3.773762348507267*^9, 3.773762360111206*^9}, {3.7737624399395933`*^9, 
   3.7737624406406155`*^9}, {3.7737625345451665`*^9, 
   3.7737625355061255`*^9}, {3.7737626236017094`*^9, 3.7737627351453*^9}, {
   3.7737628779624643`*^9, 3.7737628800754657`*^9}, {3.7737629267095613`*^9, 
   3.7737629847616544`*^9}, {3.773763112051964*^9, 3.7737631179170046`*^9}, {
   3.773763153934928*^9, 3.7737631643539376`*^9}, {3.773763656028555*^9, 
   3.773763668632566*^9}, {3.7737638053007493`*^9, 3.773763805725723*^9}, {
   3.773763936846757*^9, 3.7737639763717847`*^9}, 3.7737640426697702`*^9, {
   3.77376477530385*^9, 3.7737647952698493`*^9}, {3.77376507203111*^9, 
   3.7737650947171135`*^9}, {3.7737651380101085`*^9, 3.773765266906598*^9}, {
   3.773765357382228*^9, 3.7737653715882664`*^9}, {3.7737654884775558`*^9, 
   3.773765489228558*^9}, 3.7737655288136225`*^9, 3.773766774286764*^9, {
   3.773766837004783*^9, 3.773766842317814*^9}, {3.773766972490961*^9, 
   3.773766990746643*^9}, {3.7737671049720287`*^9, 3.7737671067109914`*^9}, {
   3.77376716837512*^9, 3.773767172252102*^9}, {3.773767261790263*^9, 
   3.7737672696407022`*^9}, {3.773767417805055*^9, 3.7737675671822233`*^9}, {
   3.7737676397638297`*^9, 3.7737679214492707`*^9}, 3.7737680170094676`*^9, 
   3.773769115041006*^9, {3.7737691481341743`*^9, 3.7737691593572063`*^9}, {
   3.773769569743718*^9, 3.773769573307681*^9}, {3.773774853629221*^9, 
   3.7737748769222336`*^9}, {3.7737752868466034`*^9, 
   3.7737753781798334`*^9}, {3.7737754221743755`*^9, 3.773775578953766*^9}, {
   3.773776466108606*^9, 3.773776466255603*^9}, {3.7737774905816536`*^9, 
   3.773777526794114*^9}, {3.773777576266156*^9, 3.7737776989548545`*^9}, {
   3.773777731710453*^9, 3.7737778155501294`*^9}, 3.7738497110897923`*^9, {
   3.7738497614738083`*^9, 3.773849789252469*^9}, {3.7738498350773993`*^9, 
   3.773849866196686*^9}, {3.7738499527196684`*^9, 3.7738499529586716`*^9}, 
   3.7741851830316987`*^9},
 CellLabel->
  "In[605]:=",ExpressionUUID->"04657f2b-2ff6-4fc0-bde5-44e4141397b3"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"makeAPI", "[", 
   RowBox[{"args", ",", "func", ",", "frmt"}], "]"}], "[", "params", 
  "]"}]], "Input",
 CellChangeTimes->{{3.773761730942604*^9, 3.7737617335066075`*^9}, {
  3.7737618532836046`*^9, 3.773761872371603*^9}},
 CellLabel->
  "In[618]:=",ExpressionUUID->"6e704d22-87cf-4543-b4b4-0788fe00712f"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
MCIHUcxnDqpBEwMmVQuAugiQuiRcR6QsykIOlqGm8vcaguui607kIIr5zEE1
s2jWgtHoE1kk0+k1l7NTkBzMozqCDXxUyToEWaJMDqKYzxxU9cxMLhqCnhTJ
6PqO/Quk5GAGvdKg347gD8kclHXp5KBdi5dmWkixBnPw6OjI9Sv4sli8PF5f
n0Z0T2DzvetHPUsrdqLenyyS6ew0eskqxz7noKvW3lBZTEKYOfjr79SbLtMo
9f3uBvdSwo9zSxt/Sz5zUM3zoOqZTdrc2ci+HKbaUGLS8uD1o0hmf32y3ZGi
yRxcCD5fx2lrV6MEm/zDSOagXOy7rzkYJaEu4ipqlpZS0O/UCgdsjvuNGY/H
8lO3noN5N4RyDg/t70M7VOVeJ4tk9g4W8d5tLgf3m6G3V3Lb2vePag0fXdVU
25HZbBb/tL85+PdkOXNec7GUgnpjWj+MNpiDpoeS7d/YqKTtXWiIHNHczSKZ
9BTsWw46bu3iw2nj4BpuDlYIN/3A1o9a+kSs1Vj2moNqHnjDOZgyTGx7HWj/
utRieyMl5QjSeptyLOrH1VsZRE6r3sEimZwI6lMOOm7tdXqWTg96IedguSS0
OTFgYqtajEKfOagap9kcrLo/LO0/x6IEvLi42L2rqlc1u14kkxtA/clB1629
3gVWcrA+/Y6KktBmCm4lTsn6cyj9ot6i1RzUzaRG3VUP9t7379/VeE81X3Gh
bhfJFEyE2ZscdN7aM6bcyUcOHiD5jvKS0HAKbiRPo2xtnwPq/RnNQbUjSv6F
7re8TudglIBqhMtO1Ln7/Pws/zwPDw/y1ztVJJNWIpr9gA7nYB9bOzmYnYTG
U3AreSblZyOTh7hKXL2u0RxcbwdQvTxuh1CV/htvcPpEf7ISMHZzc1P+2eQ0
et0qkilMwf7k4LqHrZ0c3EgrhOlCCm4kk9BHG8s50JXh6nXt5mAdJY6dhhUm
4M5wOCwfZ10tkim1J3uUg3WYbu3k4E5iLIKucjLSmNKk3GV23swKD3f5XL0u
OWhHXAyzE3Xfor2jLmzuRN8s84RRXMrf6kyRTNnUIQfttnZy8Kfce7VGmlKm
tDJmpy0t57Mpw9Xr9iIHtxeVEida1o4MhaJDx662czweT6fT5XK5+76aAmhQ
elbY19dX+VsdKZIpnzlh5mA3Wjs5+CUzCd00pE2D8Cet8tjhrAx3h6n9uuod
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
A5wBcjY=
    "], {{0, 340}, {600, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->{200, 112.5},
  ImageSizeRaw->{600, 340},
  PlotRange->{{0, 600}, {0, 340}}]], "Output",
 CellChangeTimes->{{3.773761873492608*^9, 3.7737618813496046`*^9}, 
   3.7737623730792007`*^9, 3.7737624536362886`*^9, 3.7737627378992558`*^9, 
   3.7737628833654757`*^9, 3.7737629891318755`*^9, 3.7737631245699673`*^9, 
   3.773763169408908*^9, 3.773763673018567*^9, 3.7737638091737275`*^9, {
   3.7737639461697483`*^9, 3.7737639795717473`*^9}, 3.773764049012331*^9, 
   3.7737647984858494`*^9, 3.773765100305114*^9, 3.773765149462114*^9, 
   3.773765196695252*^9, 3.7737652703165903`*^9, 3.773765380705263*^9, 
   3.7737654925865636`*^9, 3.7737655359036283`*^9, 3.7737667785827956`*^9, 
   3.7737668456068163`*^9, {3.773766975043955*^9, 3.773766993529637*^9}, 
   3.7737671188229847`*^9, 3.773767175690134*^9, 3.7737672770157704`*^9, 
   3.7737674820504184`*^9, {3.7737675557102537`*^9, 3.77376757141051*^9}, 
   3.7737676574688272`*^9, 3.77376770966048*^9, 3.77376774409484*^9, {
   3.77376779353505*^9, 3.77376782143929*^9}, {3.77376787573456*^9, 
   3.7737679025322046`*^9}, 3.773768023962463*^9, {3.7737691241780467`*^9, 
   3.7737691619522085`*^9}, 3.773769367215746*^9, 3.7737752680612345`*^9, {
   3.773775352453745*^9, 3.7737753822868805`*^9}, 3.7737755909577665`*^9, 
   3.773776469239637*^9, 3.773777495930664*^9, 3.7737775302163224`*^9, 
   3.773777716241767*^9, 3.7737777473443503`*^9, {3.7737777907842846`*^9, 
   3.7737778198568373`*^9}, 3.7738497939794655`*^9, 3.7738498397604055`*^9, 
   3.7738498709396706`*^9, 3.773849955831674*^9, 3.7741851888876953`*^9, 
   3.774185282484181*^9},
 CellLabel->
  "Out[618]=",ExpressionUUID->"0f956120-8984-4419-9e6e-0e8dc8a94791"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"makeCD", "[", 
  RowBox[{
  "args", ",", " ", "func", ",", "frmt", ",", "endPoint", ",", "funcName", 
   ",", "permit"}], "]"}]], "Input",
 CellLabel->
  "In[619]:=",ExpressionUUID->"bdc99fad-6c7c-4118-87e5-1c8af55d37b7"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"CloudObject", "[", 
   TemplateBox[{
    "\"https://www.wolframcloud.com/obj/mitch/live-coding/equation\"",
     "https://www.wolframcloud.com/obj/mitch/live-coding/equation"},
    "HyperlinkURL"], "]"}],
  CloudObject["https://www.wolframcloud.com/obj/mitch/live-coding/equation"],
  SelectWithContents->True]], "Output",
 CellChangeTimes->{
  3.773762486343033*^9, 3.7737628869434633`*^9, 3.773762991534877*^9, 
   3.7737631270409613`*^9, 3.773763171807906*^9, 3.773763677450571*^9, 
   3.7737638140347304`*^9, 3.773763982291752*^9, 3.7737648092248497`*^9, 
   3.7737651517401114`*^9, 3.7737651991602488`*^9, 3.773766784351798*^9, 
   3.773766847840788*^9, {3.773766977267974*^9, 3.773766995623681*^9}, 
   3.7737671209380198`*^9, 3.773767178272132*^9, 3.773767278514809*^9, 
   3.773767574325547*^9, 3.773767659454793*^9, 3.773767711657465*^9, 
   3.7737677458088336`*^9, {3.7737677956101575`*^9, 3.7737678242922697`*^9}, 
   3.773767878519573*^9, 3.7737680261835155`*^9, {3.7737691377500057`*^9, 
   3.773769163829174*^9}, 3.773769377542796*^9, 3.773775270085228*^9, {
   3.773775354269744*^9, 3.773775384151887*^9}, 3.7737755930447636`*^9, 
   3.7737764706886373`*^9, 3.773777497722968*^9, 3.7737775315411463`*^9, 
   3.7737778221733932`*^9, 3.7738497964624653`*^9, 3.773849840802437*^9, 
   3.77384987267364*^9, 3.7738499569066777`*^9, 3.774185286482218*^9},
 CellLabel->
  "Out[619]=",ExpressionUUID->"a3e6e098-6478-4424-9ebd-660fefdc7c04"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"url", "=", 
  RowBox[{"URLBuild", "[", 
   RowBox[{
    RowBox[{"makeCD", "[", 
     RowBox[{
     "args", ",", " ", "func", ",", "frmt", ",", "endPoint", ",", "funcName", 
      ",", "permit"}], "]"}], ",", "params"}], "]"}]}], "\n", 
 RowBox[{
  RowBox[{"session", "=", 
   RowBox[{"StartWebSession", "[", "\"\<Chrome\>\"", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"WebExecute", "[", 
   RowBox[{"session", ",", 
    RowBox[{"{", 
     RowBox[{"\"\<OpenPage\>\"", "\[Rule]", "url"}], "}"}]}], "]"}], 
  ";"}]}], "Input",
 CellChangeTimes->{
  3.773760569173571*^9, {3.7737611866761217`*^9, 3.7737612086117945`*^9}, {
   3.7737612444167943`*^9, 3.7737612789917965`*^9}, {3.773761317261825*^9, 
   3.7737614181707993`*^9}, {3.773761632567605*^9, 3.7737616574226317`*^9}, 
   3.773761707236599*^9, {3.7737622888981376`*^9, 3.773762289268152*^9}},
 CellLabel->
  "In[620]:=",ExpressionUUID->"f0352c38-d467-48a5-80bb-5dcf9d324d62"],

Cell[BoxData["\<\"https://www.wolframcloud.com/obj/mitch/live-coding/equation?\
xL=0&xR=0&yT=0&yC=0&yB=0&bpW=200&w=16&h=9&fs=17.5&rsMult=3&gridFrame=true&\
imageFrame=true\"\>"], "Output",
 CellChangeTimes->{
  3.7737619224376373`*^9, 3.773762385012199*^9, 3.773762455688285*^9, 
   3.7737627488701625`*^9, 3.773762909645464*^9, 3.7737629975178747`*^9, 
   3.773763132820382*^9, 3.7737631738369207`*^9, 3.773763678514557*^9, 
   3.7737638154577274`*^9, 3.7737639837777476`*^9, 3.7737648107308674`*^9, 
   3.773765153286123*^9, 3.7737652004762564`*^9, 3.7737667870677958`*^9, 
   3.7737668490497913`*^9, {3.773766978363923*^9, 3.7737669966966457`*^9}, 
   3.7737671253289948`*^9, 3.7737671799200954`*^9, 3.7737672826527786`*^9, 
   3.7737675760615683`*^9, 3.773767660557799*^9, 3.7737677127175922`*^9, 
   3.7737677469558725`*^9, {3.7737677967561636`*^9, 3.7737678258112698`*^9}, 
   3.7737678798285513`*^9, 3.7737680273994627`*^9, {3.773769138807012*^9, 
   3.773769165199174*^9}, 3.773769378694786*^9, 3.773775271800187*^9, 
   3.7737753553566666`*^9, 3.7737753861398354`*^9, 3.7737755942307324`*^9, 
   3.773776471613611*^9, 3.773777498859049*^9, 3.773777533367388*^9, 
   3.7737778237195625`*^9, 3.7738497982204294`*^9, 3.773849842036401*^9, 
   3.7738498745616393`*^9, 3.773849957771675*^9, 3.774185289641183*^9},
 CellLabel->
  "Out[620]=",ExpressionUUID->"17222bab-0c27-4875-9abd-895a380a2f8c"]
}, Open  ]],

Cell["\<\
Let\[CloseCurlyQuote]s go to the JavaScript <img /> tag and play with width \
and height methods...\
\>", "Text",
 CellChangeTimes->{{3.773778785501286*^9, 
  3.773778833214074*^9}},ExpressionUUID->"3b9d5772-fd6b-4224-a6e0-\
aa512e2f1b90"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"hPX", "[", 
  RowBox[{"200", ",", "16", ",", "9"}], "]"}]], "Input",
 CellChangeTimes->{{3.7737787327452135`*^9, 3.7737787508717813`*^9}},
 CellLabel->
  "In[4720]:=",ExpressionUUID->"70bce0ab-06e7-4bad-a0f0-5bee0237b848"],

Cell[BoxData["112.5`"], "Output",
 CellChangeTimes->{{3.773778741523368*^9, 3.7737787520454254`*^9}},
 CellLabel->
  "Out[4720]=",ExpressionUUID->"1e5d190c-0cc0-42dc-b0ca-7ed5ace01cf8"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"hPX", "[", 
  RowBox[{"400", ",", "21", ",", "9"}], "]"}]], "Input",
 CellChangeTimes->{{3.773850100793599*^9, 3.773850124422599*^9}, {
  3.773850327292638*^9, 3.7738503274516425`*^9}, {3.773851010209587*^9, 
  3.773851015385614*^9}, {3.7738528549629197`*^9, 3.7738528550749187`*^9}},
 CellLabel->
  "In[1731]:=",ExpressionUUID->"0c40a55a-b5ae-4f94-a0cd-1ae36998850b"],

Cell[BoxData["171.42857142857142`"], "Output",
 CellChangeTimes->{{3.7738501207235837`*^9, 3.7738501249816055`*^9}, 
   3.77385032836664*^9, 3.773851015947627*^9, 3.7738528558829536`*^9},
 CellLabel->
  "Out[1731]=",ExpressionUUID->"8e17304c-3345-4175-91bf-0b157d38ac85"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["API-11) Ways to return combinations of images and tables", "Chapter",
 CellChangeTimes->{{3.7638903241703033`*^9, 3.763890387306302*^9}, {
  3.7638906383193026`*^9, 3.7638906506213074`*^9}, {3.763976047180131*^9, 
  3.7639760608231316`*^9}, {3.763976112842131*^9, 3.763976117610132*^9}, {
  3.763990612311146*^9, 3.763990612485146*^9}, {3.7639983208147407`*^9, 
  3.7639983210327415`*^9}, {3.76399845428874*^9, 3.763998454495742*^9}, {
  3.7730601343244324`*^9, 3.7730601418604593`*^9}, {3.773484566528428*^9, 
  3.773484577943428*^9}, {3.773486017532942*^9, 3.7734860607238617`*^9}, {
  3.7735072006684327`*^9, 3.7735072245185504`*^9}, {3.7738515781536674`*^9, 
  3.7738515856266727`*^9}},ExpressionUUID->"662f0697-6bd2-47b5-ad9c-\
5b9db247263c"],

Cell[CellGroupData[{

Cell["Create DB", "Subsubsection",
 CellChangeTimes->{{3.7740190053225164`*^9, 
  3.774019007576517*^9}},ExpressionUUID->"226732a0-a3f9-493c-96f6-\
45d69aad94c8"],

Cell["Make a data repository using Databin", "Text",
 CellChangeTimes->{{3.773502103926482*^9, 3.773502109968481*^9}, {
  3.774020958693462*^9, 
  3.7740209892644625`*^9}},ExpressionUUID->"1af7bef8-8291-45d3-9da0-\
74b411a7a5bf"],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  StyleBox[
   RowBox[{"(*", " ", 
    RowBox[{"CAUTION", " ", "-", " ", 
     RowBox[{
     "running", " ", "this", " ", "cell", " ", "will", " ", "make", " ", "a", 
      " ", "new", " ", "Databin"}]}], " ", "*)"}],
   FontSize->24], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"ClearAll", "[", "readingsDB", "]"}], "\[IndentingNewLine]", 
   RowBox[{"readingsDB", "=", 
    RowBox[{"CreateDatabin", "[", 
     RowBox[{"<|", 
      RowBox[{
       RowBox[{"\"\<Name\>\"", "\[Rule]", "\"\<readings\>\""}], ",", 
       RowBox[{"Permissions", "\[Rule]", "\"\<Public\>\""}]}], "|>"}], 
     "]"}]}], "\[IndentingNewLine]", "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.7734869902400413`*^9, 3.77348703862908*^9}, {
   3.7734870721981654`*^9, 3.773487134205211*^9}, 3.7734871741471944`*^9, {
   3.7734872374602146`*^9, 3.77348727354523*^9}, 3.77348737800634*^9, {
   3.7734874781052947`*^9, 3.773487479706343*^9}, {3.7734875510133305`*^9, 
   3.7734875601993217`*^9}, {3.7734916447115574`*^9, 
   3.7734916450245905`*^9}, {3.773588644791773*^9, 3.77358870740178*^9}, 
   3.774009114916989*^9, {3.774009152203905*^9, 3.7740091987009087`*^9}, {
   3.774021001832488*^9, 3.7740210059324627`*^9}, 3.774021042678499*^9},
 Background->RGBColor[
  1, 0.85, 0.85],ExpressionUUID->"3c2fd98c-5145-4599-a4c1-ca76a25d1b07"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Get your databins", "Subsubsection",
 CellChangeTimes->{{3.774019017314542*^9, 3.7740190269855537`*^9}, {
  3.7741868148959484`*^9, 
  3.7741868194549527`*^9}},ExpressionUUID->"b91d6c81-1862-4a68-9f0b-\
9430c8b42d0e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Databins", "[", "]"}]], "Input",
 CellLabel->
  "In[629]:=",ExpressionUUID->"71550abf-13c2-4977-8dd5-e8681f9cb319"],

Cell[BoxData[
 RowBox[{"{", 
  InterpretationBox[
   RowBox[{
    TagBox["Databin",
     "SummaryHead"], "[", 
    DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
     TemplateBox[{PaneSelectorBox[{False -> GridBox[{{
             PaneBox[
              ButtonBox[
               DynamicBox[
                FEPrivate`FrontEndResource[
                "FEBitmaps", "SquarePlusIconMedium"]], 
               ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
               Evaluator -> Automatic, Method -> "Preemptive"], 
              Alignment -> {Center, Center}, ImageSize -> 
              Dynamic[{
                Automatic, 3.5 CurrentValue["FontCapHeight"]/
                 AbsoluteCurrentValue[Magnification]}]], 
             GraphicsBox[{
               Thickness[0.05555555555555555], 
               StyleBox[{
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                   0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                   0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                   0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                   0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                   0}, {1, 3, 3}}}, {{{15.646999999999998`, 
                   5.933000000000001}, {13.585, 7.263}, {15.533, 8.458}, {
                   17.332, 7.363999999999999}, {15.646999999999998`, 
                   5.933000000000001}}, {{12.697, 3.425}, {10.245, 5.212}, {
                   12.491, 6.591}, {14.725999999999999`, 
                   5.1499999999999995`}, {12.697, 3.425}}, {{8.666, 0.}, {
                   5.978000000000001, 2.285}, {8.666, 4.244}, {
                   11.354000000000001`, 2.285}, {8.666, 0.}}, {{4.635, 
                   3.425}, {2.606, 5.1499999999999995`}, {4.841, 6.591}, {
                   7.087, 5.212}, {4.635, 3.425}}, {{0., 7.363999999999999}, {
                   1.799, 8.458}, {3.7470000000000003`, 7.263}, {
                   1.6840000000000002`, 5.933000000000001}, {0., 
                   7.363999999999999}}, CompressedData["
1:eJxTTMoPSmViYGAQBmIQrbtp7vvlbqIOP+uy9pQIqzr8Wfnxkm+SjIPIOveH
VVNUHNgbpzp3v1Fw2Pb575WKk0YOpnG7PHmYFB1eB+6Qa+U2djDvdEx4OkHR
AWTMMSA/PQ0Ilik61NgDVQLVF9hyXV9coOKwp2SyBMs0FYcFUvp3Vdg04PbJ
twJNikPwV4Gsn6DhAFQdxrdWxWHWTCCI1HAAOSMnXcXB42GVyLrjig5nz4CA
hEMWyOAWRQd+kEfUJaDmKzpoxvQf+qoh4RDQOz1P6LCCA5N2u9jNcxIOlltO
lO2bLwI3TxJoja6RCNw+kO7GqSJw96CHDwDEr32g
                   "]}]}, 
                FaceForm[
                 RGBColor[0.44721600000000006`, 0.519288, 0.528528, 1.]], 
                StripOnInput -> False]}, {
              Background -> GrayLevel[0.93], Axes -> False, AspectRatio -> 1, 
               ImageSize -> {Automatic, 
                 Dynamic[
                 3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])]}, Frame -> True, FrameTicks -> None, 
               PlotRangePadding -> 2.5, FrameStyle -> Directive[
                 Thickness[Tiny], 
                 GrayLevel[0.55]], ImageSize -> {18., 19.}, 
               PlotRange -> {{0., 18.}, {0., 19.}}, AspectRatio -> 
               Automatic}], 
             GridBox[{{
                RowBox[{
                  TagBox["\"Name: \"", "SummaryItemAnnotation"], 
                  "\[InvisibleSpace]", 
                  TagBox["\"readings\"", "SummaryItem"]}]}, {
                RowBox[{
                  TagBox["\"Entry count: \"", "SummaryItemAnnotation"], 
                  "\[InvisibleSpace]", 
                  TagBox[
                   DynamicBox[
                    ToBoxes[
                    Lookup[
                    Replace[
                    
                    DataDropClient`Private`datadropclientcache[{
                    "DatabinStats", 
                    "DD4d864eaa38b-3d22-4a26-b724-aff8e2bb6bde"}], Except[
                    Blank[Association]] -> {}, {0}], "EntryCount", 
                    Missing[]], StandardForm]], "SummaryItem"]}]}}, 
              GridBoxAlignment -> {
               "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
              False, GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              GridBoxSpacings -> {
               "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
              BaseStyle -> {
               ShowStringCharacters -> False, NumberMarks -> False, 
                PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
           GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           BaselinePosition -> {1, 1}], True -> GridBox[{{
             PaneBox[
              ButtonBox[
               DynamicBox[
                FEPrivate`FrontEndResource[
                "FEBitmaps", "SquareMinusIconMedium"]], 
               ButtonFunction :> (Typeset`open$$ = False), Appearance -> None,
                Evaluator -> Automatic, Method -> "Preemptive"], 
              Alignment -> {Center, Center}, ImageSize -> 
              Dynamic[{
                Automatic, 3.5 CurrentValue["FontCapHeight"]/
                 AbsoluteCurrentValue[Magnification]}]], 
             GraphicsBox[{
               Thickness[0.05555555555555555], 
               StyleBox[{
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                   0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                   0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                   0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                   0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                   0}, {1, 3, 3}}}, {{{15.646999999999998`, 
                   5.933000000000001}, {13.585, 7.263}, {15.533, 8.458}, {
                   17.332, 7.363999999999999}, {15.646999999999998`, 
                   5.933000000000001}}, {{12.697, 3.425}, {10.245, 5.212}, {
                   12.491, 6.591}, {14.725999999999999`, 
                   5.1499999999999995`}, {12.697, 3.425}}, {{8.666, 0.}, {
                   5.978000000000001, 2.285}, {8.666, 4.244}, {
                   11.354000000000001`, 2.285}, {8.666, 0.}}, {{4.635, 
                   3.425}, {2.606, 5.1499999999999995`}, {4.841, 6.591}, {
                   7.087, 5.212}, {4.635, 3.425}}, {{0., 7.363999999999999}, {
                   1.799, 8.458}, {3.7470000000000003`, 7.263}, {
                   1.6840000000000002`, 5.933000000000001}, {0., 
                   7.363999999999999}}, CompressedData["
1:eJxTTMoPSmViYGAQBmIQrbtp7vvlbqIOP+uy9pQIqzr8Wfnxkm+SjIPIOveH
VVNUHNgbpzp3v1Fw2Pb575WKk0YOpnG7PHmYFB1eB+6Qa+U2djDvdEx4OkHR
AWTMMSA/PQ0Ilik61NgDVQLVF9hyXV9coOKwp2SyBMs0FYcFUvp3Vdg04PbJ
twJNikPwV4Gsn6DhAFQdxrdWxWHWTCCI1HAAOSMnXcXB42GVyLrjig5nz4CA
hEMWyOAWRQd+kEfUJaDmKzpoxvQf+qoh4RDQOz1P6LCCA5N2u9jNcxIOlltO
lO2bLwI3TxJoja6RCNw+kO7GqSJw96CHDwDEr32g
                   "]}]}, 
                FaceForm[
                 RGBColor[0.44721600000000006`, 0.519288, 0.528528, 1.]], 
                StripOnInput -> False]}, {
              Background -> GrayLevel[0.93], Axes -> False, AspectRatio -> 1, 
               ImageSize -> {Automatic, 
                 Dynamic[
                 3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])]}, Frame -> True, FrameTicks -> None, 
               PlotRangePadding -> 2.5, FrameStyle -> Directive[
                 Thickness[Tiny], 
                 GrayLevel[0.55]], ImageSize -> {18., 19.}, 
               PlotRange -> {{0., 18.}, {0., 19.}}, AspectRatio -> 
               Automatic}], 
             GridBox[{{
                RowBox[{
                  TagBox["\"Name: \"", "SummaryItemAnnotation"], 
                  "\[InvisibleSpace]", 
                  TagBox["\"readings\"", "SummaryItem"]}]}, {
                RowBox[{
                  TagBox["\"Entry count: \"", "SummaryItemAnnotation"], 
                  "\[InvisibleSpace]", 
                  TagBox[
                   DynamicBox[
                    ToBoxes[
                    Lookup[
                    Replace[
                    
                    DataDropClient`Private`datadropclientcache[{
                    "DatabinStats", 
                    "DD4d864eaa38b-3d22-4a26-b724-aff8e2bb6bde"}], Except[
                    Blank[Association]] -> {}, {0}], "EntryCount", 
                    Missing[]], StandardForm]], "SummaryItem"]}]}, {
                RowBox[{
                  TagBox["\"Short ID: \"", "SummaryItemAnnotation"], 
                  "\[InvisibleSpace]", 
                  TagBox["\"FBrnXpZX\"", "SummaryItem"]}]}, {
                RowBox[{
                  TagBox["\"UUID: \"", "SummaryItemAnnotation"], 
                  "\[InvisibleSpace]", 
                  TagBox[
                  "\"DD4d864eaa38b-3d22-4a26-b724-aff8e2bb6bde\"", 
                   "SummaryItem"]}]}, {
                RowBox[{
                  TagBox["\"ShortURL: \"", "SummaryItemAnnotation"], 
                  "\[InvisibleSpace]", 
                  TagBox[
                   
                   TemplateBox[{
                    "\"https://wolfr.am/FBrnXpZX\"", 
                    "https://wolfr.am/FBrnXpZX"}, "HyperlinkURL"], 
                   "SummaryItem"]}]}, {
                RowBox[{
                  TagBox["\"Short ID: \"", "SummaryItemAnnotation"], 
                  "\[InvisibleSpace]", 
                  TagBox["\"FBrnXpZX\"", "SummaryItem"]}]}, {
                RowBox[{
                  TagBox["\"UUID: \"", "SummaryItemAnnotation"], 
                  "\[InvisibleSpace]", 
                  TagBox[
                  "\"DD4d864eaa38b-3d22-4a26-b724-aff8e2bb6bde\"", 
                   "SummaryItem"]}]}, {
                RowBox[{
                  TagBox["\"ShortURL: \"", "SummaryItemAnnotation"], 
                  "\[InvisibleSpace]", 
                  TagBox[
                   
                   TemplateBox[{
                    "\"https://wolfr.am/FBrnXpZX\"", 
                    "https://wolfr.am/FBrnXpZX"}, "HyperlinkURL"], 
                   "SummaryItem"]}]}, {
                RowBox[{
                  TagBox["\"Creator: \"", "SummaryItemAnnotation"], 
                  "\[InvisibleSpace]", 
                  TagBox["\"mitch@aitoconsulting.com\"", "SummaryItem"]}]}, {
                RowBox[{
                  TagBox["\"Owner: \"", "SummaryItemAnnotation"], 
                  "\[InvisibleSpace]", 
                  TagBox["\"mitch@aitoconsulting.com\"", "SummaryItem"]}]}, {
                RowBox[{
                  TagBox["\"Creation date: \"", "SummaryItemAnnotation"], 
                  "\[InvisibleSpace]", 
                  TagBox["\"Mon 5 Aug 2019 14:56:22\"", "SummaryItem"]}]}, {
                RowBox[{
                  TagBox["\"Latest date: \"", "SummaryItemAnnotation"], 
                  "\[InvisibleSpace]", 
                  TagBox[
                   DynamicBox[
                    ToBoxes[
                    Replace[
                    Lookup[
                    Replace[
                    
                    DataDropClient`Private`datadropclientcache[{
                    "DatabinLatest", 
                    "DD4d864eaa38b-3d22-4a26-b724-aff8e2bb6bde"}], Except[
                    Blank[Association]] -> {}, {0}], "Timestamp", 
                    Missing[]], Pattern[DataDropClient`Private`date, 
                    Blank[DateObject]] :> 
                    DateString[DataDropClient`Private`date], {0}], 
                    StandardForm]], "SummaryItem"]}]}, {
                RowBox[{
                  TagBox["\"Size: \"", "SummaryItemAnnotation"], 
                  "\[InvisibleSpace]", 
                  TagBox[
                   DynamicBox[
                    ToBoxes[
                    (If[
                    NumberQ[#], 
                    Round[#, 0.1], #]& )[
                    Lookup[
                    Replace[
                    
                    DataDropClient`Private`datadropclientcache[{
                    "DatabinStats", 
                    "DD4d864eaa38b-3d22-4a26-b724-aff8e2bb6bde"}], Except[
                    Blank[Association]] -> {}, {0}], "Size", 
                    Missing[]]], StandardForm]], "SummaryItem"]}]}, {
                RowBox[{
                  TagBox["\"Latest: \"", "SummaryItemAnnotation"], 
                  "\[InvisibleSpace]", 
                  TagBox[
                   DynamicBox[
                    ToBoxes[
                    Lookup[
                    Replace[
                    
                    DataDropClient`Private`datadropclientcache[{
                    "DatabinLatest", 
                    "DD4d864eaa38b-3d22-4a26-b724-aff8e2bb6bde"}], Except[
                    Blank[Association]] -> {}, {0}], "Data", 
                    Missing[]], StandardForm]], "SummaryItem"]}]}}, 
              GridBoxAlignment -> {
               "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
              False, GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              GridBoxSpacings -> {
               "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
              BaseStyle -> {
               ShowStringCharacters -> False, NumberMarks -> False, 
                PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
           GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           BaselinePosition -> {1, 1}]}, 
        Dynamic[Typeset`open$$], ImageSize -> Automatic]},
      "SummaryPanel"],
     DynamicModuleValues:>{}], "]"}],
   Databin["DD4d864eaa38b-3d22-4a26-b724-aff8e2bb6bde"],
   Editable->False,
   SelectWithContents->True,
   Selectable->False], "}"}]], "Output",
 CellChangeTimes->{3.7740210995714636`*^9, 3.7741864139141736`*^9, 
  3.7741866514408913`*^9},
 CellLabel->
  "Out[629]=",ExpressionUUID->"c3527e7e-f0a5-47d5-bba6-11d959958d9d"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Make Dataset[...] of databins", "Subsubsection",
 CellChangeTimes->{{3.774019017314542*^9, 3.7740190269855537`*^9}, {
  3.774186848941947*^9, 
  3.7741868620469465`*^9}},ExpressionUUID->"44c9280d-574e-4231-91d9-\
2920c6c05ef5"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"ClearAll", "[", "databinDS", "]"}], "\[IndentingNewLine]", 
 RowBox[{"databinDS", "=", 
  RowBox[{"Dataset", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"<|", 
      RowBox[{
       RowBox[{"\"\<shortID\>\"", "\[Rule]", " ", 
        RowBox[{"#", "[", "\"\<ShortID\>\"", "]"}]}], ",", 
       RowBox[{"\"\<name\>\"", "\[Rule]", " ", 
        RowBox[{"#", "[", "\"\<Name\>\"", "]"}]}], ",", 
       RowBox[{"\"\<databin\>\"", "\[Rule]", "#"}]}], "|>"}], "&"}], "/@", 
    RowBox[{"Databins", "[", "]"}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.7741865290798917`*^9, 3.7741866027048893`*^9}, {
  3.774186657624892*^9, 3.7741867834079466`*^9}, {3.7741868838769474`*^9, 
  3.7741868977859592`*^9}},
 CellLabel->
  "In[635]:=",ExpressionUUID->"7b8e4f9d-f30a-4468-8d39-6e62b0740fb2"],

Cell[BoxData[
 TemplateBox[{TagBox[
    DynamicModuleBox[{
     TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
      Data`UnorderedAssociation[
       "RowCount" -> 1, "Length" -> 1, "InitialType" -> TypeSystem`Vector[
          TypeSystem`Struct[{"shortID", "name", "databin"}, {
            TypeSystem`Atom[String], 
            TypeSystem`Atom[String], TypeSystem`AnyType}], 1], "Shape" -> 
        TypeSystem`PackageScope`HeaderShape[
          
          Association[{All, "shortID"} -> 1, {All, "name"} -> 
           1, {All, "databin"} -> 1], 
          TypeSystem`PackageScope`Limited[
           TypeSystem`PackageScope`ColumnShape[
            TypeSystem`PackageScope`RowShape[
             Association[
             "shortID" -> 
              TypeSystem`PackageScope`AtomShape[76.80000000000001], "name" -> 
              TypeSystem`PackageScope`AtomShape[76.80000000000001], "databin" -> 
              TypeSystem`PackageScope`UnknownShape]]], 1, {}]], "InitialData" -> 
        TypeSystem`PackageScope`CacheHandle[960585305], "Type" -> 
        TypeSystem`Vector[
          TypeSystem`Struct[{"shortID", "name", "databin"}, {
            TypeSystem`Atom[String], 
            TypeSystem`Atom[String], TypeSystem`AnyType}], 1], "HandleQ" -> 
        True, "RowTarget" -> 20, "Data" -> 
        TypeSystem`PackageScope`CacheHandle[960585305]], 
      TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
      TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 1, 
      TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
      DynamicModule[{
        TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
           Style[
            Grid[{{
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"shortID\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"shortID\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 587576795][{
                    All, "shortID"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[587576795][
                  GeneralUtilities`Slice[All, "shortID"]], "Mouse"], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"name\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"name\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 587576795][{
                    All, "name"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[587576795][
                  GeneralUtilities`Slice[All, "name"]], "Mouse"], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"databin\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"databin\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 587576795][{
                    All, "databin"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[587576795][
                  GeneralUtilities`Slice[All, "databin"]], "Mouse"], 
                Background -> GrayLevel[0.95], 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["FBrnXpZX", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[587576795][
                  GeneralUtilities`Slice[1, 
                   Key["shortID"]]], "Mouse"], 
                ImageSize -> {{76.80000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["readings", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[587576795][
                  GeneralUtilities`Slice[1, 
                   Key["name"]]], "Mouse"], 
                ImageSize -> {{76.80000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   InterpretationBox[
                    RowBox[{
                    TagBox["Databin", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{
                    Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    GraphicsBox[{
                    Thickness[0.05555555555555555], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}}}, {{{15.646999999999998`, 
                    5.933000000000001}, {13.585, 7.263}, {15.533, 8.458}, {
                    17.332, 7.363999999999999}, {15.646999999999998`, 
                    5.933000000000001}}, {{12.697, 3.425}, {10.245, 5.212}, {
                    12.491, 6.591}, {14.725999999999999`, 
                    5.1499999999999995`}, {12.697, 3.425}}, {{8.666, 0.}, {
                    5.978000000000001, 2.285}, {8.666, 4.244}, {
                    11.354000000000001`, 2.285}, {8.666, 0.}}, {{4.635, 
                    3.425}, {2.606, 5.1499999999999995`}, {4.841, 6.591}, {
                    7.087, 5.212}, {4.635, 3.425}}, {{0., 
                    7.363999999999999}, {1.799, 8.458}, {3.7470000000000003`, 
                    7.263}, {1.6840000000000002`, 5.933000000000001}, {0., 
                    7.363999999999999}}, CompressedData["
1:eJxTTMoPSmViYGAQBmIQrbtp7vvlbqIOP+uy9pQIqzr8Wfnxkm+SjIPIOveH
VVNUHNgbpzp3v1Fw2Pb575WKk0YOpnG7PHmYFB1eB+6Qa+U2djDvdEx4OkHR
AWTMMSA/PQ0Ilik61NgDVQLVF9hyXV9coOKwp2SyBMs0FYcFUvp3Vdg04PbJ
twJNikPwV4Gsn6DhAFQdxrdWxWHWTCCI1HAAOSMnXcXB42GVyLrjig5nz4CA
hEMWyOAWRQd+kEfUJaDmKzpoxvQf+qoh4RDQOz1P6LCCA5N2u9jNcxIOlltO
lO2bLwI3TxJoja6RCNw+kO7GqSJw96CHDwDEr32g
                    "]}]}, 
                    FaceForm[
                    RGBColor[0.44721600000000006`, 0.519288, 0.528528, 1.]], 
                    StripOnInput -> False]}, {
                    Background -> GrayLevel[0.93], Axes -> False, AspectRatio -> 
                    1, ImageSize -> {Automatic, 
                    Dynamic[
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])]}, Frame -> True, FrameTicks -> None, 
                    PlotRangePadding -> 2.5, FrameStyle -> Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.55]], ImageSize -> {18., 19.}, 
                    PlotRange -> {{0., 18.}, {0., 19.}}, AspectRatio -> 
                    Automatic}], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Name: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"readings\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Entry count: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Lookup[
                    Replace[
                    
                    DataDropClient`Private`datadropclientcache[{
                    "DatabinStats", 
                    "DD4d864eaa38b-3d22-4a26-b724-aff8e2bb6bde"}], Except[
                    Blank[Association]] -> {}, {0}], "EntryCount", 
                    Missing[]], StandardForm]], "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    GraphicsBox[{
                    Thickness[0.05555555555555555], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}}}, {{{15.646999999999998`, 
                    5.933000000000001}, {13.585, 7.263}, {15.533, 8.458}, {
                    17.332, 7.363999999999999}, {15.646999999999998`, 
                    5.933000000000001}}, {{12.697, 3.425}, {10.245, 5.212}, {
                    12.491, 6.591}, {14.725999999999999`, 
                    5.1499999999999995`}, {12.697, 3.425}}, {{8.666, 0.}, {
                    5.978000000000001, 2.285}, {8.666, 4.244}, {
                    11.354000000000001`, 2.285}, {8.666, 0.}}, {{4.635, 
                    3.425}, {2.606, 5.1499999999999995`}, {4.841, 6.591}, {
                    7.087, 5.212}, {4.635, 3.425}}, {{0., 
                    7.363999999999999}, {1.799, 8.458}, {3.7470000000000003`, 
                    7.263}, {1.6840000000000002`, 5.933000000000001}, {0., 
                    7.363999999999999}}, CompressedData["
1:eJxTTMoPSmViYGAQBmIQrbtp7vvlbqIOP+uy9pQIqzr8Wfnxkm+SjIPIOveH
VVNUHNgbpzp3v1Fw2Pb575WKk0YOpnG7PHmYFB1eB+6Qa+U2djDvdEx4OkHR
AWTMMSA/PQ0Ilik61NgDVQLVF9hyXV9coOKwp2SyBMs0FYcFUvp3Vdg04PbJ
twJNikPwV4Gsn6DhAFQdxrdWxWHWTCCI1HAAOSMnXcXB42GVyLrjig5nz4CA
hEMWyOAWRQd+kEfUJaDmKzpoxvQf+qoh4RDQOz1P6LCCA5N2u9jNcxIOlltO
lO2bLwI3TxJoja6RCNw+kO7GqSJw96CHDwDEr32g
                    "]}]}, 
                    FaceForm[
                    RGBColor[0.44721600000000006`, 0.519288, 0.528528, 1.]], 
                    StripOnInput -> False]}, {
                    Background -> GrayLevel[0.93], Axes -> False, AspectRatio -> 
                    1, ImageSize -> {Automatic, 
                    Dynamic[
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])]}, Frame -> True, FrameTicks -> None, 
                    PlotRangePadding -> 2.5, FrameStyle -> Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.55]], ImageSize -> {18., 19.}, 
                    PlotRange -> {{0., 18.}, {0., 19.}}, AspectRatio -> 
                    Automatic}], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Name: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"readings\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Entry count: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Lookup[
                    Replace[
                    
                    DataDropClient`Private`datadropclientcache[{
                    "DatabinStats", 
                    "DD4d864eaa38b-3d22-4a26-b724-aff8e2bb6bde"}], Except[
                    Blank[Association]] -> {}, {0}], "EntryCount", 
                    Missing[]], StandardForm]], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Short ID: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"FBrnXpZX\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"UUID: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    "\"DD4d864eaa38b-3d22-4a26-b724-aff8e2bb6bde\"", 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"ShortURL: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"\"https://wolfr.am/FBrnXpZX\"", 
                    "https://wolfr.am/FBrnXpZX"}, "HyperlinkURL"], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Short ID: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"FBrnXpZX\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"UUID: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    "\"DD4d864eaa38b-3d22-4a26-b724-aff8e2bb6bde\"", 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"ShortURL: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"\"https://wolfr.am/FBrnXpZX\"", 
                    "https://wolfr.am/FBrnXpZX"}, "HyperlinkURL"], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Creator: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"mitch@aitoconsulting.com\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Owner: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"mitch@aitoconsulting.com\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Creation date: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Mon 5 Aug 2019 14:56:22\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Latest date: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Replace[
                    Lookup[
                    Replace[
                    
                    DataDropClient`Private`datadropclientcache[{
                    "DatabinLatest", 
                    "DD4d864eaa38b-3d22-4a26-b724-aff8e2bb6bde"}], Except[
                    Blank[Association]] -> {}, {0}], "Timestamp", 
                    Missing[]], Pattern[DataDropClient`Private`date, 
                    Blank[DateObject]] :> 
                    DateString[DataDropClient`Private`date], {0}], 
                    StandardForm]], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Size: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    (If[
                    NumberQ[#], 
                    Round[#, 0.1], #]& )[
                    Lookup[
                    Replace[
                    
                    DataDropClient`Private`datadropclientcache[{
                    "DatabinStats", 
                    "DD4d864eaa38b-3d22-4a26-b724-aff8e2bb6bde"}], Except[
                    Blank[Association]] -> {}, {0}], "Size", 
                    Missing[]]], StandardForm]], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Latest: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Lookup[
                    Replace[
                    
                    DataDropClient`Private`datadropclientcache[{
                    "DatabinLatest", 
                    "DD4d864eaa38b-3d22-4a26-b724-aff8e2bb6bde"}], Except[
                    Blank[Association]] -> {}, {0}], "Data", 
                    Missing[]], StandardForm]], "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}], 
                    Databin["DD4d864eaa38b-3d22-4a26-b724-aff8e2bb6bde"], 
                    Selectable -> False, Editable -> False, 
                    SelectWithContents -> True], FontFamily -> 
                   "Source Code Pro", FontSize -> 13, ShowStringCharacters -> 
                   True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[587576795][
                  GeneralUtilities`Slice[1, 
                   Key["databin"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}}, BaseStyle -> {ContextMenu -> {
                 MenuItem["Copy position to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Copy data to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], Delimiter, 
                 MenuItem["Paste position in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Paste data in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic]}, FontFamily -> "Verdana", 
               FontSize -> 12}, Alignment -> Left, RowMinHeight -> 1.5, 
             Dividers -> All, FrameStyle -> GrayLevel[0.85], 
             BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
            LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False,
             ShowAutoStyles -> False]], 
         TypeSystem`NestedGrid`PackagePrivate`initialQ = True, 
         TypeSystem`NestedGrid`PackagePrivate`self = $Failed}, 
        Dynamic[
         TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
         TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
            Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
            
            Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
              TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
              TypeSystem`NestedGrid`PackagePrivate`LookupCacheValue[
                TypeSystem`NestedGrid`PackagePrivate`$state$$["Data"]]}, 
             TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = 
              If[TypeSystem`NestedGrid`PackagePrivate`tmpData$ === 
                TypeSystem`NestedGrid`PackagePrivate`$NotCached, 
                TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$grid$$, 587576795][
                TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
               Not[
                FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
               TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
               TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
          TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
          TypeSystem`NestedGrid`PackagePrivate`$pos$$; If[
            FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
            TypeSystem`SparseGrid[
             TypeSystem`H["(data no longer present)"]], 
            If[GeneralUtilities`$DebugMode, 
             Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
               TypeSystem`NestedGrid`PackagePrivate`formatState[
               TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                TypeSystem`NestedGrid`PackagePrivate`$pos$$]}], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
         TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$pos$$}], 
        DynamicModuleValues :> {}], 
      TypeSystem`NestedGrid`PackagePrivate`$posCell$$, 
      TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
        TypeSystem`NestedGrid`PackagePrivate`alignBar[
        TypeSystem`NestedGrid`PackagePrivate`$state$$][
         TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
          TypeSystem`PackageScope`Pathbar[
          TypeSystem`NestedGrid`PackagePrivate`$path$$, 
           TypeSystem`NestedGrid`PackagePrivate`updateState[
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
            TypeSystem`NestedGrid`PackagePrivate`$path$$, 
            TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$grid$$, 587576795]]]], 
        TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
      TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Framed[
        Dynamic[
         Replace[
          MouseAnnotation[Null], {
          TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[587576795][Null] -> 
           "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[587576795][
             Pattern[TypeSystem`NestedGrid`PackagePrivate`path, 
              Blank[]]] :> (
            TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
             TypeSystem`NestedGrid`PackagePrivate`path; 
            TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
             TypeSystem`NestedGrid`PackagePrivate`path, 
              TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
           Spacer[10], Blank[] :> Spacer[10]}], TrackedSymbols :> {}], 
        FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
        Top, ImageSize -> {Automatic, 14}]}, 
     DynamicBox[
      ToBoxes[
       Column[
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, {
          TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
          TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`alignBar[
           TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}, {
         TypeSystem`NestedGrid`PackagePrivate`$topBar$$, 
          TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
          TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`alignBar[
           TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}], Spacings -> 
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, 
          0, {{}, {0, 0.05, 0}}]], StandardForm], 
      ImageSizeCache -> {413., {46., 52.}}, 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     BaseStyle -> {LineBreakWithin -> False}, Deinitialization :> 
     TypeSystem`NestedGrid`PackagePrivate`deleteState[
      TypeSystem`NestedGrid`PackagePrivate`$state$$], 
     DynamicModuleValues :> {}, Initialization :> 
     Block[{$ContextPath = $ContextPath}, 
       Needs["TypeSystem`"]]], Deploy, DefaultBaseStyle -> "Deploy"]},
  "CopyTag",
  DisplayFunction->(#& ),
  InterpretationFunction->("Dataset[<>]"& )]], "Output",
 CellChangeTimes->{{3.7741865476528893`*^9, 3.7741866052158957`*^9}, {
   3.774186661770895*^9, 3.7741866667429256`*^9}, {3.7741867416709476`*^9, 
   3.7741867527189465`*^9}, 3.7741867845029483`*^9, 3.774186899200965*^9},
 CellLabel->
  "Out[636]=",ExpressionUUID->"f4167fe8-6393-49b9-a9bd-5d11b51326cf"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"ClearAll", "[", "readingsDB", "]"}], "\[IndentingNewLine]", 
 RowBox[{"readingsDB", "=", 
  RowBox[{
   RowBox[{"databinDS", "[", 
    RowBox[{
     RowBox[{"Select", "[", 
      RowBox[{
       RowBox[{"#name", " ", "\[Equal]", " ", "\"\<readings\>\""}], "&"}], 
      "]"}], ",", "\"\<databin\>\""}], "]"}], "//", "First"}]}]}], "Input",
 CellChangeTimes->{{3.7741869081539526`*^9, 3.7741870201407843`*^9}},
 CellLabel->
  "In[658]:=",ExpressionUUID->"26f794f9-bde1-4708-8312-c09b9d2f11ff"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["Databin",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    TemplateBox[{PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource[
               "FEBitmaps", "SquarePlusIconMedium"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              Evaluator -> Automatic, Method -> "Preemptive"], 
             Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 3.5 CurrentValue["FontCapHeight"]/
                AbsoluteCurrentValue[Magnification]}]], 
            GraphicsBox[{
              Thickness[0.05555555555555555], 
              StyleBox[{
                
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                  0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                  0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                  0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                  0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {
                  1, 3, 3}}}, {{{15.646999999999998`, 5.933000000000001}, {
                  13.585, 7.263}, {15.533, 8.458}, {17.332, 
                  7.363999999999999}, {15.646999999999998`, 
                  5.933000000000001}}, {{12.697, 3.425}, {10.245, 5.212}, {
                  12.491, 6.591}, {14.725999999999999`, 
                  5.1499999999999995`}, {12.697, 3.425}}, {{8.666, 0.}, {
                  5.978000000000001, 2.285}, {8.666, 4.244}, {
                  11.354000000000001`, 2.285}, {8.666, 0.}}, {{4.635, 
                  3.425}, {2.606, 5.1499999999999995`}, {4.841, 6.591}, {
                  7.087, 5.212}, {4.635, 3.425}}, {{0., 7.363999999999999}, {
                  1.799, 8.458}, {3.7470000000000003`, 7.263}, {
                  1.6840000000000002`, 5.933000000000001}, {0., 
                  7.363999999999999}}, CompressedData["
1:eJxTTMoPSmViYGAQBmIQrbtp7vvlbqIOP+uy9pQIqzr8Wfnxkm+SjIPIOveH
VVNUHNgbpzp3v1Fw2Pb575WKk0YOpnG7PHmYFB1eB+6Qa+U2djDvdEx4OkHR
AWTMMSA/PQ0Ilik61NgDVQLVF9hyXV9coOKwp2SyBMs0FYcFUvp3Vdg04PbJ
twJNikPwV4Gsn6DhAFQdxrdWxWHWTCCI1HAAOSMnXcXB42GVyLrjig5nz4CA
hEMWyOAWRQd+kEfUJaDmKzpoxvQf+qoh4RDQOz1P6LCCA5N2u9jNcxIOlltO
lO2bLwI3TxJoja6RCNw+kO7GqSJw96CHDwDEr32g
                  "]}]}, 
               FaceForm[
                RGBColor[0.44721600000000006`, 0.519288, 0.528528, 1.]], 
               StripOnInput -> False]}, {
             Background -> GrayLevel[0.93], Axes -> False, AspectRatio -> 1, 
              ImageSize -> {Automatic, 
                Dynamic[
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                  Magnification])]}, Frame -> True, FrameTicks -> None, 
              PlotRangePadding -> 2.5, FrameStyle -> Directive[
                Thickness[Tiny], 
                GrayLevel[0.55]], ImageSize -> {18., 19.}, 
              PlotRange -> {{0., 18.}, {0., 19.}}, AspectRatio -> Automatic}], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Name: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"readings\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Entry count: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  DynamicBox[
                   ToBoxes[
                    Lookup[
                    Replace[
                    
                    DataDropClient`Private`datadropclientcache[{
                    "DatabinStats", 
                    "DD4d864eaa38b-3d22-4a26-b724-aff8e2bb6bde"}], Except[
                    Blank[Association]] -> {}, {0}], "EntryCount", 
                    Missing[]], StandardForm]], "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource[
               "FEBitmaps", "SquareMinusIconMedium"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              Evaluator -> Automatic, Method -> "Preemptive"], 
             Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 3.5 CurrentValue["FontCapHeight"]/
                AbsoluteCurrentValue[Magnification]}]], 
            GraphicsBox[{
              Thickness[0.05555555555555555], 
              StyleBox[{
                
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                  0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                  0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                  0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                  0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {
                  1, 3, 3}}}, {{{15.646999999999998`, 5.933000000000001}, {
                  13.585, 7.263}, {15.533, 8.458}, {17.332, 
                  7.363999999999999}, {15.646999999999998`, 
                  5.933000000000001}}, {{12.697, 3.425}, {10.245, 5.212}, {
                  12.491, 6.591}, {14.725999999999999`, 
                  5.1499999999999995`}, {12.697, 3.425}}, {{8.666, 0.}, {
                  5.978000000000001, 2.285}, {8.666, 4.244}, {
                  11.354000000000001`, 2.285}, {8.666, 0.}}, {{4.635, 
                  3.425}, {2.606, 5.1499999999999995`}, {4.841, 6.591}, {
                  7.087, 5.212}, {4.635, 3.425}}, {{0., 7.363999999999999}, {
                  1.799, 8.458}, {3.7470000000000003`, 7.263}, {
                  1.6840000000000002`, 5.933000000000001}, {0., 
                  7.363999999999999}}, CompressedData["
1:eJxTTMoPSmViYGAQBmIQrbtp7vvlbqIOP+uy9pQIqzr8Wfnxkm+SjIPIOveH
VVNUHNgbpzp3v1Fw2Pb575WKk0YOpnG7PHmYFB1eB+6Qa+U2djDvdEx4OkHR
AWTMMSA/PQ0Ilik61NgDVQLVF9hyXV9coOKwp2SyBMs0FYcFUvp3Vdg04PbJ
twJNikPwV4Gsn6DhAFQdxrdWxWHWTCCI1HAAOSMnXcXB42GVyLrjig5nz4CA
hEMWyOAWRQd+kEfUJaDmKzpoxvQf+qoh4RDQOz1P6LCCA5N2u9jNcxIOlltO
lO2bLwI3TxJoja6RCNw+kO7GqSJw96CHDwDEr32g
                  "]}]}, 
               FaceForm[
                RGBColor[0.44721600000000006`, 0.519288, 0.528528, 1.]], 
               StripOnInput -> False]}, {
             Background -> GrayLevel[0.93], Axes -> False, AspectRatio -> 1, 
              ImageSize -> {Automatic, 
                Dynamic[
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                  Magnification])]}, Frame -> True, FrameTicks -> None, 
              PlotRangePadding -> 2.5, FrameStyle -> Directive[
                Thickness[Tiny], 
                GrayLevel[0.55]], ImageSize -> {18., 19.}, 
              PlotRange -> {{0., 18.}, {0., 19.}}, AspectRatio -> Automatic}], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Name: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"readings\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Entry count: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  DynamicBox[
                   ToBoxes[
                    Lookup[
                    Replace[
                    
                    DataDropClient`Private`datadropclientcache[{
                    "DatabinStats", 
                    "DD4d864eaa38b-3d22-4a26-b724-aff8e2bb6bde"}], Except[
                    Blank[Association]] -> {}, {0}], "EntryCount", 
                    Missing[]], StandardForm]], "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Short ID: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"FBrnXpZX\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"UUID: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                 "\"DD4d864eaa38b-3d22-4a26-b724-aff8e2bb6bde\"", 
                  "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"ShortURL: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  
                  TemplateBox[{
                   "\"https://wolfr.am/FBrnXpZX\"", 
                    "https://wolfr.am/FBrnXpZX"}, "HyperlinkURL"], 
                  "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Short ID: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"FBrnXpZX\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"UUID: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                 "\"DD4d864eaa38b-3d22-4a26-b724-aff8e2bb6bde\"", 
                  "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"ShortURL: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  
                  TemplateBox[{
                   "\"https://wolfr.am/FBrnXpZX\"", 
                    "https://wolfr.am/FBrnXpZX"}, "HyperlinkURL"], 
                  "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Creator: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"mitch@aitoconsulting.com\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Owner: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"mitch@aitoconsulting.com\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Creation date: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"Mon 5 Aug 2019 14:56:22\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Latest date: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  DynamicBox[
                   ToBoxes[
                    Replace[
                    Lookup[
                    Replace[
                    
                    DataDropClient`Private`datadropclientcache[{
                    "DatabinLatest", 
                    "DD4d864eaa38b-3d22-4a26-b724-aff8e2bb6bde"}], Except[
                    Blank[Association]] -> {}, {0}], "Timestamp", 
                    Missing[]], Pattern[DataDropClient`Private`date, 
                    Blank[DateObject]] :> 
                    DateString[DataDropClient`Private`date], {0}], 
                    StandardForm]], "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Size: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  DynamicBox[
                   ToBoxes[
                    (If[
                    NumberQ[#], 
                    Round[#, 0.1], #]& )[
                    Lookup[
                    Replace[
                    
                    DataDropClient`Private`datadropclientcache[{
                    "DatabinStats", 
                    "DD4d864eaa38b-3d22-4a26-b724-aff8e2bb6bde"}], Except[
                    Blank[Association]] -> {}, {0}], "Size", 
                    Missing[]]], StandardForm]], "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Latest: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  DynamicBox[
                   ToBoxes[
                    Lookup[
                    Replace[
                    
                    DataDropClient`Private`datadropclientcache[{
                    "DatabinLatest", 
                    "DD4d864eaa38b-3d22-4a26-b724-aff8e2bb6bde"}], Except[
                    Blank[Association]] -> {}, {0}], "Data", 
                    Missing[]], StandardForm]], "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  Databin["DD4d864eaa38b-3d22-4a26-b724-aff8e2bb6bde"],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.7741869286119475`*^9, {3.7741869617159557`*^9, 3.7741870227077813`*^9}, 
   3.774187637219911*^9},
 CellLabel->
  "Out[659]=",ExpressionUUID->"5c416452-1891-44d0-ab3f-18b7789f2966"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"ClearAll", "[", "readingsDS", "]"}], "\[IndentingNewLine]", 
 RowBox[{"readingsDS", "=", 
  RowBox[{
   RowBox[{
    RowBox[{"Dataset", "[", "readingsDB", "]"}], "[", 
    RowBox[{
     RowBox[{"SortBy", "[", 
      RowBox[{"#", ",", "\"\<Timestamp\>\""}], "]"}], "&"}], "]"}], "[", 
   "Reverse", "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"readingsDS", "//", "Head"}], "\[IndentingNewLine]", 
 RowBox[{"dlsp", "=", 
  RowBox[{"DateListStepPlot", "[", 
   RowBox[{"readingsDS", "[", 
    RowBox[{"All", ",", 
     RowBox[{"{", 
      RowBox[{"\"\<Timestamp\>\"", ",", "\"\<reading\>\""}], "}"}]}], "]"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"dlsp", "//", "Head"}], "\[IndentingNewLine]", 
 RowBox[{"ag", "=", 
  RowBox[{"AngularGauge", "[", 
   RowBox[{
    RowBox[{"readingsDS", "[", 
     RowBox[{"First", ",", "\"\<reading\>\""}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"0", ",", "100"}], "}"}], ",", 
    RowBox[{"ImageSize", "\[Rule]", "Small"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"ag", "//", "Head"}]}], "Input",
 CellChangeTimes->{{3.7741873786372375`*^9, 3.7741873833322387`*^9}, 
   3.7741874748332357`*^9},
 CellLabel->
  "In[660]:=",ExpressionUUID->"1097e129-3d42-42cd-8668-86c670ae09c1"],

Cell[BoxData[
 TemplateBox[{TagBox[
    DynamicModuleBox[{
     TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
      Data`UnorderedAssociation[
       "RowCount" -> 20, "Length" -> 102, "InitialType" -> TypeSystem`Vector[
          TypeSystem`Struct[{"reading", "Timestamp"}, {
            TypeSystem`Atom[Integer], 
            TypeSystem`Atom[DateObject]}], 102], "Shape" -> 
        TypeSystem`PackageScope`HeaderShape[
          Association[{All, "reading"} -> 1, {All, "Timestamp"} -> 1], 
          TypeSystem`PackageScope`Limited[
           TypeSystem`PackageScope`ColumnShape[
            TypeSystem`PackageScope`RowShape[
             Association[
             "reading" -> TypeSystem`PackageScope`AtomShape[34], "Timestamp" -> 
              TypeSystem`PackageScope`AtomShape[75]]]], 20, {}]], 
        "InitialData" -> TypeSystem`PackageScope`CacheHandle[703552754], 
        "Type" -> TypeSystem`Vector[
          TypeSystem`Struct[{"reading", "Timestamp"}, {
            TypeSystem`Atom[Integer], 
            TypeSystem`Atom[DateObject]}], 102], "HandleQ" -> True, 
        "RowTarget" -> 20, "Data" -> 
        TypeSystem`PackageScope`CacheHandle[703552754]], 
      TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
      TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 1, 
      TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
      DynamicModule[{
        TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
           Style[
            Grid[{{
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"reading\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"reading\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1313733086][{All, "reading"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1313733086][
                  GeneralUtilities`Slice[All, "reading"]], "Mouse"], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Timestamp\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Timestamp\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1313733086][{All, "Timestamp"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1313733086][
                  GeneralUtilities`Slice[All, "Timestamp"]], "Mouse"], 
                Background -> GrayLevel[0.95], 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["87"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1313733086][
                  GeneralUtilities`Slice[1, 
                   Key["reading"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                  "\"Mon 5 Aug 2019 14:56:54\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1313733086][
                  GeneralUtilities`Slice[1, 
                   Key["Timestamp"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["84"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1313733086][
                  GeneralUtilities`Slice[2, 
                   Key["reading"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                  "\"Mon 5 Aug 2019 15:56:32\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1313733086][
                  GeneralUtilities`Slice[2, 
                   Key["Timestamp"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["80"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1313733086][
                  GeneralUtilities`Slice[3, 
                   Key["reading"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                  "\"Mon 5 Aug 2019 16:25:35\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1313733086][
                  GeneralUtilities`Slice[3, 
                   Key["Timestamp"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["80"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1313733086][
                  GeneralUtilities`Slice[4, 
                   Key["reading"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                  "\"Mon 5 Aug 2019 16:11:51\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1313733086][
                  GeneralUtilities`Slice[4, 
                   Key["Timestamp"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["76"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1313733086][
                  GeneralUtilities`Slice[5, 
                   Key["reading"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                  "\"Tue 6 Aug 2019 08:56:17\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1313733086][
                  GeneralUtilities`Slice[5, 
                   Key["Timestamp"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["75"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1313733086][
                  GeneralUtilities`Slice[6, 
                   Key["reading"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                  "\"Mon 5 Aug 2019 16:35:10\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1313733086][
                  GeneralUtilities`Slice[6, 
                   Key["Timestamp"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["75"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1313733086][
                  GeneralUtilities`Slice[7, 
                   Key["reading"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                  "\"Mon 5 Aug 2019 16:18:01\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1313733086][
                  GeneralUtilities`Slice[7, 
                   Key["Timestamp"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["75"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1313733086][
                  GeneralUtilities`Slice[8, 
                   Key["reading"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                  "\"Mon 5 Aug 2019 16:11:36\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1313733086][
                  GeneralUtilities`Slice[8, 
                   Key["Timestamp"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["70"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1313733086][
                  GeneralUtilities`Slice[9, 
                   Key["reading"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                  "\"Mon 5 Aug 2019 16:21:38\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1313733086][
                  GeneralUtilities`Slice[9, 
                   Key["Timestamp"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["65"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1313733086][
                  GeneralUtilities`Slice[10, 
                   Key["reading"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                  "\"Wed 7 Aug 2019 09:50:26\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1313733086][
                  GeneralUtilities`Slice[10, 
                   Key["Timestamp"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["65"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1313733086][
                  GeneralUtilities`Slice[11, 
                   Key["reading"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                  "\"Mon 5 Aug 2019 18:32:33\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1313733086][
                  GeneralUtilities`Slice[11, 
                   Key["Timestamp"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["65"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1313733086][
                  GeneralUtilities`Slice[12, 
                   Key["reading"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                  "\"Mon 5 Aug 2019 18:32:15\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1313733086][
                  GeneralUtilities`Slice[12, 
                   Key["Timestamp"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["65"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1313733086][
                  GeneralUtilities`Slice[13, 
                   Key["reading"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                  "\"Mon 5 Aug 2019 16:44:27\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1313733086][
                  GeneralUtilities`Slice[13, 
                   Key["Timestamp"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["65"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1313733086][
                  GeneralUtilities`Slice[14, 
                   Key["reading"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                  "\"Mon 5 Aug 2019 16:11:30\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1313733086][
                  GeneralUtilities`Slice[14, 
                   Key["Timestamp"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["62"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1313733086][
                  GeneralUtilities`Slice[15, 
                   Key["reading"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                  "\"Mon 5 Aug 2019 15:00:15\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1313733086][
                  GeneralUtilities`Slice[15, 
                   Key["Timestamp"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["60"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1313733086][
                  GeneralUtilities`Slice[16, 
                   Key["reading"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                  "\"Mon 5 Aug 2019 16:25:23\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1313733086][
                  GeneralUtilities`Slice[16, 
                   Key["Timestamp"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["57"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1313733086][
                  GeneralUtilities`Slice[17, 
                   Key["reading"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                  "\"Tue 6 Aug 2019 08:33:23\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1313733086][
                  GeneralUtilities`Slice[17, 
                   Key["Timestamp"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["57"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1313733086][
                  GeneralUtilities`Slice[18, 
                   Key["reading"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                  "\"Tue 6 Aug 2019 08:33:18\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1313733086][
                  GeneralUtilities`Slice[18, 
                   Key["Timestamp"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["56"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1313733086][
                  GeneralUtilities`Slice[19, 
                   Key["reading"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                  "\"Mon 5 Aug 2019 15:12:19\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1313733086][
                  GeneralUtilities`Slice[19, 
                   Key["Timestamp"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["55"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1313733086][
                  GeneralUtilities`Slice[20, 
                   Key["reading"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                  "\"Mon 5 Aug 2019 15:02:08\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1313733086][
                  GeneralUtilities`Slice[20, 
                   Key["Timestamp"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Deploy[
                 Mouseover[
                  Row[{
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.5]]], 
                    GrayLevel[0.5], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{0.56, 
                    1.031}, {6.429, 1.031}, {6.429, 60.967}, {0.56, 
                    60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{6.192899999999999, 
                    30.980699999999995`}, {42.4399, 0.7526999999999973}, {
                    42.4399, 8.209699999999994}, {16.432899999999997`, 
                    30.982699999999994`}, {42.4119, 53.6547}, {42.4399, 
                    61.244699999999995`}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{0.56, 
                    1.031}, {6.429, 1.031}, {6.429, 60.967}, {0.56, 
                    60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{6.192899999999999, 
                    30.980699999999995`}, {42.4399, 0.7526999999999973}, {
                    42.4399, 8.209699999999994}, {16.432899999999997`, 
                    30.982699999999994`}, {42.4119, 53.6547}, {42.4399, 
                    61.244699999999995`}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ + 
                    102 (-20), {1, 102 - -20 + 1}])}], 
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.3]]], 
                    GrayLevel[0.3], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5499, 30.980699999999995`}, {
                    36.7969, 0.7526999999999973}, {36.7969, 
                    8.209699999999994}, {10.7899, 30.982699999999994`}, {
                    36.7689, 53.6547}, {36.7969, 61.244699999999995`}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5499, 30.980699999999995`}, {
                    36.7969, 0.7526999999999973}, {36.7969, 
                    8.209699999999994}, {10.7899, 30.982699999999994`}, {
                    36.7689, 53.6547}, {36.7969, 61.244699999999995`}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ - 20, {
                    1, 102 - -20 + 1}])}], 
                    Pane[
                    Row[{"showing ", 1, "\[Dash]", 20, " of ", 
                    Style[
                    102, FontColor -> GrayLevel[0], FontWeight -> "Medium"]}, 
                    BaseStyle -> {
                    FontSize -> 8., FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]}], 150, ContentPadding -> False, 
                    Alignment -> {Center, Center}], 
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.3]]], 
                    GrayLevel[0.3], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5778000000000001, 
                    53.654399999999995`}, {26.5568, 30.982399999999995`}, {
                    0.5498000000000001, 8.209399999999995}, {
                    0.5498000000000001, 0.7523999999999944}, {
                    36.796800000000005`, 30.980399999999992`}, {
                    0.5498000000000001, 61.2454}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5778000000000001, 
                    53.654399999999995`}, {26.5568, 30.982399999999995`}, {
                    0.5498000000000001, 8.209399999999995}, {
                    0.5498000000000001, 0.7523999999999944}, {
                    36.796800000000005`, 30.980399999999992`}, {
                    0.5498000000000001, 61.2454}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ + 20, {
                    1, 102 - 20 + 1}])}], 
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.5]]], 
                    GrayLevel[0.5], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    36.571, 1.031}, {42.440999999999995`, 1.031}, {
                    42.440999999999995`, 60.967}, {36.571, 60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5598000000000001, 
                    53.788500000000006`}, {26.5668, 31.015500000000007`}, {
                    0.5878000000000001, 8.343500000000006}, {
                    0.5598000000000001, 0.7525000000000048}, {36.8068, 
                    31.017500000000005`}, {0.5598000000000001, 
                    61.24450000000001}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    36.571, 1.031}, {42.440999999999995`, 1.031}, {
                    42.440999999999995`, 60.967}, {36.571, 60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5598000000000001, 
                    53.788500000000006`}, {26.5668, 31.015500000000007`}, {
                    0.5878000000000001, 8.343500000000006}, {
                    0.5598000000000001, 0.7525000000000048}, {36.8068, 
                    31.017500000000005`}, {0.5598000000000001, 
                    61.24450000000001}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ + 
                    102 20, {1, 102 - 20 + 1}])}]}, "   "], 
                  Row[{
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.5]]], 
                    GrayLevel[0.5], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{0.56, 
                    1.031}, {6.429, 1.031}, {6.429, 60.967}, {0.56, 
                    60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{6.192899999999999, 
                    30.980699999999995`}, {42.4399, 0.7526999999999973}, {
                    42.4399, 8.209699999999994}, {16.432899999999997`, 
                    30.982699999999994`}, {42.4119, 53.6547}, {42.4399, 
                    61.244699999999995`}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{0.56, 
                    1.031}, {6.429, 1.031}, {6.429, 60.967}, {0.56, 
                    60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{6.192899999999999, 
                    30.980699999999995`}, {42.4399, 0.7526999999999973}, {
                    42.4399, 8.209699999999994}, {16.432899999999997`, 
                    30.982699999999994`}, {42.4119, 53.6547}, {42.4399, 
                    61.244699999999995`}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ + 
                    102 (-20), {1, 102 - -20 + 1}])}], 
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.3]]], 
                    GrayLevel[0.3], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5499, 30.980699999999995`}, {
                    36.7969, 0.7526999999999973}, {36.7969, 
                    8.209699999999994}, {10.7899, 30.982699999999994`}, {
                    36.7689, 53.6547}, {36.7969, 61.244699999999995`}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5499, 30.980699999999995`}, {
                    36.7969, 0.7526999999999973}, {36.7969, 
                    8.209699999999994}, {10.7899, 30.982699999999994`}, {
                    36.7689, 53.6547}, {36.7969, 61.244699999999995`}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ - 20, {
                    1, 102 - -20 + 1}])}], 
                    Pane[
                    Row[{"showing ", 1, "\[Dash]", 20, " of ", 
                    Style[
                    102, FontColor -> GrayLevel[0], FontWeight -> "Medium"]}, 
                    BaseStyle -> {
                    FontSize -> 8., FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]}], 150, ContentPadding -> False, 
                    Alignment -> {Center, Center}], 
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.3]]], 
                    GrayLevel[0.3], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5778000000000001, 
                    53.654399999999995`}, {26.5568, 30.982399999999995`}, {
                    0.5498000000000001, 8.209399999999995}, {
                    0.5498000000000001, 0.7523999999999944}, {
                    36.796800000000005`, 30.980399999999992`}, {
                    0.5498000000000001, 61.2454}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5778000000000001, 
                    53.654399999999995`}, {26.5568, 30.982399999999995`}, {
                    0.5498000000000001, 8.209399999999995}, {
                    0.5498000000000001, 0.7523999999999944}, {
                    36.796800000000005`, 30.980399999999992`}, {
                    0.5498000000000001, 61.2454}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ + 20, {
                    1, 102 - 20 + 1}])}], 
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.5]]], 
                    GrayLevel[0.5], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    36.571, 1.031}, {42.440999999999995`, 1.031}, {
                    42.440999999999995`, 60.967}, {36.571, 60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5598000000000001, 
                    53.788500000000006`}, {26.5668, 31.015500000000007`}, {
                    0.5878000000000001, 8.343500000000006}, {
                    0.5598000000000001, 0.7525000000000048}, {36.8068, 
                    31.017500000000005`}, {0.5598000000000001, 
                    61.24450000000001}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    36.571, 1.031}, {42.440999999999995`, 1.031}, {
                    42.440999999999995`, 60.967}, {36.571, 60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5598000000000001, 
                    53.788500000000006`}, {26.5668, 31.015500000000007`}, {
                    0.5878000000000001, 8.343500000000006}, {
                    0.5598000000000001, 0.7525000000000048}, {36.8068, 
                    31.017500000000005`}, {0.5598000000000001, 
                    61.24450000000001}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ + 
                    102 20, {1, 102 - 20 + 1}])}]}, "   "]]], Background -> 
                GrayLevel[0.98], Alignment -> {Left, Top}, 
                BaseStyle -> {ContextMenu -> {
                    MenuItem["Hide", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1313733086},
                     1, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 10 rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1313733086},
                     10, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 30 rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1313733086},
                     30, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 100 rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1313733086},
                     100, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show all", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1313733086},
                     100000000, {}]], MenuEvaluator -> Automatic]}}], 
               SpanFromLeft}}, BaseStyle -> {ContextMenu -> {
                 MenuItem["Copy position to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Copy data to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], Delimiter, 
                 MenuItem["Paste position in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Paste data in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic]}, FontFamily -> "Verdana", 
               FontSize -> 12}, Alignment -> Left, RowMinHeight -> 1.5, 
             Dividers -> All, FrameStyle -> GrayLevel[0.85], 
             BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
            LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False,
             ShowAutoStyles -> False]], 
         TypeSystem`NestedGrid`PackagePrivate`initialQ = True, 
         TypeSystem`NestedGrid`PackagePrivate`self = $Failed}, 
        Dynamic[
         TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
         TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
            Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
            
            Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
              TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
              TypeSystem`NestedGrid`PackagePrivate`LookupCacheValue[
                TypeSystem`NestedGrid`PackagePrivate`$state$$["Data"]]}, 
             TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = 
              If[TypeSystem`NestedGrid`PackagePrivate`tmpData$ === 
                TypeSystem`NestedGrid`PackagePrivate`$NotCached, 
                TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1313733086][
                TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
               Not[
                FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
               TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
               TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
          TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
          TypeSystem`NestedGrid`PackagePrivate`$pos$$; If[
            FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
            TypeSystem`SparseGrid[
             TypeSystem`H["(data no longer present)"]], 
            If[GeneralUtilities`$DebugMode, 
             Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
               TypeSystem`NestedGrid`PackagePrivate`formatState[
               TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                TypeSystem`NestedGrid`PackagePrivate`$pos$$]}], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
         TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$pos$$}], 
        DynamicModuleValues :> {}], 
      TypeSystem`NestedGrid`PackagePrivate`$posCell$$, 
      TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
        TypeSystem`NestedGrid`PackagePrivate`alignBar[
        TypeSystem`NestedGrid`PackagePrivate`$state$$][
         TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
          TypeSystem`PackageScope`Pathbar[
          TypeSystem`NestedGrid`PackagePrivate`$path$$, 
           TypeSystem`NestedGrid`PackagePrivate`updateState[
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
            TypeSystem`NestedGrid`PackagePrivate`$path$$, 
            TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1313733086]]]], 
        TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
      TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Framed[
        Dynamic[
         Replace[
          MouseAnnotation[Null], {
          TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1313733086][Null] -> 
           "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1313733086][
             Pattern[TypeSystem`NestedGrid`PackagePrivate`path, 
              Blank[]]] :> (
            TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
             TypeSystem`NestedGrid`PackagePrivate`path; 
            TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
             TypeSystem`NestedGrid`PackagePrivate`path, 
              TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
           Spacer[10], Blank[] :> Spacer[10]}], TrackedSymbols :> {}], 
        FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
        Top, ImageSize -> {Automatic, 14}]}, 
     DynamicBox[
      ToBoxes[
       Column[
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, {
          TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
          TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`alignBar[
           TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}, {
         TypeSystem`NestedGrid`PackagePrivate`$topBar$$, 
          TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
          TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`alignBar[
           TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}], Spacings -> 
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, 
          0, {{}, {0, 0.05, 0}}]], StandardForm], 
      ImageSizeCache -> {254., {279., 285.}}, 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     BaseStyle -> {LineBreakWithin -> False}, Deinitialization :> 
     TypeSystem`NestedGrid`PackagePrivate`deleteState[
      TypeSystem`NestedGrid`PackagePrivate`$state$$], 
     DynamicModuleValues :> {}, Initialization :> 
     Block[{$ContextPath = $ContextPath}, 
       Needs["TypeSystem`"]]], Deploy, DefaultBaseStyle -> "Deploy"]},
  "CopyTag",
  DisplayFunction->(#& ),
  InterpretationFunction->("Dataset[<>]"& )]], "Output",
 CellChangeTimes->{3.77418739075324*^9, 3.774187480086234*^9, 
  3.774187658656911*^9},
 CellLabel->
  "Out[661]=",ExpressionUUID->"ee5054bf-dec7-4fff-9e67-b196eec9733c"],

Cell[BoxData["Dataset"], "Output",
 CellChangeTimes->{3.77418739075324*^9, 3.774187480086234*^9, 
  3.7741876589839106`*^9},
 CellLabel->
  "Out[662]=",ExpressionUUID->"13bc2af0-c43f-4d6b-823e-70f666954586"],

Cell[BoxData[
 GraphicsBox[{{{}, {{{}, {}, 
      {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       0.009166666666666668], AbsoluteThickness[1.6], LineBox[CompressedData["
1:eJx91ntIU2EUAPDrEBMVM5G01NGUVDJfpPkI3dnUq1tLy0fYtDVN94ekluEr
KhcWZVBCFgk9zMdaSNiwEBtkZhGKTijnq1EyJkqlsYiiNKRv/tU/51y4XH7w
cc93z/nu9x1RSVVOmYDjuHF2O552fRBfIFyWcBtXAqybZ3EP5cPdN9HHUHO7
wXfuF+Fs0GhUxai1maAs3VyJez8YZQvXUXNJ8GB7lRG3AsY6GpyUmLXpbD5C
Z9ScHxu/xQV3PmSVXNyEOwwE4U/ccfMw0+XhT7moZSKAsvVMtBC3DGpa/cIo
r5tvRlDm+5ciKZ9K3huDWitj9SjcQ3mqXhaLmpPDwzsecai1cuhMn5ZSFoTH
85TnJmwyyt5NrgrKffeijlNuq7xRRllZajtNued7SA3l1z/TalHDQbj01akO
9VAOhMb8rUfN5cHkgV3dqDfyfV9H2eXCTj1qFi9nQP4INRcL74LEL1Gz91Us
NQ1RdptJHcZ9iNWrcRS3HKRq0xhlQ/XILOVWP8UHysrSNQtqLg2ejVR/wp3F
6r08jzsPbDp3O2oWr/+HyK2QsGfEeXfKLcMfPSjPZzd74uZhsP29N2ouke1H
y764I1k++EDULJ5d/2UHZZVRF0w5NEYdgprNx65/G4qaree6QXEeanbenhO/
yMftCpnWYcISth/OFlCO6Ht1hLJUrSvC7QPiuB7CMnZeVlegZvvNgNBkQM3y
WdNqfkrZP2rlOWWbzpJahJqHQOUCbs4Lgi0rabhd2XmwhlsrAcufrbFHUTv+
l/I4ynz/ZBJqFk+qthJOYd8zvg+3K4zWThNOYf3CiWTcPtAsOUlYBg2fe6+o
UCew9e57lbJGs3oLNVsvIkNQG+XeDBNuVs/GcjNu1u/FN1vj6zCzfIkMi4Sl
bLwpEbcPLK1N4dYq2HyLkyjPTQQvouYCYJtzCOFc+HY2Y6ADNQe/c9tXcSc4
+u3VTtRe4FXgJOgiHH5ZgFvr6GdVj1Gzel67bTzc/Z//ARzgftY=
        "]]}}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.009166666666666668],
       AbsoluteThickness[1.6]}, {
      {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       0.009166666666666668], AbsoluteThickness[1.6]}, {}}, {
      {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       0.009166666666666668], AbsoluteThickness[1.6]}, {}}}, {{}, {}}}, {{}, {
     {Opacity[0], PointBox[CompressedData["
1:eJxV1GtIk1EYB/DXISYqZhJpeaEpqWTeSPOG7WzqdLa0vIDNuabpPkhqGTqV
yoVF2YeELBC6mNpaSNiwEBMyswjFNijnZY2SMVEqjUUUpSEd+/Cev4OX8eN5
nvM+z9nZEZbX5lcKOI7T0Gfj22kIkRYHL4u5/58ksm6ZYx4tIrdfxx5n8X3E
z/oLnEc0GlUZb102UVRsrWE+RIZlC9dYfgq5t6t2mFlOJrubXBR8fiZdL9iV
N+dP49vcmItIbvnFLcwRRBD52JNZSmZ7vQLQynZzINreHBvMLCP1Hf4R6HXL
jSi0dHApGn067UAc61dG5ynZj55ulMWz/Bzy4JZXAovnkJ7MGQlaEJkoRVvN
Dhnat9Vdjh64E3MC3VlzvRKtqHCcQfd9D6tHv/qZ0cCbHCGXvrpoeY/mk/C4
v42s/0IydXjv/c3939Wj3S7sMWB9/lDOQ1YfT96FiF5gfvVS6yjaYzZ9jPko
na9lAuMStWkSbawbn0N3+Ms/bJ5/zcben0Gejtd9Ys6l8y/P43wOvacT6wd/
CD1KwN5R5z3R7WMfvdDzeW3ezFIy0vXelzeXTM/Tsh9zNO1HGoT1TsOX3WjV
sD4UHR6nDsP1nIY34SWw39oRUSGLJ5FzoudFzO4k2z4GFtPzOFeMjhp4eQwt
UeuVzNuJKKEPLKP/z7pq3vT8DAWbjNhvfYflCTogZuUZ2qG3pSthv4IUC8yc
Dwm1rWQooX+reY1ZJya2PzviSzf9PlUJaOngVEop1EvUdvBB+r63qRifaJhJ
xbi9+WRaKczfJj4FlpGmz/1XVLDf2hG/q2iNZvWmCvZHaAzpRPdnmZjpvC1V
FmZ6/yW22RO10J/QuAiW0LgpWQv9La1NM+vkdP2yFLTVHLrI8gPJTtcwcAH5
djZrqJs3R34XdK12wzz0/l7tgX59il0EveDIywJm3cZ9q3rUC/P+A/H5v/o=

       "]]}, {
      {Opacity[0]}, {}}, {
      {Opacity[0]}, {}}}, {{}, {{}, {}}}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{3.774005809083*^9, 0},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->FrontEndValueCache[{{Automatic, Automatic}, {
      Charting`DateTicksFunction[
      Automatic, Ticks -> Automatic, DateTicksFormat -> {Automatic}], 
      Charting`ScaledFrameTicks[
       Charting`DateTicksFunction[
       Automatic, Ticks -> Automatic, "TickLabels" -> None, 
        DateTicksFormat -> {Automatic}][
        SlotSequence[1]], {Identity, Identity}]& }}, {{
     Automatic, Automatic}, {{{3.7740024*^9, 
        FormBox[
         TagBox[
          GridBox[{{
             StyleBox["\"14:00\"", 
              Directive[], {}, StripOnInput -> False]}}, 
           GridBoxAlignment -> {"Columns" -> {{Center}}}, DefaultBaseStyle -> 
           "Column", 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"], 
         TraditionalForm], {0.013888888888888888`, 0.}, 
        Directive[]}, {3.7740096*^9, 
        FormBox[
         TagBox[
          GridBox[{{
             StyleBox["\"16:00\"", 
              Directive[], {}, StripOnInput -> False]}}, 
           GridBoxAlignment -> {"Columns" -> {{Center}}}, DefaultBaseStyle -> 
           "Column", 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"], 
         TraditionalForm], {0.013888888888888888`, 0.}, 
        Directive[]}, {3.7740168*^9, 
        FormBox[
         TagBox[
          GridBox[{{
             StyleBox["\"18:00\"", 
              Directive[], {}, StripOnInput -> False]}}, 
           GridBoxAlignment -> {"Columns" -> {{Center}}}, DefaultBaseStyle -> 
           "Column", 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"], 
         TraditionalForm], {0.013888888888888888`, 0.}, 
        Directive[]}, {3.774024*^9, 
        FormBox[
         TagBox[
          GridBox[{{
             StyleBox["\"20:00\"", 
              Directive[], {}, StripOnInput -> False]}}, 
           GridBoxAlignment -> {"Columns" -> {{Center}}}, DefaultBaseStyle -> 
           "Column", 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"], 
         TraditionalForm], {0.013888888888888888`, 0.}, 
        Directive[]}, {3.7740312*^9, 
        FormBox[
         TagBox[
          GridBox[{{
             StyleBox["\"22:00\"", 
              Directive[], {}, StripOnInput -> False]}}, 
           GridBoxAlignment -> {"Columns" -> {{Center}}}, DefaultBaseStyle -> 
           "Column", 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"], 
         TraditionalForm], {0.013888888888888888`, 0.}, 
        Directive[]}}, {{3.7740024*^9, 
        FormBox[
         TagBox[
          GridBox[{{
             StyleBox[
              TemplateBox[{0., 0.}, "Spacer2"], 
              Directive[], {}, StripOnInput -> False]}}, 
           GridBoxAlignment -> {"Columns" -> {{Center}}}, DefaultBaseStyle -> 
           "Column", 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"], 
         TraditionalForm], {0.013888888888888888`, 0.}, 
        Directive[]}, {3.7740096*^9, 
        FormBox[
         TagBox[
          GridBox[{{
             StyleBox[
              TemplateBox[{0., 0.}, "Spacer2"], 
              Directive[], {}, StripOnInput -> False]}}, 
           GridBoxAlignment -> {"Columns" -> {{Center}}}, DefaultBaseStyle -> 
           "Column", 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"], 
         TraditionalForm], {0.013888888888888888`, 0.}, 
        Directive[]}, {3.7740168*^9, 
        FormBox[
         TagBox[
          GridBox[{{
             StyleBox[
              TemplateBox[{0., 0.}, "Spacer2"], 
              Directive[], {}, StripOnInput -> False]}}, 
           GridBoxAlignment -> {"Columns" -> {{Center}}}, DefaultBaseStyle -> 
           "Column", 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"], 
         TraditionalForm], {0.013888888888888888`, 0.}, 
        Directive[]}, {3.774024*^9, 
        FormBox[
         TagBox[
          GridBox[{{
             StyleBox[
              TemplateBox[{0., 0.}, "Spacer2"], 
              Directive[], {}, StripOnInput -> False]}}, 
           GridBoxAlignment -> {"Columns" -> {{Center}}}, DefaultBaseStyle -> 
           "Column", 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"], 
         TraditionalForm], {0.013888888888888888`, 0.}, 
        Directive[]}, {3.7740312*^9, 
        FormBox[
         TagBox[
          GridBox[{{
             StyleBox[
              TemplateBox[{0., 0.}, "Spacer2"], 
              Directive[], {}, StripOnInput -> False]}}, 
           GridBoxAlignment -> {"Columns" -> {{Center}}}, DefaultBaseStyle -> 
           "Column", 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"], 
         TraditionalForm], {0.013888888888888888`, 0.}, 
        Directive[]}}}}],
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageMargins->0.,
  ImageSize->Small,
  ImageSizeRaw->Automatic,
  Method->{
   "NoShowPlotTheme" -> Automatic, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{3.774005809083*^9, 3.7740320229934998`*^9}, {0, 87.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.08090169943749476]}},
  Ticks->{{}, Automatic}]], "Output",
 CellChangeTimes->{3.77418739075324*^9, 3.774187480086234*^9, 
  3.77418765944991*^9},
 CellLabel->
  "Out[663]=",ExpressionUUID->"4f05685b-5820-4a4d-b193-f224284a9a31"],

Cell[BoxData["Graphics"], "Output",
 CellChangeTimes->{3.77418739075324*^9, 3.774187480086234*^9, 
  3.7741876594949107`*^9},
 CellLabel->
  "Out[664]=",ExpressionUUID->"43498fcd-4ad3-40ba-a7f6-817300f4194e"],

Cell[BoxData[
 GraphicsBox[{
   {GrayLevel[1], EdgeForm[None], FilledCurveBox[{Line[CompressedData["
1:eJxd1V1I02EUx/EtrC56o4xCsWykhiCRWWImncywF1wTixokKYbIkmgrbxzJ
oiKvrLQWxAoiltnLCiU1QzxgTaMpvkS1icl05TZ1+yNlGMXK6Py66IHDuTs3
H/g+mpJTBaXzVCpV6dz82X+flx/m6QPmlkn+Oj8/zl8xzBtHbM2PHkxxpeZO
ytJeNye0hZP8lhBfTY1vTFr8jmPXJbsOZYQ5ZG4y/9g6wPnRdm3mYJhn9Lse
e2694XMq8+afeQpX1KzK8TR18tOs22fWNih8MubCzmB5MzfUJUZ2+xR+viKi
Dpus3K49vGxLROGpL9VdbcZ7FOeMGPtnFS4/kmUr7nxBXWWz1+PfKrw6Umt3
6J1kPF9/ZU/N3L3WWuVmZi/FHqiavrxB4SWF7gyLZZCmE1sthXfDXKb2adS6
92SctPSkR0LcH7tA833hEFktv5683B5ia1qvwV7/kZyOHlv30SmOrvxW7Ljm
pVd9ppGEokn2DNTF7MsZo2NNrmdDuRO8PrBXZ/L6qLo1WRu1MsjuRWM3Lho+
U2dHWsOHbj+fWL6mb2Z4nAyjLUX24+N8NjvQqN0WoHST9eBg4BOnlFzSpVQF
Kff1ph1evY87XPGn99+foKjs9tSS5lE4EFzEgeAiDgQXcSC4iAPBRRwILuJA
cBEHgos4EFzEgeAiDgQXcSC4iAPBRRwILuJAcBEHgos4EFzEgeAiDgQXcSC4
iAPBRRwILuJAcBEHgos4EFzEgeAiDgQXcSC4iAPBRRwILuJAcBEHgos4EFzE
geAiDv9cxIHhIg4MF3FguIgDw0UcGC7iwHARB4aLODBcxIHhIg4MF3FguIgD
w0UcGC7iwHARB4YLOgUXdAou6BRc0Cm4oFNwQafggk7BBZ2CCzoFF3QKLugU
XNApuKBTcEGn4IJOwQWdggs6BRd0Ci7oFFzQKbigU3BBp+CCTsEFnYILOgWX
//+P34UFays=
       "]]}]}, GraphicsGroupBox[
    {GrayLevel[0.8], EdgeForm[{GrayLevel[0.6], Thickness[0.01]}], 
     FilledCurveBox[{{Line[CompressedData["
1:eJxd1V1I02EUx/EtrC56o4xCsWykhiCRWWImncywF1wTixokKYbIkmgrbxzJ
oiKvrLQWxAoiltnLCiU1QzxgTaMpvkS1icl05TZ1+yNlGMXK6Py66IHDuTs3
H/g+mpJTBaXzVCpV6dz82X+flx/m6QPmlkn+Oj8/zl8xzBtHbM2PHkxxpeZO
ytJeNye0hZP8lhBfTY1vTFr8jmPXJbsOZYQ5ZG4y/9g6wPnRdm3mYJhn9Lse
e2694XMq8+afeQpX1KzK8TR18tOs22fWNih8MubCzmB5MzfUJUZ2+xR+viKi
Dpus3K49vGxLROGpL9VdbcZ7FOeMGPtnFS4/kmUr7nxBXWWz1+PfKrw6Umt3
6J1kPF9/ZU/N3L3WWuVmZi/FHqiavrxB4SWF7gyLZZCmE1sthXfDXKb2adS6
92SctPSkR0LcH7tA833hEFktv5683B5ia1qvwV7/kZyOHlv30SmOrvxW7Ljm
pVd9ppGEokn2DNTF7MsZo2NNrmdDuRO8PrBXZ/L6qLo1WRu1MsjuRWM3Lho+
U2dHWsOHbj+fWL6mb2Z4nAyjLUX24+N8NjvQqN0WoHST9eBg4BOnlFzSpVQF
Kff1ph1evY87XPGn99+foKjs9tSS5lE4EFzEgeAiDgQXcSC4iAPBRRwILuJA
cBEHgos4EFzEgeAiDgQXcSC4iAPBRRwILuJAcBEHgos4EFzEgeAiDgQXcSC4
iAPBRRwILuJAcBEHgos4EFzEgeAiDgQXcSC4iAPBRRwILuJAcBEHgos4EFzE
geAiDv9cxIHhIg4MF3FguIgDw0UcGC7iwHARB4aLODBcxIHhIg4MF3FguIgD
w0UcGC7iwHARB4YLOgUXdAou6BRc0Cm4oFNwQafggk7BBZ2CCzoFF3QKLugU
XNApuKBTcEGn4IJOwQWdggs6BRd0Ci7oFFzQKbigU3BBp+CCTsEFnYILOgWX
//+P34UFays=
         "]]}, {Line[CompressedData["
1:eJyF1V1I02EUx/EpoxfEAkOSwsqQhGFemCAGdgTT6EbQihQkwbfI3tAi8UIv
mk5XYpmVNyVpUmkvWIlMnR0MUckwNE1xS12r2drc/z+ziErK8Px24U0XD4dz
ca4+8H3Css+m5flrNJrjy+/f3F7hSjVts/Hi3a6lzffnefXefaOsdrJomm8/
sPWlPPSw9edWKjVOcWLTswTjVYX1xvjMtIp3PGJrcys6lc8fGX6SXzDKkVEN
9UmlKq/VR3/lktc8djGgaOGFynme8Pp5vz4eu/I0rF1RuSu5Wh10dfCgY0du
xkYvz8RmVcct3OSgMkPCy1Avm3JyehT1Hu30/oiY3eJla/CpY3ONZsq07NZ2
rPFyfnfl45iJfkoprIpJt6mcEd2zKzv5DRWnlpe4W1UeSHx/6NertxSeXjvc
kqPy5RDH4f7pCYr/Y4ieDFD5liey8tyUhXpHh3vuHFB4dp/d9Ltzhup0xdbv
Rz2s1yVtMpttFHS93958cJ4bNhhiay7ZKWR9ldId6uZG/5o9Tfs/kfZbs+bk
+Bfu3euXG+d00LhOO7RU6OShqEBL64XPtC64IN+yOMd6vSkwz+Ukbfsje3mW
g9syrp1QklzL9y0Ddc8/MoVHjLjK3VR5xnjatPABDgQXcSC4iAPBRRwILuJA
cBEH8rmsOBBcxIHgIg4EF3EguIgDwUUcCC7iQHARB4KLOBBcxIHgIg4EF3Eg
uIgDwUUcCC7iQHARB4KLOJDPZcWB4CIOBBdxILiIA8FFHAgu4kBwEQeCizgQ
XMSB4CIOBBdxILiIg89FHBgu4sBwEQeGizgwXMSB4SIODBdxYLiIA8NFHBgu
4sBwEQeGizgwXMSB4SIODBdxYLis6hYc0C04oFtwQLfggG7BgX0u0im4oFNw
Qafggk7BBZ2CCzoFF3QKLugUXNApuKBTcEGn4IJOwQWdggs6BRd0Ci7oFFzQ
KZ+LdAou6BRc/vef/AWs0Kog
         "]]}}]}], {}, 
   {GrayLevel[0.5], Thickness[0.008], 
    {GrayLevel[0.5], Thickness[0.004], CapForm["Butt"], 
     StyleBox[{{
        LineBox[{{{-0.5000000000000004, -0.8660254037844385}, 
           Scaled[{0.030000000000000072`, 
            0.05569219381653051}, {-0.5000000000000004, \
-0.8660254037844385}]}, {{-1., 1.2246467991473532`*^-16}, 
           Scaled[{0.06, 0.}, {-1., 
            1.2246467991473532`*^-16}]}, {{-0.4999999999999998, 
           0.8660254037844387}, 
           Scaled[{
            0.029999999999999992`, -0.055692193816530566`}, \
{-0.4999999999999998, 0.8660254037844387}]}, {{0.5000000000000003, 
           0.8660254037844385}, 
           Scaled[{-0.03000000000000002, -0.05569219381653053}, {
            0.5000000000000003, 0.8660254037844385}]}, {{1., 0.}, 
           Scaled[{-0.06, 0.}, {1., 0.}]}, {{
           0.5000000000000003, -0.8660254037844385}, 
           Scaled[{-0.030000000000000006`, 0.05569219381653054}, {
            0.5000000000000003, -0.8660254037844385}]}}], 
        LineBox[{{{-0.7071067811865479, -0.7071067811865471}, 
           Scaled[{0.028284271247461915`, 
            0.03031499055704094}, {-0.7071067811865479, \
-0.7071067811865471}]}, {{-0.8660254037844388, -0.4999999999999997}, 
           Scaled[{0.03464101615137756, 
            0.021435935394489788`}, {-0.8660254037844388, \
-0.4999999999999997}]}, {{-0.9659258262890684, -0.25881904510252035`}, 
           Scaled[{0.038637033051562734`, 
            0.011096056659362344`}, {-0.9659258262890684, \
-0.25881904510252035`}]}, {{-0.9659258262890682, 0.258819045102521}, 
           Scaled[{0.03863703305156273, -0.011096056659362374`}, \
{-0.9659258262890682, 0.258819045102521}]}, {{-0.8660254037844385, 
           0.5000000000000003}, 
           Scaled[{0.03464101615137754, -0.02143593539448983}, \
{-0.8660254037844385, 0.5000000000000003}]}, {{-0.7071067811865475, 
           0.7071067811865476}, 
           Scaled[{0.028284271247461898`, -0.030314990557040962`}, \
{-0.7071067811865475, 0.7071067811865476}]}, {{-0.2588190451025204, 
           0.9659258262890684}, 
           Scaled[{0.010352761804100816`, -0.041411047216403325`}, \
{-0.2588190451025204, 0.9659258262890684}]}, {{6.123233995736766*^-17, 1.}, 
           Scaled[{0., -0.04287187078897963}, {6.123233995736766*^-17, 
            1.}]}, {{0.25881904510252096`, 0.9659258262890682}, 
           Scaled[{-0.010352761804100838`, -0.04141104721640332}, {
            0.25881904510252096`, 0.9659258262890682}]}, {{0.7071067811865476,
            0.7071067811865476}, 
           Scaled[{-0.028284271247461905`, -0.030314990557040962`}, {
            0.7071067811865476, 0.7071067811865476}]}, {{0.8660254037844387, 
           0.49999999999999983`}, 
           Scaled[{-0.034641016151377546`, -0.02143593539448981}, {
            0.8660254037844387, 0.49999999999999983`}]}, {{0.9659258262890683,
            0.25881904510252046`}, 
           Scaled[{-0.038637033051562734`, -0.01109605665936235}, {
            0.9659258262890683, 0.25881904510252046`}]}, {{
           0.9659258262890683, -0.25881904510252046`}, 
           Scaled[{-0.038637033051562734`, 0.011096056659362358`}, {
            0.9659258262890683, -0.25881904510252046`}]}, {{
           0.8660254037844385, -0.5000000000000002}, 
           Scaled[{-0.03464101615137754, 0.021435935394489836`}, {
            0.8660254037844385, -0.5000000000000002}]}, {{
           0.7071067811865476, -0.7071067811865476}, 
           Scaled[{-0.028284271247461894`, 0.030314990557040965`}, {
            0.7071067811865476, -0.7071067811865476}]}}]}, 
       {GrayLevel[0.25], 
        StyleBox[{{{
            InsetBox["0", Offset[{1.5000000000000036, 2.5980762113533142}, 
             Scaled[{0.030000000000000072, 0.05569219381653051}, \
{-0.5000000000000004, -0.8660254037844385}]], {-0.5773502691896275, -1.}, 
             Automatic, {1, 0}], 
            InsetBox["20", Offset[{3., 0.}, 
             Scaled[{0.06, 0.}, {-1., 1.2246467991473532*^-16}]], {-1, 0.}, 
             Automatic, {1, 0}], 
            InsetBox["40", Offset[{1.4999999999999996, -2.598076211353317}, 
             Scaled[{0.029999999999999992, -0.055692193816530566}, \
{-0.4999999999999998, 0.8660254037844387}]], {-0.5773502691896255, 1.}, 
             Automatic, {1, 0}], 
            InsetBox["60", Offset[{-1.5000000000000009, -2.5980762113533156}, 
             Scaled[{-0.03000000000000002, -0.05569219381653053}, \
{0.5000000000000003, 0.8660254037844385}]], {0.5773502691896262, 1.}, 
             Automatic, {1, 0}], 
            InsetBox["80", Offset[{-3., 0.}, Scaled[{-0.06, 0.}, {1., 0.}]], {1, 0.},
              Automatic, {1, 0}], 
            InsetBox["100", Offset[{-1.5000000000000004, 2.598076211353316}, 
             Scaled[{-0.030000000000000006, 0.05569219381653054}, \
{0.5000000000000003, -0.8660254037844385}]], {0.577350269189626, -1.}, 
             Automatic, {1, 
             0}]}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}}}, {}},
         StripOnInput->False,
         FontFamily->"Helvetica",
         FontSize->Scaled[0.07]]}},
      StripOnInput->False,
      Antialiasing->True]}}, {}, {}, 
   GeometricTransformationBox[GeometricTransformationBox[
     TagBox[
      TooltipBox[{
        {RGBColor[0.73, 0.24506099999999992`, 0.1971], 
         PolygonBox[{{0., -0.054700000000000006`}, {1, -0.025}, {1, 0.025}, {
           0., 0.054700000000000006`}}]}, 
        {RGBColor[0.73, 0.24506099999999992`, 0.1971], DiskBox[{0, 0}, 0.07]}, 
        {GrayLevel[1], DiskBox[{0, 0}, 0.035]}},
       "87"],
      Annotation[#, 87, "Tooltip"]& ], {{{0.8402223838474815, 
      0.3225311545907705}, {-0.3225311545907705, 0.8402223838474815}}, {0., 
      0.}}], {{{1, 0}, {0, 1}}, Center}], {}},
  AlignmentPoint->Center,
  AspectRatio->Automatic,
  Axes->False,
  AxesLabel->None,
  AxesOrigin->Automatic,
  AxesStyle->{},
  Background->None,
  BaseStyle->{},
  BaselinePosition->Automatic,
  ColorOutput->Automatic,
  ContentSelectable->Automatic,
  CoordinatesToolOptions:>Automatic,
  DisplayFunction->Identity,
  Epilog->{},
  FormatType->TraditionalForm,
  Frame->False,
  FrameLabel->None,
  FrameStyle->{},
  FrameTicks->Automatic,
  FrameTicksStyle->{},
  GridLines->None,
  GridLinesStyle->{},
  ImageMargins->0.,
  ImagePadding->All,
  ImageSize->Small,
  ImageSizeRaw->Automatic,
  LabelStyle->Directive[
    GrayLevel[0.25], FontSize -> Scaled[0.07], FontFamily -> "Helvetica"],
  Method->Automatic,
  PlotLabel->None,
  PlotRange->All,
  PlotRangeClipping->False,
  PlotRangePadding->Automatic,
  PlotRegion->Automatic,
  PreserveImageOptions->Automatic,
  Prolog->{},
  RotateLabel->True,
  Ticks->Automatic,
  TicksStyle->{}]], "Output",
 CellChangeTimes->{3.77418739075324*^9, 3.774187480086234*^9, 
  3.77418765972591*^9},
 CellLabel->
  "Out[665]=",ExpressionUUID->"0b930479-a24d-44b9-ac5c-6d1cdecda4bb"],

Cell[BoxData["Graphics"], "Output",
 CellChangeTimes->{3.77418739075324*^9, 3.774187480086234*^9, 
  3.774187659735911*^9},
 CellLabel->
  "Out[666]=",ExpressionUUID->"cc1bba48-5fdb-476c-b7b2-6572dd227c29"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.7741877768799133`*^9, 
  3.77418779927791*^9}},ExpressionUUID->"77add106-d63a-4f3d-87d5-\
87876f7915f0"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     GraphicsBox[{
       {GrayLevel[1], EdgeForm[None], FilledCurveBox[{Line[CompressedData["
1:eJxd1V1I02EUx/EtrC56o4xCsWykhiCRWWImncywF1wTixokKYbIkmgrbxzJ
oiKvrLQWxAoiltnLCiU1QzxgTaMpvkS1icl05TZ1+yNlGMXK6Py66IHDuTs3
H/g+mpJTBaXzVCpV6dz82X+flx/m6QPmlkn+Oj8/zl8xzBtHbM2PHkxxpeZO
ytJeNye0hZP8lhBfTY1vTFr8jmPXJbsOZYQ5ZG4y/9g6wPnRdm3mYJhn9Lse
e2694XMq8+afeQpX1KzK8TR18tOs22fWNih8MubCzmB5MzfUJUZ2+xR+viKi
Dpus3K49vGxLROGpL9VdbcZ7FOeMGPtnFS4/kmUr7nxBXWWz1+PfKrw6Umt3
6J1kPF9/ZU/N3L3WWuVmZi/FHqiavrxB4SWF7gyLZZCmE1sthXfDXKb2adS6
92SctPSkR0LcH7tA833hEFktv5683B5ia1qvwV7/kZyOHlv30SmOrvxW7Ljm
pVd9ppGEokn2DNTF7MsZo2NNrmdDuRO8PrBXZ/L6qLo1WRu1MsjuRWM3Lho+
U2dHWsOHbj+fWL6mb2Z4nAyjLUX24+N8NjvQqN0WoHST9eBg4BOnlFzSpVQF
Kff1ph1evY87XPGn99+foKjs9tSS5lE4EFzEgeAiDgQXcSC4iAPBRRwILuJA
cBEHgos4EFzEgeAiDgQXcSC4iAPBRRwILuJAcBEHgos4EFzEgeAiDgQXcSC4
iAPBRRwILuJAcBEHgos4EFzEgeAiDgQXcSC4iAPBRRwILuJAcBEHgos4EFzE
geAiDv9cxIHhIg4MF3FguIgDw0UcGC7iwHARB4aLODBcxIHhIg4MF3FguIgD
w0UcGC7iwHARB4YLOgUXdAou6BRc0Cm4oFNwQafggk7BBZ2CCzoFF3QKLugU
XNApuKBTcEGn4IJOwQWdggs6BRd0Ci7oFFzQKbigU3BBp+CCTsEFnYILOgWX
//+P34UFays=
           "]]}]}, GraphicsGroupBox[
        {GrayLevel[0.8], EdgeForm[{GrayLevel[0.6], Thickness[0.01]}], 
         FilledCurveBox[{{Line[CompressedData["
1:eJxd1V1I02EUx/EtrC56o4xCsWykhiCRWWImncywF1wTixokKYbIkmgrbxzJ
oiKvrLQWxAoiltnLCiU1QzxgTaMpvkS1icl05TZ1+yNlGMXK6Py66IHDuTs3
H/g+mpJTBaXzVCpV6dz82X+flx/m6QPmlkn+Oj8/zl8xzBtHbM2PHkxxpeZO
ytJeNye0hZP8lhBfTY1vTFr8jmPXJbsOZYQ5ZG4y/9g6wPnRdm3mYJhn9Lse
e2694XMq8+afeQpX1KzK8TR18tOs22fWNih8MubCzmB5MzfUJUZ2+xR+viKi
Dpus3K49vGxLROGpL9VdbcZ7FOeMGPtnFS4/kmUr7nxBXWWz1+PfKrw6Umt3
6J1kPF9/ZU/N3L3WWuVmZi/FHqiavrxB4SWF7gyLZZCmE1sthXfDXKb2adS6
92SctPSkR0LcH7tA833hEFktv5683B5ia1qvwV7/kZyOHlv30SmOrvxW7Ljm
pVd9ppGEokn2DNTF7MsZo2NNrmdDuRO8PrBXZ/L6qLo1WRu1MsjuRWM3Lho+
U2dHWsOHbj+fWL6mb2Z4nAyjLUX24+N8NjvQqN0WoHST9eBg4BOnlFzSpVQF
Kff1ph1evY87XPGn99+foKjs9tSS5lE4EFzEgeAiDgQXcSC4iAPBRRwILuJA
cBEHgos4EFzEgeAiDgQXcSC4iAPBRRwILuJAcBEHgos4EFzEgeAiDgQXcSC4
iAPBRRwILuJAcBEHgos4EFzEgeAiDgQXcSC4iAPBRRwILuJAcBEHgos4EFzE
geAiDv9cxIHhIg4MF3FguIgDw0UcGC7iwHARB4aLODBcxIHhIg4MF3FguIgD
w0UcGC7iwHARB4YLOgUXdAou6BRc0Cm4oFNwQafggk7BBZ2CCzoFF3QKLugU
XNApuKBTcEGn4IJOwQWdggs6BRd0Ci7oFFzQKbigU3BBp+CCTsEFnYILOgWX
//+P34UFays=
             "]]}, {Line[CompressedData["
1:eJyF1V1I02EUx/EpoxfEAkOSwsqQhGFemCAGdgTT6EbQihQkwbfI3tAi8UIv
mk5XYpmVNyVpUmkvWIlMnR0MUckwNE1xS12r2drc/z+ziErK8Px24U0XD4dz
ca4+8H3Css+m5flrNJrjy+/f3F7hSjVts/Hi3a6lzffnefXefaOsdrJomm8/
sPWlPPSw9edWKjVOcWLTswTjVYX1xvjMtIp3PGJrcys6lc8fGX6SXzDKkVEN
9UmlKq/VR3/lktc8djGgaOGFynme8Pp5vz4eu/I0rF1RuSu5Wh10dfCgY0du
xkYvz8RmVcct3OSgMkPCy1Avm3JyehT1Hu30/oiY3eJla/CpY3ONZsq07NZ2
rPFyfnfl45iJfkoprIpJt6mcEd2zKzv5DRWnlpe4W1UeSHx/6NertxSeXjvc
kqPy5RDH4f7pCYr/Y4ieDFD5liey8tyUhXpHh3vuHFB4dp/d9Ltzhup0xdbv
Rz2s1yVtMpttFHS93958cJ4bNhhiay7ZKWR9ldId6uZG/5o9Tfs/kfZbs+bk
+Bfu3euXG+d00LhOO7RU6OShqEBL64XPtC64IN+yOMd6vSkwz+Ukbfsje3mW
g9syrp1QklzL9y0Ddc8/MoVHjLjK3VR5xnjatPABDgQXcSC4iAPBRRwILuJA
cBEH8rmsOBBcxIHgIg4EF3EguIgDwUUcCC7iQHARB4KLOBBcxIHgIg4EF3Eg
uIgDwUUcCC7iQHARB4KLOJDPZcWB4CIOBBdxILiIA8FFHAgu4kBwEQeCizgQ
XMSB4CIOBBdxILiIg89FHBgu4sBwEQeGizgwXMSB4SIODBdxYLiIA8NFHBgu
4sBwEQeGizgwXMSB4SIODBdxYLis6hYc0C04oFtwQLfggG7BgX0u0im4oFNw
Qafggk7BBZ2CCzoFF3QKLugUXNApuKBTcEGn4IJOwQWdggs6BRd0Ci7oFFzQ
KZ+LdAou6BRc/vef/AWs0Kog
             "]]}}]}], {}, 
       {GrayLevel[0.5], Thickness[0.008], 
        {GrayLevel[0.5], Thickness[0.004], CapForm["Butt"], 
         StyleBox[{{
            LineBox[{{{-0.5000000000000004, -0.8660254037844385}, 
               Scaled[{0.030000000000000072`, 
                0.05569219381653051}, {-0.5000000000000004, \
-0.8660254037844385}]}, {{-1., 1.2246467991473532`*^-16}, 
               Scaled[{0.06, 0.}, {-1., 
                1.2246467991473532`*^-16}]}, {{-0.4999999999999998, 
               0.8660254037844387}, 
               Scaled[{
                0.029999999999999992`, -0.055692193816530566`}, \
{-0.4999999999999998, 0.8660254037844387}]}, {{0.5000000000000003, 
               0.8660254037844385}, 
               Scaled[{-0.03000000000000002, -0.05569219381653053}, {
                0.5000000000000003, 0.8660254037844385}]}, {{1., 0.}, 
               Scaled[{-0.06, 0.}, {1., 0.}]}, {{
               0.5000000000000003, -0.8660254037844385}, 
               Scaled[{-0.030000000000000006`, 0.05569219381653054}, {
                0.5000000000000003, -0.8660254037844385}]}}], 
            LineBox[{{{-0.7071067811865479, -0.7071067811865471}, 
               Scaled[{0.028284271247461915`, 
                0.03031499055704094}, {-0.7071067811865479, \
-0.7071067811865471}]}, {{-0.8660254037844388, -0.4999999999999997}, 
               Scaled[{0.03464101615137756, 
                0.021435935394489788`}, {-0.8660254037844388, \
-0.4999999999999997}]}, {{-0.9659258262890684, -0.25881904510252035`}, 
               Scaled[{0.038637033051562734`, 
                0.011096056659362344`}, {-0.9659258262890684, \
-0.25881904510252035`}]}, {{-0.9659258262890682, 0.258819045102521}, 
               Scaled[{
                0.03863703305156273, -0.011096056659362374`}, \
{-0.9659258262890682, 0.258819045102521}]}, {{-0.8660254037844385, 
               0.5000000000000003}, 
               Scaled[{
                0.03464101615137754, -0.02143593539448983}, \
{-0.8660254037844385, 0.5000000000000003}]}, {{-0.7071067811865475, 
               0.7071067811865476}, 
               Scaled[{
                0.028284271247461898`, -0.030314990557040962`}, \
{-0.7071067811865475, 0.7071067811865476}]}, {{-0.2588190451025204, 
               0.9659258262890684}, 
               Scaled[{
                0.010352761804100816`, -0.041411047216403325`}, \
{-0.2588190451025204, 0.9659258262890684}]}, {{6.123233995736766*^-17, 1.}, 
               Scaled[{0., -0.04287187078897963}, {6.123233995736766*^-17, 
                1.}]}, {{0.25881904510252096`, 0.9659258262890682}, 
               Scaled[{-0.010352761804100838`, -0.04141104721640332}, {
                0.25881904510252096`, 0.9659258262890682}]}, {{
               0.7071067811865476, 0.7071067811865476}, 
               Scaled[{-0.028284271247461905`, -0.030314990557040962`}, {
                0.7071067811865476, 0.7071067811865476}]}, {{
               0.8660254037844387, 0.49999999999999983`}, 
               Scaled[{-0.034641016151377546`, -0.02143593539448981}, {
                0.8660254037844387, 0.49999999999999983`}]}, {{
               0.9659258262890683, 0.25881904510252046`}, 
               Scaled[{-0.038637033051562734`, -0.01109605665936235}, {
                0.9659258262890683, 0.25881904510252046`}]}, {{
               0.9659258262890683, -0.25881904510252046`}, 
               Scaled[{-0.038637033051562734`, 0.011096056659362358`}, {
                0.9659258262890683, -0.25881904510252046`}]}, {{
               0.8660254037844385, -0.5000000000000002}, 
               Scaled[{-0.03464101615137754, 0.021435935394489836`}, {
                0.8660254037844385, -0.5000000000000002}]}, {{
               0.7071067811865476, -0.7071067811865476}, 
               Scaled[{-0.028284271247461894`, 0.030314990557040965`}, {
                0.7071067811865476, -0.7071067811865476}]}}]}, 
           {GrayLevel[0.25], 
            
            StyleBox[{{{
                InsetBox["0", Offset[{1.5000000000000036, 2.5980762113533142},
                  Scaled[{0.030000000000000072, 0.05569219381653051}, \
{-0.5000000000000004, -0.8660254037844385}]], {-0.5773502691896275, -1.}, 
                 Automatic, {1, 0}], 
                InsetBox["20", Offset[{3., 0.}, 
                 Scaled[{0.06, 0.}, {-1., 1.2246467991473532*^-16}]], {-1, 0.},
                  Automatic, {1, 0}], 
                InsetBox["40", Offset[{1.4999999999999996, -2.598076211353317},
                  Scaled[{0.029999999999999992, -0.055692193816530566}, \
{-0.4999999999999998, 0.8660254037844387}]], {-0.5773502691896255, 1.}, 
                 Automatic, {1, 0}], 
                InsetBox["60", Offset[{-1.5000000000000009, -2.5980762113533156},
                  Scaled[{-0.03000000000000002, -0.05569219381653053}, \
{0.5000000000000003, 0.8660254037844385}]], {0.5773502691896262, 1.}, 
                 Automatic, {1, 0}], 
                InsetBox["80", Offset[{-3., 0.}, 
                 Scaled[{-0.06, 0.}, {1., 0.}]], {1, 0.}, Automatic, {1, 0}], 
                InsetBox["100", Offset[{-1.5000000000000004, 2.598076211353316},
                  Scaled[{-0.030000000000000006, 0.05569219381653054}, \
{0.5000000000000003, -0.8660254037844385}]], {0.577350269189626, -1.}, 
                 Automatic, {1, 
                 0}]}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}}}, {}},
             StripOnInput->False,
             FontFamily->"Helvetica",
             FontSize->Scaled[0.07]]}},
          StripOnInput->False,
          Antialiasing->True]}}, {}, {}, 
       GeometricTransformationBox[GeometricTransformationBox[
         TagBox[
          TooltipBox[{
            {RGBColor[0.73, 0.24506099999999992`, 0.1971], 
             PolygonBox[{{0., -0.054700000000000006`}, {1, -0.025}, {
               1, 0.025}, {0., 0.054700000000000006`}}]}, 
            {RGBColor[0.73, 0.24506099999999992`, 0.1971], 
             DiskBox[{0, 0}, 0.07]}, 
            {GrayLevel[1], DiskBox[{0, 0}, 0.035]}},
           "87"],
          Annotation[#, 87, "Tooltip"]& ], {{{0.8402223838474815, 
          0.3225311545907705}, {-0.3225311545907705, 0.8402223838474815}}, {
          0., 0.}}], {{{1, 0}, {0, 1}}, Center}], {}},
      AlignmentPoint->Center,
      AspectRatio->Automatic,
      Axes->False,
      AxesLabel->None,
      AxesOrigin->Automatic,
      AxesStyle->{},
      Background->None,
      BaseStyle->{},
      BaselinePosition->Automatic,
      ColorOutput->Automatic,
      ContentSelectable->Automatic,
      CoordinatesToolOptions:>Automatic,
      DisplayFunction->Identity,
      Epilog->{},
      FormatType->TraditionalForm,
      Frame->False,
      FrameLabel->None,
      FrameStyle->{},
      FrameTicks->Automatic,
      FrameTicksStyle->{},
      GridLines->None,
      GridLinesStyle->{},
      ImageMargins->0.,
      ImagePadding->All,
      ImageSize->Small,
      ImageSizeRaw->Automatic,
      LabelStyle->Directive[
        GrayLevel[0.25], FontSize -> Scaled[0.07], FontFamily -> "Helvetica"],
      Method->Automatic,
      PlotLabel->None,
      PlotRange->All,
      PlotRangeClipping->False,
      PlotRangePadding->Automatic,
      PlotRegion->Automatic,
      PreserveImageOptions->Automatic,
      Prolog->{},
      RotateLabel->True,
      Ticks->Automatic,
      TicksStyle->{}]},
    {
     GraphicsBox[{{{}, {{{}, {}, 
          {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
           0.009166666666666668], AbsoluteThickness[1.6], 
           LineBox[CompressedData["
1:eJx91ntIU2EUAPDrEBMVM5G01NGUVDJfpPkI3dnUq1tLy0fYtDVN94ekluEr
KhcWZVBCFgk9zMdaSNiwEBtkZhGKTijnq1EyJkqlsYiiNKRv/tU/51y4XH7w
cc93z/nu9x1RSVVOmYDjuHF2O552fRBfIFyWcBtXAqybZ3EP5cPdN9HHUHO7
wXfuF+Fs0GhUxai1maAs3VyJez8YZQvXUXNJ8GB7lRG3AsY6GpyUmLXpbD5C
Z9ScHxu/xQV3PmSVXNyEOwwE4U/ccfMw0+XhT7moZSKAsvVMtBC3DGpa/cIo
r5tvRlDm+5ciKZ9K3huDWitj9SjcQ3mqXhaLmpPDwzsecai1cuhMn5ZSFoTH
85TnJmwyyt5NrgrKffeijlNuq7xRRllZajtNued7SA3l1z/TalHDQbj01akO
9VAOhMb8rUfN5cHkgV3dqDfyfV9H2eXCTj1qFi9nQP4INRcL74LEL1Gz91Us
NQ1RdptJHcZ9iNWrcRS3HKRq0xhlQ/XILOVWP8UHysrSNQtqLg2ejVR/wp3F
6r08jzsPbDp3O2oWr/+HyK2QsGfEeXfKLcMfPSjPZzd74uZhsP29N2ouke1H
y764I1k++EDULJ5d/2UHZZVRF0w5NEYdgprNx65/G4qaree6QXEeanbenhO/
yMftCpnWYcISth/OFlCO6Ht1hLJUrSvC7QPiuB7CMnZeVlegZvvNgNBkQM3y
WdNqfkrZP2rlOWWbzpJahJqHQOUCbs4Lgi0rabhd2XmwhlsrAcufrbFHUTv+
l/I4ynz/ZBJqFk+qthJOYd8zvg+3K4zWThNOYf3CiWTcPtAsOUlYBg2fe6+o
UCew9e57lbJGs3oLNVsvIkNQG+XeDBNuVs/GcjNu1u/FN1vj6zCzfIkMi4Sl
bLwpEbcPLK1N4dYq2HyLkyjPTQQvouYCYJtzCOFc+HY2Y6ADNQe/c9tXcSc4
+u3VTtRe4FXgJOgiHH5ZgFvr6GdVj1Gzel67bTzc/Z//ARzgftY=
            "]]}}, 
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6]}, {
          {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
           0.009166666666666668], AbsoluteThickness[1.6]}, {}}, {
          {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
           0.009166666666666668], AbsoluteThickness[
           1.6]}, {}}}, {{}, {}}}, {{}, {
         {Opacity[0], PointBox[CompressedData["
1:eJxV1GtIk1EYB/DXISYqZhJpeaEpqWTeSPOG7WzqdLa0vIDNuabpPkhqGTqV
yoVF2YeELBC6mNpaSNiwEBMyswjFNijnZY2SMVEqjUUUpSEd+/Cev4OX8eN5
nvM+z9nZEZbX5lcKOI7T0Gfj22kIkRYHL4u5/58ksm6ZYx4tIrdfxx5n8X3E
z/oLnEc0GlUZb102UVRsrWE+RIZlC9dYfgq5t6t2mFlOJrubXBR8fiZdL9iV
N+dP49vcmItIbvnFLcwRRBD52JNZSmZ7vQLQynZzINreHBvMLCP1Hf4R6HXL
jSi0dHApGn067UAc61dG5ynZj55ulMWz/Bzy4JZXAovnkJ7MGQlaEJkoRVvN
Dhnat9Vdjh64E3MC3VlzvRKtqHCcQfd9D6tHv/qZ0cCbHCGXvrpoeY/mk/C4
v42s/0IydXjv/c3939Wj3S7sMWB9/lDOQ1YfT96FiF5gfvVS6yjaYzZ9jPko
na9lAuMStWkSbawbn0N3+Ms/bJ5/zcben0Gejtd9Ys6l8y/P43wOvacT6wd/
CD1KwN5R5z3R7WMfvdDzeW3ezFIy0vXelzeXTM/Tsh9zNO1HGoT1TsOX3WjV
sD4UHR6nDsP1nIY34SWw39oRUSGLJ5FzoudFzO4k2z4GFtPzOFeMjhp4eQwt
UeuVzNuJKKEPLKP/z7pq3vT8DAWbjNhvfYflCTogZuUZ2qG3pSthv4IUC8yc
Dwm1rWQooX+reY1ZJya2PzviSzf9PlUJaOngVEop1EvUdvBB+r63qRifaJhJ
xbi9+WRaKczfJj4FlpGmz/1XVLDf2hG/q2iNZvWmCvZHaAzpRPdnmZjpvC1V
FmZ6/yW22RO10J/QuAiW0LgpWQv9La1NM+vkdP2yFLTVHLrI8gPJTtcwcAH5
djZrqJs3R34XdK12wzz0/l7tgX59il0EveDIywJm3cZ9q3rUC/P+A/H5v/o=

           "]]}, {
          {Opacity[0]}, {}}, {
          {Opacity[0]}, {}}}, {{}, {{}, {}}}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{False, False},
      AxesLabel->{None, None},
      AxesOrigin->{3.774005809083*^9, 0},
      DisplayFunction->Identity,
      Frame->{{True, True}, {True, True}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->FrontEndValueCache[{{Automatic, Automatic}, {
          Charting`DateTicksFunction[
          Automatic, Ticks -> Automatic, DateTicksFormat -> {Automatic}], 
          Charting`ScaledFrameTicks[
           Charting`DateTicksFunction[
           Automatic, Ticks -> Automatic, "TickLabels" -> None, 
            DateTicksFormat -> {Automatic}][
            SlotSequence[1]], {Identity, Identity}]& }}, {{
         Automatic, Automatic}, {{{3.7740024*^9, 
            FormBox[
             TagBox[
              GridBox[{{
                 StyleBox["\"14:00\"", 
                  Directive[], {}, StripOnInput -> False]}}, 
               GridBoxAlignment -> {"Columns" -> {{Center}}}, 
               DefaultBaseStyle -> "Column", 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
              "Column"], TraditionalForm], {0.013888888888888888`, 0.}, 
            Directive[]}, {3.7740096*^9, 
            FormBox[
             TagBox[
              GridBox[{{
                 StyleBox["\"16:00\"", 
                  Directive[], {}, StripOnInput -> False]}}, 
               GridBoxAlignment -> {"Columns" -> {{Center}}}, 
               DefaultBaseStyle -> "Column", 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
              "Column"], TraditionalForm], {0.013888888888888888`, 0.}, 
            Directive[]}, {3.7740168*^9, 
            FormBox[
             TagBox[
              GridBox[{{
                 StyleBox["\"18:00\"", 
                  Directive[], {}, StripOnInput -> False]}}, 
               GridBoxAlignment -> {"Columns" -> {{Center}}}, 
               DefaultBaseStyle -> "Column", 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
              "Column"], TraditionalForm], {0.013888888888888888`, 0.}, 
            Directive[]}, {3.774024*^9, 
            FormBox[
             TagBox[
              GridBox[{{
                 StyleBox["\"20:00\"", 
                  Directive[], {}, StripOnInput -> False]}}, 
               GridBoxAlignment -> {"Columns" -> {{Center}}}, 
               DefaultBaseStyle -> "Column", 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
              "Column"], TraditionalForm], {0.013888888888888888`, 0.}, 
            Directive[]}, {3.7740312*^9, 
            FormBox[
             TagBox[
              GridBox[{{
                 StyleBox["\"22:00\"", 
                  Directive[], {}, StripOnInput -> False]}}, 
               GridBoxAlignment -> {"Columns" -> {{Center}}}, 
               DefaultBaseStyle -> "Column", 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
              "Column"], TraditionalForm], {0.013888888888888888`, 0.}, 
            Directive[]}}, {{3.7740024*^9, 
            FormBox[
             TagBox[
              GridBox[{{
                 StyleBox[
                  TemplateBox[{0., 0.}, "Spacer2"], 
                  Directive[], {}, StripOnInput -> False]}}, 
               GridBoxAlignment -> {"Columns" -> {{Center}}}, 
               DefaultBaseStyle -> "Column", 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
              "Column"], TraditionalForm], {0.013888888888888888`, 0.}, 
            Directive[]}, {3.7740096*^9, 
            FormBox[
             TagBox[
              GridBox[{{
                 StyleBox[
                  TemplateBox[{0., 0.}, "Spacer2"], 
                  Directive[], {}, StripOnInput -> False]}}, 
               GridBoxAlignment -> {"Columns" -> {{Center}}}, 
               DefaultBaseStyle -> "Column", 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
              "Column"], TraditionalForm], {0.013888888888888888`, 0.}, 
            Directive[]}, {3.7740168*^9, 
            FormBox[
             TagBox[
              GridBox[{{
                 StyleBox[
                  TemplateBox[{0., 0.}, "Spacer2"], 
                  Directive[], {}, StripOnInput -> False]}}, 
               GridBoxAlignment -> {"Columns" -> {{Center}}}, 
               DefaultBaseStyle -> "Column", 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
              "Column"], TraditionalForm], {0.013888888888888888`, 0.}, 
            Directive[]}, {3.774024*^9, 
            FormBox[
             TagBox[
              GridBox[{{
                 StyleBox[
                  TemplateBox[{0., 0.}, "Spacer2"], 
                  Directive[], {}, StripOnInput -> False]}}, 
               GridBoxAlignment -> {"Columns" -> {{Center}}}, 
               DefaultBaseStyle -> "Column", 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
              "Column"], TraditionalForm], {0.013888888888888888`, 0.}, 
            Directive[]}, {3.7740312*^9, 
            FormBox[
             TagBox[
              GridBox[{{
                 StyleBox[
                  TemplateBox[{0., 0.}, "Spacer2"], 
                  Directive[], {}, StripOnInput -> False]}}, 
               GridBoxAlignment -> {"Columns" -> {{Center}}}, 
               DefaultBaseStyle -> "Column", 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
              "Column"], TraditionalForm], {0.013888888888888888`, 0.}, 
            Directive[]}}}}],
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      Method->{
       "NoShowPlotTheme" -> Automatic, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& )}},
      PlotRange->{{3.774005809083*^9, 3.7740320229934998`*^9}, {0, 87.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.02], 
         Scaled[0.08090169943749476]}},
      Ticks->{{}, Automatic}]}
   },
   DefaultBaseStyle->"Column",
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Column"]], "Output",
 CellChangeTimes->{3.77418778580891*^9},
 CellLabel->
  "Out[668]=",ExpressionUUID->"6d3fa00d-2261-4c6e-95e9-3f255549260f"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Mocking up...", "Subsubsection",
 CellChangeTimes->{{3.774188048060123*^9, 
  3.7741880516810837`*^9}},ExpressionUUID->"5ed54710-577f-4046-9914-\
8467bd4666dc"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Grid", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{"ag", ",", "readingsDS", ",", "dlsp"}], "}"}], "}"}], ",", 
   RowBox[{"Frame", "\[Rule]", "All"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7741878318799644`*^9, 3.7741878400110016`*^9}},
 CellLabel->
  "In[670]:=",ExpressionUUID->"e37ca69b-521f-4da7-a8c7-c330df07eb74"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     GraphicsBox[{
       {GrayLevel[1], EdgeForm[None], FilledCurveBox[{Line[CompressedData["
1:eJxd1V1I02EUx/EtrC56o4xCsWykhiCRWWImncywF1wTixokKYbIkmgrbxzJ
oiKvrLQWxAoiltnLCiU1QzxgTaMpvkS1icl05TZ1+yNlGMXK6Py66IHDuTs3
H/g+mpJTBaXzVCpV6dz82X+flx/m6QPmlkn+Oj8/zl8xzBtHbM2PHkxxpeZO
ytJeNye0hZP8lhBfTY1vTFr8jmPXJbsOZYQ5ZG4y/9g6wPnRdm3mYJhn9Lse
e2694XMq8+afeQpX1KzK8TR18tOs22fWNih8MubCzmB5MzfUJUZ2+xR+viKi
Dpus3K49vGxLROGpL9VdbcZ7FOeMGPtnFS4/kmUr7nxBXWWz1+PfKrw6Umt3
6J1kPF9/ZU/N3L3WWuVmZi/FHqiavrxB4SWF7gyLZZCmE1sthXfDXKb2adS6
92SctPSkR0LcH7tA833hEFktv5683B5ia1qvwV7/kZyOHlv30SmOrvxW7Ljm
pVd9ppGEokn2DNTF7MsZo2NNrmdDuRO8PrBXZ/L6qLo1WRu1MsjuRWM3Lho+
U2dHWsOHbj+fWL6mb2Z4nAyjLUX24+N8NjvQqN0WoHST9eBg4BOnlFzSpVQF
Kff1ph1evY87XPGn99+foKjs9tSS5lE4EFzEgeAiDgQXcSC4iAPBRRwILuJA
cBEHgos4EFzEgeAiDgQXcSC4iAPBRRwILuJAcBEHgos4EFzEgeAiDgQXcSC4
iAPBRRwILuJAcBEHgos4EFzEgeAiDgQXcSC4iAPBRRwILuJAcBEHgos4EFzE
geAiDv9cxIHhIg4MF3FguIgDw0UcGC7iwHARB4aLODBcxIHhIg4MF3FguIgD
w0UcGC7iwHARB4YLOgUXdAou6BRc0Cm4oFNwQafggk7BBZ2CCzoFF3QKLugU
XNApuKBTcEGn4IJOwQWdggs6BRd0Ci7oFFzQKbigU3BBp+CCTsEFnYILOgWX
//+P34UFays=
           "]]}]}, GraphicsGroupBox[
        {GrayLevel[0.8], EdgeForm[{GrayLevel[0.6], Thickness[0.01]}], 
         FilledCurveBox[{{Line[CompressedData["
1:eJxd1V1I02EUx/EtrC56o4xCsWykhiCRWWImncywF1wTixokKYbIkmgrbxzJ
oiKvrLQWxAoiltnLCiU1QzxgTaMpvkS1icl05TZ1+yNlGMXK6Py66IHDuTs3
H/g+mpJTBaXzVCpV6dz82X+flx/m6QPmlkn+Oj8/zl8xzBtHbM2PHkxxpeZO
ytJeNye0hZP8lhBfTY1vTFr8jmPXJbsOZYQ5ZG4y/9g6wPnRdm3mYJhn9Lse
e2694XMq8+afeQpX1KzK8TR18tOs22fWNih8MubCzmB5MzfUJUZ2+xR+viKi
Dpus3K49vGxLROGpL9VdbcZ7FOeMGPtnFS4/kmUr7nxBXWWz1+PfKrw6Umt3
6J1kPF9/ZU/N3L3WWuVmZi/FHqiavrxB4SWF7gyLZZCmE1sthXfDXKb2adS6
92SctPSkR0LcH7tA833hEFktv5683B5ia1qvwV7/kZyOHlv30SmOrvxW7Ljm
pVd9ppGEokn2DNTF7MsZo2NNrmdDuRO8PrBXZ/L6qLo1WRu1MsjuRWM3Lho+
U2dHWsOHbj+fWL6mb2Z4nAyjLUX24+N8NjvQqN0WoHST9eBg4BOnlFzSpVQF
Kff1ph1evY87XPGn99+foKjs9tSS5lE4EFzEgeAiDgQXcSC4iAPBRRwILuJA
cBEHgos4EFzEgeAiDgQXcSC4iAPBRRwILuJAcBEHgos4EFzEgeAiDgQXcSC4
iAPBRRwILuJAcBEHgos4EFzEgeAiDgQXcSC4iAPBRRwILuJAcBEHgos4EFzE
geAiDv9cxIHhIg4MF3FguIgDw0UcGC7iwHARB4aLODBcxIHhIg4MF3FguIgD
w0UcGC7iwHARB4YLOgUXdAou6BRc0Cm4oFNwQafggk7BBZ2CCzoFF3QKLugU
XNApuKBTcEGn4IJOwQWdggs6BRd0Ci7oFFzQKbigU3BBp+CCTsEFnYILOgWX
//+P34UFays=
             "]]}, {Line[CompressedData["
1:eJyF1V1I02EUx/EpoxfEAkOSwsqQhGFemCAGdgTT6EbQihQkwbfI3tAi8UIv
mk5XYpmVNyVpUmkvWIlMnR0MUckwNE1xS12r2drc/z+ziErK8Px24U0XD4dz
ca4+8H3Css+m5flrNJrjy+/f3F7hSjVts/Hi3a6lzffnefXefaOsdrJomm8/
sPWlPPSw9edWKjVOcWLTswTjVYX1xvjMtIp3PGJrcys6lc8fGX6SXzDKkVEN
9UmlKq/VR3/lktc8djGgaOGFynme8Pp5vz4eu/I0rF1RuSu5Wh10dfCgY0du
xkYvz8RmVcct3OSgMkPCy1Avm3JyehT1Hu30/oiY3eJla/CpY3ONZsq07NZ2
rPFyfnfl45iJfkoprIpJt6mcEd2zKzv5DRWnlpe4W1UeSHx/6NertxSeXjvc
kqPy5RDH4f7pCYr/Y4ieDFD5liey8tyUhXpHh3vuHFB4dp/d9Ltzhup0xdbv
Rz2s1yVtMpttFHS93958cJ4bNhhiay7ZKWR9ldId6uZG/5o9Tfs/kfZbs+bk
+Bfu3euXG+d00LhOO7RU6OShqEBL64XPtC64IN+yOMd6vSkwz+Ukbfsje3mW
g9syrp1QklzL9y0Ddc8/MoVHjLjK3VR5xnjatPABDgQXcSC4iAPBRRwILuJA
cBEH8rmsOBBcxIHgIg4EF3EguIgDwUUcCC7iQHARB4KLOBBcxIHgIg4EF3Eg
uIgDwUUcCC7iQHARB4KLOJDPZcWB4CIOBBdxILiIA8FFHAgu4kBwEQeCizgQ
XMSB4CIOBBdxILiIg89FHBgu4sBwEQeGizgwXMSB4SIODBdxYLiIA8NFHBgu
4sBwEQeGizgwXMSB4SIODBdxYLis6hYc0C04oFtwQLfggG7BgX0u0im4oFNw
Qafggk7BBZ2CCzoFF3QKLugUXNApuKBTcEGn4IJOwQWdggs6BRd0Ci7oFFzQ
KZ+LdAou6BRc/vef/AWs0Kog
             "]]}}]}], {}, 
       {GrayLevel[0.5], Thickness[0.008], 
        {GrayLevel[0.5], Thickness[0.004], CapForm["Butt"], 
         StyleBox[{{
            LineBox[{{{-0.5000000000000004, -0.8660254037844385}, 
               Scaled[{0.030000000000000072`, 
                0.05569219381653051}, {-0.5000000000000004, \
-0.8660254037844385}]}, {{-1., 1.2246467991473532`*^-16}, 
               Scaled[{0.06, 0.}, {-1., 
                1.2246467991473532`*^-16}]}, {{-0.4999999999999998, 
               0.8660254037844387}, 
               Scaled[{
                0.029999999999999992`, -0.055692193816530566`}, \
{-0.4999999999999998, 0.8660254037844387}]}, {{0.5000000000000003, 
               0.8660254037844385}, 
               Scaled[{-0.03000000000000002, -0.05569219381653053}, {
                0.5000000000000003, 0.8660254037844385}]}, {{1., 0.}, 
               Scaled[{-0.06, 0.}, {1., 0.}]}, {{
               0.5000000000000003, -0.8660254037844385}, 
               Scaled[{-0.030000000000000006`, 0.05569219381653054}, {
                0.5000000000000003, -0.8660254037844385}]}}], 
            LineBox[{{{-0.7071067811865479, -0.7071067811865471}, 
               Scaled[{0.028284271247461915`, 
                0.03031499055704094}, {-0.7071067811865479, \
-0.7071067811865471}]}, {{-0.8660254037844388, -0.4999999999999997}, 
               Scaled[{0.03464101615137756, 
                0.021435935394489788`}, {-0.8660254037844388, \
-0.4999999999999997}]}, {{-0.9659258262890684, -0.25881904510252035`}, 
               Scaled[{0.038637033051562734`, 
                0.011096056659362344`}, {-0.9659258262890684, \
-0.25881904510252035`}]}, {{-0.9659258262890682, 0.258819045102521}, 
               Scaled[{
                0.03863703305156273, -0.011096056659362374`}, \
{-0.9659258262890682, 0.258819045102521}]}, {{-0.8660254037844385, 
               0.5000000000000003}, 
               Scaled[{
                0.03464101615137754, -0.02143593539448983}, \
{-0.8660254037844385, 0.5000000000000003}]}, {{-0.7071067811865475, 
               0.7071067811865476}, 
               Scaled[{
                0.028284271247461898`, -0.030314990557040962`}, \
{-0.7071067811865475, 0.7071067811865476}]}, {{-0.2588190451025204, 
               0.9659258262890684}, 
               Scaled[{
                0.010352761804100816`, -0.041411047216403325`}, \
{-0.2588190451025204, 0.9659258262890684}]}, {{6.123233995736766*^-17, 1.}, 
               Scaled[{0., -0.04287187078897963}, {6.123233995736766*^-17, 
                1.}]}, {{0.25881904510252096`, 0.9659258262890682}, 
               Scaled[{-0.010352761804100838`, -0.04141104721640332}, {
                0.25881904510252096`, 0.9659258262890682}]}, {{
               0.7071067811865476, 0.7071067811865476}, 
               Scaled[{-0.028284271247461905`, -0.030314990557040962`}, {
                0.7071067811865476, 0.7071067811865476}]}, {{
               0.8660254037844387, 0.49999999999999983`}, 
               Scaled[{-0.034641016151377546`, -0.02143593539448981}, {
                0.8660254037844387, 0.49999999999999983`}]}, {{
               0.9659258262890683, 0.25881904510252046`}, 
               Scaled[{-0.038637033051562734`, -0.01109605665936235}, {
                0.9659258262890683, 0.25881904510252046`}]}, {{
               0.9659258262890683, -0.25881904510252046`}, 
               Scaled[{-0.038637033051562734`, 0.011096056659362358`}, {
                0.9659258262890683, -0.25881904510252046`}]}, {{
               0.8660254037844385, -0.5000000000000002}, 
               Scaled[{-0.03464101615137754, 0.021435935394489836`}, {
                0.8660254037844385, -0.5000000000000002}]}, {{
               0.7071067811865476, -0.7071067811865476}, 
               Scaled[{-0.028284271247461894`, 0.030314990557040965`}, {
                0.7071067811865476, -0.7071067811865476}]}}]}, 
           {GrayLevel[0.25], 
            
            StyleBox[{{{
                InsetBox["0", Offset[{1.5000000000000036, 2.5980762113533142},
                  Scaled[{0.030000000000000072, 0.05569219381653051}, \
{-0.5000000000000004, -0.8660254037844385}]], {-0.5773502691896275, -1.}, 
                 Automatic, {1, 0}], 
                InsetBox["20", Offset[{3., 0.}, 
                 Scaled[{0.06, 0.}, {-1., 1.2246467991473532*^-16}]], {-1, 0.},
                  Automatic, {1, 0}], 
                InsetBox["40", Offset[{1.4999999999999996, -2.598076211353317},
                  Scaled[{0.029999999999999992, -0.055692193816530566}, \
{-0.4999999999999998, 0.8660254037844387}]], {-0.5773502691896255, 1.}, 
                 Automatic, {1, 0}], 
                InsetBox["60", Offset[{-1.5000000000000009, -2.5980762113533156},
                  Scaled[{-0.03000000000000002, -0.05569219381653053}, \
{0.5000000000000003, 0.8660254037844385}]], {0.5773502691896262, 1.}, 
                 Automatic, {1, 0}], 
                InsetBox["80", Offset[{-3., 0.}, 
                 Scaled[{-0.06, 0.}, {1., 0.}]], {1, 0.}, Automatic, {1, 0}], 
                InsetBox["100", Offset[{-1.5000000000000004, 2.598076211353316},
                  Scaled[{-0.030000000000000006, 0.05569219381653054}, \
{0.5000000000000003, -0.8660254037844385}]], {0.577350269189626, -1.}, 
                 Automatic, {1, 
                 0}]}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}}}, {}},
             StripOnInput->False,
             FontFamily->"Helvetica",
             FontSize->Scaled[0.07]]}},
          StripOnInput->False,
          Antialiasing->True]}}, {}, {}, 
       GeometricTransformationBox[GeometricTransformationBox[
         TagBox[
          TooltipBox[{
            {RGBColor[0.73, 0.24506099999999992`, 0.1971], 
             PolygonBox[{{0., -0.054700000000000006`}, {1, -0.025}, {
               1, 0.025}, {0., 0.054700000000000006`}}]}, 
            {RGBColor[0.73, 0.24506099999999992`, 0.1971], 
             DiskBox[{0, 0}, 0.07]}, 
            {GrayLevel[1], DiskBox[{0, 0}, 0.035]}},
           "87"],
          Annotation[#, 87, "Tooltip"]& ], {{{0.8402223838474815, 
          0.3225311545907705}, {-0.3225311545907705, 0.8402223838474815}}, {
          0., 0.}}], {{{1, 0}, {0, 1}}, Center}], {}},
      AlignmentPoint->Center,
      AspectRatio->Automatic,
      Axes->False,
      AxesLabel->None,
      AxesOrigin->Automatic,
      AxesStyle->{},
      Background->None,
      BaseStyle->{},
      BaselinePosition->Automatic,
      ColorOutput->Automatic,
      ContentSelectable->Automatic,
      CoordinatesToolOptions:>Automatic,
      DisplayFunction->Identity,
      Epilog->{},
      FormatType->TraditionalForm,
      Frame->False,
      FrameLabel->None,
      FrameStyle->{},
      FrameTicks->Automatic,
      FrameTicksStyle->{},
      GridLines->None,
      GridLinesStyle->{},
      ImageMargins->0.,
      ImagePadding->All,
      ImageSize->Small,
      ImageSizeRaw->Automatic,
      LabelStyle->Directive[
        GrayLevel[0.25], FontSize -> Scaled[0.07], FontFamily -> "Helvetica"],
      Method->Automatic,
      PlotLabel->None,
      PlotRange->All,
      PlotRangeClipping->False,
      PlotRangePadding->Automatic,
      PlotRegion->Automatic,
      PreserveImageOptions->Automatic,
      Prolog->{},
      RotateLabel->True,
      Ticks->Automatic,
      TicksStyle->{}], 
     TemplateBox[{TagBox[
        DynamicModuleBox[{
         TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
          Data`UnorderedAssociation[
           "RowCount" -> 20, "Length" -> 102, "InitialType" -> 
            TypeSystem`Vector[
              TypeSystem`Struct[{"reading", "Timestamp"}, {
                TypeSystem`Atom[Integer], 
                TypeSystem`Atom[DateObject]}], 102], "Shape" -> 
            TypeSystem`PackageScope`HeaderShape[
              Association[{All, "reading"} -> 1, {All, "Timestamp"} -> 1], 
              TypeSystem`PackageScope`Limited[
               TypeSystem`PackageScope`ColumnShape[
                TypeSystem`PackageScope`RowShape[
                 Association[
                 "reading" -> TypeSystem`PackageScope`AtomShape[34], 
                  "Timestamp" -> TypeSystem`PackageScope`AtomShape[75]]]], 
               20, {}]], "InitialData" -> 
            TypeSystem`PackageScope`CacheHandle[1708382749], "Type" -> 
            TypeSystem`Vector[
              TypeSystem`Struct[{"reading", "Timestamp"}, {
                TypeSystem`Atom[Integer], 
                TypeSystem`Atom[DateObject]}], 102], "HandleQ" -> True, 
            "RowTarget" -> 20, "Data" -> 
            TypeSystem`PackageScope`CacheHandle[1708382749]], 
          TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
          TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 1, 
          TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
          DynamicModule[{
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
               Style[
                Grid[{{
                   Item[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"reading\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"reading\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1444115123][{All, "reading"}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1444115123][
                    GeneralUtilities`Slice[All, "reading"]], "Mouse"], 
                    Background -> GrayLevel[0.95], 
                    Alignment -> {Left, Baseline}], 
                   Item[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Timestamp\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Timestamp\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1444115123][{All, "Timestamp"}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1444115123][
                    GeneralUtilities`Slice[All, "Timestamp"]], "Mouse"], 
                    Background -> GrayLevel[0.95], 
                    Alignment -> {Left, Baseline}]}, {
                   Pane[
                    Annotation[
                    RawBoxes["87"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1444115123][
                    GeneralUtilities`Slice[1, 
                    Key["reading"]]], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                   Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    "\"Mon 5 Aug 2019 14:56:54\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1444115123][
                    GeneralUtilities`Slice[1, 
                    Key["Timestamp"]]], "Mouse"], 
                    ImageSize -> {{75, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}]}, {
                   Pane[
                    Annotation[
                    RawBoxes["84"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1444115123][
                    GeneralUtilities`Slice[2, 
                    Key["reading"]]], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                   Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    "\"Mon 5 Aug 2019 15:56:32\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1444115123][
                    GeneralUtilities`Slice[2, 
                    Key["Timestamp"]]], "Mouse"], 
                    ImageSize -> {{75, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}]}, {
                   Pane[
                    Annotation[
                    RawBoxes["80"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1444115123][
                    GeneralUtilities`Slice[3, 
                    Key["reading"]]], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                   Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    "\"Mon 5 Aug 2019 16:25:35\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1444115123][
                    GeneralUtilities`Slice[3, 
                    Key["Timestamp"]]], "Mouse"], 
                    ImageSize -> {{75, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}]}, {
                   Pane[
                    Annotation[
                    RawBoxes["80"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1444115123][
                    GeneralUtilities`Slice[4, 
                    Key["reading"]]], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                   Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    "\"Mon 5 Aug 2019 16:11:51\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1444115123][
                    GeneralUtilities`Slice[4, 
                    Key["Timestamp"]]], "Mouse"], 
                    ImageSize -> {{75, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}]}, {
                   Pane[
                    Annotation[
                    RawBoxes["76"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1444115123][
                    GeneralUtilities`Slice[5, 
                    Key["reading"]]], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                   Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    "\"Tue 6 Aug 2019 08:56:17\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1444115123][
                    GeneralUtilities`Slice[5, 
                    Key["Timestamp"]]], "Mouse"], 
                    ImageSize -> {{75, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}]}, {
                   Pane[
                    Annotation[
                    RawBoxes["75"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1444115123][
                    GeneralUtilities`Slice[6, 
                    Key["reading"]]], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                   Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    "\"Mon 5 Aug 2019 16:35:10\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1444115123][
                    GeneralUtilities`Slice[6, 
                    Key["Timestamp"]]], "Mouse"], 
                    ImageSize -> {{75, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}]}, {
                   Pane[
                    Annotation[
                    RawBoxes["75"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1444115123][
                    GeneralUtilities`Slice[7, 
                    Key["reading"]]], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                   Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    "\"Mon 5 Aug 2019 16:18:01\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1444115123][
                    GeneralUtilities`Slice[7, 
                    Key["Timestamp"]]], "Mouse"], 
                    ImageSize -> {{75, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}]}, {
                   Pane[
                    Annotation[
                    RawBoxes["75"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1444115123][
                    GeneralUtilities`Slice[8, 
                    Key["reading"]]], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                   Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    "\"Mon 5 Aug 2019 16:11:36\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1444115123][
                    GeneralUtilities`Slice[8, 
                    Key["Timestamp"]]], "Mouse"], 
                    ImageSize -> {{75, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}]}, {
                   Pane[
                    Annotation[
                    RawBoxes["70"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1444115123][
                    GeneralUtilities`Slice[9, 
                    Key["reading"]]], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                   Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    "\"Mon 5 Aug 2019 16:21:38\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1444115123][
                    GeneralUtilities`Slice[9, 
                    Key["Timestamp"]]], "Mouse"], 
                    ImageSize -> {{75, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}]}, {
                   Pane[
                    Annotation[
                    RawBoxes["65"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1444115123][
                    GeneralUtilities`Slice[10, 
                    Key["reading"]]], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                   Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    "\"Wed 7 Aug 2019 09:50:26\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1444115123][
                    GeneralUtilities`Slice[10, 
                    Key["Timestamp"]]], "Mouse"], 
                    ImageSize -> {{75, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}]}, {
                   Pane[
                    Annotation[
                    RawBoxes["65"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1444115123][
                    GeneralUtilities`Slice[11, 
                    Key["reading"]]], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                   Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    "\"Mon 5 Aug 2019 18:32:33\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1444115123][
                    GeneralUtilities`Slice[11, 
                    Key["Timestamp"]]], "Mouse"], 
                    ImageSize -> {{75, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}]}, {
                   Pane[
                    Annotation[
                    RawBoxes["65"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1444115123][
                    GeneralUtilities`Slice[12, 
                    Key["reading"]]], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                   Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    "\"Mon 5 Aug 2019 18:32:15\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1444115123][
                    GeneralUtilities`Slice[12, 
                    Key["Timestamp"]]], "Mouse"], 
                    ImageSize -> {{75, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}]}, {
                   Pane[
                    Annotation[
                    RawBoxes["65"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1444115123][
                    GeneralUtilities`Slice[13, 
                    Key["reading"]]], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                   Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    "\"Mon 5 Aug 2019 16:44:27\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1444115123][
                    GeneralUtilities`Slice[13, 
                    Key["Timestamp"]]], "Mouse"], 
                    ImageSize -> {{75, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}]}, {
                   Pane[
                    Annotation[
                    RawBoxes["65"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1444115123][
                    GeneralUtilities`Slice[14, 
                    Key["reading"]]], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                   Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    "\"Mon 5 Aug 2019 16:11:30\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1444115123][
                    GeneralUtilities`Slice[14, 
                    Key["Timestamp"]]], "Mouse"], 
                    ImageSize -> {{75, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}]}, {
                   Pane[
                    Annotation[
                    RawBoxes["62"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1444115123][
                    GeneralUtilities`Slice[15, 
                    Key["reading"]]], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                   Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    "\"Mon 5 Aug 2019 15:00:15\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1444115123][
                    GeneralUtilities`Slice[15, 
                    Key["Timestamp"]]], "Mouse"], 
                    ImageSize -> {{75, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}]}, {
                   Pane[
                    Annotation[
                    RawBoxes["60"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1444115123][
                    GeneralUtilities`Slice[16, 
                    Key["reading"]]], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                   Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    "\"Mon 5 Aug 2019 16:25:23\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1444115123][
                    GeneralUtilities`Slice[16, 
                    Key["Timestamp"]]], "Mouse"], 
                    ImageSize -> {{75, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}]}, {
                   Pane[
                    Annotation[
                    RawBoxes["57"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1444115123][
                    GeneralUtilities`Slice[17, 
                    Key["reading"]]], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                   Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    "\"Tue 6 Aug 2019 08:33:23\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1444115123][
                    GeneralUtilities`Slice[17, 
                    Key["Timestamp"]]], "Mouse"], 
                    ImageSize -> {{75, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}]}, {
                   Pane[
                    Annotation[
                    RawBoxes["57"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1444115123][
                    GeneralUtilities`Slice[18, 
                    Key["reading"]]], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                   Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    "\"Tue 6 Aug 2019 08:33:18\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1444115123][
                    GeneralUtilities`Slice[18, 
                    Key["Timestamp"]]], "Mouse"], 
                    ImageSize -> {{75, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}]}, {
                   Pane[
                    Annotation[
                    RawBoxes["56"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1444115123][
                    GeneralUtilities`Slice[19, 
                    Key["reading"]]], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                   Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    "\"Mon 5 Aug 2019 15:12:19\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1444115123][
                    GeneralUtilities`Slice[19, 
                    Key["Timestamp"]]], "Mouse"], 
                    ImageSize -> {{75, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}]}, {
                   Pane[
                    Annotation[
                    RawBoxes["55"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1444115123][
                    GeneralUtilities`Slice[20, 
                    Key["reading"]]], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                   Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    "\"Mon 5 Aug 2019 15:02:08\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1444115123][
                    GeneralUtilities`Slice[20, 
                    Key["Timestamp"]]], "Mouse"], 
                    ImageSize -> {{75, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}]}, {
                   Item[
                    Deploy[
                    Mouseover[
                    Row[{
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.5]]], 
                    GrayLevel[0.5], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{0.56, 
                    1.031}, {6.429, 1.031}, {6.429, 60.967}, {0.56, 
                    60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{6.192899999999999, 
                    30.980699999999995`}, {42.4399, 0.7526999999999973}, {
                    42.4399, 8.209699999999994}, {16.432899999999997`, 
                    30.982699999999994`}, {42.4119, 53.6547}, {42.4399, 
                    61.244699999999995`}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{0.56, 
                    1.031}, {6.429, 1.031}, {6.429, 60.967}, {0.56, 
                    60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{6.192899999999999, 
                    30.980699999999995`}, {42.4399, 0.7526999999999973}, {
                    42.4399, 8.209699999999994}, {16.432899999999997`, 
                    30.982699999999994`}, {42.4119, 53.6547}, {42.4399, 
                    61.244699999999995`}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ + 
                    102 (-20), {1, 102 - -20 + 1}])}], 
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.3]]], 
                    GrayLevel[0.3], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5499, 30.980699999999995`}, {
                    36.7969, 0.7526999999999973}, {36.7969, 
                    8.209699999999994}, {10.7899, 30.982699999999994`}, {
                    36.7689, 53.6547}, {36.7969, 61.244699999999995`}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5499, 30.980699999999995`}, {
                    36.7969, 0.7526999999999973}, {36.7969, 
                    8.209699999999994}, {10.7899, 30.982699999999994`}, {
                    36.7689, 53.6547}, {36.7969, 61.244699999999995`}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ - 20, {
                    1, 102 - -20 + 1}])}], 
                    Pane[
                    Row[{"showing ", 1, "\[Dash]", 20, " of ", 
                    Style[102, FontColor -> GrayLevel[0], FontWeight -> 
                    "Medium"]}, 
                    BaseStyle -> {
                    FontSize -> 8., FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]}], 150, ContentPadding -> False, 
                    Alignment -> {Center, Center}], 
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.3]]], 
                    GrayLevel[0.3], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5778000000000001, 
                    53.654399999999995`}, {26.5568, 30.982399999999995`}, {
                    0.5498000000000001, 8.209399999999995}, {
                    0.5498000000000001, 0.7523999999999944}, {
                    36.796800000000005`, 30.980399999999992`}, {
                    0.5498000000000001, 61.2454}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5778000000000001, 
                    53.654399999999995`}, {26.5568, 30.982399999999995`}, {
                    0.5498000000000001, 8.209399999999995}, {
                    0.5498000000000001, 0.7523999999999944}, {
                    36.796800000000005`, 30.980399999999992`}, {
                    0.5498000000000001, 61.2454}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ + 20, {
                    1, 102 - 20 + 1}])}], 
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.5]]], 
                    GrayLevel[0.5], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    36.571, 1.031}, {42.440999999999995`, 1.031}, {
                    42.440999999999995`, 60.967}, {36.571, 60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5598000000000001, 
                    53.788500000000006`}, {26.5668, 31.015500000000007`}, {
                    0.5878000000000001, 8.343500000000006}, {
                    0.5598000000000001, 0.7525000000000048}, {36.8068, 
                    31.017500000000005`}, {0.5598000000000001, 
                    61.24450000000001}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    36.571, 1.031}, {42.440999999999995`, 1.031}, {
                    42.440999999999995`, 60.967}, {36.571, 60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5598000000000001, 
                    53.788500000000006`}, {26.5668, 31.015500000000007`}, {
                    0.5878000000000001, 8.343500000000006}, {
                    0.5598000000000001, 0.7525000000000048}, {36.8068, 
                    31.017500000000005`}, {0.5598000000000001, 
                    61.24450000000001}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ + 
                    102 20, {1, 102 - 20 + 1}])}]}, "   "], 
                    Row[{
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.5]]], 
                    GrayLevel[0.5], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{0.56, 
                    1.031}, {6.429, 1.031}, {6.429, 60.967}, {0.56, 
                    60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{6.192899999999999, 
                    30.980699999999995`}, {42.4399, 0.7526999999999973}, {
                    42.4399, 8.209699999999994}, {16.432899999999997`, 
                    30.982699999999994`}, {42.4119, 53.6547}, {42.4399, 
                    61.244699999999995`}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{0.56, 
                    1.031}, {6.429, 1.031}, {6.429, 60.967}, {0.56, 
                    60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{6.192899999999999, 
                    30.980699999999995`}, {42.4399, 0.7526999999999973}, {
                    42.4399, 8.209699999999994}, {16.432899999999997`, 
                    30.982699999999994`}, {42.4119, 53.6547}, {42.4399, 
                    61.244699999999995`}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ + 
                    102 (-20), {1, 102 - -20 + 1}])}], 
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.3]]], 
                    GrayLevel[0.3], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5499, 30.980699999999995`}, {
                    36.7969, 0.7526999999999973}, {36.7969, 
                    8.209699999999994}, {10.7899, 30.982699999999994`}, {
                    36.7689, 53.6547}, {36.7969, 61.244699999999995`}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5499, 30.980699999999995`}, {
                    36.7969, 0.7526999999999973}, {36.7969, 
                    8.209699999999994}, {10.7899, 30.982699999999994`}, {
                    36.7689, 53.6547}, {36.7969, 61.244699999999995`}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ - 20, {
                    1, 102 - -20 + 1}])}], 
                    Pane[
                    Row[{"showing ", 1, "\[Dash]", 20, " of ", 
                    Style[
                    102, FontColor -> GrayLevel[0], FontWeight -> "Medium"]}, 
                    BaseStyle -> {
                    FontSize -> 8., FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]}], 150, ContentPadding -> False, 
                    Alignment -> {Center, Center}], 
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.3]]], 
                    GrayLevel[0.3], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5778000000000001, 
                    53.654399999999995`}, {26.5568, 30.982399999999995`}, {
                    0.5498000000000001, 8.209399999999995}, {
                    0.5498000000000001, 0.7523999999999944}, {
                    36.796800000000005`, 30.980399999999992`}, {
                    0.5498000000000001, 61.2454}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5778000000000001, 
                    53.654399999999995`}, {26.5568, 30.982399999999995`}, {
                    0.5498000000000001, 8.209399999999995}, {
                    0.5498000000000001, 0.7523999999999944}, {
                    36.796800000000005`, 30.980399999999992`}, {
                    0.5498000000000001, 61.2454}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ + 20, {
                    1, 102 - 20 + 1}])}], 
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.5]]], 
                    GrayLevel[0.5], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    36.571, 1.031}, {42.440999999999995`, 1.031}, {
                    42.440999999999995`, 60.967}, {36.571, 60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5598000000000001, 
                    53.788500000000006`}, {26.5668, 31.015500000000007`}, {
                    0.5878000000000001, 8.343500000000006}, {
                    0.5598000000000001, 0.7525000000000048}, {36.8068, 
                    31.017500000000005`}, {0.5598000000000001, 
                    61.24450000000001}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    36.571, 1.031}, {42.440999999999995`, 1.031}, {
                    42.440999999999995`, 60.967}, {36.571, 60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5598000000000001, 
                    53.788500000000006`}, {26.5668, 31.015500000000007`}, {
                    0.5878000000000001, 8.343500000000006}, {
                    0.5598000000000001, 0.7525000000000048}, {36.8068, 
                    31.017500000000005`}, {0.5598000000000001, 
                    61.24450000000001}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ + 
                    102 20, {1, 102 - 20 + 1}])}]}, "   "]]], Background -> 
                    GrayLevel[0.98], Alignment -> {Left, Top}, 
                    BaseStyle -> {ContextMenu -> {
                    MenuItem["Hide", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1444115123},
                     1, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 10 rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1444115123},
                     10, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 30 rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1444115123},
                     30, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 100 rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1444115123},
                     100, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show all", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1444115123},
                     100000000, {}]], MenuEvaluator -> Automatic]}}], 
                   SpanFromLeft}}, BaseStyle -> {ContextMenu -> {
                    MenuItem["Copy position to clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Copy data to clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Delimiter, 
                    MenuItem["Paste position in new cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Paste data in new cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic]}, FontFamily -> "Verdana", 
                   FontSize -> 12}, Alignment -> Left, RowMinHeight -> 1.5, 
                 Dividers -> All, FrameStyle -> GrayLevel[0.85], 
                 BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
                LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
                False, ShowAutoStyles -> False]], 
             TypeSystem`NestedGrid`PackagePrivate`initialQ = True, 
             TypeSystem`NestedGrid`PackagePrivate`self = $Failed}, 
            Dynamic[
             TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
             TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
                Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
                
                Module[{
                 TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
                  TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
                  TypeSystem`NestedGrid`PackagePrivate`LookupCacheValue[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$["Data"]]}, 
                 TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = 
                  If[TypeSystem`NestedGrid`PackagePrivate`tmpData$ === 
                    TypeSystem`NestedGrid`PackagePrivate`$NotCached, 
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                    TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1444115123][
                    TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
                   Not[
                    FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
                   TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
                   TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
              TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
              TypeSystem`NestedGrid`PackagePrivate`$pos$$; If[
                FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
                TypeSystem`SparseGrid[
                 TypeSystem`H["(data no longer present)"]], 
                If[GeneralUtilities`$DebugMode, 
                 Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
                   TypeSystem`NestedGrid`PackagePrivate`formatState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$]}], 
                 TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
             TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$pos$$}],
             DynamicModuleValues :> {}], 
          TypeSystem`NestedGrid`PackagePrivate`$posCell$$, 
          TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
            TypeSystem`NestedGrid`PackagePrivate`alignBar[
            TypeSystem`NestedGrid`PackagePrivate`$state$$][
             TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
              TypeSystem`PackageScope`Pathbar[
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
               TypeSystem`NestedGrid`PackagePrivate`updateState[
               TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1444115123]]]], 
            TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}],
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Framed[
            Dynamic[
             Replace[
              MouseAnnotation[Null], {
              TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1444115123][
                Null] -> "", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1444115123][
                 Pattern[TypeSystem`NestedGrid`PackagePrivate`path, 
                  Blank[]]] :> (
                TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
                 TypeSystem`NestedGrid`PackagePrivate`path; 
                TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
                 TypeSystem`NestedGrid`PackagePrivate`path, 
                  TypeSystem`NestedGrid`PackagePrivate`makePathElements]), 
               Null :> Spacer[10], Blank[] :> Spacer[10]}], 
             TrackedSymbols :> {}], FrameStyle -> None, ImageMargins -> 0, 
            FrameMargins -> 0, Alignment -> Top, 
            ImageSize -> {Automatic, 14}]}, 
         DynamicBox[
          ToBoxes[
           Column[
            If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, {
              TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
               TypeSystem`NestedGrid`PackagePrivate`$state$$, 
               TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
              TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
               TypeSystem`NestedGrid`PackagePrivate`alignBar[
               TypeSystem`NestedGrid`PackagePrivate`$state$$][
               TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}, {
             TypeSystem`NestedGrid`PackagePrivate`$topBar$$, 
              TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
               TypeSystem`NestedGrid`PackagePrivate`$state$$, 
               TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
              TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
               TypeSystem`NestedGrid`PackagePrivate`alignBar[
               TypeSystem`NestedGrid`PackagePrivate`$state$$][
               TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}], 
            Spacings -> 
            If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, 
              0, {{}, {0, 0.05, 0}}]], StandardForm], 
          ImageSizeCache -> {254., {279., 285.}}, 
          TrackedSymbols :> {
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
            TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
         BaseStyle -> {LineBreakWithin -> False}, Deinitialization :> 
         TypeSystem`NestedGrid`PackagePrivate`deleteState[
          TypeSystem`NestedGrid`PackagePrivate`$state$$], 
         DynamicModuleValues :> {}, Initialization :> 
         Block[{$ContextPath = $ContextPath}, 
           Needs["TypeSystem`"]]], Deploy, DefaultBaseStyle -> "Deploy"]},
      "CopyTag",
      DisplayFunction->(#& ),
      InterpretationFunction->("Dataset[<>]"& )], 
     GraphicsBox[{{{}, {{{}, {}, 
          {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
           0.009166666666666668], AbsoluteThickness[1.6], 
           LineBox[CompressedData["
1:eJx91ntIU2EUAPDrEBMVM5G01NGUVDJfpPkI3dnUq1tLy0fYtDVN94ekluEr
KhcWZVBCFgk9zMdaSNiwEBtkZhGKTijnq1EyJkqlsYiiNKRv/tU/51y4XH7w
cc93z/nu9x1RSVVOmYDjuHF2O552fRBfIFyWcBtXAqybZ3EP5cPdN9HHUHO7
wXfuF+Fs0GhUxai1maAs3VyJez8YZQvXUXNJ8GB7lRG3AsY6GpyUmLXpbD5C
Z9ScHxu/xQV3PmSVXNyEOwwE4U/ccfMw0+XhT7moZSKAsvVMtBC3DGpa/cIo
r5tvRlDm+5ciKZ9K3huDWitj9SjcQ3mqXhaLmpPDwzsecai1cuhMn5ZSFoTH
85TnJmwyyt5NrgrKffeijlNuq7xRRllZajtNued7SA3l1z/TalHDQbj01akO
9VAOhMb8rUfN5cHkgV3dqDfyfV9H2eXCTj1qFi9nQP4INRcL74LEL1Gz91Us
NQ1RdptJHcZ9iNWrcRS3HKRq0xhlQ/XILOVWP8UHysrSNQtqLg2ejVR/wp3F
6r08jzsPbDp3O2oWr/+HyK2QsGfEeXfKLcMfPSjPZzd74uZhsP29N2ouke1H
y764I1k++EDULJ5d/2UHZZVRF0w5NEYdgprNx65/G4qaree6QXEeanbenhO/
yMftCpnWYcISth/OFlCO6Ht1hLJUrSvC7QPiuB7CMnZeVlegZvvNgNBkQM3y
WdNqfkrZP2rlOWWbzpJahJqHQOUCbs4Lgi0rabhd2XmwhlsrAcufrbFHUTv+
l/I4ynz/ZBJqFk+qthJOYd8zvg+3K4zWThNOYf3CiWTcPtAsOUlYBg2fe6+o
UCew9e57lbJGs3oLNVsvIkNQG+XeDBNuVs/GcjNu1u/FN1vj6zCzfIkMi4Sl
bLwpEbcPLK1N4dYq2HyLkyjPTQQvouYCYJtzCOFc+HY2Y6ADNQe/c9tXcSc4
+u3VTtRe4FXgJOgiHH5ZgFvr6GdVj1Gzel67bTzc/Z//ARzgftY=
            "]]}}, 
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6]}, {
          {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
           0.009166666666666668], AbsoluteThickness[1.6]}, {}}, {
          {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
           0.009166666666666668], AbsoluteThickness[
           1.6]}, {}}}, {{}, {}}}, {{}, {
         {Opacity[0], PointBox[CompressedData["
1:eJxV1GtIk1EYB/DXISYqZhJpeaEpqWTeSPOG7WzqdLa0vIDNuabpPkhqGTqV
yoVF2YeELBC6mNpaSNiwEBMyswjFNijnZY2SMVEqjUUUpSEd+/Cev4OX8eN5
nvM+z9nZEZbX5lcKOI7T0Gfj22kIkRYHL4u5/58ksm6ZYx4tIrdfxx5n8X3E
z/oLnEc0GlUZb102UVRsrWE+RIZlC9dYfgq5t6t2mFlOJrubXBR8fiZdL9iV
N+dP49vcmItIbvnFLcwRRBD52JNZSmZ7vQLQynZzINreHBvMLCP1Hf4R6HXL
jSi0dHApGn067UAc61dG5ynZj55ulMWz/Bzy4JZXAovnkJ7MGQlaEJkoRVvN
Dhnat9Vdjh64E3MC3VlzvRKtqHCcQfd9D6tHv/qZ0cCbHCGXvrpoeY/mk/C4
v42s/0IydXjv/c3939Wj3S7sMWB9/lDOQ1YfT96FiF5gfvVS6yjaYzZ9jPko
na9lAuMStWkSbawbn0N3+Ms/bJ5/zcben0Gejtd9Ys6l8y/P43wOvacT6wd/
CD1KwN5R5z3R7WMfvdDzeW3ezFIy0vXelzeXTM/Tsh9zNO1HGoT1TsOX3WjV
sD4UHR6nDsP1nIY34SWw39oRUSGLJ5FzoudFzO4k2z4GFtPzOFeMjhp4eQwt
UeuVzNuJKKEPLKP/z7pq3vT8DAWbjNhvfYflCTogZuUZ2qG3pSthv4IUC8yc
Dwm1rWQooX+reY1ZJya2PzviSzf9PlUJaOngVEop1EvUdvBB+r63qRifaJhJ
xbi9+WRaKczfJj4FlpGmz/1XVLDf2hG/q2iNZvWmCvZHaAzpRPdnmZjpvC1V
FmZ6/yW22RO10J/QuAiW0LgpWQv9La1NM+vkdP2yFLTVHLrI8gPJTtcwcAH5
djZrqJs3R34XdK12wzz0/l7tgX59il0EveDIywJm3cZ9q3rUC/P+A/H5v/o=

           "]]}, {
          {Opacity[0]}, {}}, {
          {Opacity[0]}, {}}}, {{}, {{}, {}}}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{False, False},
      AxesLabel->{None, None},
      AxesOrigin->{3.774005809083*^9, 0},
      DisplayFunction->Identity,
      Frame->{{True, True}, {True, True}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->FrontEndValueCache[{{Automatic, Automatic}, {
          Charting`DateTicksFunction[
          Automatic, Ticks -> Automatic, DateTicksFormat -> {Automatic}], 
          Charting`ScaledFrameTicks[
           Charting`DateTicksFunction[
           Automatic, Ticks -> Automatic, "TickLabels" -> None, 
            DateTicksFormat -> {Automatic}][
            SlotSequence[1]], {Identity, Identity}]& }}, {{
         Automatic, Automatic}, {{{3.7740024*^9, 
            FormBox[
             TagBox[
              GridBox[{{
                 StyleBox["\"14:00\"", 
                  Directive[], {}, StripOnInput -> False]}}, 
               GridBoxAlignment -> {"Columns" -> {{Center}}}, 
               DefaultBaseStyle -> "Column", 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
              "Column"], TraditionalForm], {0.013888888888888888`, 0.}, 
            Directive[]}, {3.7740096*^9, 
            FormBox[
             TagBox[
              GridBox[{{
                 StyleBox["\"16:00\"", 
                  Directive[], {}, StripOnInput -> False]}}, 
               GridBoxAlignment -> {"Columns" -> {{Center}}}, 
               DefaultBaseStyle -> "Column", 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
              "Column"], TraditionalForm], {0.013888888888888888`, 0.}, 
            Directive[]}, {3.7740168*^9, 
            FormBox[
             TagBox[
              GridBox[{{
                 StyleBox["\"18:00\"", 
                  Directive[], {}, StripOnInput -> False]}}, 
               GridBoxAlignment -> {"Columns" -> {{Center}}}, 
               DefaultBaseStyle -> "Column", 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
              "Column"], TraditionalForm], {0.013888888888888888`, 0.}, 
            Directive[]}, {3.774024*^9, 
            FormBox[
             TagBox[
              GridBox[{{
                 StyleBox["\"20:00\"", 
                  Directive[], {}, StripOnInput -> False]}}, 
               GridBoxAlignment -> {"Columns" -> {{Center}}}, 
               DefaultBaseStyle -> "Column", 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
              "Column"], TraditionalForm], {0.013888888888888888`, 0.}, 
            Directive[]}, {3.7740312*^9, 
            FormBox[
             TagBox[
              GridBox[{{
                 StyleBox["\"22:00\"", 
                  Directive[], {}, StripOnInput -> False]}}, 
               GridBoxAlignment -> {"Columns" -> {{Center}}}, 
               DefaultBaseStyle -> "Column", 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
              "Column"], TraditionalForm], {0.013888888888888888`, 0.}, 
            Directive[]}}, {{3.7740024*^9, 
            FormBox[
             TagBox[
              GridBox[{{
                 StyleBox[
                  TemplateBox[{0., 0.}, "Spacer2"], 
                  Directive[], {}, StripOnInput -> False]}}, 
               GridBoxAlignment -> {"Columns" -> {{Center}}}, 
               DefaultBaseStyle -> "Column", 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
              "Column"], TraditionalForm], {0.013888888888888888`, 0.}, 
            Directive[]}, {3.7740096*^9, 
            FormBox[
             TagBox[
              GridBox[{{
                 StyleBox[
                  TemplateBox[{0., 0.}, "Spacer2"], 
                  Directive[], {}, StripOnInput -> False]}}, 
               GridBoxAlignment -> {"Columns" -> {{Center}}}, 
               DefaultBaseStyle -> "Column", 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
              "Column"], TraditionalForm], {0.013888888888888888`, 0.}, 
            Directive[]}, {3.7740168*^9, 
            FormBox[
             TagBox[
              GridBox[{{
                 StyleBox[
                  TemplateBox[{0., 0.}, "Spacer2"], 
                  Directive[], {}, StripOnInput -> False]}}, 
               GridBoxAlignment -> {"Columns" -> {{Center}}}, 
               DefaultBaseStyle -> "Column", 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
              "Column"], TraditionalForm], {0.013888888888888888`, 0.}, 
            Directive[]}, {3.774024*^9, 
            FormBox[
             TagBox[
              GridBox[{{
                 StyleBox[
                  TemplateBox[{0., 0.}, "Spacer2"], 
                  Directive[], {}, StripOnInput -> False]}}, 
               GridBoxAlignment -> {"Columns" -> {{Center}}}, 
               DefaultBaseStyle -> "Column", 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
              "Column"], TraditionalForm], {0.013888888888888888`, 0.}, 
            Directive[]}, {3.7740312*^9, 
            FormBox[
             TagBox[
              GridBox[{{
                 StyleBox[
                  TemplateBox[{0., 0.}, "Spacer2"], 
                  Directive[], {}, StripOnInput -> False]}}, 
               GridBoxAlignment -> {"Columns" -> {{Center}}}, 
               DefaultBaseStyle -> "Column", 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
              "Column"], TraditionalForm], {0.013888888888888888`, 0.}, 
            Directive[]}}}}],
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      Method->{
       "NoShowPlotTheme" -> Automatic, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& )}},
      PlotRange->{{3.774005809083*^9, 3.7740320229934998`*^9}, {0, 87.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.02], 
         Scaled[0.08090169943749476]}},
      Ticks->{{}, Automatic}]}
   },
   AutoDelete->False,
   GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{3.7741878418149643`*^9},
 CellLabel->
  "Out[670]=",ExpressionUUID->"dd4b958a-a266-4a87-8d7d-5127b201eb83"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Grid", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Column", "[", 
       RowBox[{"{", 
        RowBox[{"ag", ",", "dlsp"}], "}"}], "]"}], ",", "readingsDS"}], "}"}],
     "}"}], ",", 
   RowBox[{"Frame", "\[Rule]", "All"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7741877958849115`*^9, 3.7741878012009106`*^9}},
 CellLabel->
  "In[669]:=",ExpressionUUID->"05f6cc10-7ffe-43ba-924e-6711533c37d1"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TagBox[GridBox[{
        {
         GraphicsBox[{
           {GrayLevel[1], EdgeForm[None], FilledCurveBox[{Line[CompressedData["
1:eJxd1V1I02EUx/EtrC56o4xCsWykhiCRWWImncywF1wTixokKYbIkmgrbxzJ
oiKvrLQWxAoiltnLCiU1QzxgTaMpvkS1icl05TZ1+yNlGMXK6Py66IHDuTs3
H/g+mpJTBaXzVCpV6dz82X+flx/m6QPmlkn+Oj8/zl8xzBtHbM2PHkxxpeZO
ytJeNye0hZP8lhBfTY1vTFr8jmPXJbsOZYQ5ZG4y/9g6wPnRdm3mYJhn9Lse
e2694XMq8+afeQpX1KzK8TR18tOs22fWNih8MubCzmB5MzfUJUZ2+xR+viKi
Dpus3K49vGxLROGpL9VdbcZ7FOeMGPtnFS4/kmUr7nxBXWWz1+PfKrw6Umt3
6J1kPF9/ZU/N3L3WWuVmZi/FHqiavrxB4SWF7gyLZZCmE1sthXfDXKb2adS6
92SctPSkR0LcH7tA833hEFktv5683B5ia1qvwV7/kZyOHlv30SmOrvxW7Ljm
pVd9ppGEokn2DNTF7MsZo2NNrmdDuRO8PrBXZ/L6qLo1WRu1MsjuRWM3Lho+
U2dHWsOHbj+fWL6mb2Z4nAyjLUX24+N8NjvQqN0WoHST9eBg4BOnlFzSpVQF
Kff1ph1evY87XPGn99+foKjs9tSS5lE4EFzEgeAiDgQXcSC4iAPBRRwILuJA
cBEHgos4EFzEgeAiDgQXcSC4iAPBRRwILuJAcBEHgos4EFzEgeAiDgQXcSC4
iAPBRRwILuJAcBEHgos4EFzEgeAiDgQXcSC4iAPBRRwILuJAcBEHgos4EFzE
geAiDv9cxIHhIg4MF3FguIgDw0UcGC7iwHARB4aLODBcxIHhIg4MF3FguIgD
w0UcGC7iwHARB4YLOgUXdAou6BRc0Cm4oFNwQafggk7BBZ2CCzoFF3QKLugU
XNApuKBTcEGn4IJOwQWdggs6BRd0Ci7oFFzQKbigU3BBp+CCTsEFnYILOgWX
//+P34UFays=
               "]]}]}, GraphicsGroupBox[
            {GrayLevel[0.8], EdgeForm[{GrayLevel[0.6], Thickness[0.01]}], 
             FilledCurveBox[{{Line[CompressedData["
1:eJxd1V1I02EUx/EtrC56o4xCsWykhiCRWWImncywF1wTixokKYbIkmgrbxzJ
oiKvrLQWxAoiltnLCiU1QzxgTaMpvkS1icl05TZ1+yNlGMXK6Py66IHDuTs3
H/g+mpJTBaXzVCpV6dz82X+flx/m6QPmlkn+Oj8/zl8xzBtHbM2PHkxxpeZO
ytJeNye0hZP8lhBfTY1vTFr8jmPXJbsOZYQ5ZG4y/9g6wPnRdm3mYJhn9Lse
e2694XMq8+afeQpX1KzK8TR18tOs22fWNih8MubCzmB5MzfUJUZ2+xR+viKi
Dpus3K49vGxLROGpL9VdbcZ7FOeMGPtnFS4/kmUr7nxBXWWz1+PfKrw6Umt3
6J1kPF9/ZU/N3L3WWuVmZi/FHqiavrxB4SWF7gyLZZCmE1sthXfDXKb2adS6
92SctPSkR0LcH7tA833hEFktv5683B5ia1qvwV7/kZyOHlv30SmOrvxW7Ljm
pVd9ppGEokn2DNTF7MsZo2NNrmdDuRO8PrBXZ/L6qLo1WRu1MsjuRWM3Lho+
U2dHWsOHbj+fWL6mb2Z4nAyjLUX24+N8NjvQqN0WoHST9eBg4BOnlFzSpVQF
Kff1ph1evY87XPGn99+foKjs9tSS5lE4EFzEgeAiDgQXcSC4iAPBRRwILuJA
cBEHgos4EFzEgeAiDgQXcSC4iAPBRRwILuJAcBEHgos4EFzEgeAiDgQXcSC4
iAPBRRwILuJAcBEHgos4EFzEgeAiDgQXcSC4iAPBRRwILuJAcBEHgos4EFzE
geAiDv9cxIHhIg4MF3FguIgDw0UcGC7iwHARB4aLODBcxIHhIg4MF3FguIgD
w0UcGC7iwHARB4YLOgUXdAou6BRc0Cm4oFNwQafggk7BBZ2CCzoFF3QKLugU
XNApuKBTcEGn4IJOwQWdggs6BRd0Ci7oFFzQKbigU3BBp+CCTsEFnYILOgWX
//+P34UFays=
                 "]]}, {Line[CompressedData["
1:eJyF1V1I02EUx/EpoxfEAkOSwsqQhGFemCAGdgTT6EbQihQkwbfI3tAi8UIv
mk5XYpmVNyVpUmkvWIlMnR0MUckwNE1xS12r2drc/z+ziErK8Px24U0XD4dz
ca4+8H3Css+m5flrNJrjy+/f3F7hSjVts/Hi3a6lzffnefXefaOsdrJomm8/
sPWlPPSw9edWKjVOcWLTswTjVYX1xvjMtIp3PGJrcys6lc8fGX6SXzDKkVEN
9UmlKq/VR3/lktc8djGgaOGFynme8Pp5vz4eu/I0rF1RuSu5Wh10dfCgY0du
xkYvz8RmVcct3OSgMkPCy1Avm3JyehT1Hu30/oiY3eJla/CpY3ONZsq07NZ2
rPFyfnfl45iJfkoprIpJt6mcEd2zKzv5DRWnlpe4W1UeSHx/6NertxSeXjvc
kqPy5RDH4f7pCYr/Y4ieDFD5liey8tyUhXpHh3vuHFB4dp/d9Ltzhup0xdbv
Rz2s1yVtMpttFHS93958cJ4bNhhiay7ZKWR9ldId6uZG/5o9Tfs/kfZbs+bk
+Bfu3euXG+d00LhOO7RU6OShqEBL64XPtC64IN+yOMd6vSkwz+Ukbfsje3mW
g9syrp1QklzL9y0Ddc8/MoVHjLjK3VR5xnjatPABDgQXcSC4iAPBRRwILuJA
cBEH8rmsOBBcxIHgIg4EF3EguIgDwUUcCC7iQHARB4KLOBBcxIHgIg4EF3Eg
uIgDwUUcCC7iQHARB4KLOJDPZcWB4CIOBBdxILiIA8FFHAgu4kBwEQeCizgQ
XMSB4CIOBBdxILiIg89FHBgu4sBwEQeGizgwXMSB4SIODBdxYLiIA8NFHBgu
4sBwEQeGizgwXMSB4SIODBdxYLis6hYc0C04oFtwQLfggG7BgX0u0im4oFNw
Qafggk7BBZ2CCzoFF3QKLugUXNApuKBTcEGn4IJOwQWdggs6BRd0Ci7oFFzQ
KZ+LdAou6BRc/vef/AWs0Kog
                 "]]}}]}], {}, 
           {GrayLevel[0.5], Thickness[0.008], 
            {GrayLevel[0.5], Thickness[0.004], CapForm["Butt"], 
             
             StyleBox[{{
                LineBox[{{{-0.5000000000000004, -0.8660254037844385}, 
                   Scaled[{0.030000000000000072`, 
                    0.05569219381653051}, {-0.5000000000000004, \
-0.8660254037844385}]}, {{-1., 1.2246467991473532`*^-16}, 
                   Scaled[{0.06, 0.}, {-1., 
                    1.2246467991473532`*^-16}]}, {{-0.4999999999999998, 
                   0.8660254037844387}, 
                   Scaled[{
                    0.029999999999999992`, -0.055692193816530566`}, \
{-0.4999999999999998, 0.8660254037844387}]}, {{0.5000000000000003, 
                   0.8660254037844385}, 
                   Scaled[{-0.03000000000000002, -0.05569219381653053}, {
                    0.5000000000000003, 0.8660254037844385}]}, {{1., 0.}, 
                   Scaled[{-0.06, 0.}, {1., 0.}]}, {{
                   0.5000000000000003, -0.8660254037844385}, 
                   Scaled[{-0.030000000000000006`, 0.05569219381653054}, {
                    0.5000000000000003, -0.8660254037844385}]}}], 
                LineBox[{{{-0.7071067811865479, -0.7071067811865471}, 
                   Scaled[{0.028284271247461915`, 
                    0.03031499055704094}, {-0.7071067811865479, \
-0.7071067811865471}]}, {{-0.8660254037844388, -0.4999999999999997}, 
                   Scaled[{0.03464101615137756, 
                    0.021435935394489788`}, {-0.8660254037844388, \
-0.4999999999999997}]}, {{-0.9659258262890684, -0.25881904510252035`}, 
                   Scaled[{0.038637033051562734`, 
                    0.011096056659362344`}, {-0.9659258262890684, \
-0.25881904510252035`}]}, {{-0.9659258262890682, 0.258819045102521}, 
                   Scaled[{
                    0.03863703305156273, -0.011096056659362374`}, \
{-0.9659258262890682, 0.258819045102521}]}, {{-0.8660254037844385, 
                   0.5000000000000003}, 
                   Scaled[{
                    0.03464101615137754, -0.02143593539448983}, \
{-0.8660254037844385, 0.5000000000000003}]}, {{-0.7071067811865475, 
                   0.7071067811865476}, 
                   Scaled[{
                    0.028284271247461898`, -0.030314990557040962`}, \
{-0.7071067811865475, 0.7071067811865476}]}, {{-0.2588190451025204, 
                   0.9659258262890684}, 
                   Scaled[{
                    0.010352761804100816`, -0.041411047216403325`}, \
{-0.2588190451025204, 0.9659258262890684}]}, {{6.123233995736766*^-17, 1.}, 
                   Scaled[{0., -0.04287187078897963}, {6.123233995736766*^-17,
                     1.}]}, {{0.25881904510252096`, 0.9659258262890682}, 
                   Scaled[{-0.010352761804100838`, -0.04141104721640332}, {
                    0.25881904510252096`, 0.9659258262890682}]}, {{
                   0.7071067811865476, 0.7071067811865476}, 
                   Scaled[{-0.028284271247461905`, -0.030314990557040962`}, {
                    0.7071067811865476, 0.7071067811865476}]}, {{
                   0.8660254037844387, 0.49999999999999983`}, 
                   Scaled[{-0.034641016151377546`, -0.02143593539448981}, {
                    0.8660254037844387, 0.49999999999999983`}]}, {{
                   0.9659258262890683, 0.25881904510252046`}, 
                   Scaled[{-0.038637033051562734`, -0.01109605665936235}, {
                    0.9659258262890683, 0.25881904510252046`}]}, {{
                   0.9659258262890683, -0.25881904510252046`}, 
                   Scaled[{-0.038637033051562734`, 0.011096056659362358`}, {
                    0.9659258262890683, -0.25881904510252046`}]}, {{
                   0.8660254037844385, -0.5000000000000002}, 
                   Scaled[{-0.03464101615137754, 0.021435935394489836`}, {
                    0.8660254037844385, -0.5000000000000002}]}, {{
                   0.7071067811865476, -0.7071067811865476}, 
                   Scaled[{-0.028284271247461894`, 0.030314990557040965`}, {
                    0.7071067811865476, -0.7071067811865476}]}}]}, 
               {GrayLevel[0.25], 
                
                StyleBox[{{{
                    InsetBox["0", Offset[{1.5000000000000036, 2.5980762113533142},
                     Scaled[{0.030000000000000072, 0.05569219381653051}, \
{-0.5000000000000004, -0.8660254037844385}]], {-0.5773502691896275, -1.}, 
                    Automatic, {1, 0}], 
                    InsetBox["20", Offset[{3., 0.}, 
                    Scaled[{0.06, 0.}, {-1., 1.2246467991473532*^-16}]], {-1, 0.},
                     Automatic, {1, 0}], 
                    InsetBox["40", Offset[{1.4999999999999996, -2.598076211353317},
                     Scaled[{0.029999999999999992, -0.055692193816530566}, \
{-0.4999999999999998, 0.8660254037844387}]], {-0.5773502691896255, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox["60", Offset[{-1.5000000000000009, -2.5980762113533156},
                     Scaled[{-0.03000000000000002, -0.05569219381653053}, \
{0.5000000000000003, 0.8660254037844385}]], {0.5773502691896262, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox["80", Offset[{-3., 0.}, 
                    Scaled[{-0.06, 0.}, {1., 0.}]], {1, 0.}, Automatic, {1, 
                    0}], InsetBox["100", Offset[{-1.5000000000000004, 2.598076211353316},
                     Scaled[{-0.030000000000000006, 0.05569219381653054}, \
{0.5000000000000003, -0.8660254037844385}]], {0.577350269189626, -1.}, 
                    Automatic, {1, 
                    0}]}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}}}, {}},
                 StripOnInput->False,
                 FontFamily->"Helvetica",
                 FontSize->Scaled[0.07]]}},
              StripOnInput->False,
              Antialiasing->True]}}, {}, {}, 
           GeometricTransformationBox[GeometricTransformationBox[
             TagBox[
              TooltipBox[{
                {RGBColor[0.73, 0.24506099999999992`, 0.1971], 
                 PolygonBox[{{0., -0.054700000000000006`}, {1, -0.025}, {
                   1, 0.025}, {0., 0.054700000000000006`}}]}, 
                {RGBColor[0.73, 0.24506099999999992`, 0.1971], 
                 DiskBox[{0, 0}, 0.07]}, 
                {GrayLevel[1], DiskBox[{0, 0}, 0.035]}},
               "87"],
              Annotation[#, 87, "Tooltip"]& ], {{{0.8402223838474815, 
              0.3225311545907705}, {-0.3225311545907705, 
              0.8402223838474815}}, {0., 0.}}], {{{1, 0}, {0, 1}}, 
             Center}], {}},
          AlignmentPoint->Center,
          AspectRatio->Automatic,
          Axes->False,
          AxesLabel->None,
          AxesOrigin->Automatic,
          AxesStyle->{},
          Background->None,
          BaseStyle->{},
          BaselinePosition->Automatic,
          ColorOutput->Automatic,
          ContentSelectable->Automatic,
          CoordinatesToolOptions:>Automatic,
          DisplayFunction->Identity,
          Epilog->{},
          FormatType->TraditionalForm,
          Frame->False,
          FrameLabel->None,
          FrameStyle->{},
          FrameTicks->Automatic,
          FrameTicksStyle->{},
          GridLines->None,
          GridLinesStyle->{},
          ImageMargins->0.,
          ImagePadding->All,
          ImageSize->Small,
          ImageSizeRaw->Automatic,
          LabelStyle->Directive[
            GrayLevel[0.25], FontSize -> Scaled[0.07], FontFamily -> 
            "Helvetica"],
          Method->Automatic,
          PlotLabel->None,
          PlotRange->All,
          PlotRangeClipping->False,
          PlotRangePadding->Automatic,
          PlotRegion->Automatic,
          PreserveImageOptions->Automatic,
          Prolog->{},
          RotateLabel->True,
          Ticks->Automatic,
          TicksStyle->{}]},
        {
         GraphicsBox[{{{}, {{{}, {}, 
              {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
               0.009166666666666668], AbsoluteThickness[1.6], 
               LineBox[CompressedData["
1:eJx91ntIU2EUAPDrEBMVM5G01NGUVDJfpPkI3dnUq1tLy0fYtDVN94ekluEr
KhcWZVBCFgk9zMdaSNiwEBtkZhGKTijnq1EyJkqlsYiiNKRv/tU/51y4XH7w
cc93z/nu9x1RSVVOmYDjuHF2O552fRBfIFyWcBtXAqybZ3EP5cPdN9HHUHO7
wXfuF+Fs0GhUxai1maAs3VyJez8YZQvXUXNJ8GB7lRG3AsY6GpyUmLXpbD5C
Z9ScHxu/xQV3PmSVXNyEOwwE4U/ccfMw0+XhT7moZSKAsvVMtBC3DGpa/cIo
r5tvRlDm+5ciKZ9K3huDWitj9SjcQ3mqXhaLmpPDwzsecai1cuhMn5ZSFoTH
85TnJmwyyt5NrgrKffeijlNuq7xRRllZajtNued7SA3l1z/TalHDQbj01akO
9VAOhMb8rUfN5cHkgV3dqDfyfV9H2eXCTj1qFi9nQP4INRcL74LEL1Gz91Us
NQ1RdptJHcZ9iNWrcRS3HKRq0xhlQ/XILOVWP8UHysrSNQtqLg2ejVR/wp3F
6r08jzsPbDp3O2oWr/+HyK2QsGfEeXfKLcMfPSjPZzd74uZhsP29N2ouke1H
y764I1k++EDULJ5d/2UHZZVRF0w5NEYdgprNx65/G4qaree6QXEeanbenhO/
yMftCpnWYcISth/OFlCO6Ht1hLJUrSvC7QPiuB7CMnZeVlegZvvNgNBkQM3y
WdNqfkrZP2rlOWWbzpJahJqHQOUCbs4Lgi0rabhd2XmwhlsrAcufrbFHUTv+
l/I4ynz/ZBJqFk+qthJOYd8zvg+3K4zWThNOYf3CiWTcPtAsOUlYBg2fe6+o
UCew9e57lbJGs3oLNVsvIkNQG+XeDBNuVs/GcjNu1u/FN1vj6zCzfIkMi4Sl
bLwpEbcPLK1N4dYq2HyLkyjPTQQvouYCYJtzCOFc+HY2Y6ADNQe/c9tXcSc4
+u3VTtRe4FXgJOgiHH5ZgFvr6GdVj1Gzel67bTzc/Z//ARzgftY=
                "]]}}, 
             {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
              0.009166666666666668], AbsoluteThickness[1.6]}, {
              {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
               0.009166666666666668], AbsoluteThickness[1.6]}, {}}, {
              {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
               0.009166666666666668], AbsoluteThickness[
               1.6]}, {}}}, {{}, {}}}, {{}, {
             {Opacity[0], PointBox[CompressedData["
1:eJxV1GtIk1EYB/DXISYqZhJpeaEpqWTeSPOG7WzqdLa0vIDNuabpPkhqGTqV
yoVF2YeELBC6mNpaSNiwEBMyswjFNijnZY2SMVEqjUUUpSEd+/Cev4OX8eN5
nvM+z9nZEZbX5lcKOI7T0Gfj22kIkRYHL4u5/58ksm6ZYx4tIrdfxx5n8X3E
z/oLnEc0GlUZb102UVRsrWE+RIZlC9dYfgq5t6t2mFlOJrubXBR8fiZdL9iV
N+dP49vcmItIbvnFLcwRRBD52JNZSmZ7vQLQynZzINreHBvMLCP1Hf4R6HXL
jSi0dHApGn067UAc61dG5ynZj55ulMWz/Bzy4JZXAovnkJ7MGQlaEJkoRVvN
Dhnat9Vdjh64E3MC3VlzvRKtqHCcQfd9D6tHv/qZ0cCbHCGXvrpoeY/mk/C4
v42s/0IydXjv/c3939Wj3S7sMWB9/lDOQ1YfT96FiF5gfvVS6yjaYzZ9jPko
na9lAuMStWkSbawbn0N3+Ms/bJ5/zcben0Gejtd9Ys6l8y/P43wOvacT6wd/
CD1KwN5R5z3R7WMfvdDzeW3ezFIy0vXelzeXTM/Tsh9zNO1HGoT1TsOX3WjV
sD4UHR6nDsP1nIY34SWw39oRUSGLJ5FzoudFzO4k2z4GFtPzOFeMjhp4eQwt
UeuVzNuJKKEPLKP/z7pq3vT8DAWbjNhvfYflCTogZuUZ2qG3pSthv4IUC8yc
Dwm1rWQooX+reY1ZJya2PzviSzf9PlUJaOngVEop1EvUdvBB+r63qRifaJhJ
xbi9+WRaKczfJj4FlpGmz/1XVLDf2hG/q2iNZvWmCvZHaAzpRPdnmZjpvC1V
FmZ6/yW22RO10J/QuAiW0LgpWQv9La1NM+vkdP2yFLTVHLrI8gPJTtcwcAH5
djZrqJs3R34XdK12wzz0/l7tgX59il0EveDIywJm3cZ9q3rUC/P+A/H5v/o=

               "]]}, {
              {Opacity[0]}, {}}, {
              {Opacity[0]}, {}}}, {{}, {{}, {}}}}},
          AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
          Axes->{False, False},
          AxesLabel->{None, None},
          AxesOrigin->{3.774005809083*^9, 0},
          DisplayFunction->Identity,
          Frame->{{True, True}, {True, True}},
          FrameLabel->{{None, None}, {None, None}},
          FrameTicks->FrontEndValueCache[{{Automatic, Automatic}, {
              Charting`DateTicksFunction[
              Automatic, Ticks -> Automatic, DateTicksFormat -> {Automatic}], 
              Charting`ScaledFrameTicks[
               Charting`DateTicksFunction[
               Automatic, Ticks -> Automatic, "TickLabels" -> None, 
                DateTicksFormat -> {Automatic}][
                SlotSequence[1]], {Identity, Identity}]& }}, {{
             Automatic, Automatic}, {{{3.7740024*^9, 
                FormBox[
                 TagBox[
                  GridBox[{{
                    StyleBox["\"14:00\"", 
                    Directive[], {}, StripOnInput -> False]}}, 
                   GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                   DefaultBaseStyle -> "Column", 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                  "Column"], TraditionalForm], {0.013888888888888888`, 0.}, 
                Directive[]}, {3.7740096*^9, 
                FormBox[
                 TagBox[
                  GridBox[{{
                    StyleBox["\"16:00\"", 
                    Directive[], {}, StripOnInput -> False]}}, 
                   GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                   DefaultBaseStyle -> "Column", 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                  "Column"], TraditionalForm], {0.013888888888888888`, 0.}, 
                Directive[]}, {3.7740168*^9, 
                FormBox[
                 TagBox[
                  GridBox[{{
                    StyleBox["\"18:00\"", 
                    Directive[], {}, StripOnInput -> False]}}, 
                   GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                   DefaultBaseStyle -> "Column", 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                  "Column"], TraditionalForm], {0.013888888888888888`, 0.}, 
                Directive[]}, {3.774024*^9, 
                FormBox[
                 TagBox[
                  GridBox[{{
                    StyleBox["\"20:00\"", 
                    Directive[], {}, StripOnInput -> False]}}, 
                   GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                   DefaultBaseStyle -> "Column", 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                  "Column"], TraditionalForm], {0.013888888888888888`, 0.}, 
                Directive[]}, {3.7740312*^9, 
                FormBox[
                 TagBox[
                  GridBox[{{
                    StyleBox["\"22:00\"", 
                    Directive[], {}, StripOnInput -> False]}}, 
                   GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                   DefaultBaseStyle -> "Column", 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                  "Column"], TraditionalForm], {0.013888888888888888`, 0.}, 
                Directive[]}}, {{3.7740024*^9, 
                FormBox[
                 TagBox[
                  GridBox[{{
                    StyleBox[
                    TemplateBox[{0., 0.}, "Spacer2"], 
                    Directive[], {}, StripOnInput -> False]}}, 
                   GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                   DefaultBaseStyle -> "Column", 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                  "Column"], TraditionalForm], {0.013888888888888888`, 0.}, 
                Directive[]}, {3.7740096*^9, 
                FormBox[
                 TagBox[
                  GridBox[{{
                    StyleBox[
                    TemplateBox[{0., 0.}, "Spacer2"], 
                    Directive[], {}, StripOnInput -> False]}}, 
                   GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                   DefaultBaseStyle -> "Column", 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                  "Column"], TraditionalForm], {0.013888888888888888`, 0.}, 
                Directive[]}, {3.7740168*^9, 
                FormBox[
                 TagBox[
                  GridBox[{{
                    StyleBox[
                    TemplateBox[{0., 0.}, "Spacer2"], 
                    Directive[], {}, StripOnInput -> False]}}, 
                   GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                   DefaultBaseStyle -> "Column", 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                  "Column"], TraditionalForm], {0.013888888888888888`, 0.}, 
                Directive[]}, {3.774024*^9, 
                FormBox[
                 TagBox[
                  GridBox[{{
                    StyleBox[
                    TemplateBox[{0., 0.}, "Spacer2"], 
                    Directive[], {}, StripOnInput -> False]}}, 
                   GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                   DefaultBaseStyle -> "Column", 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                  "Column"], TraditionalForm], {0.013888888888888888`, 0.}, 
                Directive[]}, {3.7740312*^9, 
                FormBox[
                 TagBox[
                  GridBox[{{
                    StyleBox[
                    TemplateBox[{0., 0.}, "Spacer2"], 
                    Directive[], {}, StripOnInput -> False]}}, 
                   GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                   DefaultBaseStyle -> "Column", 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                  "Column"], TraditionalForm], {0.013888888888888888`, 0.}, 
                Directive[]}}}}],
          GridLines->{None, None},
          GridLinesStyle->Directive[
            GrayLevel[0.5, 0.4]],
          
          Method->{
           "NoShowPlotTheme" -> Automatic, "OptimizePlotMarkers" -> True, 
            "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                (Identity[#]& )[
                 Part[#, 1]], 
                (Identity[#]& )[
                 Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                (Identity[#]& )[
                 Part[#, 1]], 
                (Identity[#]& )[
                 Part[#, 2]]}& )}},
          PlotRange->{{3.774005809083*^9, 3.7740320229934998`*^9}, {0, 87.}},
          PlotRangeClipping->True,
          PlotRangePadding->{{
             Scaled[0.02], 
             Scaled[0.02]}, {
             Scaled[0.02], 
             Scaled[0.08090169943749476]}},
          Ticks->{{}, Automatic}]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"], 
     TemplateBox[{TagBox[
        DynamicModuleBox[{
         TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
          Data`UnorderedAssociation[
           "RowCount" -> 20, "Length" -> 102, "InitialType" -> 
            TypeSystem`Vector[
              TypeSystem`Struct[{"reading", "Timestamp"}, {
                TypeSystem`Atom[Integer], 
                TypeSystem`Atom[DateObject]}], 102], "Shape" -> 
            TypeSystem`PackageScope`HeaderShape[
              Association[{All, "reading"} -> 1, {All, "Timestamp"} -> 1], 
              TypeSystem`PackageScope`Limited[
               TypeSystem`PackageScope`ColumnShape[
                TypeSystem`PackageScope`RowShape[
                 Association[
                 "reading" -> TypeSystem`PackageScope`AtomShape[34], 
                  "Timestamp" -> TypeSystem`PackageScope`AtomShape[75]]]], 
               20, {}]], "InitialData" -> 
            TypeSystem`PackageScope`CacheHandle[1102638669], "Type" -> 
            TypeSystem`Vector[
              TypeSystem`Struct[{"reading", "Timestamp"}, {
                TypeSystem`Atom[Integer], 
                TypeSystem`Atom[DateObject]}], 102], "HandleQ" -> True, 
            "RowTarget" -> 20, "Data" -> 
            TypeSystem`PackageScope`CacheHandle[1102638669]], 
          TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
          TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 1, 
          TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
          DynamicModule[{
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
               Style[
                Grid[{{
                   Item[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"reading\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"reading\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1667506318][{All, "reading"}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1667506318][
                    GeneralUtilities`Slice[All, "reading"]], "Mouse"], 
                    Background -> GrayLevel[0.95], 
                    Alignment -> {Left, Baseline}], 
                   Item[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Timestamp\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Timestamp\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1667506318][{All, "Timestamp"}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1667506318][
                    GeneralUtilities`Slice[All, "Timestamp"]], "Mouse"], 
                    Background -> GrayLevel[0.95], 
                    Alignment -> {Left, Baseline}]}, {
                   Pane[
                    Annotation[
                    RawBoxes["87"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1667506318][
                    GeneralUtilities`Slice[1, 
                    Key["reading"]]], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                   Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    "\"Mon 5 Aug 2019 14:56:54\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1667506318][
                    GeneralUtilities`Slice[1, 
                    Key["Timestamp"]]], "Mouse"], 
                    ImageSize -> {{75, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}]}, {
                   Pane[
                    Annotation[
                    RawBoxes["84"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1667506318][
                    GeneralUtilities`Slice[2, 
                    Key["reading"]]], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                   Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    "\"Mon 5 Aug 2019 15:56:32\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1667506318][
                    GeneralUtilities`Slice[2, 
                    Key["Timestamp"]]], "Mouse"], 
                    ImageSize -> {{75, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}]}, {
                   Pane[
                    Annotation[
                    RawBoxes["80"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1667506318][
                    GeneralUtilities`Slice[3, 
                    Key["reading"]]], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                   Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    "\"Mon 5 Aug 2019 16:25:35\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1667506318][
                    GeneralUtilities`Slice[3, 
                    Key["Timestamp"]]], "Mouse"], 
                    ImageSize -> {{75, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}]}, {
                   Pane[
                    Annotation[
                    RawBoxes["80"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1667506318][
                    GeneralUtilities`Slice[4, 
                    Key["reading"]]], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                   Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    "\"Mon 5 Aug 2019 16:11:51\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1667506318][
                    GeneralUtilities`Slice[4, 
                    Key["Timestamp"]]], "Mouse"], 
                    ImageSize -> {{75, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}]}, {
                   Pane[
                    Annotation[
                    RawBoxes["76"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1667506318][
                    GeneralUtilities`Slice[5, 
                    Key["reading"]]], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                   Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    "\"Tue 6 Aug 2019 08:56:17\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1667506318][
                    GeneralUtilities`Slice[5, 
                    Key["Timestamp"]]], "Mouse"], 
                    ImageSize -> {{75, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}]}, {
                   Pane[
                    Annotation[
                    RawBoxes["75"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1667506318][
                    GeneralUtilities`Slice[6, 
                    Key["reading"]]], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                   Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    "\"Mon 5 Aug 2019 16:35:10\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1667506318][
                    GeneralUtilities`Slice[6, 
                    Key["Timestamp"]]], "Mouse"], 
                    ImageSize -> {{75, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}]}, {
                   Pane[
                    Annotation[
                    RawBoxes["75"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1667506318][
                    GeneralUtilities`Slice[7, 
                    Key["reading"]]], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                   Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    "\"Mon 5 Aug 2019 16:18:01\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1667506318][
                    GeneralUtilities`Slice[7, 
                    Key["Timestamp"]]], "Mouse"], 
                    ImageSize -> {{75, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}]}, {
                   Pane[
                    Annotation[
                    RawBoxes["75"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1667506318][
                    GeneralUtilities`Slice[8, 
                    Key["reading"]]], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                   Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    "\"Mon 5 Aug 2019 16:11:36\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1667506318][
                    GeneralUtilities`Slice[8, 
                    Key["Timestamp"]]], "Mouse"], 
                    ImageSize -> {{75, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}]}, {
                   Pane[
                    Annotation[
                    RawBoxes["70"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1667506318][
                    GeneralUtilities`Slice[9, 
                    Key["reading"]]], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                   Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    "\"Mon 5 Aug 2019 16:21:38\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1667506318][
                    GeneralUtilities`Slice[9, 
                    Key["Timestamp"]]], "Mouse"], 
                    ImageSize -> {{75, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}]}, {
                   Pane[
                    Annotation[
                    RawBoxes["65"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1667506318][
                    GeneralUtilities`Slice[10, 
                    Key["reading"]]], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                   Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    "\"Wed 7 Aug 2019 09:50:26\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1667506318][
                    GeneralUtilities`Slice[10, 
                    Key["Timestamp"]]], "Mouse"], 
                    ImageSize -> {{75, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}]}, {
                   Pane[
                    Annotation[
                    RawBoxes["65"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1667506318][
                    GeneralUtilities`Slice[11, 
                    Key["reading"]]], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                   Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    "\"Mon 5 Aug 2019 18:32:33\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1667506318][
                    GeneralUtilities`Slice[11, 
                    Key["Timestamp"]]], "Mouse"], 
                    ImageSize -> {{75, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}]}, {
                   Pane[
                    Annotation[
                    RawBoxes["65"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1667506318][
                    GeneralUtilities`Slice[12, 
                    Key["reading"]]], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                   Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    "\"Mon 5 Aug 2019 18:32:15\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1667506318][
                    GeneralUtilities`Slice[12, 
                    Key["Timestamp"]]], "Mouse"], 
                    ImageSize -> {{75, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}]}, {
                   Pane[
                    Annotation[
                    RawBoxes["65"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1667506318][
                    GeneralUtilities`Slice[13, 
                    Key["reading"]]], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                   Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    "\"Mon 5 Aug 2019 16:44:27\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1667506318][
                    GeneralUtilities`Slice[13, 
                    Key["Timestamp"]]], "Mouse"], 
                    ImageSize -> {{75, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}]}, {
                   Pane[
                    Annotation[
                    RawBoxes["65"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1667506318][
                    GeneralUtilities`Slice[14, 
                    Key["reading"]]], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                   Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    "\"Mon 5 Aug 2019 16:11:30\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1667506318][
                    GeneralUtilities`Slice[14, 
                    Key["Timestamp"]]], "Mouse"], 
                    ImageSize -> {{75, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}]}, {
                   Pane[
                    Annotation[
                    RawBoxes["62"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1667506318][
                    GeneralUtilities`Slice[15, 
                    Key["reading"]]], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                   Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    "\"Mon 5 Aug 2019 15:00:15\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1667506318][
                    GeneralUtilities`Slice[15, 
                    Key["Timestamp"]]], "Mouse"], 
                    ImageSize -> {{75, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}]}, {
                   Pane[
                    Annotation[
                    RawBoxes["60"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1667506318][
                    GeneralUtilities`Slice[16, 
                    Key["reading"]]], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                   Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    "\"Mon 5 Aug 2019 16:25:23\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1667506318][
                    GeneralUtilities`Slice[16, 
                    Key["Timestamp"]]], "Mouse"], 
                    ImageSize -> {{75, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}]}, {
                   Pane[
                    Annotation[
                    RawBoxes["57"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1667506318][
                    GeneralUtilities`Slice[17, 
                    Key["reading"]]], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                   Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    "\"Tue 6 Aug 2019 08:33:23\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1667506318][
                    GeneralUtilities`Slice[17, 
                    Key["Timestamp"]]], "Mouse"], 
                    ImageSize -> {{75, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}]}, {
                   Pane[
                    Annotation[
                    RawBoxes["57"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1667506318][
                    GeneralUtilities`Slice[18, 
                    Key["reading"]]], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                   Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    "\"Tue 6 Aug 2019 08:33:18\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1667506318][
                    GeneralUtilities`Slice[18, 
                    Key["Timestamp"]]], "Mouse"], 
                    ImageSize -> {{75, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}]}, {
                   Pane[
                    Annotation[
                    RawBoxes["56"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1667506318][
                    GeneralUtilities`Slice[19, 
                    Key["reading"]]], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                   Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    "\"Mon 5 Aug 2019 15:12:19\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1667506318][
                    GeneralUtilities`Slice[19, 
                    Key["Timestamp"]]], "Mouse"], 
                    ImageSize -> {{75, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}]}, {
                   Pane[
                    Annotation[
                    RawBoxes["55"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1667506318][
                    GeneralUtilities`Slice[20, 
                    Key["reading"]]], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                   Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    "\"Mon 5 Aug 2019 15:02:08\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1667506318][
                    GeneralUtilities`Slice[20, 
                    Key["Timestamp"]]], "Mouse"], 
                    ImageSize -> {{75, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}]}, {
                   Item[
                    Deploy[
                    Mouseover[
                    Row[{
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.5]]], 
                    GrayLevel[0.5], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{0.56, 
                    1.031}, {6.429, 1.031}, {6.429, 60.967}, {0.56, 
                    60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{6.192899999999999, 
                    30.980699999999995`}, {42.4399, 0.7526999999999973}, {
                    42.4399, 8.209699999999994}, {16.432899999999997`, 
                    30.982699999999994`}, {42.4119, 53.6547}, {42.4399, 
                    61.244699999999995`}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{0.56, 
                    1.031}, {6.429, 1.031}, {6.429, 60.967}, {0.56, 
                    60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{6.192899999999999, 
                    30.980699999999995`}, {42.4399, 0.7526999999999973}, {
                    42.4399, 8.209699999999994}, {16.432899999999997`, 
                    30.982699999999994`}, {42.4119, 53.6547}, {42.4399, 
                    61.244699999999995`}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ + 
                    102 (-20), {1, 102 - -20 + 1}])}], 
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.3]]], 
                    GrayLevel[0.3], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5499, 30.980699999999995`}, {
                    36.7969, 0.7526999999999973}, {36.7969, 
                    8.209699999999994}, {10.7899, 30.982699999999994`}, {
                    36.7689, 53.6547}, {36.7969, 61.244699999999995`}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5499, 30.980699999999995`}, {
                    36.7969, 0.7526999999999973}, {36.7969, 
                    8.209699999999994}, {10.7899, 30.982699999999994`}, {
                    36.7689, 53.6547}, {36.7969, 61.244699999999995`}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ - 20, {
                    1, 102 - -20 + 1}])}], 
                    Pane[
                    Row[{"showing ", 1, "\[Dash]", 20, " of ", 
                    Style[
                    102, FontColor -> GrayLevel[0], FontWeight -> "Medium"]}, 
                    BaseStyle -> {
                    FontSize -> 8., FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]}], 150, ContentPadding -> False, 
                    Alignment -> {Center, Center}], 
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.3]]], 
                    GrayLevel[0.3], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5778000000000001, 
                    53.654399999999995`}, {26.5568, 30.982399999999995`}, {
                    0.5498000000000001, 8.209399999999995}, {
                    0.5498000000000001, 0.7523999999999944}, {
                    36.796800000000005`, 30.980399999999992`}, {
                    0.5498000000000001, 61.2454}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5778000000000001, 
                    53.654399999999995`}, {26.5568, 30.982399999999995`}, {
                    0.5498000000000001, 8.209399999999995}, {
                    0.5498000000000001, 0.7523999999999944}, {
                    36.796800000000005`, 30.980399999999992`}, {
                    0.5498000000000001, 61.2454}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ + 20, {
                    1, 102 - 20 + 1}])}], 
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.5]]], 
                    GrayLevel[0.5], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    36.571, 1.031}, {42.440999999999995`, 1.031}, {
                    42.440999999999995`, 60.967}, {36.571, 60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5598000000000001, 
                    53.788500000000006`}, {26.5668, 31.015500000000007`}, {
                    0.5878000000000001, 8.343500000000006}, {
                    0.5598000000000001, 0.7525000000000048}, {36.8068, 
                    31.017500000000005`}, {0.5598000000000001, 
                    61.24450000000001}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    36.571, 1.031}, {42.440999999999995`, 1.031}, {
                    42.440999999999995`, 60.967}, {36.571, 60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5598000000000001, 
                    53.788500000000006`}, {26.5668, 31.015500000000007`}, {
                    0.5878000000000001, 8.343500000000006}, {
                    0.5598000000000001, 0.7525000000000048}, {36.8068, 
                    31.017500000000005`}, {0.5598000000000001, 
                    61.24450000000001}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ + 
                    102 20, {1, 102 - 20 + 1}])}]}, "   "], 
                    Row[{
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.5]]], 
                    GrayLevel[0.5], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{0.56, 
                    1.031}, {6.429, 1.031}, {6.429, 60.967}, {0.56, 
                    60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{6.192899999999999, 
                    30.980699999999995`}, {42.4399, 0.7526999999999973}, {
                    42.4399, 8.209699999999994}, {16.432899999999997`, 
                    30.982699999999994`}, {42.4119, 53.6547}, {42.4399, 
                    61.244699999999995`}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{0.56, 
                    1.031}, {6.429, 1.031}, {6.429, 60.967}, {0.56, 
                    60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{6.192899999999999, 
                    30.980699999999995`}, {42.4399, 0.7526999999999973}, {
                    42.4399, 8.209699999999994}, {16.432899999999997`, 
                    30.982699999999994`}, {42.4119, 53.6547}, {42.4399, 
                    61.244699999999995`}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ + 
                    102 (-20), {1, 102 - -20 + 1}])}], 
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.3]]], 
                    GrayLevel[0.3], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5499, 30.980699999999995`}, {
                    36.7969, 0.7526999999999973}, {36.7969, 
                    8.209699999999994}, {10.7899, 30.982699999999994`}, {
                    36.7689, 53.6547}, {36.7969, 61.244699999999995`}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5499, 30.980699999999995`}, {
                    36.7969, 0.7526999999999973}, {36.7969, 
                    8.209699999999994}, {10.7899, 30.982699999999994`}, {
                    36.7689, 53.6547}, {36.7969, 61.244699999999995`}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ - 20, {
                    1, 102 - -20 + 1}])}], 
                    Pane[
                    Row[{"showing ", 1, "\[Dash]", 20, " of ", 
                    Style[
                    102, FontColor -> GrayLevel[0], FontWeight -> "Medium"]}, 
                    BaseStyle -> {
                    FontSize -> 8., FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]}], 150, ContentPadding -> False, 
                    Alignment -> {Center, Center}], 
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.3]]], 
                    GrayLevel[0.3], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5778000000000001, 
                    53.654399999999995`}, {26.5568, 30.982399999999995`}, {
                    0.5498000000000001, 8.209399999999995}, {
                    0.5498000000000001, 0.7523999999999944}, {
                    36.796800000000005`, 30.980399999999992`}, {
                    0.5498000000000001, 61.2454}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5778000000000001, 
                    53.654399999999995`}, {26.5568, 30.982399999999995`}, {
                    0.5498000000000001, 8.209399999999995}, {
                    0.5498000000000001, 0.7523999999999944}, {
                    36.796800000000005`, 30.980399999999992`}, {
                    0.5498000000000001, 61.2454}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ + 20, {
                    1, 102 - 20 + 1}])}], 
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.5]]], 
                    GrayLevel[0.5], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    36.571, 1.031}, {42.440999999999995`, 1.031}, {
                    42.440999999999995`, 60.967}, {36.571, 60.967}}}], 
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5598000000000001, 
                    53.788500000000006`}, {26.5668, 31.015500000000007`}, {
                    0.5878000000000001, 8.343500000000006}, {
                    0.5598000000000001, 0.7525000000000048}, {36.8068, 
                    31.017500000000005`}, {0.5598000000000001, 
                    61.24450000000001}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    36.571, 1.031}, {42.440999999999995`, 1.031}, {
                    42.440999999999995`, 60.967}, {36.571, 60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5598000000000001, 
                    53.788500000000006`}, {26.5668, 31.015500000000007`}, {
                    0.5878000000000001, 8.343500000000006}, {
                    0.5598000000000001, 0.7525000000000048}, {36.8068, 
                    31.017500000000005`}, {0.5598000000000001, 
                    61.24450000000001}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ + 
                    102 20, {1, 102 - 20 + 1}])}]}, "   "]]], Background -> 
                    GrayLevel[0.98], Alignment -> {Left, Top}, 
                    BaseStyle -> {ContextMenu -> {
                    MenuItem["Hide", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1667506318},
                     1, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 10 rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1667506318},
                     10, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 30 rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1667506318},
                     30, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 100 rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1667506318},
                     100, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show all", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1667506318},
                     100000000, {}]], MenuEvaluator -> Automatic]}}], 
                   SpanFromLeft}}, BaseStyle -> {ContextMenu -> {
                    MenuItem["Copy position to clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Copy data to clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Delimiter, 
                    MenuItem["Paste position in new cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Paste data in new cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic]}, FontFamily -> "Verdana", 
                   FontSize -> 12}, Alignment -> Left, RowMinHeight -> 1.5, 
                 Dividers -> All, FrameStyle -> GrayLevel[0.85], 
                 BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
                LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
                False, ShowAutoStyles -> False]], 
             TypeSystem`NestedGrid`PackagePrivate`initialQ = True, 
             TypeSystem`NestedGrid`PackagePrivate`self = $Failed}, 
            Dynamic[
             TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
             TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
                Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
                
                Module[{
                 TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
                  TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
                  TypeSystem`NestedGrid`PackagePrivate`LookupCacheValue[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$["Data"]]}, 
                 TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = 
                  If[TypeSystem`NestedGrid`PackagePrivate`tmpData$ === 
                    TypeSystem`NestedGrid`PackagePrivate`$NotCached, 
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                    TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1667506318][
                    TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
                   Not[
                    FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
                   TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
                   TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
              TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
              TypeSystem`NestedGrid`PackagePrivate`$pos$$; If[
                FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
                TypeSystem`SparseGrid[
                 TypeSystem`H["(data no longer present)"]], 
                If[GeneralUtilities`$DebugMode, 
                 Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
                   TypeSystem`NestedGrid`PackagePrivate`formatState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$]}], 
                 TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
             TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$pos$$}],
             DynamicModuleValues :> {}], 
          TypeSystem`NestedGrid`PackagePrivate`$posCell$$, 
          TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
            TypeSystem`NestedGrid`PackagePrivate`alignBar[
            TypeSystem`NestedGrid`PackagePrivate`$state$$][
             TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
              TypeSystem`PackageScope`Pathbar[
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
               TypeSystem`NestedGrid`PackagePrivate`updateState[
               TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1667506318]]]], 
            TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}],
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Framed[
            Dynamic[
             Replace[
              MouseAnnotation[Null], {
              TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1667506318][
                Null] -> "", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1667506318][
                 Pattern[TypeSystem`NestedGrid`PackagePrivate`path, 
                  Blank[]]] :> (
                TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
                 TypeSystem`NestedGrid`PackagePrivate`path; 
                TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
                 TypeSystem`NestedGrid`PackagePrivate`path, 
                  TypeSystem`NestedGrid`PackagePrivate`makePathElements]), 
               Null :> Spacer[10], Blank[] :> Spacer[10]}], 
             TrackedSymbols :> {}], FrameStyle -> None, ImageMargins -> 0, 
            FrameMargins -> 0, Alignment -> Top, 
            ImageSize -> {Automatic, 14}]}, 
         DynamicBox[
          ToBoxes[
           Column[
            If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, {
              TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
               TypeSystem`NestedGrid`PackagePrivate`$state$$, 
               TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
              TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
               TypeSystem`NestedGrid`PackagePrivate`alignBar[
               TypeSystem`NestedGrid`PackagePrivate`$state$$][
               TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}, {
             TypeSystem`NestedGrid`PackagePrivate`$topBar$$, 
              TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
               TypeSystem`NestedGrid`PackagePrivate`$state$$, 
               TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
              TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
               TypeSystem`NestedGrid`PackagePrivate`alignBar[
               TypeSystem`NestedGrid`PackagePrivate`$state$$][
               TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}], 
            Spacings -> 
            If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, 
              0, {{}, {0, 0.05, 0}}]], StandardForm], 
          ImageSizeCache -> {254., {279., 285.}}, 
          TrackedSymbols :> {
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
            TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
         BaseStyle -> {LineBreakWithin -> False}, Deinitialization :> 
         TypeSystem`NestedGrid`PackagePrivate`deleteState[
          TypeSystem`NestedGrid`PackagePrivate`$state$$], 
         DynamicModuleValues :> {}, Initialization :> 
         Block[{$ContextPath = $ContextPath}, 
           Needs["TypeSystem`"]]], Deploy, DefaultBaseStyle -> "Deploy"]},
      "CopyTag",
      DisplayFunction->(#& ),
      InterpretationFunction->("Dataset[<>]"& )]}
   },
   AutoDelete->False,
   GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{3.77418771234791*^9, 3.7741878026849103`*^9},
 CellLabel->
  "Out[669]=",ExpressionUUID->"19ced1f9-7b1d-4702-a56c-1308ec5580d9"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"readingsDB", "=", 
  RowBox[{"DatabinAdd", "[", 
   RowBox[{"readingsDB", ",", 
    RowBox[{"<|", 
     RowBox[{"\"\<reading\>\"", "\[Rule]", 
      RowBox[{"RandomInteger", "[", 
       RowBox[{"{", 
        RowBox[{"0", ",", "100"}], "}"}], "]"}]}], "|>"}]}], "]"}]}]], "Input",
 CellLabel->
  "In[671]:=",ExpressionUUID->"7ef3cd4f-2f4b-4397-89cd-046ec2eb8143"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"readingsDS", "[", 
   RowBox[{
    RowBox[{";;", "3"}], ",", "Framed"}], "]"}], "//", 
  "Normal"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"readingsDS", "[", 
   RowBox[{
    RowBox[{";;", "3"}], ",", 
    RowBox[{"Query", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\"\<reading\>\"", "/*", "Framed"}], ",", 
       RowBox[{"\"\<Timestamp\>\"", "/*", "Framed"}]}], "}"}], "]"}]}], "]"}],
   "//", "Normal"}], "\[IndentingNewLine]", 
 RowBox[{"readingsDS", "[", 
  RowBox[{
   RowBox[{";;", "3"}], ",", 
   RowBox[{"Query", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\"\<reading\>\"", "/*", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Style", "[", 
          RowBox[{"#", ",", 
           RowBox[{"FontFamily", "\[Rule]", "\"\<Arial\>\""}], ",", 
           RowBox[{"FontSize", "\[Rule]", "8"}], ",", "Bold"}], "]"}], "&"}], 
        ")"}]}], ",", 
      RowBox[{"\"\<Timestamp\>\"", "/*", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Style", "[", 
          RowBox[{
           RowBox[{"DateString", "[", "#", "]"}], ",", 
           RowBox[{"FontFamily", "\[Rule]", "\"\<Arial\>\""}], ",", 
           RowBox[{"FontSize", "\[Rule]", "8"}], ",", "Bold"}], "]"}], "&"}], 
        ")"}]}]}], "}"}], "]"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"readingsDS", "[", 
   RowBox[{
    RowBox[{";;", "3"}], ",", 
    RowBox[{"Query", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\"\<reading\>\"", "/*", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Style", "[", 
           RowBox[{"#", ",", 
            RowBox[{"FontFamily", "\[Rule]", "\"\<Arial\>\""}], ",", 
            RowBox[{"FontSize", "\[Rule]", "8"}], ",", "Bold"}], "]"}], "&"}],
          ")"}]}], ",", 
       RowBox[{"\"\<Timestamp\>\"", "/*", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Style", "[", 
           RowBox[{
            RowBox[{"DateString", "[", "#", "]"}], ",", 
            RowBox[{"FontFamily", "\[Rule]", "\"\<Arial\>\""}], ",", 
            RowBox[{"FontSize", "\[Rule]", "8"}], ",", "Bold"}], "]"}], "&"}],
          ")"}]}]}], "}"}], "]"}]}], "]"}], "//", "Normal"}]}], "Input",
 CellLabel->
  "In[672]:=",ExpressionUUID->"2c2c08bb-5101-43a7-93fa-fc1dbed34be3"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   FrameBox[
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{"\<\"reading\"\>", "\[Rule]", "87"}], ",", 
      RowBox[{"\<\"Timestamp\"\>", "\[Rule]", 
       TemplateBox[{RowBox[{"\"Mon 5 Aug 2019 14:56:54\"", 
           StyleBox[
            RowBox[{"\"GMT\"", "\[InvisibleSpace]", 
              StyleBox[
               RowBox[{"-", "4.`"}], NumberMarks -> False, StripOnInput -> 
               False]}], FontColor -> GrayLevel[0.5]]}],
         RowBox[{"DateObject", "[", 
           RowBox[{
             RowBox[{"{", 
               
               RowBox[{
                "2019", ",", "8", ",", "5", ",", "14", ",", "56", ",", 
                 "54.776000022888184`"}], "}"}], ",", "\"Instant\"", ",", 
             "\"Gregorian\"", ",", 
             RowBox[{"-", "4.`"}]}], "]"}]},
        "DateObject",
        Editable->False]}]}], "\[RightAssociation]"}],
    StripOnInput->False], ",", 
   FrameBox[
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{"\<\"reading\"\>", "\[Rule]", "84"}], ",", 
      RowBox[{"\<\"Timestamp\"\>", "\[Rule]", 
       TemplateBox[{RowBox[{"\"Mon 5 Aug 2019 15:56:32\"", 
           StyleBox[
            RowBox[{"\"GMT\"", "\[InvisibleSpace]", 
              StyleBox[
               RowBox[{"-", "4.`"}], NumberMarks -> False, StripOnInput -> 
               False]}], FontColor -> GrayLevel[0.5]]}],
         RowBox[{"DateObject", "[", 
           RowBox[{
             RowBox[{"{", 
               
               RowBox[{
                "2019", ",", "8", ",", "5", ",", "15", ",", "56", ",", 
                 "32.551000118255615`"}], "}"}], ",", "\"Instant\"", ",", 
             "\"Gregorian\"", ",", 
             RowBox[{"-", "4.`"}]}], "]"}]},
        "DateObject",
        Editable->False]}]}], "\[RightAssociation]"}],
    StripOnInput->False], ",", 
   FrameBox[
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{"\<\"reading\"\>", "\[Rule]", "80"}], ",", 
      RowBox[{"\<\"Timestamp\"\>", "\[Rule]", 
       TemplateBox[{RowBox[{"\"Mon 5 Aug 2019 16:25:35\"", 
           StyleBox[
            RowBox[{"\"GMT\"", "\[InvisibleSpace]", 
              StyleBox[
               RowBox[{"-", "4.`"}], NumberMarks -> False, StripOnInput -> 
               False]}], FontColor -> GrayLevel[0.5]]}],
         RowBox[{"DateObject", "[", 
           RowBox[{
             RowBox[{"{", 
               
               RowBox[{
                "2019", ",", "8", ",", "5", ",", "16", ",", "25", ",", 
                 "35.40500020980835`"}], "}"}], ",", "\"Instant\"", ",", 
             "\"Gregorian\"", ",", 
             RowBox[{"-", "4.`"}]}], "]"}]},
        "DateObject",
        Editable->False]}]}], "\[RightAssociation]"}],
    StripOnInput->False]}], "}"}]], "Output",
 CellChangeTimes->{3.7741881210900393`*^9},
 CellLabel->
  "Out[672]=",ExpressionUUID->"73418c24-ac22-41e8-af5f-4c5fe358127c"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     FrameBox["87",
      StripOnInput->False], ",", 
     FrameBox[
      TemplateBox[{RowBox[{"\"Mon 5 Aug 2019 14:56:54\"", 
          StyleBox[
           RowBox[{"\"GMT\"", "\[InvisibleSpace]", 
             StyleBox[
              RowBox[{"-", "4.`"}], NumberMarks -> False, StripOnInput -> 
              False]}], FontColor -> GrayLevel[0.5]]}],
        RowBox[{"DateObject", "[", 
          RowBox[{
            RowBox[{"{", 
              
              RowBox[{"2019", ",", "8", ",", "5", ",", "14", ",", "56", ",", 
                "54.776000022888184`"}], "}"}], ",", "\"Instant\"", ",", 
            "\"Gregorian\"", ",", 
            RowBox[{"-", "4.`"}]}], "]"}]},
       "DateObject",
       Editable->False],
      StripOnInput->False]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FrameBox["84",
      StripOnInput->False], ",", 
     FrameBox[
      TemplateBox[{RowBox[{"\"Mon 5 Aug 2019 15:56:32\"", 
          StyleBox[
           RowBox[{"\"GMT\"", "\[InvisibleSpace]", 
             StyleBox[
              RowBox[{"-", "4.`"}], NumberMarks -> False, StripOnInput -> 
              False]}], FontColor -> GrayLevel[0.5]]}],
        RowBox[{"DateObject", "[", 
          RowBox[{
            RowBox[{"{", 
              
              RowBox[{"2019", ",", "8", ",", "5", ",", "15", ",", "56", ",", 
                "32.551000118255615`"}], "}"}], ",", "\"Instant\"", ",", 
            "\"Gregorian\"", ",", 
            RowBox[{"-", "4.`"}]}], "]"}]},
       "DateObject",
       Editable->False],
      StripOnInput->False]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FrameBox["80",
      StripOnInput->False], ",", 
     FrameBox[
      TemplateBox[{RowBox[{"\"Mon 5 Aug 2019 16:25:35\"", 
          StyleBox[
           RowBox[{"\"GMT\"", "\[InvisibleSpace]", 
             StyleBox[
              RowBox[{"-", "4.`"}], NumberMarks -> False, StripOnInput -> 
              False]}], FontColor -> GrayLevel[0.5]]}],
        RowBox[{"DateObject", "[", 
          RowBox[{
            RowBox[{"{", 
              
              RowBox[{"2019", ",", "8", ",", "5", ",", "16", ",", "25", ",", 
                "35.40500020980835`"}], "}"}], ",", "\"Instant\"", ",", 
            "\"Gregorian\"", ",", 
            RowBox[{"-", "4.`"}]}], "]"}]},
       "DateObject",
       Editable->False],
      StripOnInput->False]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.77418812111304*^9},
 CellLabel->
  "Out[673]=",ExpressionUUID->"939ada98-232f-4a5d-8d8b-73262c32d9f6"],

Cell[BoxData[
 TemplateBox[{TagBox[
    DynamicModuleBox[{
     TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
      Data`UnorderedAssociation[
       "RowCount" -> 3, "Length" -> 3, "InitialType" -> TypeSystem`Vector[
          TypeSystem`Vector[TypeSystem`AnyType, 2], 3], "Shape" -> 
        TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`MatrixShape[3, 2], 3, {All}], "InitialData" -> 
        TypeSystem`PackageScope`CacheHandle[1016633027], "Type" -> 
        TypeSystem`Vector[
          TypeSystem`Vector[TypeSystem`AnyType, 2], 3], "HandleQ" -> True, 
        "RowTarget" -> 20, "Data" -> 
        TypeSystem`PackageScope`CacheHandle[1016633027]], 
      TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
      TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 1, 
      TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
      DynamicModule[{
        TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
           Style[
            Grid[{{
               Pane[
                Annotation[
                 Style[87, FontFamily -> "Arial", FontSize -> 8, Bold], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1100770280][
                  GeneralUtilities`Slice[1, 1]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 Style[
                 "Mon 5 Aug 2019 14:56:54", FontFamily -> "Arial", FontSize -> 
                  8, Bold], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1100770280][
                  GeneralUtilities`Slice[1, 2]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 Style[84, FontFamily -> "Arial", FontSize -> 8, Bold], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1100770280][
                  GeneralUtilities`Slice[2, 1]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 Style[
                 "Mon 5 Aug 2019 15:56:32", FontFamily -> "Arial", FontSize -> 
                  8, Bold], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1100770280][
                  GeneralUtilities`Slice[2, 2]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 Style[80, FontFamily -> "Arial", FontSize -> 8, Bold], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1100770280][
                  GeneralUtilities`Slice[3, 1]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 Style[
                 "Mon 5 Aug 2019 16:25:35", FontFamily -> "Arial", FontSize -> 
                  8, Bold], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1100770280][
                  GeneralUtilities`Slice[3, 2]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}}, BaseStyle -> {ContextMenu -> {
                 MenuItem["Copy position to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Copy data to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], Delimiter, 
                 MenuItem["Paste position in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Paste data in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic]}, FontFamily -> "Verdana", 
               FontSize -> 12}, Alignment -> Left, RowMinHeight -> 1.5, 
             Dividers -> All, FrameStyle -> GrayLevel[0.85], 
             BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
            LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False,
             ShowAutoStyles -> False]], 
         TypeSystem`NestedGrid`PackagePrivate`initialQ = True, 
         TypeSystem`NestedGrid`PackagePrivate`self = $Failed}, 
        Dynamic[
         TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
         TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
            Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
            
            Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
              TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
              TypeSystem`NestedGrid`PackagePrivate`LookupCacheValue[
                TypeSystem`NestedGrid`PackagePrivate`$state$$["Data"]]}, 
             TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = 
              If[TypeSystem`NestedGrid`PackagePrivate`tmpData$ === 
                TypeSystem`NestedGrid`PackagePrivate`$NotCached, 
                TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1100770280][
                TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
               Not[
                FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
               TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
               TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
          TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
          TypeSystem`NestedGrid`PackagePrivate`$pos$$; If[
            FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
            TypeSystem`SparseGrid[
             TypeSystem`H["(data no longer present)"]], 
            If[GeneralUtilities`$DebugMode, 
             Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
               TypeSystem`NestedGrid`PackagePrivate`formatState[
               TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                TypeSystem`NestedGrid`PackagePrivate`$pos$$]}], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
         TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$pos$$}], 
        DynamicModuleValues :> {}], 
      TypeSystem`NestedGrid`PackagePrivate`$posCell$$, 
      TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
        TypeSystem`NestedGrid`PackagePrivate`alignBar[
        TypeSystem`NestedGrid`PackagePrivate`$state$$][
         TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
          TypeSystem`PackageScope`Pathbar[
          TypeSystem`NestedGrid`PackagePrivate`$path$$, 
           TypeSystem`NestedGrid`PackagePrivate`updateState[
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
            TypeSystem`NestedGrid`PackagePrivate`$path$$, 
            TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1100770280]]]], 
        TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
      TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Framed[
        Dynamic[
         Replace[
          MouseAnnotation[Null], {
          TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1100770280][Null] -> 
           "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1100770280][
             Pattern[TypeSystem`NestedGrid`PackagePrivate`path, 
              Blank[]]] :> (
            TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
             TypeSystem`NestedGrid`PackagePrivate`path; 
            TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
             TypeSystem`NestedGrid`PackagePrivate`path, 
              TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
           Spacer[10], Blank[] :> Spacer[10]}], TrackedSymbols :> {}], 
        FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
        Top, ImageSize -> {Automatic, 14}]}, 
     DynamicBox[
      ToBoxes[
       Column[
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, {
          TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
          TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`alignBar[
           TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}, {
         TypeSystem`NestedGrid`PackagePrivate`$topBar$$, 
          TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
          TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`alignBar[
           TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}], Spacings -> 
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, 
          0, {{}, {0, 0.05, 0}}]], StandardForm], 
      ImageSizeCache -> {170., {41., 47.}}, 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     BaseStyle -> {LineBreakWithin -> False}, Deinitialization :> 
     TypeSystem`NestedGrid`PackagePrivate`deleteState[
      TypeSystem`NestedGrid`PackagePrivate`$state$$], 
     DynamicModuleValues :> {}, Initialization :> 
     Block[{$ContextPath = $ContextPath}, 
       Needs["TypeSystem`"]]], Deploy, DefaultBaseStyle -> "Deploy"]},
  "CopyTag",
  DisplayFunction->(#& ),
  InterpretationFunction->("Dataset[<>]"& )]], "Output",
 CellChangeTimes->{3.77418812123205*^9},
 CellLabel->
  "Out[674]=",ExpressionUUID->"dee30ace-b33a-48f0-b8b8-db0e7dd2f78d"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     StyleBox["87",
      StripOnInput->False,
      FontFamily->"Arial",
      FontSize->8,
      FontWeight->Bold], ",", 
     StyleBox["\<\"Mon 5 Aug 2019 14:56:54\"\>",
      StripOnInput->False,
      FontFamily->"Arial",
      FontSize->8,
      FontWeight->Bold]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     StyleBox["84",
      StripOnInput->False,
      FontFamily->"Arial",
      FontSize->8,
      FontWeight->Bold], ",", 
     StyleBox["\<\"Mon 5 Aug 2019 15:56:32\"\>",
      StripOnInput->False,
      FontFamily->"Arial",
      FontSize->8,
      FontWeight->Bold]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     StyleBox["80",
      StripOnInput->False,
      FontFamily->"Arial",
      FontSize->8,
      FontWeight->Bold], ",", 
     StyleBox["\<\"Mon 5 Aug 2019 16:25:35\"\>",
      StripOnInput->False,
      FontFamily->"Arial",
      FontSize->8,
      FontWeight->Bold]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.7741881212870398`*^9},
 CellLabel->
  "Out[675]=",ExpressionUUID->"64318e6a-66c9-49a6-b31a-7daee42e648a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"readingsDS", "[", 
   RowBox[{"First", ",", "Keys", ",", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Style", "[", 
       RowBox[{"#", ",", 
        RowBox[{"FontFamily", "\[Rule]", "\"\<Alegreya SC\>\""}], ",", 
        RowBox[{"FontSize", "\[Rule]", "14"}], ",", "Bold"}], "]"}], "&"}], 
     ")"}]}], "]"}], "//", "Normal"}], "\[IndentingNewLine]", 
 RowBox[{"Normal", "[", 
  RowBox[{"readingsDS", "[", 
   RowBox[{"First", ",", "Keys", ",", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Style", "[", 
       RowBox[{"#", ",", 
        RowBox[{"FontFamily", "\[Rule]", "\"\<Alegreya SC\>\""}], ",", 
        RowBox[{"FontSize", "\[Rule]", "14"}], ",", "Bold"}], "]"}], "&"}], 
     ")"}]}], "]"}], "]"}]}], "Input",
 CellChangeTimes->{3.7741881753673525`*^9},
 CellLabel->
  "In[676]:=",ExpressionUUID->"54bc293a-55ff-44b1-ba0c-32b0be8c84d4"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   StyleBox["\<\"reading\"\>",
    StripOnInput->False,
    FontFamily->"Alegreya SC",
    FontSize->14,
    FontWeight->Bold], ",", 
   StyleBox["\<\"Timestamp\"\>",
    StripOnInput->False,
    FontFamily->"Alegreya SC",
    FontSize->14,
    FontWeight->Bold]}], "}"}]], "Output",
 CellChangeTimes->{3.7741881769133186`*^9},
 CellLabel->
  "Out[676]=",ExpressionUUID->"8fb89fe7-0475-43b1-83d3-d9744b4b629d"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   StyleBox["\<\"reading\"\>",
    StripOnInput->False,
    FontFamily->"Alegreya SC",
    FontSize->14,
    FontWeight->Bold], ",", 
   StyleBox["\<\"Timestamp\"\>",
    StripOnInput->False,
    FontFamily->"Alegreya SC",
    FontSize->14,
    FontWeight->Bold]}], "}"}]], "Output",
 CellChangeTimes->{3.7741881769223194`*^9},
 CellLabel->
  "Out[677]=",ExpressionUUID->"54aeff55-7041-44b7-93a2-d6772c169560"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Join", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"Normal", "[", 
     RowBox[{"readingsDS", "[", 
      RowBox[{"First", ",", "Keys", ",", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Style", "[", 
          RowBox[{"#", ",", 
           RowBox[{"FontFamily", "\[Rule]", "\"\<Alegreya SC\>\""}], ",", 
           RowBox[{"FontSize", "\[Rule]", "14"}], ",", "Bold"}], "]"}], "&"}],
         ")"}]}], "]"}], "]"}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"Normal", "[", 
    RowBox[{"readingsDS", "[", 
     RowBox[{
      RowBox[{";;", "3"}], ",", 
      RowBox[{"Query", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"\"\<reading\>\"", "/*", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"Style", "[", 
             RowBox[{"#", ",", 
              RowBox[{"FontFamily", "\[Rule]", "\"\<Arial\>\""}], ",", 
              RowBox[{"FontSize", "\[Rule]", "8"}], ",", "Bold"}], "]"}], 
            "&"}], ")"}]}], ",", 
         RowBox[{"\"\<Timestamp\>\"", "/*", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"Style", "[", 
             RowBox[{
              RowBox[{"DateString", "[", "#", "]"}], ",", 
              RowBox[{"FontFamily", "\[Rule]", "\"\<Arial\>\""}], ",", 
              RowBox[{"FontSize", "\[Rule]", "8"}], ",", "Bold"}], "]"}], 
            "&"}], ")"}]}]}], "}"}], "]"}]}], "]"}], "]"}]}], 
  "\[IndentingNewLine]", "]"}]], "Input",
 CellLabel->
  "In[678]:=",ExpressionUUID->"4a73e747-24c1-41bf-abf4-c8836e6f2529"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     StyleBox["\<\"reading\"\>",
      StripOnInput->False,
      FontFamily->"Alegreya SC",
      FontSize->14,
      FontWeight->Bold], ",", 
     StyleBox["\<\"Timestamp\"\>",
      StripOnInput->False,
      FontFamily->"Alegreya SC",
      FontSize->14,
      FontWeight->Bold]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     StyleBox["87",
      StripOnInput->False,
      FontFamily->"Arial",
      FontSize->8,
      FontWeight->Bold], ",", 
     StyleBox["\<\"Mon 5 Aug 2019 14:56:54\"\>",
      StripOnInput->False,
      FontFamily->"Arial",
      FontSize->8,
      FontWeight->Bold]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     StyleBox["84",
      StripOnInput->False,
      FontFamily->"Arial",
      FontSize->8,
      FontWeight->Bold], ",", 
     StyleBox["\<\"Mon 5 Aug 2019 15:56:32\"\>",
      StripOnInput->False,
      FontFamily->"Arial",
      FontSize->8,
      FontWeight->Bold]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     StyleBox["80",
      StripOnInput->False,
      FontFamily->"Arial",
      FontSize->8,
      FontWeight->Bold], ",", 
     StyleBox["\<\"Mon 5 Aug 2019 16:25:35\"\>",
      StripOnInput->False,
      FontFamily->"Arial",
      FontSize->8,
      FontWeight->Bold]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.774188200921318*^9},
 CellLabel->
  "Out[678]=",ExpressionUUID->"0f00bc76-cba7-45de-ae4a-25cc1d1bd2e4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"readingsDS", "[", 
  RowBox[{
   RowBox[{";;", "3"}], ",", 
   RowBox[{"Query", "[", 
    RowBox[{"{", 
     RowBox[{"\"\<reading\>\"", ",", 
      RowBox[{"\"\<Timestamp\>\"", "/*", "DateString"}]}], "}"}], "]"}]}], 
  "]"}]], "Input",
 CellLabel->
  "In[679]:=",ExpressionUUID->"aaab5a3c-19f0-4a4d-886e-fe36f31c895d"],

Cell[BoxData[
 TemplateBox[{TagBox[
    DynamicModuleBox[{
     TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
      Data`UnorderedAssociation[
       "RowCount" -> 3, "Length" -> 3, "InitialType" -> TypeSystem`Vector[
          TypeSystem`Tuple[{
            TypeSystem`Atom[Integer], 
            TypeSystem`Atom[String]}], 3], "Shape" -> 
        TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`ColumnShape[
           TypeSystem`PackageScope`RowShape[{
             TypeSystem`PackageScope`AtomShape[34], 
             TypeSystem`PackageScope`AtomShape[220.80000000000004`]}]], 
          3, {}], "InitialData" -> 
        TypeSystem`PackageScope`CacheHandle[942246707], "Type" -> 
        TypeSystem`Vector[
          TypeSystem`Tuple[{
            TypeSystem`Atom[Integer], 
            TypeSystem`Atom[String]}], 3], "HandleQ" -> True, "RowTarget" -> 
        20, "Data" -> TypeSystem`PackageScope`CacheHandle[942246707]], 
      TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
      TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 1, 
      TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
      DynamicModule[{
        TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
           Style[
            Grid[{{
               Pane[
                Annotation[
                 RawBoxes["87"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1741028738][
                  GeneralUtilities`Slice[1, 1]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Mon 5 Aug 2019 14:56:54", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1741028738][
                  GeneralUtilities`Slice[1, 2]], "Mouse"], 
                ImageSize -> {{220.80000000000004`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["84"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1741028738][
                  GeneralUtilities`Slice[2, 1]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Mon 5 Aug 2019 15:56:32", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1741028738][
                  GeneralUtilities`Slice[2, 2]], "Mouse"], 
                ImageSize -> {{220.80000000000004`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["80"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1741028738][
                  GeneralUtilities`Slice[3, 1]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Mon 5 Aug 2019 16:25:35", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1741028738][
                  GeneralUtilities`Slice[3, 2]], "Mouse"], 
                ImageSize -> {{220.80000000000004`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}}, BaseStyle -> {ContextMenu -> {
                 MenuItem["Copy position to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Copy data to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], Delimiter, 
                 MenuItem["Paste position in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Paste data in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic]}, FontFamily -> "Verdana", 
               FontSize -> 12}, Alignment -> Left, RowMinHeight -> 1.5, 
             Dividers -> All, FrameStyle -> GrayLevel[0.85], 
             BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
            LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False,
             ShowAutoStyles -> False]], 
         TypeSystem`NestedGrid`PackagePrivate`initialQ = True, 
         TypeSystem`NestedGrid`PackagePrivate`self = $Failed}, 
        Dynamic[
         TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
         TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
            Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
            
            Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
              TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
              TypeSystem`NestedGrid`PackagePrivate`LookupCacheValue[
                TypeSystem`NestedGrid`PackagePrivate`$state$$["Data"]]}, 
             TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = 
              If[TypeSystem`NestedGrid`PackagePrivate`tmpData$ === 
                TypeSystem`NestedGrid`PackagePrivate`$NotCached, 
                TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1741028738][
                TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
               Not[
                FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
               TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
               TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
          TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
          TypeSystem`NestedGrid`PackagePrivate`$pos$$; If[
            FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
            TypeSystem`SparseGrid[
             TypeSystem`H["(data no longer present)"]], 
            If[GeneralUtilities`$DebugMode, 
             Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
               TypeSystem`NestedGrid`PackagePrivate`formatState[
               TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                TypeSystem`NestedGrid`PackagePrivate`$pos$$]}], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
         TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$pos$$}], 
        DynamicModuleValues :> {}], 
      TypeSystem`NestedGrid`PackagePrivate`$posCell$$, 
      TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
        TypeSystem`NestedGrid`PackagePrivate`alignBar[
        TypeSystem`NestedGrid`PackagePrivate`$state$$][
         TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
          TypeSystem`PackageScope`Pathbar[
          TypeSystem`NestedGrid`PackagePrivate`$path$$, 
           TypeSystem`NestedGrid`PackagePrivate`updateState[
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
            TypeSystem`NestedGrid`PackagePrivate`$path$$, 
            TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1741028738]]]], 
        TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
      TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Framed[
        Dynamic[
         Replace[
          MouseAnnotation[Null], {
          TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1741028738][Null] -> 
           "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1741028738][
             Pattern[TypeSystem`NestedGrid`PackagePrivate`path, 
              Blank[]]] :> (
            TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
             TypeSystem`NestedGrid`PackagePrivate`path; 
            TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
             TypeSystem`NestedGrid`PackagePrivate`path, 
              TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
           Spacer[10], Blank[] :> Spacer[10]}], TrackedSymbols :> {}], 
        FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
        Top, ImageSize -> {Automatic, 14}]}, 
     DynamicBox[
      ToBoxes[
       Column[
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, {
          TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
          TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`alignBar[
           TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}, {
         TypeSystem`NestedGrid`PackagePrivate`$topBar$$, 
          TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
          TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`alignBar[
           TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}], Spacings -> 
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, 
          0, {{}, {0, 0.05, 0}}]], StandardForm], 
      ImageSizeCache -> {275., {42., 48.}}, 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     BaseStyle -> {LineBreakWithin -> False}, Deinitialization :> 
     TypeSystem`NestedGrid`PackagePrivate`deleteState[
      TypeSystem`NestedGrid`PackagePrivate`$state$$], 
     DynamicModuleValues :> {}, Initialization :> 
     Block[{$ContextPath = $ContextPath}, 
       Needs["TypeSystem`"]]], Deploy, DefaultBaseStyle -> "Deploy"]},
  "CopyTag",
  DisplayFunction->(#& ),
  InterpretationFunction->("Dataset[<>]"& )]], "Output",
 CellChangeTimes->{3.7741882024013186`*^9},
 CellLabel->
  "Out[679]=",ExpressionUUID->"479e088b-9264-40ad-a2de-82984f4a3add"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", 
   RowBox[{"rows", ",", "grd"}], "]"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"grd", "[", 
    RowBox[{"data_", ",", "rows_"}], "]"}], ":=", 
   RowBox[{"Grid", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Join", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"Normal", "[", 
         RowBox[{"data", "[", 
          RowBox[{"First", ",", "Keys", ",", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"Style", "[", 
              RowBox[{"#", ",", 
               RowBox[{"FontFamily", "\[Rule]", "\"\<Alegreya SC\>\""}], ",", 
               RowBox[{"FontSize", "\[Rule]", "14"}], ",", "Bold"}], "]"}], 
             "&"}], ")"}]}], "]"}], "]"}], "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{"Normal", "[", 
        RowBox[{"data", "[", 
         RowBox[{
          RowBox[{";;", "rows"}], ",", 
          RowBox[{"Query", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"\"\<reading\>\"", "/*", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"Style", "[", 
                 RowBox[{"#", ",", 
                  RowBox[{"FontFamily", "\[Rule]", "\"\<Arial\>\""}], ",", 
                  RowBox[{"FontSize", "\[Rule]", "8"}], ",", "Bold"}], "]"}], 
                "&"}], ")"}]}], ",", 
             RowBox[{"\"\<Timestamp\>\"", "/*", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"Style", "[", 
                 RowBox[{
                  RowBox[{"DateString", "[", "#", "]"}], ",", 
                  RowBox[{"FontFamily", "\[Rule]", "\"\<Arial\>\""}], ",", 
                  RowBox[{"FontSize", "\[Rule]", "8"}], ",", "Bold"}], "]"}], 
                "&"}], ")"}]}]}], "}"}], "]"}]}], "]"}], "]"}]}], 
      "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"Background", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"None", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"1", "\[Rule]", "LightBlue"}], ",", 
          RowBox[{"Flatten", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"1", "\[Rule]", "LightBlue"}], ",", 
             RowBox[{
              RowBox[{
               RowBox[{"#", "->", 
                RowBox[{"Lighter", "[", "LightGray", "]"}]}], "&"}], "/@", 
              RowBox[{"Range", "[", 
               RowBox[{"3", ",", 
                RowBox[{"rows", "+", "2"}], ",", "2"}], "]"}]}]}], "}"}], 
           "]"}]}], "}"}]}], "}"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"Frame", "\[Rule]", "All"}], ",", "\[IndentingNewLine]", 
     RowBox[{"FrameStyle", "\[Rule]", 
      RowBox[{"Directive", "[", "LightGray", "]"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Spacings", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "1", ",", "1"}], "}"}], ",", 
        RowBox[{"Table", "[", 
         RowBox[{".5", ",", 
          RowBox[{"{", 
           RowBox[{"(", 
            RowBox[{"rows", "+", "2"}], ")"}], "}"}]}], "]"}]}], "}"}]}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"grd", "[", 
  RowBox[{"readingsDS", ",", "5"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"%", "//", "Head"}]}], "Input",
 CellChangeTimes->{{3.774008239264717*^9, 3.7740082802521915`*^9}, {
   3.7740083184171634`*^9, 3.774008368679165*^9}, 3.774008415123388*^9, 
   3.7740085858797913`*^9, {3.774008621419853*^9, 3.774008645500801*^9}, {
   3.7740087751488447`*^9, 3.774008830889803*^9}, {3.7740094466334505`*^9, 
   3.774009475273549*^9}, {3.7740102587578063`*^9, 3.7740102679527693`*^9}, {
   3.7740114743088655`*^9, 3.7740114769638724`*^9}, {3.7740217834337263`*^9, 
   3.7740217960137005`*^9}, {3.7740255769913874`*^9, 3.774025623144609*^9}, {
   3.7740257174747725`*^9, 3.774025738829547*^9}, 3.774188244535323*^9},
 CellLabel->
  "In[684]:=",ExpressionUUID->"55aa9a47-fc2d-4a11-962b-6bfd575ebd0b"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     StyleBox["\<\"reading\"\>",
      StripOnInput->False,
      FontFamily->"Alegreya SC",
      FontSize->14,
      FontWeight->Bold], 
     StyleBox["\<\"Timestamp\"\>",
      StripOnInput->False,
      FontFamily->"Alegreya SC",
      FontSize->14,
      FontWeight->Bold]},
    {
     StyleBox["87",
      StripOnInput->False,
      FontFamily->"Arial",
      FontSize->8,
      FontWeight->Bold], 
     StyleBox["\<\"Mon 5 Aug 2019 14:56:54\"\>",
      StripOnInput->False,
      FontFamily->"Arial",
      FontSize->8,
      FontWeight->Bold]},
    {
     StyleBox["84",
      StripOnInput->False,
      FontFamily->"Arial",
      FontSize->8,
      FontWeight->Bold], 
     StyleBox["\<\"Mon 5 Aug 2019 15:56:32\"\>",
      StripOnInput->False,
      FontFamily->"Arial",
      FontSize->8,
      FontWeight->Bold]},
    {
     StyleBox["80",
      StripOnInput->False,
      FontFamily->"Arial",
      FontSize->8,
      FontWeight->Bold], 
     StyleBox["\<\"Mon 5 Aug 2019 16:25:35\"\>",
      StripOnInput->False,
      FontFamily->"Arial",
      FontSize->8,
      FontWeight->Bold]},
    {
     StyleBox["80",
      StripOnInput->False,
      FontFamily->"Arial",
      FontSize->8,
      FontWeight->Bold], 
     StyleBox["\<\"Mon 5 Aug 2019 16:11:51\"\>",
      StripOnInput->False,
      FontFamily->"Arial",
      FontSize->8,
      FontWeight->Bold]},
    {
     StyleBox["76",
      StripOnInput->False,
      FontFamily->"Arial",
      FontSize->8,
      FontWeight->Bold], 
     StyleBox["\<\"Tue 6 Aug 2019 08:56:17\"\>",
      StripOnInput->False,
      FontFamily->"Arial",
      FontSize->8,
      FontWeight->Bold]}
   },
   AutoDelete->False,
   FrameStyle->Directive[
     GrayLevel[0.85]],
   GridBoxBackground->{
    "Columns" -> {{None}}, 
     "Rows" -> {
      1 -> RGBColor[0.87, 0.94, 1], {
       1 -> RGBColor[0.87, 0.94, 1], 3 -> RGBColor[0.9, 0.9, 0.9], 5 -> 
        RGBColor[0.9, 0.9, 0.9], 7 -> RGBColor[0.9, 0.9, 0.9]}}, 
     "RowsIndexed" -> {
      1 -> RGBColor[0.87, 0.94, 1], 3 -> RGBColor[0.9, 0.9, 0.9], 5 -> 
       RGBColor[0.9, 0.9, 0.9], 7 -> RGBColor[0.9, 0.9, 0.9]}},
   GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{
    "Columns" -> {1, 1, 1}, "Rows" -> {0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5}}],
  "Grid"]], "Output",
 CellChangeTimes->{{3.774188229228318*^9, 3.7741882453443565`*^9}},
 CellLabel->
  "Out[686]=",ExpressionUUID->"74ea5497-2fe8-43da-93bf-34d068cb6667"],

Cell[BoxData["Grid"], "Output",
 CellChangeTimes->{{3.774188229228318*^9, 3.7741882453503537`*^9}},
 CellLabel->
  "Out[687]=",ExpressionUUID->"2411946d-5840-454f-a306-fe248a045f21"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Framed", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"grd", "[", 
    RowBox[{"readingsDS", ",", "5"}], "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"ImageSize", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"wPX", "[", "200", "]"}], ",", 
      RowBox[{"hPX", "[", 
       RowBox[{"200", ",", "16", ",", "9"}], "]"}]}], "}"}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"FrameMargins", "\[Rule]", "2"}], ",", 
   RowBox[{"FrameStyle", "\[Rule]", "Red"}], ",", 
   RowBox[{"Alignment", "\[Rule]", "Center"}]}], "\[IndentingNewLine]", 
  "]"}]], "Input",
 CellChangeTimes->{3.774188278157321*^9},
 CellLabel->
  "In[689]:=",ExpressionUUID->"429d0a26-f02e-461b-9984-580f4da81f17"],

Cell[BoxData[
 FrameBox[
  TagBox[GridBox[{
     {
      StyleBox["\<\"reading\"\>",
       StripOnInput->False,
       FontFamily->"Alegreya SC",
       FontSize->14,
       FontWeight->Bold], 
      StyleBox["\<\"Timestamp\"\>",
       StripOnInput->False,
       FontFamily->"Alegreya SC",
       FontSize->14,
       FontWeight->Bold]},
     {
      StyleBox["87",
       StripOnInput->False,
       FontFamily->"Arial",
       FontSize->8,
       FontWeight->Bold], 
      StyleBox["\<\"Mon 5 Aug 2019 14:56:54\"\>",
       StripOnInput->False,
       FontFamily->"Arial",
       FontSize->8,
       FontWeight->Bold]},
     {
      StyleBox["84",
       StripOnInput->False,
       FontFamily->"Arial",
       FontSize->8,
       FontWeight->Bold], 
      StyleBox["\<\"Mon 5 Aug 2019 15:56:32\"\>",
       StripOnInput->False,
       FontFamily->"Arial",
       FontSize->8,
       FontWeight->Bold]},
     {
      StyleBox["80",
       StripOnInput->False,
       FontFamily->"Arial",
       FontSize->8,
       FontWeight->Bold], 
      StyleBox["\<\"Mon 5 Aug 2019 16:25:35\"\>",
       StripOnInput->False,
       FontFamily->"Arial",
       FontSize->8,
       FontWeight->Bold]},
     {
      StyleBox["80",
       StripOnInput->False,
       FontFamily->"Arial",
       FontSize->8,
       FontWeight->Bold], 
      StyleBox["\<\"Mon 5 Aug 2019 16:11:51\"\>",
       StripOnInput->False,
       FontFamily->"Arial",
       FontSize->8,
       FontWeight->Bold]},
     {
      StyleBox["76",
       StripOnInput->False,
       FontFamily->"Arial",
       FontSize->8,
       FontWeight->Bold], 
      StyleBox["\<\"Tue 6 Aug 2019 08:56:17\"\>",
       StripOnInput->False,
       FontFamily->"Arial",
       FontSize->8,
       FontWeight->Bold]}
    },
    AutoDelete->False,
    FrameStyle->Directive[
      GrayLevel[0.85]],
    GridBoxBackground->{
     "Columns" -> {{None}}, 
      "Rows" -> {
       1 -> RGBColor[0.87, 0.94, 1], {
        1 -> RGBColor[0.87, 0.94, 1], 3 -> RGBColor[0.9, 0.9, 0.9], 5 -> 
         RGBColor[0.9, 0.9, 0.9], 7 -> RGBColor[0.9, 0.9, 0.9]}}, 
      "RowsIndexed" -> {
       1 -> RGBColor[0.87, 0.94, 1], 3 -> RGBColor[0.9, 0.9, 0.9], 5 -> 
        RGBColor[0.9, 0.9, 0.9], 7 -> RGBColor[0.9, 0.9, 0.9]}},
    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
    GridBoxSpacings->{
     "Columns" -> {1, 1, 1}, "Rows" -> {0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5}}],
   "Grid"],
  Alignment->Center,
  FrameMargins->2,
  FrameStyle->RGBColor[1, 0, 0],
  ImageSize->{200, 112.5},
  StripOnInput->False]], "Output",
 CellChangeTimes->{{3.774188264757325*^9, 3.774188280977318*^9}},
 CellLabel->
  "Out[689]=",ExpressionUUID->"091fa4c7-688d-4691-8f55-55069d2f7644"]
}, Open  ]],

Cell["Make the gauge ", "Text",
 CellChangeTimes->{{3.773489047171769*^9, 3.7734890682607613`*^9}, {
   3.7735025234328227`*^9, 3.7735025312738194`*^9}, 
   3.774009551102806*^9},ExpressionUUID->"ef11ce72-9815-4f83-bf1e-\
dcc5741f630b"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"ClearAll", "[", "colors", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"colors", "=", 
   RowBox[{"{", 
    RowBox[{
    "Red", ",", "LightRed", ",", "Yellow", ",", "LightGreen", ",", "Green"}], 
    "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Normal", "[", 
  RowBox[{"AssociationThread", "[", 
   RowBox[{
    RowBox[{"Transpose", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Range", "[", 
        RowBox[{"0", ",", "90", ",", "10"}], "]"}], ",", 
       RowBox[{"Range", "[", 
        RowBox[{"10", ",", "100", ",", "10"}], "]"}]}], "}"}], "]"}], ",", 
    RowBox[{"Flatten", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "Red", ",", "LightRed", ",", "Yellow", ",", "LightYellow", ",", 
         "Green"}], "}"}], ",", 
       RowBox[{"Reverse", "[", 
        RowBox[{"{", 
         RowBox[{
         "Red", ",", "LightRed", ",", "Yellow", ",", "LightYellow", ",", 
          "Green"}], "}"}], "]"}]}], "}"}], "]"}]}], "]"}], "]"}]}], "Input",
 CellChangeTimes->{{3.7740095986077814`*^9, 3.774009615440837*^9}},
 CellLabel->
  "In[690]:=",ExpressionUUID->"dd3d2102-3cf3-45ae-89b4-09ac6e71ed3b"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"0", ",", "10"}], "}"}], "\[Rule]", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        DefaultBaseStyle->"ColorSwatchGraphics",
        Frame->True,
        FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       StyleBox[
        RowBox[{"RGBColor", "[", 
          RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> False]],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[1, 0, 0],
     Editable->False,
     Selectable->False]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"10", ",", "20"}], "}"}], "\[Rule]", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[1, 0.85, 0.85], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        DefaultBaseStyle->"ColorSwatchGraphics",
        Frame->True,
        FrameStyle->RGBColor[
         0.6666666666666666, 0.5666666666666667, 0.5666666666666667],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       StyleBox[
        RowBox[{"RGBColor", "[", 
          RowBox[{"1", ",", "0.85`", ",", "0.85`"}], "]"}], NumberMarks -> 
        False]],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = 
          RGBColor[1, 0.85, 0.85]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[1, 0.85, 0.85],
     Editable->False,
     Selectable->False]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"20", ",", "30"}], "}"}], "\[Rule]", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[1, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        DefaultBaseStyle->"ColorSwatchGraphics",
        Frame->True,
        FrameStyle->RGBColor[0.6666666666666666, 0.6666666666666666, 0.],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       StyleBox[
        RowBox[{"RGBColor", "[", 
          RowBox[{"1", ",", "1", ",", "0"}], "]"}], NumberMarks -> False]],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 1, 0]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[1, 1, 0],
     Editable->False,
     Selectable->False]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"30", ",", "40"}], "}"}], "\[Rule]", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[1, 1, 0.85], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        DefaultBaseStyle->"ColorSwatchGraphics",
        Frame->True,
        FrameStyle->RGBColor[
         0.6666666666666666, 0.6666666666666666, 0.5666666666666667],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       StyleBox[
        RowBox[{"RGBColor", "[", 
          RowBox[{"1", ",", "1", ",", "0.85`"}], "]"}], NumberMarks -> False]],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 1, 0.85]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[1, 1, 0.85],
     Editable->False,
     Selectable->False]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"40", ",", "50"}], "}"}], "\[Rule]", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        DefaultBaseStyle->"ColorSwatchGraphics",
        Frame->True,
        FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       StyleBox[
        RowBox[{"RGBColor", "[", 
          RowBox[{"0", ",", "1", ",", "0"}], "]"}], NumberMarks -> False]],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[0, 1, 0],
     Editable->False,
     Selectable->False]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"50", ",", "60"}], "}"}], "\[Rule]", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        DefaultBaseStyle->"ColorSwatchGraphics",
        Frame->True,
        FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       StyleBox[
        RowBox[{"RGBColor", "[", 
          RowBox[{"0", ",", "1", ",", "0"}], "]"}], NumberMarks -> False]],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[0, 1, 0],
     Editable->False,
     Selectable->False]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"60", ",", "70"}], "}"}], "\[Rule]", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[1, 1, 0.85], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        DefaultBaseStyle->"ColorSwatchGraphics",
        Frame->True,
        FrameStyle->RGBColor[
         0.6666666666666666, 0.6666666666666666, 0.5666666666666667],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       StyleBox[
        RowBox[{"RGBColor", "[", 
          RowBox[{"1", ",", "1", ",", "0.85`"}], "]"}], NumberMarks -> False]],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 1, 0.85]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[1, 1, 0.85],
     Editable->False,
     Selectable->False]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"70", ",", "80"}], "}"}], "\[Rule]", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[1, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        DefaultBaseStyle->"ColorSwatchGraphics",
        Frame->True,
        FrameStyle->RGBColor[0.6666666666666666, 0.6666666666666666, 0.],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       StyleBox[
        RowBox[{"RGBColor", "[", 
          RowBox[{"1", ",", "1", ",", "0"}], "]"}], NumberMarks -> False]],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 1, 0]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[1, 1, 0],
     Editable->False,
     Selectable->False]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"80", ",", "90"}], "}"}], "\[Rule]", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[1, 0.85, 0.85], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        DefaultBaseStyle->"ColorSwatchGraphics",
        Frame->True,
        FrameStyle->RGBColor[
         0.6666666666666666, 0.5666666666666667, 0.5666666666666667],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       StyleBox[
        RowBox[{"RGBColor", "[", 
          RowBox[{"1", ",", "0.85`", ",", "0.85`"}], "]"}], NumberMarks -> 
        False]],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = 
          RGBColor[1, 0.85, 0.85]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[1, 0.85, 0.85],
     Editable->False,
     Selectable->False]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"90", ",", "100"}], "}"}], "\[Rule]", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        DefaultBaseStyle->"ColorSwatchGraphics",
        Frame->True,
        FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       StyleBox[
        RowBox[{"RGBColor", "[", 
          RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> False]],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[1, 0, 0],
     Editable->False,
     Selectable->False]}]}], "}"}]], "Output",
 CellChangeTimes->{3.7741883209926558`*^9},
 CellLabel->
  "Out[692]=",ExpressionUUID->"52f4358a-4b1b-4c27-a1c5-9740b2e3ee8f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"ClearAll", "[", "ag", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ag", "[", "fr_", "]"}], ":=", 
  RowBox[{"AngularGauge", "[", "\[IndentingNewLine]", 
   RowBox[{"fr", ",", "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "100"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"ImageSize", "\[Rule]", "125"}], ",", "\[IndentingNewLine]", 
    RowBox[{"TicksStyle", "\[Rule]", "Black"}], ",", "\[IndentingNewLine]", 
    RowBox[{"GaugeLabels", "\[Rule]", "Automatic"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"GaugeFaceElementFunction", "\[Rule]", "\"\<GlassSector\>\""}], 
    ",", "\[IndentingNewLine]", 
    RowBox[{"GaugeFaceStyle", "\[Rule]", "LightBlue"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"ScaleRanges", "\[Rule]", 
     RowBox[{"Normal", "[", 
      RowBox[{"AssociationThread", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Transpose", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Range", "[", 
            RowBox[{"0", ",", "90", ",", "10"}], "]"}], ",", 
           RowBox[{"Range", "[", 
            RowBox[{"10", ",", "100", ",", "10"}], "]"}]}], "}"}], "]"}], ",",
         "\[IndentingNewLine]", 
        RowBox[{"Flatten", "[", 
         RowBox[{"{", 
          RowBox[{"colors", ",", 
           RowBox[{"Reverse", "[", "colors", "]"}]}], "}"}], "]"}]}], "]"}], 
      "\[IndentingNewLine]", "]"}]}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"ag", "[", 
  RowBox[{"readingsDS", "[", 
   RowBox[{"First", ",", "\"\<reading\>\""}], "]"}], "]"}]}], "Input",
 CellChangeTimes->{{3.7740096585378723`*^9, 3.774009661067855*^9}, {
   3.7740097740113263`*^9, 3.774009775601292*^9}, {3.7740099091634855`*^9, 
   3.7740099658705435`*^9}, {3.7740100153565664`*^9, 
   3.7740100159645395`*^9}, {3.7740102279638166`*^9, 3.774010243635769*^9}, 
   3.774021858208909*^9, {3.774022989057035*^9, 3.77402300242262*^9}, {
   3.7740247853076143`*^9, 3.774024807673622*^9}},
 CellLabel->
  "In[693]:=",ExpressionUUID->"2eb8ab95-3257-46d8-922c-334c89da5974"],

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[0.87, 0.94, 1], EdgeForm[None], 
    GraphicsGroupBox[{GraphicsComplexBox[CompressedData["
1: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
ubZJl1n2mWhS39RpdWAy7B0zynDRnyx0iimIzq9WgP/JeVFHhudgfnvbS+nt
EmFpL++Vx2fnYvFUR+/+2vFw99urGU+7KXFmUGItb71oMNymbKIyVuL+FlGd
G7QLB6eLc/Z1zFfi4fidQ84kB8G6MQ8NC/qpMGbIglvN6iN0OTlkaO1NKhxh
a/WpO7jD15a7g4ZdVGH2m9r614NfQfPRPQuWPVDhlSEprc7l3IK2cv27E11j
41b8/V7W9H0cLffbakX3w8vyvBb96XlYIOuxjKH1oJ+s93VTWi8qZT/3/Gk/
WKs379d8Cu0Xz55iezxrR/bAaXpsrxPRZC88vo7tubke2RO/vGR7395E9sar
t9kfTmryByresL/ehZC/MPgH+7NbS/In1tvG/r5iT/6W+lUCVkq8YP2VQvRX
StFfJYj+SiX6qxjRX6lEfxUh+qs80V8Fi/4qT/RXKPqrPNFfuYn+Kl/0V7ai
v8oX/dV50V/li/7qieiv8kV/5Sz6q3zRX70T/VWe6K8CRX+VJ/qrUNFf5Yn+
Kkr0VyrRX8WJ/kol+qtE0V8pRX+VJPorpeivUkR/lSv6qzTRX2WL/ipD9FdZ
or/KFP1VhuivskV/lSb6qxzRX6WI/kop+qsk0V8pRX+VKPorleiv4kV/pRL9
VbTor/JEfxUm+qs80V8Fif4qT/RXvqK/yhf9lYvor/JFf2Ut+qt80V99Ef1V
vuivrEV/lS/6KxfRX+WJ/spX9Fd5or8KEv1VnuivwkR/pRL9VbTor1Siv4oX
/ZVS9FeJor9Siv4qSfRXOaK/ShH9Vbbor9JEf5Up+qsM0V9liP4qS/RXaaK/
yhb9VYror3JFf5Uk+iul6K8SRX+lFP1VnOivVKK/ihL9lUr0V6Giv8oT/VWg
6K/yRH/1TvRXeaK/chb9Vb7or56I/ipf9FfnRX+VL/orW9Ff5Yv+yk30V/mi
v0LRX+WJ/ipY9Fd5or+KEP1VnuivYkR/pRL9VYLor1Siv1KI/kop+qtk0V/l
iv4qVfRXOaK/Shf9VbborzJEf5Up+qss0V+li/4qR/RXqaK/yhX9VbLor5Si
v1KI/kol+qsE0V+pRH8VK/qrPNFfRYr+Kk/0VyGiv8oT/ZW/6K/yRH/lKfqr
fNFfOYj+Kl/0V3dEf5Uv+qs7or/KF/2Vg+iv8kR/5Sn6qzzRX/mL/ipP9Fch
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
91uyY2MaZGU/XNXqVjmevFZieTwqCW4dNDih278Cx+z9vUVTOwEUwxbNH/yy
AnX7LQwaGBkJMzfmfrWpV4mdUo0GXxwVBEZ+f3r0nVqJ8wft+qnZ1QOOKcav
O7m5Erees5i7J/spnJPrd/p0jc/k+4N60ffxpNyvbSLdD7sM5+cN603Pw3JZ
T9huWg/OzeH1drxK68WVZ3g/5zfSflBnNe8325P2i5bhbA/rnmQPvHmD7dWy
DtkLh/Zge64cRvbElbps704Pyd6Yeo/9saeY/IHTB7G/lqSTvzCoDfvzqTf5
E11t2d977Mnfcj5eDjaVeMHntyvl/PYyOb89S85vL5fz29Pk/PYKOb89Sc5v
r5Tz2xPk/PZKOb89Us5vr5Lz2wPl/PYqOb/dVc5vr5Lz203l/PYqOb/dVs5v
r5Lz233k/PYqOb89VM5vr5Lz22Pl/PYqOb9dIee3V8r57SlyfnuFnN+eIee3
V8j57Tlyfvv/18K94yQQhgEATLx/YWtHaUlhQaGRGGKIIQZBRERcWJZ97/95
BAunnjtM728/+ts7f3vub2/97YW/vfa3X/ztlb+98reX/vba31742xt/e+5v
b/3tJ39752/P/O29v33vbx/87Vt/e/K3r/3tyd++9LeHv33ubw9/+9TfHv72
sb/9199+9XDD///2sb89/O1Tf3v42+f+9uRvX/rbk7997W8f/O1bf3vvb9/7
2zt/e+Zvb/3tJ39742/P/e21v73wt1f+9tLffvG3V/72wt9e+9tzf3vrbz/6
2zt/+4+/vfe3f/nbB3/7h7998Lev/e3J3/7qbw9/+7O/Pfzt9/728Lff+tvD
337tbw9/+52/PfztT/728Le/+NvD3/7mb0/+9nd/e/K3f/rbB3/7t7+997dn
/vbO337yt7f+9rO/vfG3F/722t9e+ttLf3vlb7/42xt/+9nf3vrbc397528/
+tt7f/vB3z7423f+9uRv3/jbk7995W8Pf/vC3x7+9pm/PfztE397+NtH/vbw
t4/87eFvn/jbw98+87eHv33hb0/+9pW/PfnbN/72wd++87f3/vaDv73ztx/9
7a2/Pfe3N/72s7+98rdf/O2lv730txf+9trffva3N/72k7+99bdn/vbu8Q+2
z5K4
       "], {
        {Hue[0.67, 0.6, 0.6], EdgeForm[None], 
         GraphicsGroupBox[PolygonBox[CompressedData["
1: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
4COnRYw1bu7aaeZu5hpn8Dsb3zDf7h7m4h2cYE7eYd67eyPuKeULeMcZEZNL
ecT6xqe7hg9McQ+ah05dEHF+KQ1Dy86MmFbKB9D9GRHTS+k0Ojw7YlYpzUV7
z4qYWcoTNvTsVM9u4toMc7cy15mebW2us7xbS89O8Vlo/xyfCcYXznYODUVL
z4lYZIzWLnauvXuoLSzlG/jCgoj5pTyknfG8Uj66nu9qkrnQ+iXmbOsZeud6
l7bG7LS975S7PK+Ub+Aj50YsNd7etXPNva1rnLGOd+DsiX426PyFfkZoHLp2
S8TNpXwB77g4Ynkpj9jFeJlr+MAl7oEL77jInLxX6P4VEZeX8gF0/6qIK0vp
NDp8XcS1pTQX7b0m4upS7+Senr3Ms/u4dpW59zLXFZ7d11zXeDe86lLvyFlo
/wqfCcYXrncODUVLb4u41Ritvd25g91zq++oq++Mu7qplId0Nb7Rd7Gz7+oi
c6H1d5jzAM/Qe4N3OcCYnfANvkG+vbtLaTLafFfEncZHuHaXubu7xhm8i7yj
vJu8k3zL6Px9pb7p6/xzr16FdlXyBbzjoYgHS3lET+MHXMMHHnYPmodOvRPx
dikNQ8sei3i0lA+g+09EPF5Kp9HhZyKeLqW5aO9TEU+W8oTenn3Es31de8Lc
fcz1mGf7m+sp73acZx/2WWj/sz4TjC885xwaipa+GvGKMVr7mnPD3EPt5VK+
gS+8FPFiKQ8ZYvxCqW+Y7+zviL/Mhda/bs5BnqH3ee8yyJidRvtOucu3SvkG
PvJmxBvGo11709yjXHvduw3zri/52fxf5/2M0Dh07ceIH0r5Ajr/YcQHpTxi
nPH7ruEFH7kHLrzjPXOiI2jZpxGflPIBdP/ziM9K6TQ6/HXEV6U0F+39MuKL
Uho0ybMfe3aKa5+be7K5PvXsNHN96d0mevYjn4X2f+MzwfjCSufQULT054if
jNHaX5yb456ffEezfGfc1felPGSW8Xe+i9N8V++ZC63/1ZwzPUPvt95lpjE7
4Rv4yJ8Rf5T6RvlWf4/4zXiRa7+be4FrnMHvbXyjfJv3m4t38C9z9nAPNb55
fAHv4P/0579SHkEO/K9r+EBSqQfNQ6fWCbx2JQ1Dy/LAWSUfQPfLwEUlnUaH
GwSuX0lz0d5a4KqSJ8DBbFpplh5qcMANJ1ycgebDCVe9SrvBwSw7chbav0ql
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
           "]]]}, {}, {}, {}, {}},
       VertexColors->{
         Hue[0.576923076923077, 0.12254777070063695`, 0.615686274509804, 1.], 
         Hue[0.576923076923077, 0.12254777070063695`, 0.615686274509804, 1.], 
         Hue[0.576923076923077, 0.12254777070063695`, 0.615686274509804, 1.], 
         Hue[0.576923076923077, 0.12254777070063695`, 0.615686274509804, 1.], 
         Hue[0.576923076923077, 0.12254777070063695`, 0.615686274509804, 1.], 
         Hue[0.576923076923077, 0.12254777070063695`, 0.615686274509804, 1.], 
         Hue[0.576923076923077, 0.12254777070063695`, 0.615686274509804, 1.], 
         Hue[0.576923076923077, 0.12254777070063695`, 0.615686274509804, 1.], 
         Hue[0.576923076923077, 0.12254777070063695`, 0.615686274509804, 1.], 
         Hue[0.576923076923077, 0.12254777070063695`, 0.615686274509804, 1.], 
         Hue[0.576923076923077, 0.12254777070063695`, 0.615686274509804, 1.], 
         Hue[0.576923076923077, 0.12254777070063695`, 0.615686274509804, 1.], 
         Hue[0.576923076923077, 0.12254777070063695`, 0.615686274509804, 1.], 
         Hue[0.576923076923077, 0.12254777070063695`, 0.615686274509804, 1.], 
         Hue[0.576923076923077, 0.12254777070063695`, 0.615686274509804, 1.], 
         Hue[0.576923076923077, 0.12254777070063695`, 0.615686274509804, 1.], 
         Hue[0.576923076923077, 0.12254777070063695`, 0.615686274509804, 1.], 
         Hue[0.576923076923077, 0.12254777070063695`, 0.615686274509804, 1.], 
         Hue[0.576923076923077, 0.12254777070063695`, 0.615686274509804, 1.], 
         Hue[0.576923076923077, 0.12254777070063695`, 0.615686274509804, 1.], 
         Hue[0.576923076923077, 0.12254777070063695`, 0.615686274509804, 1.], 
         Hue[0.576923076923077, 0.12254777070063695`, 0.615686274509804, 1.], 
         Hue[0.576923076923077, 0.12254777070063695`, 0.615686274509804, 1.], 
         Hue[0.576923076923077, 0.12254777070063695`, 0.615686274509804, 1.], 
         Hue[0.576923076923077, 0.12254777070063695`, 0.615686274509804, 1.], 
         Hue[0.576923076923077, 0.12254777070063695`, 0.615686274509804, 1.], 
         Hue[0.576923076923077, 0.12254777070063695`, 0.615686274509804, 1.], 
         Hue[0.576923076923077, 0.12254777070063695`, 0.615686274509804, 1.], 
         Hue[0.576923076923077, 0.12254777070063695`, 0.615686274509804, 1.], 
         Hue[0.576923076923077, 0.12254777070063695`, 0.615686274509804, 1.], 
         Hue[0.576923076923077, 0.12254777070063695`, 0.615686274509804, 1.], 
         Hue[0.576923076923077, 0.12254777070063695`, 0.615686274509804, 1.], 
         Hue[0.576923076923077, 0.12254777070063695`, 0.615686274509804, 1.], 
         Hue[0.576923076923077, 0.12254777070063695`, 0.615686274509804, 1.], 
         Hue[0.576923076923077, 0.12254777070063695`, 0.615686274509804, 1.], 
         Hue[0.576923076923077, 0.12254777070063695`, 0.615686274509804, 1.], 
         Hue[0.576923076923077, 0.12254777070063695`, 0.615686274509804, 1.], 
         Hue[0.576923076923077, 0.12254777070063695`, 0.615686274509804, 1.], 
         Hue[0.576923076923077, 0.12254777070063695`, 0.615686274509804, 1.], 
         Hue[0.576923076923077, 0.12254777070063695`, 0.615686274509804, 1.], 
         Hue[0.576923076923077, 0.12254777070063695`, 0.615686274509804, 1.], 
         Hue[0.576923076923077, 0.12254777070063695`, 0.615686274509804, 1.], 
         Hue[0.576923076923077, 0.12254777070063695`, 0.615686274509804, 1.], 
         Hue[0.576923076923077, 0.12254777070063695`, 0.615686274509804, 1.], 
         Hue[0.576923076923077, 0.12254777070063695`, 0.615686274509804, 1.], 
         Hue[0.576923076923077, 0.12254777070063695`, 0.615686274509804, 1.], 
         Hue[0.576923076923077, 0.12254777070063695`, 0.615686274509804, 1.], 
         Hue[0.576923076923077, 0.12254777070063695`, 0.615686274509804, 1.], 
         Hue[0.576923076923077, 0.12254777070063695`, 0.615686274509804, 1.], 
         Hue[0.576923076923077, 0.12254777070063695`, 0.615686274509804, 1.], 
         Hue[0.576923076923077, 0.12254777070063695`, 0.615686274509804, 1.], 
         Hue[0.576923076923077, 0.12254777070063695`, 0.615686274509804, 1.], 
         Hue[0.576923076923077, 0.12254777070063695`, 0.615686274509804, 1.], 
         Hue[0.576923076923077, 0.12254777070063695`, 0.615686274509804, 1.], 
         Hue[0.576923076923077, 0.12254777070063695`, 0.615686274509804, 1.], 
         Hue[0.576923076923077, 0.12254777070063695`, 0.615686274509804, 1.], 
         Hue[0.576923076923077, 0.12254777070063695`, 0.615686274509804, 1.], 
         Hue[0.576923076923077, 0.12254777070063695`, 0.615686274509804, 1.], 
         Hue[0.576923076923077, 0.12254777070063695`, 0.615686274509804, 1.], 
         Hue[0.576923076923077, 0.12254777070063695`, 0.615686274509804, 1.], 
         Hue[0.576923076923077, 0.12254777070063695`, 0.615686274509804, 1.], 
         Hue[0.576923076923077, 0.12254777070063695`, 0.615686274509804, 1.], 
         Hue[0.576923076923077, 0.12254777070063695`, 0.615686274509804, 1.], 
         Hue[0.576923076923077, 0.12254777070063695`, 0.615686274509804, 1.], 
         Hue[0.576923076923077, 0.12254777070063695`, 0.615686274509804, 1.], 
         Hue[0.576923076923077, 0.12254777070063695`, 0.615686274509804, 1.], 
         Hue[0.576923076923077, 0.12254777070063695`, 0.615686274509804, 1.], 
         Hue[0.576923076923077, 0.12254777070063695`, 0.615686274509804, 1.], 
         Hue[0.576923076923077, 0.12254777070063695`, 0.615686274509804, 1.], 
         Hue[0.576923076923077, 0.12254777070063695`, 0.615686274509804, 1.], 
         Hue[0.576923076923077, 0.12254777070063695`, 0.615686274509804, 1.], 
         Hue[0.576923076923077, 0.12254777070063695`, 0.615686274509804, 1.], 
         Hue[0.576923076923077, 0.12254777070063695`, 0.615686274509804, 1.], 
         Hue[0.576923076923077, 0.12254777070063695`, 0.615686274509804, 1.], 
         Hue[0.576923076923077, 0.12254777070063695`, 0.615686274509804, 1.], 
         Hue[0.576923076923077, 0.12254777070063695`, 0.615686274509804, 1.], 
         Hue[0.576923076923077, 0.12254777070063695`, 0.615686274509804, 1.], 
         Hue[0.576923076923077, 0.12254777070063695`, 0.615686274509804, 1.], 
         Hue[0.576923076923077, 0.12254777070063695`, 0.615686274509804, 1.], 
         Hue[0.576923076923077, 0.12254777070063695`, 0.615686274509804, 1.], 
         Hue[0.576923076923077, 0.12254777070063695`, 0.615686274509804, 1.], 
         Hue[0.576923076923077, 0.12254777070063695`, 0.615686274509804, 1.], 
         Hue[0.576923076923077, 0.12254777070063695`, 0.615686274509804, 1.], 
         Hue[0.576923076923077, 0.12254777070063695`, 0.615686274509804, 1.], 
         Hue[0.576923076923077, 0.12254777070063695`, 0.615686274509804, 1.], 
         Hue[0.576923076923077, 0.12254777070063695`, 0.615686274509804, 1.], 
         Hue[0.576923076923077, 0.12254777070063695`, 0.615686274509804, 1.], 
         Hue[0.576923076923077, 0.12254777070063695`, 0.615686274509804, 1.], 
         Hue[0.576923076923077, 0.12254777070063695`, 0.615686274509804, 1.], 
         Hue[0.576923076923077, 0.12254777070063695`, 0.615686274509804, 1.], 
         Hue[0.576923076923077, 0.12254777070063695`, 0.615686274509804, 1.], 
         Hue[0.576923076923077, 0.12254777070063695`, 0.615686274509804, 1.], 
         Hue[0.576923076923077, 0.12254777070063695`, 0.615686274509804, 1.], 
         Hue[0.576923076923077, 0.12254777070063695`, 0.615686274509804, 1.], 
         Hue[0.576923076923077, 0.12254777070063695`, 0.615686274509804, 1.], 
         Hue[0.576923076923077, 0.12254777070063695`, 0.615686274509804, 1.], 
         Hue[0.576923076923077, 0.12254777070063695`, 0.615686274509804, 1.], 
         Hue[0.576923076923077, 0.12254777070063695`, 0.615686274509804, 1.], 
         Hue[0.576923076923077, 0.12254777070063695`, 0.615686274509804, 1.], 
         Hue[0.576923076923077, 0.12254777070063695`, 0.615686274509804, 1.], 
         Hue[0.576923076923077, 0.06186206896551724, 0.9549019607843137, 1.], 
         Hue[0.576923076923077, 0.06186206896551724, 0.9549019607843137, 1.], 
         Hue[0.576923076923077, 0.06186206896551724, 0.9549019607843137, 1.], 
         Hue[0.576923076923077, 0.06186206896551724, 0.9549019607843137, 1.], 
         Hue[0.576923076923077, 0.06186206896551724, 0.9549019607843137, 1.], 
         Hue[0.576923076923077, 0.06186206896551724, 0.9549019607843137, 1.], 
         Hue[0.576923076923077, 0.06186206896551724, 0.9549019607843137, 1.], 
         Hue[0.576923076923077, 0.06186206896551724, 0.9549019607843137, 1.], 
         Hue[0.576923076923077, 0.06186206896551724, 0.9549019607843137, 1.], 
         Hue[0.576923076923077, 0.06186206896551724, 0.9549019607843137, 1.], 
         Hue[0.576923076923077, 0.06186206896551724, 0.9549019607843137, 1.], 
         Hue[0.576923076923077, 0.06186206896551724, 0.9549019607843137, 1.], 
         Hue[0.576923076923077, 0.06186206896551724, 0.9549019607843137, 1.], 
         Hue[0.576923076923077, 0.06186206896551724, 0.9549019607843137, 1.], 
         Hue[0.576923076923077, 0.06186206896551724, 0.9549019607843137, 1.], 
         Hue[0.576923076923077, 0.06186206896551724, 0.9549019607843137, 1.], 
         Hue[0.576923076923077, 0.06186206896551724, 0.9549019607843137, 1.], 
         Hue[0.576923076923077, 0.06186206896551724, 0.9549019607843137, 1.], 
         Hue[0.576923076923077, 0.06186206896551724, 0.9549019607843137, 1.], 
         Hue[0.576923076923077, 0.06186206896551724, 0.9549019607843137, 1.], 
         Hue[0.576923076923077, 0.06186206896551724, 0.9549019607843137, 1.], 
         Hue[0.576923076923077, 0.06186206896551724, 0.9549019607843137, 1.], 
         Hue[0.576923076923077, 0.06186206896551724, 0.9549019607843137, 1.], 
         Hue[0.576923076923077, 0.06186206896551724, 0.9549019607843137, 1.], 
         Hue[0.576923076923077, 0.06186206896551724, 0.9549019607843137, 1.], 
         Hue[0.576923076923077, 0.06186206896551724, 0.9549019607843137, 1.], 
         Hue[0.576923076923077, 0.06186206896551724, 0.9549019607843137, 1.], 
         Hue[0.576923076923077, 0.06186206896551724, 0.9549019607843137, 1.], 
         Hue[0.576923076923077, 0.06186206896551724, 0.9549019607843137, 1.], 
         Hue[0.576923076923077, 0.06186206896551724, 0.9549019607843137, 1.], 
         Hue[0.576923076923077, 0.06186206896551724, 0.9549019607843137, 1.], 
         Hue[0.576923076923077, 0.06186206896551724, 0.9549019607843137, 1.], 
         Hue[0.576923076923077, 0.06186206896551724, 0.9549019607843137, 1.], 
         Hue[0.576923076923077, 0.06186206896551724, 0.9549019607843137, 1.], 
         Hue[0.576923076923077, 0.06186206896551724, 0.9549019607843137, 1.], 
         Hue[0.576923076923077, 0.06186206896551724, 0.9549019607843137, 1.], 
         Hue[0.576923076923077, 0.06186206896551724, 0.9549019607843137, 1.], 
         Hue[0.576923076923077, 0.06186206896551724, 0.9549019607843137, 1.], 
         Hue[0.576923076923077, 0.06186206896551724, 0.9549019607843137, 1.], 
         Hue[0.576923076923077, 0.06186206896551724, 0.9549019607843137, 1.], 
         Hue[0.576923076923077, 0.06186206896551724, 0.9549019607843137, 1.], 
         Hue[0.576923076923077, 0.06186206896551724, 0.9549019607843137, 1.], 
         Hue[0.576923076923077, 0.06186206896551724, 0.9549019607843137, 1.], 
         Hue[0.576923076923077, 0.06186206896551724, 0.9549019607843137, 1.], 
         Hue[0.576923076923077, 0.06186206896551724, 0.9549019607843137, 1.], 
         Hue[0.576923076923077, 0.06186206896551724, 0.9549019607843137, 1.], 
         Hue[0.576923076923077, 0.06186206896551724, 0.9549019607843137, 1.], 
         Hue[0.576923076923077, 0.06186206896551724, 0.9549019607843137, 1.], 
         Hue[0.576923076923077, 0.06186206896551724, 0.9549019607843137, 1.], 
         Hue[0.576923076923077, 0.06186206896551724, 0.9549019607843137, 1.], 
         Hue[0.576923076923077, 0.06186206896551724, 0.9549019607843137, 1.], 
         Hue[0.576923076923077, 0.06186206896551724, 0.9549019607843137, 1.], 
         Hue[0.576923076923077, 0.06186206896551724, 0.9549019607843137, 1.], 
         Hue[0.576923076923077, 0.06186206896551724, 0.9549019607843137, 1.], 
         Hue[0.576923076923077, 0.06186206896551724, 0.9549019607843137, 1.], 
         Hue[0.576923076923077, 0.06186206896551724, 0.9549019607843137, 1.], 
         Hue[0.576923076923077, 0.06186206896551724, 0.9549019607843137, 1.], 
         Hue[0.576923076923077, 0.06186206896551724, 0.9549019607843137, 1.], 
         Hue[0.576923076923077, 0.06186206896551724, 0.9549019607843137, 1.], 
         Hue[0.576923076923077, 0.06186206896551724, 0.9549019607843137, 1.], 
         Hue[0.576923076923077, 0.06186206896551724, 0.9549019607843137, 1.], 
         Hue[0.576923076923077, 0.06186206896551724, 0.9549019607843137, 1.], 
         Hue[0.576923076923077, 0.06186206896551724, 0.9549019607843137, 1.], 
         Hue[0.576923076923077, 0.06186206896551724, 0.9549019607843137, 1.], 
         Hue[0.576923076923077, 0.06186206896551724, 0.9549019607843137, 1.], 
         Hue[0.576923076923077, 0.06186206896551724, 0.9549019607843137, 1.], 
         Hue[0.576923076923077, 0.06186206896551724, 0.9549019607843137, 1.], 
         Hue[0.576923076923077, 0.06186206896551724, 0.9549019607843137, 1.], 
         Hue[0.576923076923077, 0.06186206896551724, 0.9549019607843137, 1.], 
         Hue[0.576923076923077, 0.06186206896551724, 0.9549019607843137, 1.], 
         Hue[0.576923076923077, 0.06186206896551724, 0.9549019607843137, 1.], 
         Hue[0.576923076923077, 0.06186206896551724, 0.9549019607843137, 1.], 
         Hue[0.576923076923077, 0.06186206896551724, 0.9549019607843137, 1.], 
         Hue[0.576923076923077, 0.06186206896551724, 0.9549019607843137, 1.], 
         Hue[0.576923076923077, 0.06186206896551724, 0.9549019607843137, 1.], 
         Hue[0.576923076923077, 0.06186206896551724, 0.9549019607843137, 1.], 
         Hue[0.576923076923077, 0.06186206896551724, 0.9549019607843137, 1.], 
         Hue[0.576923076923077, 0.06186206896551724, 0.9549019607843137, 1.], 
         Hue[0.576923076923077, 0.06186206896551724, 0.9549019607843137, 1.], 
         Hue[0.576923076923077, 0.06186206896551724, 0.9549019607843137, 1.], 
         Hue[0.576923076923077, 0.06186206896551724, 0.9549019607843137, 1.], 
         Hue[0.576923076923077, 0.06186206896551724, 0.9549019607843137, 1.], 
         Hue[0.576923076923077, 0.06186206896551724, 0.9549019607843137, 1.], 
         Hue[0.576923076923077, 0.06186206896551724, 0.9549019607843137, 1.], 
         Hue[0.576923076923077, 0.06186206896551724, 0.9549019607843137, 1.], 
         Hue[0.576923076923077, 0.06186206896551724, 0.9549019607843137, 1.], 
         Hue[0.576923076923077, 0.06186206896551724, 0.9549019607843137, 1.], 
         Hue[0.576923076923077, 0.06186206896551724, 0.9549019607843137, 1.], 
         Hue[0.576923076923077, 0.06186206896551724, 0.9549019607843137, 1.], 
         Hue[0.576923076923077, 0.06186206896551724, 0.9549019607843137, 1.], 
         Hue[0.576923076923077, 0.06186206896551724, 0.9549019607843137, 1.], 
         Hue[0.576923076923077, 0.06186206896551724, 0.9549019607843137, 1.], 
         Hue[0.576923076923077, 0.06186206896551724, 0.9549019607843137, 1.], 
         Hue[0.576923076923077, 0.06186206896551724, 0.9549019607843137, 1.], 
         Hue[0.576923076923077, 0.06186206896551724, 0.9549019607843137, 1.], 
         Hue[0.576923076923077, 0.06186206896551724, 0.9549019607843137, 1.], 
         Hue[0.576923076923077, 0.06186206896551724, 0.9549019607843137, 1.], 
         Hue[0.576923076923077, 0.06186206896551724, 0.9549019607843137, 1.], 
         Hue[0.576923076923077, 0.06186206896551724, 0.9549019607843137, 1.], 
         Hue[0.576923076923077, 0.06186206896551724, 0.9549019607843137, 1.], 
         Hue[0.576923076923077, 0.0030588235294117683`, 1., 1.], 
         Hue[0.576923076923077, 0.0030588235294117683`, 1., 1.], 
         Hue[0.576923076923077, 0.0030588235294117683`, 1., 1.], 
         Hue[0.576923076923077, 0.0030588235294117683`, 1., 1.], 
         Hue[0.576923076923077, 0.0030588235294117683`, 1., 1.], 
         Hue[0.576923076923077, 0.0030588235294117683`, 1., 1.], 
         Hue[0.576923076923077, 0.0030588235294117683`, 1., 1.], 
         Hue[0.576923076923077, 0.0030588235294117683`, 1., 1.], 
         Hue[0.576923076923077, 0.0030588235294117683`, 1., 1.], 
         Hue[0.576923076923077, 0.0030588235294117683`, 1., 1.], 
         Hue[0.576923076923077, 0.0030588235294117683`, 1., 1.], 
         Hue[0.576923076923077, 0.0030588235294117683`, 1., 1.], 
         Hue[0.576923076923077, 0.0030588235294117683`, 1., 1.], 
         Hue[0.576923076923077, 0.0030588235294117683`, 1., 1.], 
         Hue[0.576923076923077, 0.0030588235294117683`, 1., 1.], 
         Hue[0.576923076923077, 0.0030588235294117683`, 1., 1.], 
         Hue[0.576923076923077, 0.0030588235294117683`, 1., 1.], 
         Hue[0.576923076923077, 0.0030588235294117683`, 1., 1.], 
         Hue[0.576923076923077, 0.0030588235294117683`, 1., 1.], 
         Hue[0.576923076923077, 0.0030588235294117683`, 1., 1.], 
         Hue[0.576923076923077, 0.0030588235294117683`, 1., 1.], 
         Hue[0.576923076923077, 0.0030588235294117683`, 1., 1.], 
         Hue[0.576923076923077, 0.0030588235294117683`, 1., 1.], 
         Hue[0.576923076923077, 0.0030588235294117683`, 1., 1.], 
         Hue[0.576923076923077, 0.0030588235294117683`, 1., 1.], 
         Hue[0.576923076923077, 0.0030588235294117683`, 1., 1.], 
         Hue[0.576923076923077, 0.0030588235294117683`, 1., 1.], 
         Hue[0.576923076923077, 0.0030588235294117683`, 1., 1.], 
         Hue[0.576923076923077, 0.0030588235294117683`, 1., 1.], 
         Hue[0.576923076923077, 0.0030588235294117683`, 1., 1.], 
         Hue[0.576923076923077, 0.0030588235294117683`, 1., 1.], 
         Hue[0.576923076923077, 0.0030588235294117683`, 1., 1.], 
         Hue[0.576923076923077, 0.0030588235294117683`, 1., 1.], 
         Hue[0.576923076923077, 0.0030588235294117683`, 1., 1.], 
         Hue[0.576923076923077, 0.0030588235294117683`, 1., 1.], 
         Hue[0.576923076923077, 0.0030588235294117683`, 1., 1.], 
         Hue[0.576923076923077, 0.0030588235294117683`, 1., 1.], 
         Hue[0.576923076923077, 0.0030588235294117683`, 1., 1.], 
         Hue[0.576923076923077, 0.0030588235294117683`, 1., 1.], 
         Hue[0.576923076923077, 0.0030588235294117683`, 1., 1.], 
         Hue[0.576923076923077, 0.0030588235294117683`, 1., 1.], 
         Hue[0.576923076923077, 0.0030588235294117683`, 1., 1.], 
         Hue[0.576923076923077, 0.0030588235294117683`, 1., 1.], 
         Hue[0.576923076923077, 0.0030588235294117683`, 1., 1.], 
         Hue[0.576923076923077, 0.0030588235294117683`, 1., 1.], 
         Hue[0.576923076923077, 0.0030588235294117683`, 1., 1.], 
         Hue[0.576923076923077, 0.0030588235294117683`, 1., 1.], 
         Hue[0.576923076923077, 0.0030588235294117683`, 1., 1.], 
         Hue[0.576923076923077, 0.0030588235294117683`, 1., 1.], 
         Hue[0.576923076923077, 0.0030588235294117683`, 1., 1.], 
         Hue[0.576923076923077, 0.0030588235294117683`, 1., 1.], 
         Hue[0.576923076923077, 0.0030588235294117683`, 1., 1.], 
         Hue[0.576923076923077, 0.0030588235294117683`, 1., 1.], 
         Hue[0.576923076923077, 0.0030588235294117683`, 1., 1.], 
         Hue[0.576923076923077, 0.0030588235294117683`, 1., 1.], 
         Hue[0.576923076923077, 0.0030588235294117683`, 1., 1.], 
         Hue[0.576923076923077, 0.0030588235294117683`, 1., 1.], 
         Hue[0.576923076923077, 0.0030588235294117683`, 1., 1.], 
         Hue[0.576923076923077, 0.0030588235294117683`, 1., 1.], 
         Hue[0.576923076923077, 0.0030588235294117683`, 1., 1.], 
         Hue[0.576923076923077, 0.0030588235294117683`, 1., 1.], 
         Hue[0.576923076923077, 0.0030588235294117683`, 1., 1.], 
         Hue[0.576923076923077, 0.0030588235294117683`, 1., 1.], 
         Hue[0.576923076923077, 0.0030588235294117683`, 1., 1.], 
         Hue[0.576923076923077, 0.0030588235294117683`, 1., 1.], 
         Hue[0.576923076923077, 0.0030588235294117683`, 1., 1.], 
         Hue[0.576923076923077, 0.0030588235294117683`, 1., 1.], 
         Hue[0.576923076923077, 0.0030588235294117683`, 1., 1.], 
         Hue[0.576923076923077, 0.0030588235294117683`, 1., 1.], 
         Hue[0.576923076923077, 0.0030588235294117683`, 1., 1.], 
         Hue[0.576923076923077, 0.0030588235294117683`, 1., 1.], 
         Hue[0.576923076923077, 0.0030588235294117683`, 1., 1.], 
         Hue[0.576923076923077, 0.0030588235294117683`, 1., 1.], 
         Hue[0.576923076923077, 0.0030588235294117683`, 1., 1.], 
         Hue[0.576923076923077, 0.0030588235294117683`, 1., 1.], 
         Hue[0.576923076923077, 0.0030588235294117683`, 1., 1.], 
         Hue[0.576923076923077, 0.0030588235294117683`, 1., 1.], 
         Hue[0.576923076923077, 0.0030588235294117683`, 1., 1.], 
         Hue[0.576923076923077, 0.0030588235294117683`, 1., 1.], 
         Hue[0.576923076923077, 0.0030588235294117683`, 1., 1.], 
         Hue[0.576923076923077, 0.0030588235294117683`, 1., 1.], 
         Hue[0.576923076923077, 0.0030588235294117683`, 1., 1.], 
         Hue[0.576923076923077, 0.0030588235294117683`, 1., 1.], 
         Hue[0.576923076923077, 0.0030588235294117683`, 1., 1.], 
         Hue[0.576923076923077, 0.0030588235294117683`, 1., 1.], 
         Hue[0.576923076923077, 0.0030588235294117683`, 1., 1.], 
         Hue[0.576923076923077, 0.0030588235294117683`, 1., 1.], 
         Hue[0.576923076923077, 0.0030588235294117683`, 1., 1.], 
         Hue[0.576923076923077, 0.0030588235294117683`, 1., 1.], 
         Hue[0.576923076923077, 0.0030588235294117683`, 1., 1.], 
         Hue[0.576923076923077, 0.0030588235294117683`, 1., 1.], 
         Hue[0.576923076923077, 0.0030588235294117683`, 1., 1.], 
         Hue[0.576923076923077, 0.0030588235294117683`, 1., 1.], 
         Hue[0.576923076923077, 0.0030588235294117683`, 1., 1.], 
         Hue[0.576923076923077, 0.0030588235294117683`, 1., 1.], 
         Hue[0.576923076923077, 0.0030588235294117683`, 1., 1.], 
         Hue[0.576923076923077, 0.0030588235294117683`, 1., 1.], 
         Hue[0.576923076923077, 0.0030588235294117683`, 1., 1.], 
         Hue[0.576923076923077, 0.0030588235294117683`, 1., 1.], 
         Hue[0.576923076923077, 0.0030588235294117683`, 1., 1.], 
         Hue[0.576923076923077, 0.04715686274509805, 1., 1.], 
         Hue[0.576923076923077, 0.04715686274509805, 1., 1.], 
         Hue[0.576923076923077, 0.04715686274509805, 1., 1.], 
         Hue[0.576923076923077, 0.04715686274509805, 1., 1.], 
         Hue[0.576923076923077, 0.04715686274509805, 1., 1.], 
         Hue[0.576923076923077, 0.04715686274509805, 1., 1.], 
         Hue[0.576923076923077, 0.04715686274509805, 1., 1.], 
         Hue[0.576923076923077, 0.04715686274509805, 1., 1.], 
         Hue[0.576923076923077, 0.04715686274509805, 1., 1.], 
         Hue[0.576923076923077, 0.04715686274509805, 1., 1.], 
         Hue[0.576923076923077, 0.04715686274509805, 1., 1.], 
         Hue[0.576923076923077, 0.04715686274509805, 1., 1.], 
         Hue[0.576923076923077, 0.04715686274509805, 1., 1.], 
         Hue[0.576923076923077, 0.04715686274509805, 1., 1.], 
         Hue[0.576923076923077, 0.04715686274509805, 1., 1.], 
         Hue[0.576923076923077, 0.04715686274509805, 1., 1.], 
         Hue[0.576923076923077, 0.04715686274509805, 1., 1.], 
         Hue[0.576923076923077, 0.04715686274509805, 1., 1.], 
         Hue[0.576923076923077, 0.04715686274509805, 1., 1.], 
         Hue[0.576923076923077, 0.04715686274509805, 1., 1.], 
         Hue[0.576923076923077, 0.04715686274509805, 1., 1.], 
         Hue[0.576923076923077, 0.04715686274509805, 1., 1.], 
         Hue[0.576923076923077, 0.04715686274509805, 1., 1.], 
         Hue[0.576923076923077, 0.04715686274509805, 1., 1.], 
         Hue[0.576923076923077, 0.04715686274509805, 1., 1.], 
         Hue[0.576923076923077, 0.04715686274509805, 1., 1.], 
         Hue[0.576923076923077, 0.04715686274509805, 1., 1.], 
         Hue[0.576923076923077, 0.04715686274509805, 1., 1.], 
         Hue[0.576923076923077, 0.04715686274509805, 1., 1.], 
         Hue[0.576923076923077, 0.04715686274509805, 1., 1.], 
         Hue[0.576923076923077, 0.04715686274509805, 1., 1.], 
         Hue[0.576923076923077, 0.04715686274509805, 1., 1.], 
         Hue[0.576923076923077, 0.04715686274509805, 1., 1.], 
         Hue[0.576923076923077, 0.04715686274509805, 1., 1.], 
         Hue[0.576923076923077, 0.04715686274509805, 1., 1.], 
         Hue[0.576923076923077, 0.04715686274509805, 1., 1.], 
         Hue[0.576923076923077, 0.04715686274509805, 1., 1.], 
         Hue[0.576923076923077, 0.04715686274509805, 1., 1.], 
         Hue[0.576923076923077, 0.04715686274509805, 1., 1.], 
         Hue[0.576923076923077, 0.04715686274509805, 1., 1.], 
         Hue[0.576923076923077, 0.04715686274509805, 1., 1.], 
         Hue[0.576923076923077, 0.04715686274509805, 1., 1.], 
         Hue[0.576923076923077, 0.04715686274509805, 1., 1.], 
         Hue[0.576923076923077, 0.04715686274509805, 1., 1.], 
         Hue[0.576923076923077, 0.04715686274509805, 1., 1.], 
         Hue[0.576923076923077, 0.04715686274509805, 1., 1.], 
         Hue[0.576923076923077, 0.04715686274509805, 1., 1.], 
         Hue[0.576923076923077, 0.04715686274509805, 1., 1.], 
         Hue[0.576923076923077, 0.04715686274509805, 1., 1.], 
         Hue[0.576923076923077, 0.04715686274509805, 1., 1.], 
         Hue[0.576923076923077, 0.04715686274509805, 1., 1.], 
         Hue[0.576923076923077, 0.04715686274509805, 1., 1.], 
         Hue[0.576923076923077, 0.04715686274509805, 1., 1.], 
         Hue[0.576923076923077, 0.04715686274509805, 1., 1.], 
         Hue[0.576923076923077, 0.04715686274509805, 1., 1.], 
         Hue[0.576923076923077, 0.04715686274509805, 1., 1.], 
         Hue[0.576923076923077, 0.04715686274509805, 1., 1.], 
         Hue[0.576923076923077, 0.04715686274509805, 1., 1.], 
         Hue[0.576923076923077, 0.04715686274509805, 1., 1.], 
         Hue[0.576923076923077, 0.04715686274509805, 1., 1.], 
         Hue[0.576923076923077, 0.04715686274509805, 1., 1.], 
         Hue[0.576923076923077, 0.04715686274509805, 1., 1.], 
         Hue[0.576923076923077, 0.04715686274509805, 1., 1.], 
         Hue[0.576923076923077, 0.04715686274509805, 1., 1.], 
         Hue[0.576923076923077, 0.04715686274509805, 1., 1.], 
         Hue[0.576923076923077, 0.04715686274509805, 1., 1.], 
         Hue[0.576923076923077, 0.04715686274509805, 1., 1.], 
         Hue[0.576923076923077, 0.04715686274509805, 1., 1.], 
         Hue[0.576923076923077, 0.04715686274509805, 1., 1.], 
         Hue[0.576923076923077, 0.04715686274509805, 1., 1.], 
         Hue[0.576923076923077, 0.04715686274509805, 1., 1.], 
         Hue[0.576923076923077, 0.04715686274509805, 1., 1.], 
         Hue[0.576923076923077, 0.04715686274509805, 1., 1.], 
         Hue[0.576923076923077, 0.04715686274509805, 1., 1.], 
         Hue[0.576923076923077, 0.04715686274509805, 1., 1.], 
         Hue[0.576923076923077, 0.04715686274509805, 1., 1.], 
         Hue[0.576923076923077, 0.04715686274509805, 1., 1.], 
         Hue[0.576923076923077, 0.04715686274509805, 1., 1.], 
         Hue[0.576923076923077, 0.04715686274509805, 1., 1.], 
         Hue[0.576923076923077, 0.04715686274509805, 1., 1.], 
         Hue[0.576923076923077, 0.04715686274509805, 1., 1.], 
         Hue[0.576923076923077, 0.04715686274509805, 1., 1.], 
         Hue[0.576923076923077, 0.04715686274509805, 1., 1.], 
         Hue[0.576923076923077, 0.04715686274509805, 1., 1.], 
         Hue[0.576923076923077, 0.04715686274509805, 1., 1.], 
         Hue[0.576923076923077, 0.04715686274509805, 1., 1.], 
         Hue[0.576923076923077, 0.04715686274509805, 1., 1.], 
         Hue[0.576923076923077, 0.04715686274509805, 1., 1.], 
         Hue[0.576923076923077, 0.04715686274509805, 1., 1.], 
         Hue[0.576923076923077, 0.04715686274509805, 1., 1.], 
         Hue[0.576923076923077, 0.04715686274509805, 1., 1.], 
         Hue[0.576923076923077, 0.04715686274509805, 1., 1.], 
         Hue[0.576923076923077, 0.04715686274509805, 1., 1.], 
         Hue[0.576923076923077, 0.04715686274509805, 1., 1.], 
         Hue[0.576923076923077, 0.04715686274509805, 1., 1.], 
         Hue[0.576923076923077, 0.04715686274509805, 1., 1.], 
         Hue[0.576923076923077, 0.04715686274509805, 1., 1.], 
         Hue[0.576923076923077, 0.04715686274509805, 1., 1.], 
         Hue[0.576923076923077, 0.04715686274509805, 1., 1.], 
         Hue[0.576923076923077, 0.04715686274509805, 1., 1.], 
         Hue[0.576923076923077, 0.08919282511210762, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.08919282511210762, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.08919282511210762, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.08919282511210762, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.08919282511210762, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.08919282511210762, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.08919282511210762, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.08919282511210762, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.08919282511210762, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.08919282511210762, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.08919282511210762, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.08919282511210762, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.08919282511210762, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.08919282511210762, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.08919282511210762, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.08919282511210762, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.08919282511210762, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.08919282511210762, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.08919282511210762, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.08919282511210762, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.08919282511210762, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.08919282511210762, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.08919282511210762, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.08919282511210762, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.08919282511210762, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.08919282511210762, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.08919282511210762, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.08919282511210762, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.08919282511210762, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.08919282511210762, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.08919282511210762, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.08919282511210762, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.08919282511210762, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.08919282511210762, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.08919282511210762, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.08919282511210762, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.08919282511210762, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.08919282511210762, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.08919282511210762, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.08919282511210762, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.08919282511210762, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.08919282511210762, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.08919282511210762, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.08919282511210762, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.08919282511210762, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.08919282511210762, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.08919282511210762, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.08919282511210762, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.08919282511210762, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.08919282511210762, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.08919282511210762, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.08919282511210762, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.08919282511210762, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.08919282511210762, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.08919282511210762, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.08919282511210762, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.08919282511210762, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.08919282511210762, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.08919282511210762, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.08919282511210762, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.08919282511210762, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.08919282511210762, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.08919282511210762, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.08919282511210762, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.08919282511210762, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.08919282511210762, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.08919282511210762, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.08919282511210762, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.08919282511210762, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.08919282511210762, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.08919282511210762, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.08919282511210762, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.08919282511210762, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.08919282511210762, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.08919282511210762, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.08919282511210762, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.08919282511210762, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.08919282511210762, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.08919282511210762, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.08919282511210762, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.08919282511210762, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.08919282511210762, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.08919282511210762, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.08919282511210762, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.08919282511210762, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.08919282511210762, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.08919282511210762, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.08919282511210762, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.08919282511210762, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.08919282511210762, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.08919282511210762, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.08919282511210762, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.08919282511210762, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.08919282511210762, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.08919282511210762, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.08919282511210762, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.08919282511210762, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.08919282511210762, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.08919282511210762, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.08919282511210762, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.12269519598095138`, 0.7666666666666666, 1.], 
         Hue[0.576923076923077, 0.12269519598095138`, 0.7666666666666666, 1.], 
         Hue[0.576923076923077, 0.12269519598095138`, 0.7666666666666666, 1.], 
         Hue[0.576923076923077, 0.12269519598095138`, 0.7666666666666666, 1.], 
         Hue[0.576923076923077, 0.12269519598095138`, 0.7666666666666666, 1.], 
         Hue[0.576923076923077, 0.12269519598095138`, 0.7666666666666666, 1.], 
         Hue[0.576923076923077, 0.12269519598095138`, 0.7666666666666666, 1.], 
         Hue[0.576923076923077, 0.12269519598095138`, 0.7666666666666666, 1.], 
         Hue[0.576923076923077, 0.12269519598095138`, 0.7666666666666666, 1.], 
         Hue[0.576923076923077, 0.12269519598095138`, 0.7666666666666666, 1.], 
         Hue[0.576923076923077, 0.12269519598095138`, 0.7666666666666666, 1.], 
         Hue[0.576923076923077, 0.12269519598095138`, 0.7666666666666666, 1.], 
         Hue[0.576923076923077, 0.12269519598095138`, 0.7666666666666666, 1.], 
         Hue[0.576923076923077, 0.12269519598095138`, 0.7666666666666666, 1.], 
         Hue[0.576923076923077, 0.12269519598095138`, 0.7666666666666666, 1.], 
         Hue[0.576923076923077, 0.12269519598095138`, 0.7666666666666666, 1.], 
         Hue[0.576923076923077, 0.12269519598095138`, 0.7666666666666666, 1.], 
         Hue[0.576923076923077, 0.12269519598095138`, 0.7666666666666666, 1.], 
         Hue[0.576923076923077, 0.12269519598095138`, 0.7666666666666666, 1.], 
         Hue[0.576923076923077, 0.12269519598095138`, 0.7666666666666666, 1.], 
         Hue[0.576923076923077, 0.12269519598095138`, 0.7666666666666666, 1.], 
         Hue[0.576923076923077, 0.12269519598095138`, 0.7666666666666666, 1.], 
         Hue[0.576923076923077, 0.12269519598095138`, 0.7666666666666666, 1.], 
         Hue[0.576923076923077, 0.12269519598095138`, 0.7666666666666666, 1.], 
         Hue[0.576923076923077, 0.12269519598095138`, 0.7666666666666666, 1.], 
         Hue[0.576923076923077, 0.12269519598095138`, 0.7666666666666666, 1.], 
         Hue[0.576923076923077, 0.12269519598095138`, 0.7666666666666666, 1.], 
         Hue[0.576923076923077, 0.12269519598095138`, 0.7666666666666666, 1.], 
         Hue[0.576923076923077, 0.12269519598095138`, 0.7666666666666666, 1.], 
         Hue[0.576923076923077, 0.12269519598095138`, 0.7666666666666666, 1.], 
         Hue[0.576923076923077, 0.12269519598095138`, 0.7666666666666666, 1.], 
         Hue[0.576923076923077, 0.12269519598095138`, 0.7666666666666666, 1.], 
         Hue[0.576923076923077, 0.12269519598095138`, 0.7666666666666666, 1.], 
         Hue[0.576923076923077, 0.12269519598095138`, 0.7666666666666666, 1.], 
         Hue[0.576923076923077, 0.12269519598095138`, 0.7666666666666666, 1.], 
         Hue[0.576923076923077, 0.12269519598095138`, 0.7666666666666666, 1.], 
         Hue[0.576923076923077, 0.12269519598095138`, 0.7666666666666666, 1.], 
         Hue[0.576923076923077, 0.12269519598095138`, 0.7666666666666666, 1.], 
         Hue[0.576923076923077, 0.12269519598095138`, 0.7666666666666666, 1.], 
         Hue[0.576923076923077, 0.12269519598095138`, 0.7666666666666666, 1.], 
         Hue[0.576923076923077, 0.12269519598095138`, 0.7666666666666666, 1.], 
         Hue[0.576923076923077, 0.12269519598095138`, 0.7666666666666666, 1.], 
         Hue[0.576923076923077, 0.12269519598095138`, 0.7666666666666666, 1.], 
         Hue[0.576923076923077, 0.12269519598095138`, 0.7666666666666666, 1.], 
         Hue[0.576923076923077, 0.12269519598095138`, 0.7666666666666666, 1.], 
         Hue[0.576923076923077, 0.12269519598095138`, 0.7666666666666666, 1.], 
         Hue[0.576923076923077, 0.12269519598095138`, 0.7666666666666666, 1.], 
         Hue[0.576923076923077, 0.12269519598095138`, 0.7666666666666666, 1.], 
         Hue[0.576923076923077, 0.12269519598095138`, 0.7666666666666666, 1.], 
         Hue[0.576923076923077, 0.12269519598095138`, 0.7666666666666666, 1.], 
         Hue[0.576923076923077, 0.12269519598095138`, 0.7666666666666666, 1.], 
         Hue[0.576923076923077, 0.12269519598095138`, 0.7666666666666666, 1.], 
         Hue[0.576923076923077, 0.12269519598095138`, 0.7666666666666666, 1.], 
         Hue[0.576923076923077, 0.12269519598095138`, 0.7666666666666666, 1.], 
         Hue[0.576923076923077, 0.12269519598095138`, 0.7666666666666666, 1.], 
         Hue[0.576923076923077, 0.12269519598095138`, 0.7666666666666666, 1.], 
         Hue[0.576923076923077, 0.12269519598095138`, 0.7666666666666666, 1.], 
         Hue[0.576923076923077, 0.12269519598095138`, 0.7666666666666666, 1.], 
         Hue[0.576923076923077, 0.12269519598095138`, 0.7666666666666666, 1.], 
         Hue[0.576923076923077, 0.12269519598095138`, 0.7666666666666666, 1.], 
         Hue[0.576923076923077, 0.12269519598095138`, 0.7666666666666666, 1.], 
         Hue[0.576923076923077, 0.12269519598095138`, 0.7666666666666666, 1.], 
         Hue[0.576923076923077, 0.12269519598095138`, 0.7666666666666666, 1.], 
         Hue[0.576923076923077, 0.12269519598095138`, 0.7666666666666666, 1.], 
         Hue[0.576923076923077, 0.12269519598095138`, 0.7666666666666666, 1.], 
         Hue[0.576923076923077, 0.12269519598095138`, 0.7666666666666666, 1.], 
         Hue[0.576923076923077, 0.12269519598095138`, 0.7666666666666666, 1.], 
         Hue[0.576923076923077, 0.12269519598095138`, 0.7666666666666666, 1.], 
         Hue[0.576923076923077, 0.12269519598095138`, 0.7666666666666666, 1.], 
         Hue[0.576923076923077, 0.12269519598095138`, 0.7666666666666666, 1.], 
         Hue[0.576923076923077, 0.12269519598095138`, 0.7666666666666666, 1.], 
         Hue[0.576923076923077, 0.12269519598095138`, 0.7666666666666666, 1.], 
         Hue[0.576923076923077, 0.12269519598095138`, 0.7666666666666666, 1.], 
         Hue[0.576923076923077, 0.12269519598095138`, 0.7666666666666666, 1.], 
         Hue[0.576923076923077, 0.12269519598095138`, 0.7666666666666666, 1.], 
         Hue[0.576923076923077, 0.12269519598095138`, 0.7666666666666666, 1.], 
         Hue[0.576923076923077, 0.12269519598095138`, 0.7666666666666666, 1.], 
         Hue[0.576923076923077, 0.12269519598095138`, 0.7666666666666666, 1.], 
         Hue[0.576923076923077, 0.12269519598095138`, 0.7666666666666666, 1.], 
         Hue[0.576923076923077, 0.12269519598095138`, 0.7666666666666666, 1.], 
         Hue[0.576923076923077, 0.12269519598095138`, 0.7666666666666666, 1.], 
         Hue[0.576923076923077, 0.12269519598095138`, 0.7666666666666666, 1.], 
         Hue[0.576923076923077, 0.12269519598095138`, 0.7666666666666666, 1.], 
         Hue[0.576923076923077, 0.12269519598095138`, 0.7666666666666666, 1.], 
         Hue[0.576923076923077, 0.12269519598095138`, 0.7666666666666666, 1.], 
         Hue[0.576923076923077, 0.12269519598095138`, 0.7666666666666666, 1.], 
         Hue[0.576923076923077, 0.12269519598095138`, 0.7666666666666666, 1.], 
         Hue[0.576923076923077, 0.12269519598095138`, 0.7666666666666666, 1.], 
         Hue[0.576923076923077, 0.12269519598095138`, 0.7666666666666666, 1.], 
         Hue[0.576923076923077, 0.12269519598095138`, 0.7666666666666666, 1.], 
         Hue[0.576923076923077, 0.12269519598095138`, 0.7666666666666666, 1.], 
         Hue[0.576923076923077, 0.12269519598095138`, 0.7666666666666666, 1.], 
         Hue[0.576923076923077, 0.12269519598095138`, 0.7666666666666666, 1.], 
         Hue[0.576923076923077, 0.12269519598095138`, 0.7666666666666666, 1.], 
         Hue[0.576923076923077, 0.12269519598095138`, 0.7666666666666666, 1.], 
         Hue[0.576923076923077, 0.12269519598095138`, 0.7666666666666666, 1.], 
         Hue[0.576923076923077, 0.12269519598095138`, 0.7666666666666666, 1.], 
         Hue[0.576923076923077, 0.12269519598095138`, 0.7666666666666666, 1.], 
         Hue[0.576923076923077, 0.12269519598095138`, 0.7666666666666666, 1.], 
         Hue[0.576923076923077, 0.12269519598095138`, 0.7666666666666666, 1.], 
         Hue[0.576923076923077, 0.11712871287128714`, 0.792156862745098, 1.], 
         Hue[0.576923076923077, 0.11712871287128714`, 0.792156862745098, 1.], 
         Hue[0.576923076923077, 0.11712871287128714`, 0.792156862745098, 1.], 
         Hue[0.576923076923077, 0.11712871287128714`, 0.792156862745098, 1.], 
         Hue[0.576923076923077, 0.11712871287128714`, 0.792156862745098, 1.], 
         Hue[0.576923076923077, 0.11712871287128714`, 0.792156862745098, 1.], 
         Hue[0.576923076923077, 0.11712871287128714`, 0.792156862745098, 1.], 
         Hue[0.576923076923077, 0.11712871287128714`, 0.792156862745098, 1.], 
         Hue[0.576923076923077, 0.11712871287128714`, 0.792156862745098, 1.], 
         Hue[0.576923076923077, 0.11712871287128714`, 0.792156862745098, 1.], 
         Hue[0.576923076923077, 0.11712871287128714`, 0.792156862745098, 1.], 
         Hue[0.576923076923077, 0.11712871287128714`, 0.792156862745098, 1.], 
         Hue[0.576923076923077, 0.11712871287128714`, 0.792156862745098, 1.], 
         Hue[0.576923076923077, 0.11712871287128714`, 0.792156862745098, 1.], 
         Hue[0.576923076923077, 0.11712871287128714`, 0.792156862745098, 1.], 
         Hue[0.576923076923077, 0.11712871287128714`, 0.792156862745098, 1.], 
         Hue[0.576923076923077, 0.11712871287128714`, 0.792156862745098, 1.], 
         Hue[0.576923076923077, 0.11712871287128714`, 0.792156862745098, 1.], 
         Hue[0.576923076923077, 0.11712871287128714`, 0.792156862745098, 1.], 
         Hue[0.576923076923077, 0.11712871287128714`, 0.792156862745098, 1.], 
         Hue[0.576923076923077, 0.11712871287128714`, 0.792156862745098, 1.], 
         Hue[0.576923076923077, 0.11712871287128714`, 0.792156862745098, 1.], 
         Hue[0.576923076923077, 0.11712871287128714`, 0.792156862745098, 1.], 
         Hue[0.576923076923077, 0.11712871287128714`, 0.792156862745098, 1.], 
         Hue[0.576923076923077, 0.11712871287128714`, 0.792156862745098, 1.], 
         Hue[0.576923076923077, 0.11712871287128714`, 0.792156862745098, 1.], 
         Hue[0.576923076923077, 0.11712871287128714`, 0.792156862745098, 1.], 
         Hue[0.576923076923077, 0.11712871287128714`, 0.792156862745098, 1.], 
         Hue[0.576923076923077, 0.11712871287128714`, 0.792156862745098, 1.], 
         Hue[0.576923076923077, 0.11712871287128714`, 0.792156862745098, 1.], 
         Hue[0.576923076923077, 0.11712871287128714`, 0.792156862745098, 1.], 
         Hue[0.576923076923077, 0.11712871287128714`, 0.792156862745098, 1.], 
         Hue[0.576923076923077, 0.11712871287128714`, 0.792156862745098, 1.], 
         Hue[0.576923076923077, 0.11712871287128714`, 0.792156862745098, 1.], 
         Hue[0.576923076923077, 0.11712871287128714`, 0.792156862745098, 1.], 
         Hue[0.576923076923077, 0.11712871287128714`, 0.792156862745098, 1.], 
         Hue[0.576923076923077, 0.11712871287128714`, 0.792156862745098, 1.], 
         Hue[0.576923076923077, 0.11712871287128714`, 0.792156862745098, 1.], 
         Hue[0.576923076923077, 0.11712871287128714`, 0.792156862745098, 1.], 
         Hue[0.576923076923077, 0.11712871287128714`, 0.792156862745098, 1.], 
         Hue[0.576923076923077, 0.11712871287128714`, 0.792156862745098, 1.], 
         Hue[0.576923076923077, 0.11712871287128714`, 0.792156862745098, 1.], 
         Hue[0.576923076923077, 0.11712871287128714`, 0.792156862745098, 1.], 
         Hue[0.576923076923077, 0.11712871287128714`, 0.792156862745098, 1.], 
         Hue[0.576923076923077, 0.11712871287128714`, 0.792156862745098, 1.], 
         Hue[0.576923076923077, 0.11712871287128714`, 0.792156862745098, 1.], 
         Hue[0.576923076923077, 0.11712871287128714`, 0.792156862745098, 1.], 
         Hue[0.576923076923077, 0.11712871287128714`, 0.792156862745098, 1.], 
         Hue[0.576923076923077, 0.11712871287128714`, 0.792156862745098, 1.], 
         Hue[0.576923076923077, 0.11712871287128714`, 0.792156862745098, 1.], 
         Hue[0.576923076923077, 0.11712871287128714`, 0.792156862745098, 1.], 
         Hue[0.576923076923077, 0.11712871287128714`, 0.792156862745098, 1.], 
         Hue[0.576923076923077, 0.11712871287128714`, 0.792156862745098, 1.], 
         Hue[0.576923076923077, 0.11712871287128714`, 0.792156862745098, 1.], 
         Hue[0.576923076923077, 0.11712871287128714`, 0.792156862745098, 1.], 
         Hue[0.576923076923077, 0.11712871287128714`, 0.792156862745098, 1.], 
         Hue[0.576923076923077, 0.11712871287128714`, 0.792156862745098, 1.], 
         Hue[0.576923076923077, 0.11712871287128714`, 0.792156862745098, 1.], 
         Hue[0.576923076923077, 0.11712871287128714`, 0.792156862745098, 1.], 
         Hue[0.576923076923077, 0.11712871287128714`, 0.792156862745098, 1.], 
         Hue[0.576923076923077, 0.11712871287128714`, 0.792156862745098, 1.], 
         Hue[0.576923076923077, 0.11712871287128714`, 0.792156862745098, 1.], 
         Hue[0.576923076923077, 0.11712871287128714`, 0.792156862745098, 1.], 
         Hue[0.576923076923077, 0.11712871287128714`, 0.792156862745098, 1.], 
         Hue[0.576923076923077, 0.11712871287128714`, 0.792156862745098, 1.], 
         Hue[0.576923076923077, 0.11712871287128714`, 0.792156862745098, 1.], 
         Hue[0.576923076923077, 0.11712871287128714`, 0.792156862745098, 1.], 
         Hue[0.576923076923077, 0.11712871287128714`, 0.792156862745098, 1.], 
         Hue[0.576923076923077, 0.11712871287128714`, 0.792156862745098, 1.], 
         Hue[0.576923076923077, 0.11712871287128714`, 0.792156862745098, 1.], 
         Hue[0.576923076923077, 0.11712871287128714`, 0.792156862745098, 1.], 
         Hue[0.576923076923077, 0.11712871287128714`, 0.792156862745098, 1.], 
         Hue[0.576923076923077, 0.11712871287128714`, 0.792156862745098, 1.], 
         Hue[0.576923076923077, 0.11712871287128714`, 0.792156862745098, 1.], 
         Hue[0.576923076923077, 0.11712871287128714`, 0.792156862745098, 1.], 
         Hue[0.576923076923077, 0.11712871287128714`, 0.792156862745098, 1.], 
         Hue[0.576923076923077, 0.11712871287128714`, 0.792156862745098, 1.], 
         Hue[0.576923076923077, 0.11712871287128714`, 0.792156862745098, 1.], 
         Hue[0.576923076923077, 0.11712871287128714`, 0.792156862745098, 1.], 
         Hue[0.576923076923077, 0.11712871287128714`, 0.792156862745098, 1.], 
         Hue[0.576923076923077, 0.11712871287128714`, 0.792156862745098, 1.], 
         Hue[0.576923076923077, 0.11712871287128714`, 0.792156862745098, 1.], 
         Hue[0.576923076923077, 0.11712871287128714`, 0.792156862745098, 1.], 
         Hue[0.576923076923077, 0.11712871287128714`, 0.792156862745098, 1.], 
         Hue[0.576923076923077, 0.11712871287128714`, 0.792156862745098, 1.], 
         Hue[0.576923076923077, 0.11712871287128714`, 0.792156862745098, 1.], 
         Hue[0.576923076923077, 0.11712871287128714`, 0.792156862745098, 1.], 
         Hue[0.576923076923077, 0.11712871287128714`, 0.792156862745098, 1.], 
         Hue[0.576923076923077, 0.11712871287128714`, 0.792156862745098, 1.], 
         Hue[0.576923076923077, 0.11712871287128714`, 0.792156862745098, 1.], 
         Hue[0.576923076923077, 0.11712871287128714`, 0.792156862745098, 1.], 
         Hue[0.576923076923077, 0.11712871287128714`, 0.792156862745098, 1.], 
         Hue[0.576923076923077, 0.11712871287128714`, 0.792156862745098, 1.], 
         Hue[0.576923076923077, 0.11712871287128714`, 0.792156862745098, 1.], 
         Hue[0.576923076923077, 0.11712871287128714`, 0.792156862745098, 1.], 
         Hue[0.576923076923077, 0.11712871287128714`, 0.792156862745098, 1.], 
         Hue[0.576923076923077, 0.11712871287128714`, 0.792156862745098, 1.], 
         Hue[0.576923076923077, 0.11712871287128714`, 0.792156862745098, 1.], 
         Hue[0.576923076923077, 0.11712871287128714`, 0.792156862745098, 1.], 
         Hue[0.576923076923077, 0.11712871287128714`, 0.792156862745098, 1.], 
         Hue[0.576923076923077, 0.1107232142857143, 0.8196078431372549, 1.], 
         Hue[0.576923076923077, 0.1107232142857143, 0.8196078431372549, 1.], 
         Hue[0.576923076923077, 0.1107232142857143, 0.8196078431372549, 1.], 
         Hue[0.576923076923077, 0.1107232142857143, 0.8196078431372549, 1.], 
         Hue[0.576923076923077, 0.1107232142857143, 0.8196078431372549, 1.], 
         Hue[0.576923076923077, 0.1107232142857143, 0.8196078431372549, 1.], 
         Hue[0.576923076923077, 0.1107232142857143, 0.8196078431372549, 1.], 
         Hue[0.576923076923077, 0.1107232142857143, 0.8196078431372549, 1.], 
         Hue[0.576923076923077, 0.1107232142857143, 0.8196078431372549, 1.], 
         Hue[0.576923076923077, 0.1107232142857143, 0.8196078431372549, 1.], 
         Hue[0.576923076923077, 0.1107232142857143, 0.8196078431372549, 1.], 
         Hue[0.576923076923077, 0.1107232142857143, 0.8196078431372549, 1.], 
         Hue[0.576923076923077, 0.1107232142857143, 0.8196078431372549, 1.], 
         Hue[0.576923076923077, 0.1107232142857143, 0.8196078431372549, 1.], 
         Hue[0.576923076923077, 0.1107232142857143, 0.8196078431372549, 1.], 
         Hue[0.576923076923077, 0.1107232142857143, 0.8196078431372549, 1.], 
         Hue[0.576923076923077, 0.1107232142857143, 0.8196078431372549, 1.], 
         Hue[0.576923076923077, 0.1107232142857143, 0.8196078431372549, 1.], 
         Hue[0.576923076923077, 0.1107232142857143, 0.8196078431372549, 1.], 
         Hue[0.576923076923077, 0.1107232142857143, 0.8196078431372549, 1.], 
         Hue[0.576923076923077, 0.1107232142857143, 0.8196078431372549, 1.], 
         Hue[0.576923076923077, 0.1107232142857143, 0.8196078431372549, 1.], 
         Hue[0.576923076923077, 0.1107232142857143, 0.8196078431372549, 1.], 
         Hue[0.576923076923077, 0.1107232142857143, 0.8196078431372549, 1.], 
         Hue[0.576923076923077, 0.1107232142857143, 0.8196078431372549, 1.], 
         Hue[0.576923076923077, 0.1107232142857143, 0.8196078431372549, 1.], 
         Hue[0.576923076923077, 0.1107232142857143, 0.8196078431372549, 1.], 
         Hue[0.576923076923077, 0.1107232142857143, 0.8196078431372549, 1.], 
         Hue[0.576923076923077, 0.1107232142857143, 0.8196078431372549, 1.], 
         Hue[0.576923076923077, 0.1107232142857143, 0.8196078431372549, 1.], 
         Hue[0.576923076923077, 0.1107232142857143, 0.8196078431372549, 1.], 
         Hue[0.576923076923077, 0.1107232142857143, 0.8196078431372549, 1.], 
         Hue[0.576923076923077, 0.1107232142857143, 0.8196078431372549, 1.], 
         Hue[0.576923076923077, 0.1107232142857143, 0.8196078431372549, 1.], 
         Hue[0.576923076923077, 0.1107232142857143, 0.8196078431372549, 1.], 
         Hue[0.576923076923077, 0.1107232142857143, 0.8196078431372549, 1.], 
         Hue[0.576923076923077, 0.1107232142857143, 0.8196078431372549, 1.], 
         Hue[0.576923076923077, 0.1107232142857143, 0.8196078431372549, 1.], 
         Hue[0.576923076923077, 0.1107232142857143, 0.8196078431372549, 1.], 
         Hue[0.576923076923077, 0.1107232142857143, 0.8196078431372549, 1.], 
         Hue[0.576923076923077, 0.1107232142857143, 0.8196078431372549, 1.], 
         Hue[0.576923076923077, 0.1107232142857143, 0.8196078431372549, 1.], 
         Hue[0.576923076923077, 0.1107232142857143, 0.8196078431372549, 1.], 
         Hue[0.576923076923077, 0.1107232142857143, 0.8196078431372549, 1.], 
         Hue[0.576923076923077, 0.1107232142857143, 0.8196078431372549, 1.], 
         Hue[0.576923076923077, 0.1107232142857143, 0.8196078431372549, 1.], 
         Hue[0.576923076923077, 0.1107232142857143, 0.8196078431372549, 1.], 
         Hue[0.576923076923077, 0.1107232142857143, 0.8196078431372549, 1.], 
         Hue[0.576923076923077, 0.1107232142857143, 0.8196078431372549, 1.], 
         Hue[0.576923076923077, 0.1107232142857143, 0.8196078431372549, 1.], 
         Hue[0.576923076923077, 0.1107232142857143, 0.8196078431372549, 1.], 
         Hue[0.576923076923077, 0.1107232142857143, 0.8196078431372549, 1.], 
         Hue[0.576923076923077, 0.1107232142857143, 0.8196078431372549, 1.], 
         Hue[0.576923076923077, 0.1107232142857143, 0.8196078431372549, 1.], 
         Hue[0.576923076923077, 0.1107232142857143, 0.8196078431372549, 1.], 
         Hue[0.576923076923077, 0.1107232142857143, 0.8196078431372549, 1.], 
         Hue[0.576923076923077, 0.1107232142857143, 0.8196078431372549, 1.], 
         Hue[0.576923076923077, 0.1107232142857143, 0.8196078431372549, 1.], 
         Hue[0.576923076923077, 0.1107232142857143, 0.8196078431372549, 1.], 
         Hue[0.576923076923077, 0.1107232142857143, 0.8196078431372549, 1.], 
         Hue[0.576923076923077, 0.1107232142857143, 0.8196078431372549, 1.], 
         Hue[0.576923076923077, 0.1107232142857143, 0.8196078431372549, 1.], 
         Hue[0.576923076923077, 0.1107232142857143, 0.8196078431372549, 1.], 
         Hue[0.576923076923077, 0.1107232142857143, 0.8196078431372549, 1.], 
         Hue[0.576923076923077, 0.1107232142857143, 0.8196078431372549, 1.], 
         Hue[0.576923076923077, 0.1107232142857143, 0.8196078431372549, 1.], 
         Hue[0.576923076923077, 0.1107232142857143, 0.8196078431372549, 1.], 
         Hue[0.576923076923077, 0.1107232142857143, 0.8196078431372549, 1.], 
         Hue[0.576923076923077, 0.1107232142857143, 0.8196078431372549, 1.], 
         Hue[0.576923076923077, 0.1107232142857143, 0.8196078431372549, 1.], 
         Hue[0.576923076923077, 0.1107232142857143, 0.8196078431372549, 1.], 
         Hue[0.576923076923077, 0.1107232142857143, 0.8196078431372549, 1.], 
         Hue[0.576923076923077, 0.1107232142857143, 0.8196078431372549, 1.], 
         Hue[0.576923076923077, 0.1107232142857143, 0.8196078431372549, 1.], 
         Hue[0.576923076923077, 0.1107232142857143, 0.8196078431372549, 1.], 
         Hue[0.576923076923077, 0.1107232142857143, 0.8196078431372549, 1.], 
         Hue[0.576923076923077, 0.1107232142857143, 0.8196078431372549, 1.], 
         Hue[0.576923076923077, 0.1107232142857143, 0.8196078431372549, 1.], 
         Hue[0.576923076923077, 0.1107232142857143, 0.8196078431372549, 1.], 
         Hue[0.576923076923077, 0.1107232142857143, 0.8196078431372549, 1.], 
         Hue[0.576923076923077, 0.1107232142857143, 0.8196078431372549, 1.], 
         Hue[0.576923076923077, 0.1107232142857143, 0.8196078431372549, 1.], 
         Hue[0.576923076923077, 0.1107232142857143, 0.8196078431372549, 1.], 
         Hue[0.576923076923077, 0.1107232142857143, 0.8196078431372549, 1.], 
         Hue[0.576923076923077, 0.1107232142857143, 0.8196078431372549, 1.], 
         Hue[0.576923076923077, 0.1107232142857143, 0.8196078431372549, 1.], 
         Hue[0.576923076923077, 0.1107232142857143, 0.8196078431372549, 1.], 
         Hue[0.576923076923077, 0.1107232142857143, 0.8196078431372549, 1.], 
         Hue[0.576923076923077, 0.1107232142857143, 0.8196078431372549, 1.], 
         Hue[0.576923076923077, 0.1107232142857143, 0.8196078431372549, 1.], 
         Hue[0.576923076923077, 0.1107232142857143, 0.8196078431372549, 1.], 
         Hue[0.576923076923077, 0.1107232142857143, 0.8196078431372549, 1.], 
         Hue[0.576923076923077, 0.1107232142857143, 0.8196078431372549, 1.], 
         Hue[0.576923076923077, 0.1107232142857143, 0.8196078431372549, 1.], 
         Hue[0.576923076923077, 0.1107232142857143, 0.8196078431372549, 1.], 
         Hue[0.576923076923077, 0.1107232142857143, 0.8196078431372549, 1.], 
         Hue[0.576923076923077, 0.1107232142857143, 0.8196078431372549, 1.], 
         Hue[0.576923076923077, 0.1107232142857143, 0.8196078431372549, 1.], 
         Hue[0.576923076923077, 0.1107232142857143, 0.8196078431372549, 1.], 
         Hue[0.576923076923077, 0.1107232142857143, 0.8196078431372549, 1.], 
         Hue[0.576923076923077, 0.1058139534883721, 0.8431372549019608, 1.], 
         Hue[0.576923076923077, 0.1058139534883721, 0.8431372549019608, 1.], 
         Hue[0.576923076923077, 0.1058139534883721, 0.8431372549019608, 1.], 
         Hue[0.576923076923077, 0.1058139534883721, 0.8431372549019608, 1.], 
         Hue[0.576923076923077, 0.1058139534883721, 0.8431372549019608, 1.], 
         Hue[0.576923076923077, 0.1058139534883721, 0.8431372549019608, 1.], 
         Hue[0.576923076923077, 0.1058139534883721, 0.8431372549019608, 1.], 
         Hue[0.576923076923077, 0.1058139534883721, 0.8431372549019608, 1.], 
         Hue[0.576923076923077, 0.1058139534883721, 0.8431372549019608, 1.], 
         Hue[0.576923076923077, 0.1058139534883721, 0.8431372549019608, 1.], 
         Hue[0.576923076923077, 0.1058139534883721, 0.8431372549019608, 1.], 
         Hue[0.576923076923077, 0.1058139534883721, 0.8431372549019608, 1.], 
         Hue[0.576923076923077, 0.1058139534883721, 0.8431372549019608, 1.], 
         Hue[0.576923076923077, 0.1058139534883721, 0.8431372549019608, 1.], 
         Hue[0.576923076923077, 0.1058139534883721, 0.8431372549019608, 1.], 
         Hue[0.576923076923077, 0.1058139534883721, 0.8431372549019608, 1.], 
         Hue[0.576923076923077, 0.1058139534883721, 0.8431372549019608, 1.], 
         Hue[0.576923076923077, 0.1058139534883721, 0.8431372549019608, 1.], 
         Hue[0.576923076923077, 0.1058139534883721, 0.8431372549019608, 1.], 
         Hue[0.576923076923077, 0.1058139534883721, 0.8431372549019608, 1.], 
         Hue[0.576923076923077, 0.1058139534883721, 0.8431372549019608, 1.], 
         Hue[0.576923076923077, 0.1058139534883721, 0.8431372549019608, 1.], 
         Hue[0.576923076923077, 0.1058139534883721, 0.8431372549019608, 1.], 
         Hue[0.576923076923077, 0.1058139534883721, 0.8431372549019608, 1.], 
         Hue[0.576923076923077, 0.1058139534883721, 0.8431372549019608, 1.], 
         Hue[0.576923076923077, 0.1058139534883721, 0.8431372549019608, 1.], 
         Hue[0.576923076923077, 0.1058139534883721, 0.8431372549019608, 1.], 
         Hue[0.576923076923077, 0.1058139534883721, 0.8431372549019608, 1.], 
         Hue[0.576923076923077, 0.1058139534883721, 0.8431372549019608, 1.], 
         Hue[0.576923076923077, 0.1058139534883721, 0.8431372549019608, 1.], 
         Hue[0.576923076923077, 0.1058139534883721, 0.8431372549019608, 1.], 
         Hue[0.576923076923077, 0.1058139534883721, 0.8431372549019608, 1.], 
         Hue[0.576923076923077, 0.1058139534883721, 0.8431372549019608, 1.], 
         Hue[0.576923076923077, 0.1058139534883721, 0.8431372549019608, 1.], 
         Hue[0.576923076923077, 0.1058139534883721, 0.8431372549019608, 1.], 
         Hue[0.576923076923077, 0.1058139534883721, 0.8431372549019608, 1.], 
         Hue[0.576923076923077, 0.1058139534883721, 0.8431372549019608, 1.], 
         Hue[0.576923076923077, 0.1058139534883721, 0.8431372549019608, 1.], 
         Hue[0.576923076923077, 0.1058139534883721, 0.8431372549019608, 1.], 
         Hue[0.576923076923077, 0.1058139534883721, 0.8431372549019608, 1.], 
         Hue[0.576923076923077, 0.1058139534883721, 0.8431372549019608, 1.], 
         Hue[0.576923076923077, 0.1058139534883721, 0.8431372549019608, 1.], 
         Hue[0.576923076923077, 0.1058139534883721, 0.8431372549019608, 1.], 
         Hue[0.576923076923077, 0.1058139534883721, 0.8431372549019608, 1.], 
         Hue[0.576923076923077, 0.1058139534883721, 0.8431372549019608, 1.], 
         Hue[0.576923076923077, 0.1058139534883721, 0.8431372549019608, 1.], 
         Hue[0.576923076923077, 0.1058139534883721, 0.8431372549019608, 1.], 
         Hue[0.576923076923077, 0.1058139534883721, 0.8431372549019608, 1.], 
         Hue[0.576923076923077, 0.1058139534883721, 0.8431372549019608, 1.], 
         Hue[0.576923076923077, 0.1058139534883721, 0.8431372549019608, 1.], 
         Hue[0.576923076923077, 0.1058139534883721, 0.8431372549019608, 1.], 
         Hue[0.576923076923077, 0.1058139534883721, 0.8431372549019608, 1.], 
         Hue[0.576923076923077, 0.1058139534883721, 0.8431372549019608, 1.], 
         Hue[0.576923076923077, 0.1058139534883721, 0.8431372549019608, 1.], 
         Hue[0.576923076923077, 0.1058139534883721, 0.8431372549019608, 1.], 
         Hue[0.576923076923077, 0.1058139534883721, 0.8431372549019608, 1.], 
         Hue[0.576923076923077, 0.1058139534883721, 0.8431372549019608, 1.], 
         Hue[0.576923076923077, 0.1058139534883721, 0.8431372549019608, 1.], 
         Hue[0.576923076923077, 0.1058139534883721, 0.8431372549019608, 1.], 
         Hue[0.576923076923077, 0.1058139534883721, 0.8431372549019608, 1.], 
         Hue[0.576923076923077, 0.1058139534883721, 0.8431372549019608, 1.], 
         Hue[0.576923076923077, 0.1058139534883721, 0.8431372549019608, 1.], 
         Hue[0.576923076923077, 0.1058139534883721, 0.8431372549019608, 1.], 
         Hue[0.576923076923077, 0.1058139534883721, 0.8431372549019608, 1.], 
         Hue[0.576923076923077, 0.1058139534883721, 0.8431372549019608, 1.], 
         Hue[0.576923076923077, 0.1058139534883721, 0.8431372549019608, 1.], 
         Hue[0.576923076923077, 0.1058139534883721, 0.8431372549019608, 1.], 
         Hue[0.576923076923077, 0.1058139534883721, 0.8431372549019608, 1.], 
         Hue[0.576923076923077, 0.1058139534883721, 0.8431372549019608, 1.], 
         Hue[0.576923076923077, 0.1058139534883721, 0.8431372549019608, 1.], 
         Hue[0.576923076923077, 0.1058139534883721, 0.8431372549019608, 1.], 
         Hue[0.576923076923077, 0.1058139534883721, 0.8431372549019608, 1.], 
         Hue[0.576923076923077, 0.1058139534883721, 0.8431372549019608, 1.], 
         Hue[0.576923076923077, 0.1058139534883721, 0.8431372549019608, 1.], 
         Hue[0.576923076923077, 0.1058139534883721, 0.8431372549019608, 1.], 
         Hue[0.576923076923077, 0.1058139534883721, 0.8431372549019608, 1.], 
         Hue[0.576923076923077, 0.1058139534883721, 0.8431372549019608, 1.], 
         Hue[0.576923076923077, 0.1058139534883721, 0.8431372549019608, 1.], 
         Hue[0.576923076923077, 0.1058139534883721, 0.8431372549019608, 1.], 
         Hue[0.576923076923077, 0.1058139534883721, 0.8431372549019608, 1.], 
         Hue[0.576923076923077, 0.1058139534883721, 0.8431372549019608, 1.], 
         Hue[0.576923076923077, 0.1058139534883721, 0.8431372549019608, 1.], 
         Hue[0.576923076923077, 0.1058139534883721, 0.8431372549019608, 1.], 
         Hue[0.576923076923077, 0.1058139534883721, 0.8431372549019608, 1.], 
         Hue[0.576923076923077, 0.1058139534883721, 0.8431372549019608, 1.], 
         Hue[0.576923076923077, 0.1058139534883721, 0.8431372549019608, 1.], 
         Hue[0.576923076923077, 0.1058139534883721, 0.8431372549019608, 1.], 
         Hue[0.576923076923077, 0.1058139534883721, 0.8431372549019608, 1.], 
         Hue[0.576923076923077, 0.1058139534883721, 0.8431372549019608, 1.], 
         Hue[0.576923076923077, 0.1058139534883721, 0.8431372549019608, 1.], 
         Hue[0.576923076923077, 0.1058139534883721, 0.8431372549019608, 1.], 
         Hue[0.576923076923077, 0.1058139534883721, 0.8431372549019608, 1.], 
         Hue[0.576923076923077, 0.1058139534883721, 0.8431372549019608, 1.], 
         Hue[0.576923076923077, 0.1058139534883721, 0.8431372549019608, 1.], 
         Hue[0.576923076923077, 0.1058139534883721, 0.8431372549019608, 1.], 
         Hue[0.576923076923077, 0.1058139534883721, 0.8431372549019608, 1.], 
         Hue[0.576923076923077, 0.1058139534883721, 0.8431372549019608, 1.], 
         Hue[0.576923076923077, 0.1058139534883721, 0.8431372549019608, 1.], 
         Hue[0.576923076923077, 0.1058139534883721, 0.8431372549019608, 1.], 
         Hue[0.576923076923077, 0.1058139534883721, 0.8431372549019608, 1.], 
         Hue[0.576923076923077, 0.10085666023166023`, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.10085666023166023`, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.10085666023166023`, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.10085666023166023`, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.10085666023166023`, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.10085666023166023`, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.10085666023166023`, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.10085666023166023`, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.10085666023166023`, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.10085666023166023`, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.10085666023166023`, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.10085666023166023`, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.10085666023166023`, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.10085666023166023`, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.10085666023166023`, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.10085666023166023`, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.10085666023166023`, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.10085666023166023`, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.10085666023166023`, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.10085666023166023`, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.10085666023166023`, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.10085666023166023`, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.10085666023166023`, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.10085666023166023`, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.10085666023166023`, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.10085666023166023`, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.10085666023166023`, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.10085666023166023`, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.10085666023166023`, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.10085666023166023`, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.10085666023166023`, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.10085666023166023`, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.10085666023166023`, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.10085666023166023`, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.10085666023166023`, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.10085666023166023`, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.10085666023166023`, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.10085666023166023`, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.10085666023166023`, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.10085666023166023`, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.10085666023166023`, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.10085666023166023`, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.10085666023166023`, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.10085666023166023`, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.10085666023166023`, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.10085666023166023`, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.10085666023166023`, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.10085666023166023`, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.10085666023166023`, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.10085666023166023`, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.10085666023166023`, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.10085666023166023`, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.10085666023166023`, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.10085666023166023`, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.10085666023166023`, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.10085666023166023`, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.10085666023166023`, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.10085666023166023`, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.10085666023166023`, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.10085666023166023`, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.10085666023166023`, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.10085666023166023`, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.10085666023166023`, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.10085666023166023`, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.10085666023166023`, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.10085666023166023`, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.10085666023166023`, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.10085666023166023`, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.10085666023166023`, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.10085666023166023`, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.10085666023166023`, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.10085666023166023`, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.10085666023166023`, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.10085666023166023`, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.10085666023166023`, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.10085666023166023`, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.10085666023166023`, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.10085666023166023`, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.10085666023166023`, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.10085666023166023`, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.10085666023166023`, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.10085666023166023`, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.10085666023166023`, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.10085666023166023`, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.10085666023166023`, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.10085666023166023`, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.10085666023166023`, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.10085666023166023`, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.10085666023166023`, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.10085666023166023`, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.10085666023166023`, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.10085666023166023`, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.10085666023166023`, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.10085666023166023`, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.10085666023166023`, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.10085666023166023`, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.10085666023166023`, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.10085666023166023`, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.10085666023166023`, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.10085666023166023`, 0.8745098039215686, 1.], 
         Hue[0.576923076923077, 0.09593886462882097, 0.8980392156862745, 1.], 
         Hue[0.576923076923077, 0.09593886462882097, 0.8980392156862745, 1.], 
         Hue[0.576923076923077, 0.09593886462882097, 0.8980392156862745, 1.], 
         Hue[0.576923076923077, 0.09593886462882097, 0.8980392156862745, 1.], 
         Hue[0.576923076923077, 0.09593886462882097, 0.8980392156862745, 1.], 
         Hue[0.576923076923077, 0.09593886462882097, 0.8980392156862745, 1.], 
         Hue[0.576923076923077, 0.09593886462882097, 0.8980392156862745, 1.], 
         Hue[0.576923076923077, 0.09593886462882097, 0.8980392156862745, 1.], 
         Hue[0.576923076923077, 0.09593886462882097, 0.8980392156862745, 1.], 
         Hue[0.576923076923077, 0.09593886462882097, 0.8980392156862745, 1.], 
         Hue[0.576923076923077, 0.09593886462882097, 0.8980392156862745, 1.], 
         Hue[0.576923076923077, 0.09593886462882097, 0.8980392156862745, 1.], 
         Hue[0.576923076923077, 0.09593886462882097, 0.8980392156862745, 1.], 
         Hue[0.576923076923077, 0.09593886462882097, 0.8980392156862745, 1.], 
         Hue[0.576923076923077, 0.09593886462882097, 0.8980392156862745, 1.], 
         Hue[0.576923076923077, 0.09593886462882097, 0.8980392156862745, 1.], 
         Hue[0.576923076923077, 0.09593886462882097, 0.8980392156862745, 1.], 
         Hue[0.576923076923077, 0.09593886462882097, 0.8980392156862745, 1.], 
         Hue[0.576923076923077, 0.09593886462882097, 0.8980392156862745, 1.], 
         Hue[0.576923076923077, 0.09593886462882097, 0.8980392156862745, 1.], 
         Hue[0.576923076923077, 0.09593886462882097, 0.8980392156862745, 1.], 
         Hue[0.576923076923077, 0.09593886462882097, 0.8980392156862745, 1.], 
         Hue[0.576923076923077, 0.09593886462882097, 0.8980392156862745, 1.], 
         Hue[0.576923076923077, 0.09593886462882097, 0.8980392156862745, 1.], 
         Hue[0.576923076923077, 0.09593886462882097, 0.8980392156862745, 1.], 
         Hue[0.576923076923077, 0.09593886462882097, 0.8980392156862745, 1.], 
         Hue[0.576923076923077, 0.09593886462882097, 0.8980392156862745, 1.], 
         Hue[0.576923076923077, 0.09593886462882097, 0.8980392156862745, 1.], 
         Hue[0.576923076923077, 0.09593886462882097, 0.8980392156862745, 1.], 
         Hue[0.576923076923077, 0.09593886462882097, 0.8980392156862745, 1.], 
         Hue[0.576923076923077, 0.09593886462882097, 0.8980392156862745, 1.], 
         Hue[0.576923076923077, 0.09593886462882097, 0.8980392156862745, 1.], 
         Hue[0.576923076923077, 0.09593886462882097, 0.8980392156862745, 1.], 
         Hue[0.576923076923077, 0.09593886462882097, 0.8980392156862745, 1.], 
         Hue[0.576923076923077, 0.09593886462882097, 0.8980392156862745, 1.], 
         Hue[0.576923076923077, 0.09593886462882097, 0.8980392156862745, 1.], 
         Hue[0.576923076923077, 0.09593886462882097, 0.8980392156862745, 1.], 
         Hue[0.576923076923077, 0.09593886462882097, 0.8980392156862745, 1.], 
         Hue[0.576923076923077, 0.09593886462882097, 0.8980392156862745, 1.], 
         Hue[0.576923076923077, 0.09593886462882097, 0.8980392156862745, 1.], 
         Hue[0.576923076923077, 0.09593886462882097, 0.8980392156862745, 1.], 
         Hue[0.576923076923077, 0.09593886462882097, 0.8980392156862745, 1.], 
         Hue[0.576923076923077, 0.09593886462882097, 0.8980392156862745, 1.], 
         Hue[0.576923076923077, 0.09593886462882097, 0.8980392156862745, 1.], 
         Hue[0.576923076923077, 0.09593886462882097, 0.8980392156862745, 1.], 
         Hue[0.576923076923077, 0.09593886462882097, 0.8980392156862745, 1.], 
         Hue[0.576923076923077, 0.09593886462882097, 0.8980392156862745, 1.], 
         Hue[0.576923076923077, 0.09593886462882097, 0.8980392156862745, 1.], 
         Hue[0.576923076923077, 0.09593886462882097, 0.8980392156862745, 1.], 
         Hue[0.576923076923077, 0.09593886462882097, 0.8980392156862745, 1.], 
         Hue[0.576923076923077, 0.09593886462882097, 0.8980392156862745, 1.], 
         Hue[0.576923076923077, 0.09593886462882097, 0.8980392156862745, 1.], 
         Hue[0.576923076923077, 0.09593886462882097, 0.8980392156862745, 1.], 
         Hue[0.576923076923077, 0.09593886462882097, 0.8980392156862745, 1.], 
         Hue[0.576923076923077, 0.09593886462882097, 0.8980392156862745, 1.], 
         Hue[0.576923076923077, 0.09593886462882097, 0.8980392156862745, 1.], 
         Hue[0.576923076923077, 0.09593886462882097, 0.8980392156862745, 1.], 
         Hue[0.576923076923077, 0.09593886462882097, 0.8980392156862745, 1.], 
         Hue[0.576923076923077, 0.09593886462882097, 0.8980392156862745, 1.], 
         Hue[0.576923076923077, 0.09593886462882097, 0.8980392156862745, 1.], 
         Hue[0.576923076923077, 0.09593886462882097, 0.8980392156862745, 1.], 
         Hue[0.576923076923077, 0.09593886462882097, 0.8980392156862745, 1.], 
         Hue[0.576923076923077, 0.09593886462882097, 0.8980392156862745, 1.], 
         Hue[0.576923076923077, 0.09593886462882097, 0.8980392156862745, 1.], 
         Hue[0.576923076923077, 0.09593886462882097, 0.8980392156862745, 1.], 
         Hue[0.576923076923077, 0.09593886462882097, 0.8980392156862745, 1.], 
         Hue[0.576923076923077, 0.09593886462882097, 0.8980392156862745, 1.], 
         Hue[0.576923076923077, 0.09593886462882097, 0.8980392156862745, 1.], 
         Hue[0.576923076923077, 0.09593886462882097, 0.8980392156862745, 1.], 
         Hue[0.576923076923077, 0.09593886462882097, 0.8980392156862745, 1.], 
         Hue[0.576923076923077, 0.09593886462882097, 0.8980392156862745, 1.], 
         Hue[0.576923076923077, 0.09593886462882097, 0.8980392156862745, 1.], 
         Hue[0.576923076923077, 0.09593886462882097, 0.8980392156862745, 1.], 
         Hue[0.576923076923077, 0.09593886462882097, 0.8980392156862745, 1.], 
         Hue[0.576923076923077, 0.09593886462882097, 0.8980392156862745, 1.], 
         Hue[0.576923076923077, 0.09593886462882097, 0.8980392156862745, 1.], 
         Hue[0.576923076923077, 0.09593886462882097, 0.8980392156862745, 1.], 
         Hue[0.576923076923077, 0.09593886462882097, 0.8980392156862745, 1.], 
         Hue[0.576923076923077, 0.09593886462882097, 0.8980392156862745, 1.], 
         Hue[0.576923076923077, 0.09593886462882097, 0.8980392156862745, 1.], 
         Hue[0.576923076923077, 0.09593886462882097, 0.8980392156862745, 1.], 
         Hue[0.576923076923077, 0.09593886462882097, 0.8980392156862745, 1.], 
         Hue[0.576923076923077, 0.09593886462882097, 0.8980392156862745, 1.], 
         Hue[0.576923076923077, 0.09593886462882097, 0.8980392156862745, 1.], 
         Hue[0.576923076923077, 0.09593886462882097, 0.8980392156862745, 1.], 
         Hue[0.576923076923077, 0.09593886462882097, 0.8980392156862745, 1.], 
         Hue[0.576923076923077, 0.09593886462882097, 0.8980392156862745, 1.], 
         Hue[0.576923076923077, 0.09593886462882097, 0.8980392156862745, 1.], 
         Hue[0.576923076923077, 0.09593886462882097, 0.8980392156862745, 1.], 
         Hue[0.576923076923077, 0.09593886462882097, 0.8980392156862745, 1.], 
         Hue[0.576923076923077, 0.09593886462882097, 0.8980392156862745, 1.], 
         Hue[0.576923076923077, 0.09593886462882097, 0.8980392156862745, 1.], 
         Hue[0.576923076923077, 0.09593886462882097, 0.8980392156862745, 1.], 
         Hue[0.576923076923077, 0.09593886462882097, 0.8980392156862745, 1.], 
         Hue[0.576923076923077, 0.09593886462882097, 0.8980392156862745, 1.], 
         Hue[0.576923076923077, 0.09593886462882097, 0.8980392156862745, 1.], 
         Hue[0.576923076923077, 0.09593886462882097, 0.8980392156862745, 1.], 
         Hue[0.576923076923077, 0.09593886462882097, 0.8980392156862745, 1.], 
         Hue[0.576923076923077, 0.09593886462882097, 0.8980392156862745, 1.], 
         Hue[0.576923076923077, 0.09593886462882097, 0.8980392156862745, 1.], 
         Hue[0.576923076923077, 0.09160732089445948, 0.9294117647058823, 1.], 
         Hue[0.576923076923077, 0.09160732089445948, 0.9294117647058823, 1.], 
         Hue[0.576923076923077, 0.09160732089445948, 0.9294117647058823, 1.], 
         Hue[0.576923076923077, 0.09160732089445948, 0.9294117647058823, 1.], 
         Hue[0.576923076923077, 0.09160732089445948, 0.9294117647058823, 1.], 
         Hue[0.576923076923077, 0.09160732089445948, 0.9294117647058823, 1.], 
         Hue[0.576923076923077, 0.09160732089445948, 0.9294117647058823, 1.], 
         Hue[0.576923076923077, 0.09160732089445948, 0.9294117647058823, 1.], 
         Hue[0.576923076923077, 0.09160732089445948, 0.9294117647058823, 1.], 
         Hue[0.576923076923077, 0.09160732089445948, 0.9294117647058823, 1.], 
         Hue[0.576923076923077, 0.09160732089445948, 0.9294117647058823, 1.], 
         Hue[0.576923076923077, 0.09160732089445948, 0.9294117647058823, 1.], 
         Hue[0.576923076923077, 0.09160732089445948, 0.9294117647058823, 1.], 
         Hue[0.576923076923077, 0.09160732089445948, 0.9294117647058823, 1.], 
         Hue[0.576923076923077, 0.09160732089445948, 0.9294117647058823, 1.], 
         Hue[0.576923076923077, 0.09160732089445948, 0.9294117647058823, 1.], 
         Hue[0.576923076923077, 0.09160732089445948, 0.9294117647058823, 1.], 
         Hue[0.576923076923077, 0.09160732089445948, 0.9294117647058823, 1.], 
         Hue[0.576923076923077, 0.09160732089445948, 0.9294117647058823, 1.], 
         Hue[0.576923076923077, 0.09160732089445948, 0.9294117647058823, 1.], 
         Hue[0.576923076923077, 0.09160732089445948, 0.9294117647058823, 1.], 
         Hue[0.576923076923077, 0.09160732089445948, 0.9294117647058823, 1.], 
         Hue[0.576923076923077, 0.09160732089445948, 0.9294117647058823, 1.], 
         Hue[0.576923076923077, 0.09160732089445948, 0.9294117647058823, 1.], 
         Hue[0.576923076923077, 0.09160732089445948, 0.9294117647058823, 1.], 
         Hue[0.576923076923077, 0.09160732089445948, 0.9294117647058823, 1.], 
         Hue[0.576923076923077, 0.09160732089445948, 0.9294117647058823, 1.], 
         Hue[0.576923076923077, 0.09160732089445948, 0.9294117647058823, 1.], 
         Hue[0.576923076923077, 0.09160732089445948, 0.9294117647058823, 1.], 
         Hue[0.576923076923077, 0.09160732089445948, 0.9294117647058823, 1.], 
         Hue[0.576923076923077, 0.09160732089445948, 0.9294117647058823, 1.], 
         Hue[0.576923076923077, 0.09160732089445948, 0.9294117647058823, 1.], 
         Hue[0.576923076923077, 0.09160732089445948, 0.9294117647058823, 1.], 
         Hue[0.576923076923077, 0.09160732089445948, 0.9294117647058823, 1.], 
         Hue[0.576923076923077, 0.09160732089445948, 0.9294117647058823, 1.], 
         Hue[0.576923076923077, 0.09160732089445948, 0.9294117647058823, 1.], 
         Hue[0.576923076923077, 0.09160732089445948, 0.9294117647058823, 1.], 
         Hue[0.576923076923077, 0.09160732089445948, 0.9294117647058823, 1.], 
         Hue[0.576923076923077, 0.09160732089445948, 0.9294117647058823, 1.], 
         Hue[0.576923076923077, 0.09160732089445948, 0.9294117647058823, 1.], 
         Hue[0.576923076923077, 0.09160732089445948, 0.9294117647058823, 1.], 
         Hue[0.576923076923077, 0.09160732089445948, 0.9294117647058823, 1.], 
         Hue[0.576923076923077, 0.09160732089445948, 0.9294117647058823, 1.], 
         Hue[0.576923076923077, 0.09160732089445948, 0.9294117647058823, 1.], 
         Hue[0.576923076923077, 0.09160732089445948, 0.9294117647058823, 1.], 
         Hue[0.576923076923077, 0.09160732089445948, 0.9294117647058823, 1.], 
         Hue[0.576923076923077, 0.09160732089445948, 0.9294117647058823, 1.], 
         Hue[0.576923076923077, 0.09160732089445948, 0.9294117647058823, 1.], 
         Hue[0.576923076923077, 0.09160732089445948, 0.9294117647058823, 1.], 
         Hue[0.576923076923077, 0.09160732089445948, 0.9294117647058823, 1.], 
         Hue[0.576923076923077, 0.09160732089445948, 0.9294117647058823, 1.], 
         Hue[0.576923076923077, 0.09160732089445948, 0.9294117647058823, 1.], 
         Hue[0.576923076923077, 0.09160732089445948, 0.9294117647058823, 1.], 
         Hue[0.576923076923077, 0.09160732089445948, 0.9294117647058823, 1.], 
         Hue[0.576923076923077, 0.09160732089445948, 0.9294117647058823, 1.], 
         Hue[0.576923076923077, 0.09160732089445948, 0.9294117647058823, 1.], 
         Hue[0.576923076923077, 0.09160732089445948, 0.9294117647058823, 1.], 
         Hue[0.576923076923077, 0.09160732089445948, 0.9294117647058823, 1.], 
         Hue[0.576923076923077, 0.09160732089445948, 0.9294117647058823, 1.], 
         Hue[0.576923076923077, 0.09160732089445948, 0.9294117647058823, 1.], 
         Hue[0.576923076923077, 0.09160732089445948, 0.9294117647058823, 1.], 
         Hue[0.576923076923077, 0.09160732089445948, 0.9294117647058823, 1.], 
         Hue[0.576923076923077, 0.09160732089445948, 0.9294117647058823, 1.], 
         Hue[0.576923076923077, 0.09160732089445948, 0.9294117647058823, 1.], 
         Hue[0.576923076923077, 0.09160732089445948, 0.9294117647058823, 1.], 
         Hue[0.576923076923077, 0.09160732089445948, 0.9294117647058823, 1.], 
         Hue[0.576923076923077, 0.09160732089445948, 0.9294117647058823, 1.], 
         Hue[0.576923076923077, 0.09160732089445948, 0.9294117647058823, 1.], 
         Hue[0.576923076923077, 0.09160732089445948, 0.9294117647058823, 1.], 
         Hue[0.576923076923077, 0.09160732089445948, 0.9294117647058823, 1.], 
         Hue[0.576923076923077, 0.09160732089445948, 0.9294117647058823, 1.], 
         Hue[0.576923076923077, 0.09160732089445948, 0.9294117647058823, 1.], 
         Hue[0.576923076923077, 0.09160732089445948, 0.9294117647058823, 1.], 
         Hue[0.576923076923077, 0.09160732089445948, 0.9294117647058823, 1.], 
         Hue[0.576923076923077, 0.09160732089445948, 0.9294117647058823, 1.], 
         Hue[0.576923076923077, 0.09160732089445948, 0.9294117647058823, 1.], 
         Hue[0.576923076923077, 0.09160732089445948, 0.9294117647058823, 1.], 
         Hue[0.576923076923077, 0.09160732089445948, 0.9294117647058823, 1.], 
         Hue[0.576923076923077, 0.09160732089445948, 0.9294117647058823, 1.], 
         Hue[0.576923076923077, 0.09160732089445948, 0.9294117647058823, 1.], 
         Hue[0.576923076923077, 0.09160732089445948, 0.9294117647058823, 1.], 
         Hue[0.576923076923077, 0.09160732089445948, 0.9294117647058823, 1.], 
         Hue[0.576923076923077, 0.09160732089445948, 0.9294117647058823, 1.], 
         Hue[0.576923076923077, 0.09160732089445948, 0.9294117647058823, 1.], 
         Hue[0.576923076923077, 0.09160732089445948, 0.9294117647058823, 1.], 
         Hue[0.576923076923077, 0.09160732089445948, 0.9294117647058823, 1.], 
         Hue[0.576923076923077, 0.09160732089445948, 0.9294117647058823, 1.], 
         Hue[0.576923076923077, 0.09160732089445948, 0.9294117647058823, 1.], 
         Hue[0.576923076923077, 0.09160732089445948, 0.9294117647058823, 1.], 
         Hue[0.576923076923077, 0.09160732089445948, 0.9294117647058823, 1.], 
         Hue[0.576923076923077, 0.09160732089445948, 0.9294117647058823, 1.], 
         Hue[0.576923076923077, 0.09160732089445948, 0.9294117647058823, 1.], 
         Hue[0.576923076923077, 0.09160732089445948, 0.9294117647058823, 1.], 
         Hue[0.576923076923077, 0.09160732089445948, 0.9294117647058823, 1.], 
         Hue[0.576923076923077, 0.09160732089445948, 0.9294117647058823, 1.], 
         Hue[0.576923076923077, 0.09160732089445948, 0.9294117647058823, 1.], 
         Hue[0.576923076923077, 0.09160732089445948, 0.9294117647058823, 1.], 
         Hue[0.576923076923077, 0.09160732089445948, 0.9294117647058823, 1.], 
         Hue[0.576923076923077, 0.09160732089445948, 0.9294117647058823, 1.], 
         Hue[0.576923076923077, 0.09160732089445948, 0.9294117647058823, 1.], 
         Hue[0.576923076923077, 0.08720164609053499, 0.9529411764705882, 1.], 
         Hue[0.576923076923077, 0.08720164609053499, 0.9529411764705882, 1.], 
         Hue[0.576923076923077, 0.08720164609053499, 0.9529411764705882, 1.], 
         Hue[0.576923076923077, 0.08720164609053499, 0.9529411764705882, 1.], 
         Hue[0.576923076923077, 0.08720164609053499, 0.9529411764705882, 1.], 
         Hue[0.576923076923077, 0.08720164609053499, 0.9529411764705882, 1.], 
         Hue[0.576923076923077, 0.08720164609053499, 0.9529411764705882, 1.], 
         Hue[0.576923076923077, 0.08720164609053499, 0.9529411764705882, 1.], 
         Hue[0.576923076923077, 0.08720164609053499, 0.9529411764705882, 1.], 
         Hue[0.576923076923077, 0.08720164609053499, 0.9529411764705882, 1.], 
         Hue[0.576923076923077, 0.08720164609053499, 0.9529411764705882, 1.], 
         Hue[0.576923076923077, 0.08720164609053499, 0.9529411764705882, 1.], 
         Hue[0.576923076923077, 0.08720164609053499, 0.9529411764705882, 1.], 
         Hue[0.576923076923077, 0.08720164609053499, 0.9529411764705882, 1.], 
         Hue[0.576923076923077, 0.08720164609053499, 0.9529411764705882, 1.], 
         Hue[0.576923076923077, 0.08720164609053499, 0.9529411764705882, 1.], 
         Hue[0.576923076923077, 0.08720164609053499, 0.9529411764705882, 1.], 
         Hue[0.576923076923077, 0.08720164609053499, 0.9529411764705882, 1.], 
         Hue[0.576923076923077, 0.08720164609053499, 0.9529411764705882, 1.], 
         Hue[0.576923076923077, 0.08720164609053499, 0.9529411764705882, 1.], 
         Hue[0.576923076923077, 0.08720164609053499, 0.9529411764705882, 1.], 
         Hue[0.576923076923077, 0.08720164609053499, 0.9529411764705882, 1.], 
         Hue[0.576923076923077, 0.08720164609053499, 0.9529411764705882, 1.], 
         Hue[0.576923076923077, 0.08720164609053499, 0.9529411764705882, 1.], 
         Hue[0.576923076923077, 0.08720164609053499, 0.9529411764705882, 1.], 
         Hue[0.576923076923077, 0.08720164609053499, 0.9529411764705882, 1.], 
         Hue[0.576923076923077, 0.08720164609053499, 0.9529411764705882, 1.], 
         Hue[0.576923076923077, 0.08720164609053499, 0.9529411764705882, 1.], 
         Hue[0.576923076923077, 0.08720164609053499, 0.9529411764705882, 1.], 
         Hue[0.576923076923077, 0.08720164609053499, 0.9529411764705882, 1.], 
         Hue[0.576923076923077, 0.08720164609053499, 0.9529411764705882, 1.], 
         Hue[0.576923076923077, 0.08720164609053499, 0.9529411764705882, 1.], 
         Hue[0.576923076923077, 0.08720164609053499, 0.9529411764705882, 1.], 
         Hue[0.576923076923077, 0.08720164609053499, 0.9529411764705882, 1.], 
         Hue[0.576923076923077, 0.08720164609053499, 0.9529411764705882, 1.], 
         Hue[0.576923076923077, 0.08720164609053499, 0.9529411764705882, 1.], 
         Hue[0.576923076923077, 0.08720164609053499, 0.9529411764705882, 1.], 
         Hue[0.576923076923077, 0.08720164609053499, 0.9529411764705882, 1.], 
         Hue[0.576923076923077, 0.08720164609053499, 0.9529411764705882, 1.], 
         Hue[0.576923076923077, 0.08720164609053499, 0.9529411764705882, 1.], 
         Hue[0.576923076923077, 0.08720164609053499, 0.9529411764705882, 1.], 
         Hue[0.576923076923077, 0.08720164609053499, 0.9529411764705882, 1.], 
         Hue[0.576923076923077, 0.08720164609053499, 0.9529411764705882, 1.], 
         Hue[0.576923076923077, 0.08720164609053499, 0.9529411764705882, 1.], 
         Hue[0.576923076923077, 0.08720164609053499, 0.9529411764705882, 1.], 
         Hue[0.576923076923077, 0.08720164609053499, 0.9529411764705882, 1.], 
         Hue[0.576923076923077, 0.08720164609053499, 0.9529411764705882, 1.], 
         Hue[0.576923076923077, 0.08720164609053499, 0.9529411764705882, 1.], 
         Hue[0.576923076923077, 0.08720164609053499, 0.9529411764705882, 1.], 
         Hue[0.576923076923077, 0.08720164609053499, 0.9529411764705882, 1.], 
         Hue[0.576923076923077, 0.08720164609053499, 0.9529411764705882, 1.], 
         Hue[0.576923076923077, 0.08720164609053499, 0.9529411764705882, 1.], 
         Hue[0.576923076923077, 0.08720164609053499, 0.9529411764705882, 1.], 
         Hue[0.576923076923077, 0.08720164609053499, 0.9529411764705882, 1.], 
         Hue[0.576923076923077, 0.08720164609053499, 0.9529411764705882, 1.], 
         Hue[0.576923076923077, 0.08720164609053499, 0.9529411764705882, 1.], 
         Hue[0.576923076923077, 0.08720164609053499, 0.9529411764705882, 1.], 
         Hue[0.576923076923077, 0.08720164609053499, 0.9529411764705882, 1.], 
         Hue[0.576923076923077, 0.08720164609053499, 0.9529411764705882, 1.], 
         Hue[0.576923076923077, 0.08720164609053499, 0.9529411764705882, 1.], 
         Hue[0.576923076923077, 0.08720164609053499, 0.9529411764705882, 1.], 
         Hue[0.576923076923077, 0.08720164609053499, 0.9529411764705882, 1.], 
         Hue[0.576923076923077, 0.08720164609053499, 0.9529411764705882, 1.], 
         Hue[0.576923076923077, 0.08720164609053499, 0.9529411764705882, 1.], 
         Hue[0.576923076923077, 0.08720164609053499, 0.9529411764705882, 1.], 
         Hue[0.576923076923077, 0.08720164609053499, 0.9529411764705882, 1.], 
         Hue[0.576923076923077, 0.08720164609053499, 0.9529411764705882, 1.], 
         Hue[0.576923076923077, 0.08720164609053499, 0.9529411764705882, 1.], 
         Hue[0.576923076923077, 0.08720164609053499, 0.9529411764705882, 1.], 
         Hue[0.576923076923077, 0.08720164609053499, 0.9529411764705882, 1.], 
         Hue[0.576923076923077, 0.08720164609053499, 0.9529411764705882, 1.], 
         Hue[0.576923076923077, 0.08720164609053499, 0.9529411764705882, 1.], 
         Hue[0.576923076923077, 0.08720164609053499, 0.9529411764705882, 1.], 
         Hue[0.576923076923077, 0.08720164609053499, 0.9529411764705882, 1.], 
         Hue[0.576923076923077, 0.08720164609053499, 0.9529411764705882, 1.], 
         Hue[0.576923076923077, 0.08720164609053499, 0.9529411764705882, 1.], 
         Hue[0.576923076923077, 0.08720164609053499, 0.9529411764705882, 1.], 
         Hue[0.576923076923077, 0.08720164609053499, 0.9529411764705882, 1.], 
         Hue[0.576923076923077, 0.08720164609053499, 0.9529411764705882, 1.], 
         Hue[0.576923076923077, 0.08720164609053499, 0.9529411764705882, 1.], 
         Hue[0.576923076923077, 0.08720164609053499, 0.9529411764705882, 1.], 
         Hue[0.576923076923077, 0.08720164609053499, 0.9529411764705882, 1.], 
         Hue[0.576923076923077, 0.08720164609053499, 0.9529411764705882, 1.], 
         Hue[0.576923076923077, 0.08720164609053499, 0.9529411764705882, 1.], 
         Hue[0.576923076923077, 0.08720164609053499, 0.9529411764705882, 1.], 
         Hue[0.576923076923077, 0.08720164609053499, 0.9529411764705882, 1.], 
         Hue[0.576923076923077, 0.08720164609053499, 0.9529411764705882, 1.], 
         Hue[0.576923076923077, 0.08720164609053499, 0.9529411764705882, 1.], 
         Hue[0.576923076923077, 0.08720164609053499, 0.9529411764705882, 1.], 
         Hue[0.576923076923077, 0.08720164609053499, 0.9529411764705882, 1.], 
         Hue[0.576923076923077, 0.08720164609053499, 0.9529411764705882, 1.], 
         Hue[0.576923076923077, 0.08720164609053499, 0.9529411764705882, 1.], 
         Hue[0.576923076923077, 0.08720164609053499, 0.9529411764705882, 1.], 
         Hue[0.576923076923077, 0.08720164609053499, 0.9529411764705882, 1.], 
         Hue[0.576923076923077, 0.08720164609053499, 0.9529411764705882, 1.], 
         Hue[0.576923076923077, 0.08720164609053499, 0.9529411764705882, 1.], 
         Hue[0.576923076923077, 0.08720164609053499, 0.9529411764705882, 1.], 
         Hue[0.576923076923077, 0.08720164609053499, 0.9529411764705882, 1.], 
         Hue[0.576923076923077, 0.08720164609053499, 0.9529411764705882, 1.], 
         Hue[0.576923076923077, 0.08720164609053499, 0.9529411764705882, 1.], 
         Hue[0.576923076923077, 0.08329795371964048, 0.9823529411764707, 1.], 
         Hue[0.576923076923077, 0.08329795371964048, 0.9823529411764707, 1.], 
         Hue[0.576923076923077, 0.08329795371964048, 0.9823529411764707, 1.], 
         Hue[0.576923076923077, 0.08329795371964048, 0.9823529411764707, 1.], 
         Hue[0.576923076923077, 0.08329795371964048, 0.9823529411764707, 1.], 
         Hue[0.576923076923077, 0.08329795371964048, 0.9823529411764707, 1.], 
         Hue[0.576923076923077, 0.08329795371964048, 0.9823529411764707, 1.], 
         Hue[0.576923076923077, 0.08329795371964048, 0.9823529411764707, 1.], 
         Hue[0.576923076923077, 0.08329795371964048, 0.9823529411764707, 1.], 
         Hue[0.576923076923077, 0.08329795371964048, 0.9823529411764707, 1.], 
         Hue[0.576923076923077, 0.08329795371964048, 0.9823529411764707, 1.], 
         Hue[0.576923076923077, 0.08329795371964048, 0.9823529411764707, 1.], 
         Hue[0.576923076923077, 0.08329795371964048, 0.9823529411764707, 1.], 
         Hue[0.576923076923077, 0.08329795371964048, 0.9823529411764707, 1.], 
         Hue[0.576923076923077, 0.08329795371964048, 0.9823529411764707, 1.], 
         Hue[0.576923076923077, 0.08329795371964048, 0.9823529411764707, 1.], 
         Hue[0.576923076923077, 0.08329795371964048, 0.9823529411764707, 1.], 
         Hue[0.576923076923077, 0.08329795371964048, 0.9823529411764707, 1.], 
         Hue[0.576923076923077, 0.08329795371964048, 0.9823529411764707, 1.], 
         Hue[0.576923076923077, 0.08329795371964048, 0.9823529411764707, 1.], 
         Hue[0.576923076923077, 0.08329795371964048, 0.9823529411764707, 1.], 
         Hue[0.576923076923077, 0.08329795371964048, 0.9823529411764707, 1.], 
         Hue[0.576923076923077, 0.08329795371964048, 0.9823529411764707, 1.], 
         Hue[0.576923076923077, 0.08329795371964048, 0.9823529411764707, 1.], 
         Hue[0.576923076923077, 0.08329795371964048, 0.9823529411764707, 1.], 
         Hue[0.576923076923077, 0.08329795371964048, 0.9823529411764707, 1.], 
         Hue[0.576923076923077, 0.08329795371964048, 0.9823529411764707, 1.], 
         Hue[0.576923076923077, 0.08329795371964048, 0.9823529411764707, 1.], 
         Hue[0.576923076923077, 0.08329795371964048, 0.9823529411764707, 1.], 
         Hue[0.576923076923077, 0.08329795371964048, 0.9823529411764707, 1.], 
         Hue[0.576923076923077, 0.08329795371964048, 0.9823529411764707, 1.], 
         Hue[0.576923076923077, 0.08329795371964048, 0.9823529411764707, 1.], 
         Hue[0.576923076923077, 0.08329795371964048, 0.9823529411764707, 1.], 
         Hue[0.576923076923077, 0.08329795371964048, 0.9823529411764707, 1.], 
         Hue[0.576923076923077, 0.08329795371964048, 0.9823529411764707, 1.], 
         Hue[0.576923076923077, 0.08329795371964048, 0.9823529411764707, 1.], 
         Hue[0.576923076923077, 0.08329795371964048, 0.9823529411764707, 1.], 
         Hue[0.576923076923077, 0.08329795371964048, 0.9823529411764707, 1.], 
         Hue[0.576923076923077, 0.08329795371964048, 0.9823529411764707, 1.], 
         Hue[0.576923076923077, 0.08329795371964048, 0.9823529411764707, 1.], 
         Hue[0.576923076923077, 0.08329795371964048, 0.9823529411764707, 1.], 
         Hue[0.576923076923077, 0.08329795371964048, 0.9823529411764707, 1.], 
         Hue[0.576923076923077, 0.08329795371964048, 0.9823529411764707, 1.], 
         Hue[0.576923076923077, 0.08329795371964048, 0.9823529411764707, 1.], 
         Hue[0.576923076923077, 0.08329795371964048, 0.9823529411764707, 1.], 
         Hue[0.576923076923077, 0.08329795371964048, 0.9823529411764707, 1.], 
         Hue[0.576923076923077, 0.08329795371964048, 0.9823529411764707, 1.], 
         Hue[0.576923076923077, 0.08329795371964048, 0.9823529411764707, 1.], 
         Hue[0.576923076923077, 0.08329795371964048, 0.9823529411764707, 1.], 
         Hue[0.576923076923077, 0.08329795371964048, 0.9823529411764707, 1.], 
         Hue[0.576923076923077, 0.08329795371964048, 0.9823529411764707, 1.], 
         Hue[0.576923076923077, 0.08329795371964048, 0.9823529411764707, 1.], 
         Hue[0.576923076923077, 0.08329795371964048, 0.9823529411764707, 1.], 
         Hue[0.576923076923077, 0.08329795371964048, 0.9823529411764707, 1.], 
         Hue[0.576923076923077, 0.08329795371964048, 0.9823529411764707, 1.], 
         Hue[0.576923076923077, 0.08329795371964048, 0.9823529411764707, 1.], 
         Hue[0.576923076923077, 0.08329795371964048, 0.9823529411764707, 1.], 
         Hue[0.576923076923077, 0.08329795371964048, 0.9823529411764707, 1.], 
         Hue[0.576923076923077, 0.08329795371964048, 0.9823529411764707, 1.], 
         Hue[0.576923076923077, 0.08329795371964048, 0.9823529411764707, 1.], 
         Hue[0.576923076923077, 0.08329795371964048, 0.9823529411764707, 1.], 
         Hue[0.576923076923077, 0.08329795371964048, 0.9823529411764707, 1.], 
         Hue[0.576923076923077, 0.08329795371964048, 0.9823529411764707, 1.], 
         Hue[0.576923076923077, 0.08329795371964048, 0.9823529411764707, 1.], 
         Hue[0.576923076923077, 0.08329795371964048, 0.9823529411764707, 1.], 
         Hue[0.576923076923077, 0.08329795371964048, 0.9823529411764707, 1.], 
         Hue[0.576923076923077, 0.08329795371964048, 0.9823529411764707, 1.], 
         Hue[0.576923076923077, 0.08329795371964048, 0.9823529411764707, 1.], 
         Hue[0.576923076923077, 0.08329795371964048, 0.9823529411764707, 1.], 
         Hue[0.576923076923077, 0.08329795371964048, 0.9823529411764707, 1.], 
         Hue[0.576923076923077, 0.08329795371964048, 0.9823529411764707, 1.], 
         Hue[0.576923076923077, 0.08329795371964048, 0.9823529411764707, 1.], 
         Hue[0.576923076923077, 0.08329795371964048, 0.9823529411764707, 1.], 
         Hue[0.576923076923077, 0.08329795371964048, 0.9823529411764707, 1.], 
         Hue[0.576923076923077, 0.08329795371964048, 0.9823529411764707, 1.], 
         Hue[0.576923076923077, 0.08329795371964048, 0.9823529411764707, 1.], 
         Hue[0.576923076923077, 0.08329795371964048, 0.9823529411764707, 1.], 
         Hue[0.576923076923077, 0.08329795371964048, 0.9823529411764707, 1.], 
         Hue[0.576923076923077, 0.08329795371964048, 0.9823529411764707, 1.], 
         Hue[0.576923076923077, 0.08329795371964048, 0.9823529411764707, 1.], 
         Hue[0.576923076923077, 0.08329795371964048, 0.9823529411764707, 1.], 
         Hue[0.576923076923077, 0.08329795371964048, 0.9823529411764707, 1.], 
         Hue[0.576923076923077, 0.08329795371964048, 0.9823529411764707, 1.], 
         Hue[0.576923076923077, 0.08329795371964048, 0.9823529411764707, 1.], 
         Hue[0.576923076923077, 0.08329795371964048, 0.9823529411764707, 1.], 
         Hue[0.576923076923077, 0.08329795371964048, 0.9823529411764707, 1.], 
         Hue[0.576923076923077, 0.08329795371964048, 0.9823529411764707, 1.], 
         Hue[0.576923076923077, 0.08329795371964048, 0.9823529411764707, 1.], 
         Hue[0.576923076923077, 0.08329795371964048, 0.9823529411764707, 1.], 
         Hue[0.576923076923077, 0.08329795371964048, 0.9823529411764707, 1.], 
         Hue[0.576923076923077, 0.08329795371964048, 0.9823529411764707, 1.], 
         Hue[0.576923076923077, 0.08329795371964048, 0.9823529411764707, 1.], 
         Hue[0.576923076923077, 0.08329795371964048, 0.9823529411764707, 1.], 
         Hue[0.576923076923077, 0.08329795371964048, 0.9823529411764707, 1.], 
         Hue[0.576923076923077, 0.08329795371964048, 0.9823529411764707, 1.], 
         Hue[0.576923076923077, 0.08329795371964048, 0.9823529411764707, 1.], 
         Hue[0.576923076923077, 0.08329795371964048, 0.9823529411764707, 1.], 
         Hue[0.576923076923077, 0.08329795371964048, 0.9823529411764707, 1.], 
         Hue[0.576923076923077, 0.08329795371964048, 0.9823529411764707, 1.], 
         Hue[0.576923076923077, 0.08329795371964048, 0.9823529411764707, 1.], 
         Hue[0.576923076923077, 0.07901960784313726, 1., 1.], 
         Hue[0.576923076923077, 0.07901960784313726, 1., 1.], 
         Hue[0.576923076923077, 0.07901960784313726, 1., 1.], 
         Hue[0.576923076923077, 0.07901960784313726, 1., 1.], 
         Hue[0.576923076923077, 0.07901960784313726, 1., 1.], 
         Hue[0.576923076923077, 0.07901960784313726, 1., 1.], 
         Hue[0.576923076923077, 0.07901960784313726, 1., 1.], 
         Hue[0.576923076923077, 0.07901960784313726, 1., 1.], 
         Hue[0.576923076923077, 0.07901960784313726, 1., 1.], 
         Hue[0.576923076923077, 0.07901960784313726, 1., 1.], 
         Hue[0.576923076923077, 0.07901960784313726, 1., 1.], 
         Hue[0.576923076923077, 0.07901960784313726, 1., 1.], 
         Hue[0.576923076923077, 0.07901960784313726, 1., 1.], 
         Hue[0.576923076923077, 0.07901960784313726, 1., 1.], 
         Hue[0.576923076923077, 0.07901960784313726, 1., 1.], 
         Hue[0.576923076923077, 0.07901960784313726, 1., 1.], 
         Hue[0.576923076923077, 0.07901960784313726, 1., 1.], 
         Hue[0.576923076923077, 0.07901960784313726, 1., 1.], 
         Hue[0.576923076923077, 0.07901960784313726, 1., 1.], 
         Hue[0.576923076923077, 0.07901960784313726, 1., 1.], 
         Hue[0.576923076923077, 0.07901960784313726, 1., 1.], 
         Hue[0.576923076923077, 0.07901960784313726, 1., 1.], 
         Hue[0.576923076923077, 0.07901960784313726, 1., 1.], 
         Hue[0.576923076923077, 0.07901960784313726, 1., 1.], 
         Hue[0.576923076923077, 0.07901960784313726, 1., 1.], 
         Hue[0.576923076923077, 0.07901960784313726, 1., 1.], 
         Hue[0.576923076923077, 0.07901960784313726, 1., 1.], 
         Hue[0.576923076923077, 0.07901960784313726, 1., 1.], 
         Hue[0.576923076923077, 0.07901960784313726, 1., 1.], 
         Hue[0.576923076923077, 0.07901960784313726, 1., 1.], 
         Hue[0.576923076923077, 0.07901960784313726, 1., 1.], 
         Hue[0.576923076923077, 0.07901960784313726, 1., 1.], 
         Hue[0.576923076923077, 0.07901960784313726, 1., 1.], 
         Hue[0.576923076923077, 0.07901960784313726, 1., 1.], 
         Hue[0.576923076923077, 0.07901960784313726, 1., 1.], 
         Hue[0.576923076923077, 0.07901960784313726, 1., 1.], 
         Hue[0.576923076923077, 0.07901960784313726, 1., 1.], 
         Hue[0.576923076923077, 0.07901960784313726, 1., 1.], 
         Hue[0.576923076923077, 0.07901960784313726, 1., 1.], 
         Hue[0.576923076923077, 0.07901960784313726, 1., 1.], 
         Hue[0.576923076923077, 0.07901960784313726, 1., 1.], 
         Hue[0.576923076923077, 0.07901960784313726, 1., 1.], 
         Hue[0.576923076923077, 0.07901960784313726, 1., 1.], 
         Hue[0.576923076923077, 0.07901960784313726, 1., 1.], 
         Hue[0.576923076923077, 0.07901960784313726, 1., 1.], 
         Hue[0.576923076923077, 0.07901960784313726, 1., 1.], 
         Hue[0.576923076923077, 0.07901960784313726, 1., 1.], 
         Hue[0.576923076923077, 0.07901960784313726, 1., 1.], 
         Hue[0.576923076923077, 0.07901960784313726, 1., 1.], 
         Hue[0.576923076923077, 0.07901960784313726, 1., 1.], 
         Hue[0.576923076923077, 0.07901960784313726, 1., 1.], 
         Hue[0.576923076923077, 0.07901960784313726, 1., 1.], 
         Hue[0.576923076923077, 0.07901960784313726, 1., 1.], 
         Hue[0.576923076923077, 0.07901960784313726, 1., 1.], 
         Hue[0.576923076923077, 0.07901960784313726, 1., 1.], 
         Hue[0.576923076923077, 0.07901960784313726, 1., 1.], 
         Hue[0.576923076923077, 0.07901960784313726, 1., 1.], 
         Hue[0.576923076923077, 0.07901960784313726, 1., 1.], 
         Hue[0.576923076923077, 0.07901960784313726, 1., 1.], 
         Hue[0.576923076923077, 0.07901960784313726, 1., 1.], 
         Hue[0.576923076923077, 0.07901960784313726, 1., 1.], 
         Hue[0.576923076923077, 0.07901960784313726, 1., 1.], 
         Hue[0.576923076923077, 0.07901960784313726, 1., 1.], 
         Hue[0.576923076923077, 0.07901960784313726, 1., 1.], 
         Hue[0.576923076923077, 0.07901960784313726, 1., 1.], 
         Hue[0.576923076923077, 0.07901960784313726, 1., 1.], 
         Hue[0.576923076923077, 0.07901960784313726, 1., 1.], 
         Hue[0.576923076923077, 0.07901960784313726, 1., 1.], 
         Hue[0.576923076923077, 0.07901960784313726, 1., 1.], 
         Hue[0.576923076923077, 0.07901960784313726, 1., 1.], 
         Hue[0.576923076923077, 0.07901960784313726, 1., 1.], 
         Hue[0.576923076923077, 0.07901960784313726, 1., 1.], 
         Hue[0.576923076923077, 0.07901960784313726, 1., 1.], 
         Hue[0.576923076923077, 0.07901960784313726, 1., 1.], 
         Hue[0.576923076923077, 0.07901960784313726, 1., 1.], 
         Hue[0.576923076923077, 0.07901960784313726, 1., 1.], 
         Hue[0.576923076923077, 0.07901960784313726, 1., 1.], 
         Hue[0.576923076923077, 0.07901960784313726, 1., 1.], 
         Hue[0.576923076923077, 0.07901960784313726, 1., 1.], 
         Hue[0.576923076923077, 0.07901960784313726, 1., 1.], 
         Hue[0.576923076923077, 0.07901960784313726, 1., 1.], 
         Hue[0.576923076923077, 0.07901960784313726, 1., 1.], 
         Hue[0.576923076923077, 0.07901960784313726, 1., 1.], 
         Hue[0.576923076923077, 0.07901960784313726, 1., 1.], 
         Hue[0.576923076923077, 0.07901960784313726, 1., 1.], 
         Hue[0.576923076923077, 0.07901960784313726, 1., 1.], 
         Hue[0.576923076923077, 0.07901960784313726, 1., 1.], 
         Hue[0.576923076923077, 0.07901960784313726, 1., 1.], 
         Hue[0.576923076923077, 0.07901960784313726, 1., 1.], 
         Hue[0.576923076923077, 0.07901960784313726, 1., 1.], 
         Hue[0.576923076923077, 0.07901960784313726, 1., 1.], 
         Hue[0.576923076923077, 0.07901960784313726, 1., 1.], 
         Hue[0.576923076923077, 0.07901960784313726, 1., 1.], 
         Hue[0.576923076923077, 0.07901960784313726, 1., 1.], 
         Hue[0.576923076923077, 0.07901960784313726, 1., 1.], 
         Hue[0.576923076923077, 0.07901960784313726, 1., 1.], 
         Hue[0.576923076923077, 0.07901960784313726, 1., 1.], 
         Hue[0.576923076923077, 0.07901960784313726, 1., 1.], 
         Hue[0.576923076923077, 0.07901960784313726, 1., 1.], 
         Hue[0.576923076923077, 0.07901960784313726, 1., 1.], 
         Hue[0.576923076923077, 0.07392156862745096, 1., 1.], 
         Hue[0.576923076923077, 0.07392156862745096, 1., 1.], 
         Hue[0.576923076923077, 0.07392156862745096, 1., 1.], 
         Hue[0.576923076923077, 0.07392156862745096, 1., 1.], 
         Hue[0.576923076923077, 0.07392156862745096, 1., 1.], 
         Hue[0.576923076923077, 0.07392156862745096, 1., 1.], 
         Hue[0.576923076923077, 0.07392156862745096, 1., 1.], 
         Hue[0.576923076923077, 0.07392156862745096, 1., 1.], 
         Hue[0.576923076923077, 0.07392156862745096, 1., 1.], 
         Hue[0.576923076923077, 0.07392156862745096, 1., 1.], 
         Hue[0.576923076923077, 0.07392156862745096, 1., 1.], 
         Hue[0.576923076923077, 0.07392156862745096, 1., 1.], 
         Hue[0.576923076923077, 0.07392156862745096, 1., 1.], 
         Hue[0.576923076923077, 0.07392156862745096, 1., 1.], 
         Hue[0.576923076923077, 0.07392156862745096, 1., 1.], 
         Hue[0.576923076923077, 0.07392156862745096, 1., 1.], 
         Hue[0.576923076923077, 0.07392156862745096, 1., 1.], 
         Hue[0.576923076923077, 0.07392156862745096, 1., 1.], 
         Hue[0.576923076923077, 0.07392156862745096, 1., 1.], 
         Hue[0.576923076923077, 0.07392156862745096, 1., 1.], 
         Hue[0.576923076923077, 0.07392156862745096, 1., 1.], 
         Hue[0.576923076923077, 0.07392156862745096, 1., 1.], 
         Hue[0.576923076923077, 0.07392156862745096, 1., 1.], 
         Hue[0.576923076923077, 0.07392156862745096, 1., 1.], 
         Hue[0.576923076923077, 0.07392156862745096, 1., 1.], 
         Hue[0.576923076923077, 0.07392156862745096, 1., 1.], 
         Hue[0.576923076923077, 0.07392156862745096, 1., 1.], 
         Hue[0.576923076923077, 0.07392156862745096, 1., 1.], 
         Hue[0.576923076923077, 0.07392156862745096, 1., 1.], 
         Hue[0.576923076923077, 0.07392156862745096, 1., 1.], 
         Hue[0.576923076923077, 0.07392156862745096, 1., 1.], 
         Hue[0.576923076923077, 0.07392156862745096, 1., 1.], 
         Hue[0.576923076923077, 0.07392156862745096, 1., 1.], 
         Hue[0.576923076923077, 0.07392156862745096, 1., 1.], 
         Hue[0.576923076923077, 0.07392156862745096, 1., 1.], 
         Hue[0.576923076923077, 0.07392156862745096, 1., 1.], 
         Hue[0.576923076923077, 0.07392156862745096, 1., 1.], 
         Hue[0.576923076923077, 0.07392156862745096, 1., 1.], 
         Hue[0.576923076923077, 0.07392156862745096, 1., 1.], 
         Hue[0.576923076923077, 0.07392156862745096, 1., 1.], 
         Hue[0.576923076923077, 0.07392156862745096, 1., 1.], 
         Hue[0.576923076923077, 0.07392156862745096, 1., 1.], 
         Hue[0.576923076923077, 0.07392156862745096, 1., 1.], 
         Hue[0.576923076923077, 0.07392156862745096, 1., 1.], 
         Hue[0.576923076923077, 0.07392156862745096, 1., 1.], 
         Hue[0.576923076923077, 0.07392156862745096, 1., 1.], 
         Hue[0.576923076923077, 0.07392156862745096, 1., 1.], 
         Hue[0.576923076923077, 0.07392156862745096, 1., 1.], 
         Hue[0.576923076923077, 0.07392156862745096, 1., 1.], 
         Hue[0.576923076923077, 0.07392156862745096, 1., 1.], 
         Hue[0.576923076923077, 0.07392156862745096, 1., 1.], 
         Hue[0.576923076923077, 0.07392156862745096, 1., 1.], 
         Hue[0.576923076923077, 0.07392156862745096, 1., 1.], 
         Hue[0.576923076923077, 0.07392156862745096, 1., 1.], 
         Hue[0.576923076923077, 0.07392156862745096, 1., 1.], 
         Hue[0.576923076923077, 0.07392156862745096, 1., 1.], 
         Hue[0.576923076923077, 0.07392156862745096, 1., 1.], 
         Hue[0.576923076923077, 0.07392156862745096, 1., 1.], 
         Hue[0.576923076923077, 0.07392156862745096, 1., 1.], 
         Hue[0.576923076923077, 0.07392156862745096, 1., 1.], 
         Hue[0.576923076923077, 0.07392156862745096, 1., 1.], 
         Hue[0.576923076923077, 0.07392156862745096, 1., 1.], 
         Hue[0.576923076923077, 0.07392156862745096, 1., 1.], 
         Hue[0.576923076923077, 0.07392156862745096, 1., 1.], 
         Hue[0.576923076923077, 0.07392156862745096, 1., 1.], 
         Hue[0.576923076923077, 0.07392156862745096, 1., 1.], 
         Hue[0.576923076923077, 0.07392156862745096, 1., 1.], 
         Hue[0.576923076923077, 0.07392156862745096, 1., 1.], 
         Hue[0.576923076923077, 0.07392156862745096, 1., 1.], 
         Hue[0.576923076923077, 0.07392156862745096, 1., 1.], 
         Hue[0.576923076923077, 0.07392156862745096, 1., 1.], 
         Hue[0.576923076923077, 0.07392156862745096, 1., 1.], 
         Hue[0.576923076923077, 0.07392156862745096, 1., 1.], 
         Hue[0.576923076923077, 0.07392156862745096, 1., 1.], 
         Hue[0.576923076923077, 0.07392156862745096, 1., 1.], 
         Hue[0.576923076923077, 0.07392156862745096, 1., 1.], 
         Hue[0.576923076923077, 0.07392156862745096, 1., 1.], 
         Hue[0.576923076923077, 0.07392156862745096, 1., 1.], 
         Hue[0.576923076923077, 0.07392156862745096, 1., 1.], 
         Hue[0.576923076923077, 0.07392156862745096, 1., 1.], 
         Hue[0.576923076923077, 0.07392156862745096, 1., 1.], 
         Hue[0.576923076923077, 0.07392156862745096, 1., 1.], 
         Hue[0.576923076923077, 0.07392156862745096, 1., 1.], 
         Hue[0.576923076923077, 0.07392156862745096, 1., 1.], 
         Hue[0.576923076923077, 0.07392156862745096, 1., 1.], 
         Hue[0.576923076923077, 0.07392156862745096, 1., 1.], 
         Hue[0.576923076923077, 0.07392156862745096, 1., 1.], 
         Hue[0.576923076923077, 0.07392156862745096, 1., 1.], 
         Hue[0.576923076923077, 0.07392156862745096, 1., 1.], 
         Hue[0.576923076923077, 0.07392156862745096, 1., 1.], 
         Hue[0.576923076923077, 0.07392156862745096, 1., 1.], 
         Hue[0.576923076923077, 0.07392156862745096, 1., 1.], 
         Hue[0.576923076923077, 0.07392156862745096, 1., 1.], 
         Hue[0.576923076923077, 0.07392156862745096, 1., 1.], 
         Hue[0.576923076923077, 0.07392156862745096, 1., 1.], 
         Hue[0.576923076923077, 0.07392156862745096, 1., 1.], 
         Hue[0.576923076923077, 0.07392156862745096, 1., 1.], 
         Hue[0.576923076923077, 0.07392156862745096, 1., 1.], 
         Hue[0.576923076923077, 0.07392156862745096, 1., 1.], 
         Hue[0.576923076923077, 0.07392156862745096, 1., 1.], 
         Hue[0.576923076923077, 0.06933333333333336, 1., 1.], 
         Hue[0.576923076923077, 0.06933333333333336, 1., 1.], 
         Hue[0.576923076923077, 0.06933333333333336, 1., 1.], 
         Hue[0.576923076923077, 0.06933333333333336, 1., 1.], 
         Hue[0.576923076923077, 0.06933333333333336, 1., 1.], 
         Hue[0.576923076923077, 0.06933333333333336, 1., 1.], 
         Hue[0.576923076923077, 0.06933333333333336, 1., 1.], 
         Hue[0.576923076923077, 0.06933333333333336, 1., 1.], 
         Hue[0.576923076923077, 0.06933333333333336, 1., 1.], 
         Hue[0.576923076923077, 0.06933333333333336, 1., 1.], 
         Hue[0.576923076923077, 0.06933333333333336, 1., 1.], 
         Hue[0.576923076923077, 0.06933333333333336, 1., 1.], 
         Hue[0.576923076923077, 0.06933333333333336, 1., 1.], 
         Hue[0.576923076923077, 0.06933333333333336, 1., 1.], 
         Hue[0.576923076923077, 0.06933333333333336, 1., 1.], 
         Hue[0.576923076923077, 0.06933333333333336, 1., 1.], 
         Hue[0.576923076923077, 0.06933333333333336, 1., 1.], 
         Hue[0.576923076923077, 0.06933333333333336, 1., 1.], 
         Hue[0.576923076923077, 0.06933333333333336, 1., 1.], 
         Hue[0.576923076923077, 0.06933333333333336, 1., 1.], 
         Hue[0.576923076923077, 0.06933333333333336, 1., 1.], 
         Hue[0.576923076923077, 0.06933333333333336, 1., 1.], 
         Hue[0.576923076923077, 0.06933333333333336, 1., 1.], 
         Hue[0.576923076923077, 0.06933333333333336, 1., 1.], 
         Hue[0.576923076923077, 0.06933333333333336, 1., 1.], 
         Hue[0.576923076923077, 0.06933333333333336, 1., 1.], 
         Hue[0.576923076923077, 0.06933333333333336, 1., 1.], 
         Hue[0.576923076923077, 0.06933333333333336, 1., 1.], 
         Hue[0.576923076923077, 0.06933333333333336, 1., 1.], 
         Hue[0.576923076923077, 0.06933333333333336, 1., 1.], 
         Hue[0.576923076923077, 0.06933333333333336, 1., 1.], 
         Hue[0.576923076923077, 0.06933333333333336, 1., 1.], 
         Hue[0.576923076923077, 0.06933333333333336, 1., 1.], 
         Hue[0.576923076923077, 0.06933333333333336, 1., 1.], 
         Hue[0.576923076923077, 0.06933333333333336, 1., 1.], 
         Hue[0.576923076923077, 0.06933333333333336, 1., 1.], 
         Hue[0.576923076923077, 0.06933333333333336, 1., 1.], 
         Hue[0.576923076923077, 0.06933333333333336, 1., 1.], 
         Hue[0.576923076923077, 0.06933333333333336, 1., 1.], 
         Hue[0.576923076923077, 0.06933333333333336, 1., 1.], 
         Hue[0.576923076923077, 0.06933333333333336, 1., 1.], 
         Hue[0.576923076923077, 0.06933333333333336, 1., 1.], 
         Hue[0.576923076923077, 0.06933333333333336, 1., 1.], 
         Hue[0.576923076923077, 0.06933333333333336, 1., 1.], 
         Hue[0.576923076923077, 0.06933333333333336, 1., 1.], 
         Hue[0.576923076923077, 0.06933333333333336, 1., 1.], 
         Hue[0.576923076923077, 0.06933333333333336, 1., 1.], 
         Hue[0.576923076923077, 0.06933333333333336, 1., 1.], 
         Hue[0.576923076923077, 0.06933333333333336, 1., 1.], 
         Hue[0.576923076923077, 0.06933333333333336, 1., 1.], 
         Hue[0.576923076923077, 0.06933333333333336, 1., 1.], 
         Hue[0.576923076923077, 0.06933333333333336, 1., 1.], 
         Hue[0.576923076923077, 0.06933333333333336, 1., 1.], 
         Hue[0.576923076923077, 0.06933333333333336, 1., 1.], 
         Hue[0.576923076923077, 0.06933333333333336, 1., 1.], 
         Hue[0.576923076923077, 0.06933333333333336, 1., 1.], 
         Hue[0.576923076923077, 0.06933333333333336, 1., 1.], 
         Hue[0.576923076923077, 0.06933333333333336, 1., 1.], 
         Hue[0.576923076923077, 0.06933333333333336, 1., 1.], 
         Hue[0.576923076923077, 0.06933333333333336, 1., 1.], 
         Hue[0.576923076923077, 0.06933333333333336, 1., 1.], 
         Hue[0.576923076923077, 0.06933333333333336, 1., 1.], 
         Hue[0.576923076923077, 0.06933333333333336, 1., 1.], 
         Hue[0.576923076923077, 0.06933333333333336, 1., 1.], 
         Hue[0.576923076923077, 0.06933333333333336, 1., 1.], 
         Hue[0.576923076923077, 0.06933333333333336, 1., 1.], 
         Hue[0.576923076923077, 0.06933333333333336, 1., 1.], 
         Hue[0.576923076923077, 0.06933333333333336, 1., 1.], 
         Hue[0.576923076923077, 0.06933333333333336, 1., 1.], 
         Hue[0.576923076923077, 0.06933333333333336, 1., 1.], 
         Hue[0.576923076923077, 0.06933333333333336, 1., 1.], 
         Hue[0.576923076923077, 0.06933333333333336, 1., 1.], 
         Hue[0.576923076923077, 0.06933333333333336, 1., 1.], 
         Hue[0.576923076923077, 0.06933333333333336, 1., 1.], 
         Hue[0.576923076923077, 0.06933333333333336, 1., 1.], 
         Hue[0.576923076923077, 0.06933333333333336, 1., 1.], 
         Hue[0.576923076923077, 0.06933333333333336, 1., 1.], 
         Hue[0.576923076923077, 0.06933333333333336, 1., 1.], 
         Hue[0.576923076923077, 0.06933333333333336, 1., 1.], 
         Hue[0.576923076923077, 0.06933333333333336, 1., 1.], 
         Hue[0.576923076923077, 0.06933333333333336, 1., 1.], 
         Hue[0.576923076923077, 0.06933333333333336, 1., 1.], 
         Hue[0.576923076923077, 0.06933333333333336, 1., 1.], 
         Hue[0.576923076923077, 0.06933333333333336, 1., 1.], 
         Hue[0.576923076923077, 0.06933333333333336, 1., 1.], 
         Hue[0.576923076923077, 0.06933333333333336, 1., 1.], 
         Hue[0.576923076923077, 0.06933333333333336, 1., 1.], 
         Hue[0.576923076923077, 0.06933333333333336, 1., 1.], 
         Hue[0.576923076923077, 0.06933333333333336, 1., 1.], 
         Hue[0.576923076923077, 0.06933333333333336, 1., 1.], 
         Hue[0.576923076923077, 0.06933333333333336, 1., 1.], 
         Hue[0.576923076923077, 0.06933333333333336, 1., 1.], 
         Hue[0.576923076923077, 0.06933333333333336, 1., 1.], 
         Hue[0.576923076923077, 0.06933333333333336, 1., 1.], 
         Hue[0.576923076923077, 0.06933333333333336, 1., 1.], 
         Hue[0.576923076923077, 0.06933333333333336, 1., 1.], 
         Hue[0.576923076923077, 0.06933333333333336, 1., 1.], 
         Hue[0.576923076923077, 0.06933333333333336, 1., 1.], 
         Hue[0.576923076923077, 0.06933333333333336, 1., 1.], 
         Hue[0.576923076923077, 0.06933333333333336, 1., 1.], 
         Hue[0.576923076923077, 0.0823087644696433, 0.988235294117647, 1.], 
         Hue[0.576923076923077, 0.0823087644696433, 0.988235294117647, 1.], 
         Hue[0.576923076923077, 0.0823087644696433, 0.988235294117647, 1.], 
         Hue[0.576923076923077, 0.0823087644696433, 0.988235294117647, 1.], 
         Hue[0.576923076923077, 0.0823087644696433, 0.988235294117647, 1.], 
         Hue[0.576923076923077, 0.0823087644696433, 0.988235294117647, 1.], 
         Hue[0.576923076923077, 0.0823087644696433, 0.988235294117647, 1.], 
         Hue[0.576923076923077, 0.0823087644696433, 0.988235294117647, 1.], 
         Hue[0.576923076923077, 0.0823087644696433, 0.988235294117647, 1.], 
         Hue[0.576923076923077, 0.0823087644696433, 0.988235294117647, 1.], 
         Hue[0.576923076923077, 0.0823087644696433, 0.988235294117647, 1.], 
         Hue[0.576923076923077, 0.0823087644696433, 0.988235294117647, 1.], 
         Hue[0.576923076923077, 0.0823087644696433, 0.988235294117647, 1.], 
         Hue[0.576923076923077, 0.0823087644696433, 0.988235294117647, 1.], 
         Hue[0.576923076923077, 0.0823087644696433, 0.988235294117647, 1.], 
         Hue[0.576923076923077, 0.0823087644696433, 0.988235294117647, 1.], 
         Hue[0.576923076923077, 0.0823087644696433, 0.988235294117647, 1.], 
         Hue[0.576923076923077, 0.0823087644696433, 0.988235294117647, 1.], 
         Hue[0.576923076923077, 0.0823087644696433, 0.988235294117647, 1.], 
         Hue[0.576923076923077, 0.0823087644696433, 0.988235294117647, 1.], 
         Hue[0.576923076923077, 0.0823087644696433, 0.988235294117647, 1.], 
         Hue[0.576923076923077, 0.0823087644696433, 0.988235294117647, 1.], 
         Hue[0.576923076923077, 0.0823087644696433, 0.988235294117647, 1.], 
         Hue[0.576923076923077, 0.0823087644696433, 0.988235294117647, 1.], 
         Hue[0.576923076923077, 0.0823087644696433, 0.988235294117647, 1.], 
         Hue[0.576923076923077, 0.0823087644696433, 0.988235294117647, 1.], 
         Hue[0.576923076923077, 0.0823087644696433, 0.988235294117647, 1.], 
         Hue[0.576923076923077, 0.0823087644696433, 0.988235294117647, 1.], 
         Hue[0.576923076923077, 0.0823087644696433, 0.988235294117647, 1.], 
         Hue[0.576923076923077, 0.0823087644696433, 0.988235294117647, 1.], 
         Hue[0.576923076923077, 0.0823087644696433, 0.988235294117647, 1.], 
         Hue[0.576923076923077, 0.0823087644696433, 0.988235294117647, 1.], 
         Hue[0.576923076923077, 0.0823087644696433, 0.988235294117647, 1.], 
         Hue[0.576923076923077, 0.0823087644696433, 0.988235294117647, 1.], 
         Hue[0.576923076923077, 0.0823087644696433, 0.988235294117647, 1.], 
         Hue[0.576923076923077, 0.0823087644696433, 0.988235294117647, 1.], 
         Hue[0.576923076923077, 0.0823087644696433, 0.988235294117647, 1.], 
         Hue[0.576923076923077, 0.0823087644696433, 0.988235294117647, 1.], 
         Hue[0.576923076923077, 0.0823087644696433, 0.988235294117647, 1.], 
         Hue[0.576923076923077, 0.0823087644696433, 0.988235294117647, 1.], 
         Hue[0.576923076923077, 0.0823087644696433, 0.988235294117647, 1.], 
         Hue[0.576923076923077, 0.0823087644696433, 0.988235294117647, 1.], 
         Hue[0.576923076923077, 0.0823087644696433, 0.988235294117647, 1.], 
         Hue[0.576923076923077, 0.0823087644696433, 0.988235294117647, 1.], 
         Hue[0.576923076923077, 0.0823087644696433, 0.988235294117647, 1.], 
         Hue[0.576923076923077, 0.0823087644696433, 0.988235294117647, 1.], 
         Hue[0.576923076923077, 0.0823087644696433, 0.988235294117647, 1.], 
         Hue[0.576923076923077, 0.0823087644696433, 0.988235294117647, 1.], 
         Hue[0.576923076923077, 0.0823087644696433, 0.988235294117647, 1.], 
         Hue[0.576923076923077, 0.0823087644696433, 0.988235294117647, 1.], 
         Hue[0.576923076923077, 0.0823087644696433, 0.988235294117647, 1.], 
         Hue[0.576923076923077, 0.0823087644696433, 0.988235294117647, 1.], 
         Hue[0.576923076923077, 0.0823087644696433, 0.988235294117647, 1.], 
         Hue[0.576923076923077, 0.0823087644696433, 0.988235294117647, 1.], 
         Hue[0.576923076923077, 0.0823087644696433, 0.988235294117647, 1.], 
         Hue[0.576923076923077, 0.0823087644696433, 0.988235294117647, 1.], 
         Hue[0.576923076923077, 0.0823087644696433, 0.988235294117647, 1.], 
         Hue[0.576923076923077, 0.0823087644696433, 0.988235294117647, 1.], 
         Hue[0.576923076923077, 0.0823087644696433, 0.988235294117647, 1.], 
         Hue[0.576923076923077, 0.0823087644696433, 0.988235294117647, 1.], 
         Hue[0.576923076923077, 0.0823087644696433, 0.988235294117647, 1.], 
         Hue[0.576923076923077, 0.0823087644696433, 0.988235294117647, 1.], 
         Hue[0.576923076923077, 0.0823087644696433, 0.988235294117647, 1.], 
         Hue[0.576923076923077, 0.0823087644696433, 0.988235294117647, 1.], 
         Hue[0.576923076923077, 0.0823087644696433, 0.988235294117647, 1.], 
         Hue[0.576923076923077, 0.0823087644696433, 0.988235294117647, 1.], 
         Hue[0.576923076923077, 0.0823087644696433, 0.988235294117647, 1.], 
         Hue[0.576923076923077, 0.0823087644696433, 0.988235294117647, 1.], 
         Hue[0.576923076923077, 0.0823087644696433, 0.988235294117647, 1.], 
         Hue[0.576923076923077, 0.0823087644696433, 0.988235294117647, 1.], 
         Hue[0.576923076923077, 0.0823087644696433, 0.988235294117647, 1.], 
         Hue[0.576923076923077, 0.0823087644696433, 0.988235294117647, 1.], 
         Hue[0.576923076923077, 0.0823087644696433, 0.988235294117647, 1.], 
         Hue[0.576923076923077, 0.0823087644696433, 0.988235294117647, 1.], 
         Hue[0.576923076923077, 0.0823087644696433, 0.988235294117647, 1.], 
         Hue[0.576923076923077, 0.0823087644696433, 0.988235294117647, 1.], 
         Hue[0.576923076923077, 0.0823087644696433, 0.988235294117647, 1.], 
         Hue[0.576923076923077, 0.0823087644696433, 0.988235294117647, 1.], 
         Hue[0.576923076923077, 0.0823087644696433, 0.988235294117647, 1.], 
         Hue[0.576923076923077, 0.0823087644696433, 0.988235294117647, 1.], 
         Hue[0.576923076923077, 0.0823087644696433, 0.988235294117647, 1.], 
         Hue[0.576923076923077, 0.0823087644696433, 0.988235294117647, 1.], 
         Hue[0.576923076923077, 0.0823087644696433, 0.988235294117647, 1.], 
         Hue[0.576923076923077, 0.0823087644696433, 0.988235294117647, 1.], 
         Hue[0.576923076923077, 0.0823087644696433, 0.988235294117647, 1.], 
         Hue[0.576923076923077, 0.0823087644696433, 0.988235294117647, 1.], 
         Hue[0.576923076923077, 0.0823087644696433, 0.988235294117647, 1.], 
         Hue[0.576923076923077, 0.0823087644696433, 0.988235294117647, 1.], 
         Hue[0.576923076923077, 0.0823087644696433, 0.988235294117647, 1.], 
         Hue[0.576923076923077, 0.0823087644696433, 0.988235294117647, 1.], 
         Hue[0.576923076923077, 0.0823087644696433, 0.988235294117647, 1.], 
         Hue[0.576923076923077, 0.0823087644696433, 0.988235294117647, 1.], 
         Hue[0.576923076923077, 0.0823087644696433, 0.988235294117647, 1.], 
         Hue[0.576923076923077, 0.0823087644696433, 0.988235294117647, 1.], 
         Hue[0.576923076923077, 0.0823087644696433, 0.988235294117647, 1.], 
         Hue[0.576923076923077, 0.0823087644696433, 0.988235294117647, 1.], 
         Hue[0.576923076923077, 0.0823087644696433, 0.988235294117647, 1.], 
         Hue[0.576923076923077, 0.0823087644696433, 0.988235294117647, 1.], 
         Hue[0.576923076923077, 0.0823087644696433, 0.988235294117647, 1.], 
         Hue[0.576923076923077, 0.0823087644696433, 0.988235294117647, 1.], 
         Hue[0.576923076923077, 0.09429184549356229, 0.9137254901960781, 1.], 
         Hue[0.576923076923077, 0.09429184549356229, 0.9137254901960781, 1.], 
         Hue[0.576923076923077, 0.09429184549356229, 0.9137254901960781, 1.], 
         Hue[0.576923076923077, 0.09429184549356229, 0.9137254901960781, 1.], 
         Hue[0.576923076923077, 0.09429184549356229, 0.9137254901960781, 1.], 
         Hue[0.576923076923077, 0.09429184549356229, 0.9137254901960781, 1.], 
         Hue[0.576923076923077, 0.09429184549356229, 0.9137254901960781, 1.], 
         Hue[0.576923076923077, 0.09429184549356229, 0.9137254901960781, 1.], 
         Hue[0.576923076923077, 0.09429184549356229, 0.9137254901960781, 1.], 
         Hue[0.576923076923077, 0.09429184549356229, 0.9137254901960781, 1.], 
         Hue[0.576923076923077, 0.09429184549356229, 0.9137254901960781, 1.], 
         Hue[0.576923076923077, 0.09429184549356229, 0.9137254901960781, 1.], 
         Hue[0.576923076923077, 0.09429184549356229, 0.9137254901960781, 1.], 
         Hue[0.576923076923077, 0.09429184549356229, 0.9137254901960781, 1.], 
         Hue[0.576923076923077, 0.09429184549356229, 0.9137254901960781, 1.], 
         Hue[0.576923076923077, 0.09429184549356229, 0.9137254901960781, 1.], 
         Hue[0.576923076923077, 0.09429184549356229, 0.9137254901960781, 1.], 
         Hue[0.576923076923077, 0.09429184549356229, 0.9137254901960781, 1.], 
         Hue[0.576923076923077, 0.09429184549356229, 0.9137254901960781, 1.], 
         Hue[0.576923076923077, 0.09429184549356229, 0.9137254901960781, 1.], 
         Hue[0.576923076923077, 0.09429184549356229, 0.9137254901960781, 1.], 
         Hue[0.576923076923077, 0.09429184549356229, 0.9137254901960781, 1.], 
         Hue[0.576923076923077, 0.09429184549356229, 0.9137254901960781, 1.], 
         Hue[0.576923076923077, 0.09429184549356229, 0.9137254901960781, 1.], 
         Hue[0.576923076923077, 0.09429184549356229, 0.9137254901960781, 1.], 
         Hue[0.576923076923077, 0.09429184549356229, 0.9137254901960781, 1.], 
         Hue[0.576923076923077, 0.09429184549356229, 0.9137254901960781, 1.], 
         Hue[0.576923076923077, 0.09429184549356229, 0.9137254901960781, 1.], 
         Hue[0.576923076923077, 0.09429184549356229, 0.9137254901960781, 1.], 
         Hue[0.576923076923077, 0.09429184549356229, 0.9137254901960781, 1.], 
         Hue[0.576923076923077, 0.09429184549356229, 0.9137254901960781, 1.], 
         Hue[0.576923076923077, 0.09429184549356229, 0.9137254901960781, 1.], 
         Hue[0.576923076923077, 0.09429184549356229, 0.9137254901960781, 1.], 
         Hue[0.576923076923077, 0.09429184549356229, 0.9137254901960781, 1.], 
         Hue[0.576923076923077, 0.09429184549356229, 0.9137254901960781, 1.], 
         Hue[0.576923076923077, 0.09429184549356229, 0.9137254901960781, 1.], 
         Hue[0.576923076923077, 0.09429184549356229, 0.9137254901960781, 1.], 
         Hue[0.576923076923077, 0.09429184549356229, 0.9137254901960781, 1.], 
         Hue[0.576923076923077, 0.09429184549356229, 0.9137254901960781, 1.], 
         Hue[0.576923076923077, 0.09429184549356229, 0.9137254901960781, 1.], 
         Hue[0.576923076923077, 0.09429184549356229, 0.9137254901960781, 1.], 
         Hue[0.576923076923077, 0.09429184549356229, 0.9137254901960781, 1.], 
         Hue[0.576923076923077, 0.09429184549356229, 0.9137254901960781, 1.], 
         Hue[0.576923076923077, 0.09429184549356229, 0.9137254901960781, 1.], 
         Hue[0.576923076923077, 0.09429184549356229, 0.9137254901960781, 1.], 
         Hue[0.576923076923077, 0.09429184549356229, 0.9137254901960781, 1.], 
         Hue[0.576923076923077, 0.09429184549356229, 0.9137254901960781, 1.], 
         Hue[0.576923076923077, 0.09429184549356229, 0.9137254901960781, 1.], 
         Hue[0.576923076923077, 0.09429184549356229, 0.9137254901960781, 1.], 
         Hue[0.576923076923077, 0.09429184549356229, 0.9137254901960781, 1.], 
         Hue[0.576923076923077, 0.09429184549356229, 0.9137254901960781, 1.], 
         Hue[0.576923076923077, 0.09429184549356229, 0.9137254901960781, 1.], 
         Hue[0.576923076923077, 0.09429184549356229, 0.9137254901960781, 1.], 
         Hue[0.576923076923077, 0.09429184549356229, 0.9137254901960781, 1.], 
         Hue[0.576923076923077, 0.09429184549356229, 0.9137254901960781, 1.], 
         Hue[0.576923076923077, 0.09429184549356229, 0.9137254901960781, 1.], 
         Hue[0.576923076923077, 0.09429184549356229, 0.9137254901960781, 1.], 
         Hue[0.576923076923077, 0.09429184549356229, 0.9137254901960781, 1.], 
         Hue[0.576923076923077, 0.09429184549356229, 0.9137254901960781, 1.], 
         Hue[0.576923076923077, 0.09429184549356229, 0.9137254901960781, 1.], 
         Hue[0.576923076923077, 0.09429184549356229, 0.9137254901960781, 1.], 
         Hue[0.576923076923077, 0.09429184549356229, 0.9137254901960781, 1.], 
         Hue[0.576923076923077, 0.09429184549356229, 0.9137254901960781, 1.], 
         Hue[0.576923076923077, 0.09429184549356229, 0.9137254901960781, 1.], 
         Hue[0.576923076923077, 0.09429184549356229, 0.9137254901960781, 1.], 
         Hue[0.576923076923077, 0.09429184549356229, 0.9137254901960781, 1.], 
         Hue[0.576923076923077, 0.09429184549356229, 0.9137254901960781, 1.], 
         Hue[0.576923076923077, 0.09429184549356229, 0.9137254901960781, 1.], 
         Hue[0.576923076923077, 0.09429184549356229, 0.9137254901960781, 1.], 
         Hue[0.576923076923077, 0.09429184549356229, 0.9137254901960781, 1.], 
         Hue[0.576923076923077, 0.09429184549356229, 0.9137254901960781, 1.], 
         Hue[0.576923076923077, 0.09429184549356229, 0.9137254901960781, 1.], 
         Hue[0.576923076923077, 0.09429184549356229, 0.9137254901960781, 1.], 
         Hue[0.576923076923077, 0.09429184549356229, 0.9137254901960781, 1.], 
         Hue[0.576923076923077, 0.09429184549356229, 0.9137254901960781, 1.], 
         Hue[0.576923076923077, 0.09429184549356229, 0.9137254901960781, 1.], 
         Hue[0.576923076923077, 0.09429184549356229, 0.9137254901960781, 1.], 
         Hue[0.576923076923077, 0.09429184549356229, 0.9137254901960781, 1.], 
         Hue[0.576923076923077, 0.09429184549356229, 0.9137254901960781, 1.], 
         Hue[0.576923076923077, 0.09429184549356229, 0.9137254901960781, 1.], 
         Hue[0.576923076923077, 0.09429184549356229, 0.9137254901960781, 1.], 
         Hue[0.576923076923077, 0.09429184549356229, 0.9137254901960781, 1.], 
         Hue[0.576923076923077, 0.09429184549356229, 0.9137254901960781, 1.], 
         Hue[0.576923076923077, 0.09429184549356229, 0.9137254901960781, 1.], 
         Hue[0.576923076923077, 0.09429184549356229, 0.9137254901960781, 1.], 
         Hue[0.576923076923077, 0.09429184549356229, 0.9137254901960781, 1.], 
         Hue[0.576923076923077, 0.09429184549356229, 0.9137254901960781, 1.], 
         Hue[0.576923076923077, 0.09429184549356229, 0.9137254901960781, 1.], 
         Hue[0.576923076923077, 0.09429184549356229, 0.9137254901960781, 1.], 
         Hue[0.576923076923077, 0.09429184549356229, 0.9137254901960781, 1.], 
         Hue[0.576923076923077, 0.09429184549356229, 0.9137254901960781, 1.], 
         Hue[0.576923076923077, 0.09429184549356229, 0.9137254901960781, 1.], 
         Hue[0.576923076923077, 0.09429184549356229, 0.9137254901960781, 1.], 
         Hue[0.576923076923077, 0.09429184549356229, 0.9137254901960781, 1.], 
         Hue[0.576923076923077, 0.09429184549356229, 0.9137254901960781, 1.], 
         Hue[0.576923076923077, 0.09429184549356229, 0.9137254901960781, 1.], 
         Hue[0.576923076923077, 0.09429184549356229, 0.9137254901960781, 1.], 
         Hue[0.576923076923077, 0.09429184549356229, 0.9137254901960781, 1.], 
         Hue[0.576923076923077, 0.09429184549356229, 0.9137254901960781, 1.], 
         Hue[0.576923076923077, 0.09429184549356229, 0.9137254901960781, 1.], 
         Hue[0.576923076923077, 0.10808921129803985`, 0.8352941176470577, 1.], 
         Hue[0.576923076923077, 0.10808921129803985`, 0.8352941176470577, 1.], 
         Hue[0.576923076923077, 0.10808921129803985`, 0.8352941176470577, 1.], 
         Hue[0.576923076923077, 0.10808921129803985`, 0.8352941176470577, 1.], 
         Hue[0.576923076923077, 0.10808921129803985`, 0.8352941176470577, 1.], 
         Hue[0.576923076923077, 0.10808921129803985`, 0.8352941176470577, 1.], 
         Hue[0.576923076923077, 0.10808921129803985`, 0.8352941176470577, 1.], 
         Hue[0.576923076923077, 0.10808921129803985`, 0.8352941176470577, 1.], 
         Hue[0.576923076923077, 0.10808921129803985`, 0.8352941176470577, 1.], 
         Hue[0.576923076923077, 0.10808921129803985`, 0.8352941176470577, 1.], 
         Hue[0.576923076923077, 0.10808921129803985`, 0.8352941176470577, 1.], 
         Hue[0.576923076923077, 0.10808921129803985`, 0.8352941176470577, 1.], 
         Hue[0.576923076923077, 0.10808921129803985`, 0.8352941176470577, 1.], 
         Hue[0.576923076923077, 0.10808921129803985`, 0.8352941176470577, 1.], 
         Hue[0.576923076923077, 0.10808921129803985`, 0.8352941176470577, 1.], 
         Hue[0.576923076923077, 0.10808921129803985`, 0.8352941176470577, 1.], 
         Hue[0.576923076923077, 0.10808921129803985`, 0.8352941176470577, 1.], 
         Hue[0.576923076923077, 0.10808921129803985`, 0.8352941176470577, 1.], 
         Hue[0.576923076923077, 0.10808921129803985`, 0.8352941176470577, 1.], 
         Hue[0.576923076923077, 0.10808921129803985`, 0.8352941176470577, 1.], 
         Hue[0.576923076923077, 0.10808921129803985`, 0.8352941176470577, 1.], 
         Hue[0.576923076923077, 0.10808921129803985`, 0.8352941176470577, 1.], 
         Hue[0.576923076923077, 0.10808921129803985`, 0.8352941176470577, 1.], 
         Hue[0.576923076923077, 0.10808921129803985`, 0.8352941176470577, 1.], 
         Hue[0.576923076923077, 0.10808921129803985`, 0.8352941176470577, 1.], 
         Hue[0.576923076923077, 0.10808921129803985`, 0.8352941176470577, 1.], 
         Hue[0.576923076923077, 0.10808921129803985`, 0.8352941176470577, 1.], 
         Hue[0.576923076923077, 0.10808921129803985`, 0.8352941176470577, 1.], 
         Hue[0.576923076923077, 0.10808921129803985`, 0.8352941176470577, 1.], 
         Hue[0.576923076923077, 0.10808921129803985`, 0.8352941176470577, 1.], 
         Hue[0.576923076923077, 0.10808921129803985`, 0.8352941176470577, 1.], 
         Hue[0.576923076923077, 0.10808921129803985`, 0.8352941176470577, 1.], 
         Hue[0.576923076923077, 0.10808921129803985`, 0.8352941176470577, 1.], 
         Hue[0.576923076923077, 0.10808921129803985`, 0.8352941176470577, 1.], 
         Hue[0.576923076923077, 0.10808921129803985`, 0.8352941176470577, 1.], 
         Hue[0.576923076923077, 0.10808921129803985`, 0.8352941176470577, 1.], 
         Hue[0.576923076923077, 0.10808921129803985`, 0.8352941176470577, 1.], 
         Hue[0.576923076923077, 0.10808921129803985`, 0.8352941176470577, 1.], 
         Hue[0.576923076923077, 0.10808921129803985`, 0.8352941176470577, 1.], 
         Hue[0.576923076923077, 0.10808921129803985`, 0.8352941176470577, 1.], 
         Hue[0.576923076923077, 0.10808921129803985`, 0.8352941176470577, 1.], 
         Hue[0.576923076923077, 0.10808921129803985`, 0.8352941176470577, 1.], 
         Hue[0.576923076923077, 0.10808921129803985`, 0.8352941176470577, 1.], 
         Hue[0.576923076923077, 0.10808921129803985`, 0.8352941176470577, 1.], 
         Hue[0.576923076923077, 0.10808921129803985`, 0.8352941176470577, 1.], 
         Hue[0.576923076923077, 0.10808921129803985`, 0.8352941176470577, 1.], 
         Hue[0.576923076923077, 0.10808921129803985`, 0.8352941176470577, 1.], 
         Hue[0.576923076923077, 0.10808921129803985`, 0.8352941176470577, 1.], 
         Hue[0.576923076923077, 0.10808921129803985`, 0.8352941176470577, 1.], 
         Hue[0.576923076923077, 0.10808921129803985`, 0.8352941176470577, 1.], 
         Hue[0.576923076923077, 0.10808921129803985`, 0.8352941176470577, 1.], 
         Hue[0.576923076923077, 0.10808921129803985`, 0.8352941176470577, 1.], 
         Hue[0.576923076923077, 0.10808921129803985`, 0.8352941176470577, 1.], 
         Hue[0.576923076923077, 0.10808921129803985`, 0.8352941176470577, 1.], 
         Hue[0.576923076923077, 0.10808921129803985`, 0.8352941176470577, 1.], 
         Hue[0.576923076923077, 0.10808921129803985`, 0.8352941176470577, 1.], 
         Hue[0.576923076923077, 0.10808921129803985`, 0.8352941176470577, 1.], 
         Hue[0.576923076923077, 0.10808921129803985`, 0.8352941176470577, 1.], 
         Hue[0.576923076923077, 0.10808921129803985`, 0.8352941176470577, 1.], 
         Hue[0.576923076923077, 0.10808921129803985`, 0.8352941176470577, 1.], 
         Hue[0.576923076923077, 0.10808921129803985`, 0.8352941176470577, 1.], 
         Hue[0.576923076923077, 0.10808921129803985`, 0.8352941176470577, 1.], 
         Hue[0.576923076923077, 0.10808921129803985`, 0.8352941176470577, 1.], 
         Hue[0.576923076923077, 0.10808921129803985`, 0.8352941176470577, 1.], 
         Hue[0.576923076923077, 0.10808921129803985`, 0.8352941176470577, 1.], 
         Hue[0.576923076923077, 0.10808921129803985`, 0.8352941176470577, 1.], 
         Hue[0.576923076923077, 0.10808921129803985`, 0.8352941176470577, 1.], 
         Hue[0.576923076923077, 0.10808921129803985`, 0.8352941176470577, 1.], 
         Hue[0.576923076923077, 0.10808921129803985`, 0.8352941176470577, 1.], 
         Hue[0.576923076923077, 0.10808921129803985`, 0.8352941176470577, 1.], 
         Hue[0.576923076923077, 0.10808921129803985`, 0.8352941176470577, 1.], 
         Hue[0.576923076923077, 0.10808921129803985`, 0.8352941176470577, 1.], 
         Hue[0.576923076923077, 0.10808921129803985`, 0.8352941176470577, 1.], 
         Hue[0.576923076923077, 0.10808921129803985`, 0.8352941176470577, 1.], 
         Hue[0.576923076923077, 0.10808921129803985`, 0.8352941176470577, 1.], 
         Hue[0.576923076923077, 0.10808921129803985`, 0.8352941176470577, 1.], 
         Hue[0.576923076923077, 0.10808921129803985`, 0.8352941176470577, 1.], 
         Hue[0.576923076923077, 0.10808921129803985`, 0.8352941176470577, 1.], 
         Hue[0.576923076923077, 0.10808921129803985`, 0.8352941176470577, 1.], 
         Hue[0.576923076923077, 0.10808921129803985`, 0.8352941176470577, 1.], 
         Hue[0.576923076923077, 0.10808921129803985`, 0.8352941176470577, 1.], 
         Hue[0.576923076923077, 0.10808921129803985`, 0.8352941176470577, 1.], 
         Hue[0.576923076923077, 0.10808921129803985`, 0.8352941176470577, 1.], 
         Hue[0.576923076923077, 0.10808921129803985`, 0.8352941176470577, 1.], 
         Hue[0.576923076923077, 0.10808921129803985`, 0.8352941176470577, 1.], 
         Hue[0.576923076923077, 0.10808921129803985`, 0.8352941176470577, 1.], 
         Hue[0.576923076923077, 0.10808921129803985`, 0.8352941176470577, 1.], 
         Hue[0.576923076923077, 0.10808921129803985`, 0.8352941176470577, 1.], 
         Hue[0.576923076923077, 0.10808921129803985`, 0.8352941176470577, 1.], 
         Hue[0.576923076923077, 0.10808921129803985`, 0.8352941176470577, 1.], 
         Hue[0.576923076923077, 0.10808921129803985`, 0.8352941176470577, 1.], 
         Hue[0.576923076923077, 0.10808921129803985`, 0.8352941176470577, 1.], 
         Hue[0.576923076923077, 0.10808921129803985`, 0.8352941176470577, 1.], 
         Hue[0.576923076923077, 0.10808921129803985`, 0.8352941176470577, 1.], 
         Hue[0.576923076923077, 0.10808921129803985`, 0.8352941176470577, 1.], 
         Hue[0.576923076923077, 0.10808921129803985`, 0.8352941176470577, 1.], 
         Hue[0.576923076923077, 0.10808921129803985`, 0.8352941176470577, 1.], 
         Hue[0.576923076923077, 0.10808921129803985`, 0.8352941176470577, 1.], 
         Hue[0.576923076923077, 0.10808921129803985`, 0.8352941176470577, 1.], 
         Hue[0.576923076923077, 0.10808921129803985`, 0.8352941176470577, 1.], 
         Hue[0.576923076923077, 0.11583333333333334`, 0.611764705882353, 1.], 
         Hue[0.576923076923077, 0.11583333333333334`, 0.611764705882353, 1.], 
         Hue[0.576923076923077, 0.11583333333333334`, 0.611764705882353, 1.], 
         Hue[0.576923076923077, 0.11583333333333334`, 0.611764705882353, 1.], 
         Hue[0.576923076923077, 0.11583333333333334`, 0.611764705882353, 1.], 
         Hue[0.576923076923077, 0.11583333333333334`, 0.611764705882353, 1.], 
         Hue[0.576923076923077, 0.11583333333333334`, 0.611764705882353, 1.], 
         Hue[0.576923076923077, 0.11583333333333334`, 0.611764705882353, 1.], 
         Hue[0.576923076923077, 0.11583333333333334`, 0.611764705882353, 1.], 
         Hue[0.576923076923077, 0.11583333333333334`, 0.611764705882353, 1.], 
         Hue[0.576923076923077, 0.11583333333333334`, 0.611764705882353, 1.], 
         Hue[0.576923076923077, 0.11583333333333334`, 0.611764705882353, 1.], 
         Hue[0.576923076923077, 0.11583333333333334`, 0.611764705882353, 1.], 
         Hue[0.576923076923077, 0.11583333333333334`, 0.611764705882353, 1.], 
         Hue[0.576923076923077, 0.11583333333333334`, 0.611764705882353, 1.], 
         Hue[0.576923076923077, 0.11583333333333334`, 0.611764705882353, 1.], 
         Hue[0.576923076923077, 0.11583333333333334`, 0.611764705882353, 1.], 
         Hue[0.576923076923077, 0.11583333333333334`, 0.611764705882353, 1.], 
         Hue[0.576923076923077, 0.11583333333333334`, 0.611764705882353, 1.], 
         Hue[0.576923076923077, 0.11583333333333334`, 0.611764705882353, 1.], 
         Hue[0.576923076923077, 0.11583333333333334`, 0.611764705882353, 1.], 
         Hue[0.576923076923077, 0.11583333333333334`, 0.611764705882353, 1.], 
         Hue[0.576923076923077, 0.11583333333333334`, 0.611764705882353, 1.], 
         Hue[0.576923076923077, 0.11583333333333334`, 0.611764705882353, 1.], 
         Hue[0.576923076923077, 0.11583333333333334`, 0.611764705882353, 1.], 
         Hue[0.576923076923077, 0.11583333333333334`, 0.611764705882353, 1.], 
         Hue[0.576923076923077, 0.11583333333333334`, 0.611764705882353, 1.], 
         Hue[0.576923076923077, 0.11583333333333334`, 0.611764705882353, 1.], 
         Hue[0.576923076923077, 0.11583333333333334`, 0.611764705882353, 1.], 
         Hue[0.576923076923077, 0.11583333333333334`, 0.611764705882353, 1.], 
         Hue[0.576923076923077, 0.11583333333333334`, 0.611764705882353, 1.], 
         Hue[0.576923076923077, 0.11583333333333334`, 0.611764705882353, 1.], 
         Hue[0.576923076923077, 0.11583333333333334`, 0.611764705882353, 1.], 
         Hue[0.576923076923077, 0.11583333333333334`, 0.611764705882353, 1.], 
         Hue[0.576923076923077, 0.11583333333333334`, 0.611764705882353, 1.], 
         Hue[0.576923076923077, 0.11583333333333334`, 0.611764705882353, 1.], 
         Hue[0.576923076923077, 0.11583333333333334`, 0.611764705882353, 1.], 
         Hue[0.576923076923077, 0.11583333333333334`, 0.611764705882353, 1.], 
         Hue[0.576923076923077, 0.11583333333333334`, 0.611764705882353, 1.], 
         Hue[0.576923076923077, 0.11583333333333334`, 0.611764705882353, 1.], 
         Hue[0.576923076923077, 0.11583333333333334`, 0.611764705882353, 1.], 
         Hue[0.576923076923077, 0.11583333333333334`, 0.611764705882353, 1.], 
         Hue[0.576923076923077, 0.11583333333333334`, 0.611764705882353, 1.], 
         Hue[0.576923076923077, 0.11583333333333334`, 0.611764705882353, 1.], 
         Hue[0.576923076923077, 0.11583333333333334`, 0.611764705882353, 1.], 
         Hue[0.576923076923077, 0.11583333333333334`, 0.611764705882353, 1.], 
         Hue[0.576923076923077, 0.11583333333333334`, 0.611764705882353, 1.], 
         Hue[0.576923076923077, 0.11583333333333334`, 0.611764705882353, 1.], 
         Hue[0.576923076923077, 0.11583333333333334`, 0.611764705882353, 1.], 
         Hue[0.576923076923077, 0.11583333333333334`, 0.611764705882353, 1.], 
         Hue[0.576923076923077, 0.11583333333333334`, 0.611764705882353, 1.], 
         Hue[0.576923076923077, 0.11583333333333334`, 0.611764705882353, 1.], 
         Hue[0.576923076923077, 0.11583333333333334`, 0.611764705882353, 1.], 
         Hue[0.576923076923077, 0.11583333333333334`, 0.611764705882353, 1.], 
         Hue[0.576923076923077, 0.11583333333333334`, 0.611764705882353, 1.], 
         Hue[0.576923076923077, 0.11583333333333334`, 0.611764705882353, 1.], 
         Hue[0.576923076923077, 0.11583333333333334`, 0.611764705882353, 1.], 
         Hue[0.576923076923077, 0.11583333333333334`, 0.611764705882353, 1.], 
         Hue[0.576923076923077, 0.11583333333333334`, 0.611764705882353, 1.], 
         Hue[0.576923076923077, 0.11583333333333334`, 0.611764705882353, 1.], 
         Hue[0.576923076923077, 0.11583333333333334`, 0.611764705882353, 1.], 
         Hue[0.576923076923077, 0.11583333333333334`, 0.611764705882353, 1.], 
         Hue[0.576923076923077, 0.11583333333333334`, 0.611764705882353, 1.], 
         Hue[0.576923076923077, 0.11583333333333334`, 0.611764705882353, 1.], 
         Hue[0.576923076923077, 0.11583333333333334`, 0.611764705882353, 1.], 
         Hue[0.576923076923077, 0.11583333333333334`, 0.611764705882353, 1.], 
         Hue[0.576923076923077, 0.11583333333333334`, 0.611764705882353, 1.], 
         Hue[0.576923076923077, 0.11583333333333334`, 0.611764705882353, 1.], 
         Hue[0.576923076923077, 0.11583333333333334`, 0.611764705882353, 1.], 
         Hue[0.576923076923077, 0.11583333333333334`, 0.611764705882353, 1.], 
         Hue[0.576923076923077, 0.11583333333333334`, 0.611764705882353, 1.], 
         Hue[0.576923076923077, 0.11583333333333334`, 0.611764705882353, 1.], 
         Hue[0.576923076923077, 0.11583333333333334`, 0.611764705882353, 1.], 
         Hue[0.576923076923077, 0.11583333333333334`, 0.611764705882353, 1.], 
         Hue[0.576923076923077, 0.11583333333333334`, 0.611764705882353, 1.], 
         Hue[0.576923076923077, 0.11583333333333334`, 0.611764705882353, 1.], 
         Hue[0.576923076923077, 0.11583333333333334`, 0.611764705882353, 1.], 
         Hue[0.576923076923077, 0.11583333333333334`, 0.611764705882353, 1.], 
         Hue[0.576923076923077, 0.11583333333333334`, 0.611764705882353, 1.], 
         Hue[0.576923076923077, 0.11583333333333334`, 0.611764705882353, 1.], 
         Hue[0.576923076923077, 0.11583333333333334`, 0.611764705882353, 1.], 
         Hue[0.576923076923077, 0.11583333333333334`, 0.611764705882353, 1.], 
         Hue[0.576923076923077, 0.11583333333333334`, 0.611764705882353, 1.], 
         Hue[0.576923076923077, 0.11583333333333334`, 0.611764705882353, 1.], 
         Hue[0.576923076923077, 0.11583333333333334`, 0.611764705882353, 1.], 
         Hue[0.576923076923077, 0.11583333333333334`, 0.611764705882353, 1.], 
         Hue[0.576923076923077, 0.11583333333333334`, 0.611764705882353, 1.], 
         Hue[0.576923076923077, 0.11583333333333334`, 0.611764705882353, 1.], 
         Hue[0.576923076923077, 0.11583333333333334`, 0.611764705882353, 1.], 
         Hue[0.576923076923077, 0.11583333333333334`, 0.611764705882353, 1.], 
         Hue[0.576923076923077, 0.11583333333333334`, 0.611764705882353, 1.], 
         Hue[0.576923076923077, 0.11583333333333334`, 0.611764705882353, 1.], 
         Hue[0.576923076923077, 0.11583333333333334`, 0.611764705882353, 1.], 
         Hue[0.576923076923077, 0.11583333333333334`, 0.611764705882353, 1.], 
         Hue[0.576923076923077, 0.11583333333333334`, 0.611764705882353, 1.], 
         Hue[0.576923076923077, 0.11583333333333334`, 0.611764705882353, 1.], 
         Hue[0.576923076923077, 0.11583333333333334`, 0.611764705882353, 1.], 
         Hue[0.576923076923077, 0.11583333333333334`, 0.611764705882353, 1.], 
         Hue[0.576923076923077, 0.11583333333333334`, 0.611764705882353, 1.], 
         Hue[
         0.576923076923077, 0.11583333333333334`, 0.611764705882353, 
          1.]}], {}}]}, GraphicsGroupBox[
    {GrayLevel[0.8], EdgeForm[{GrayLevel[0.6], Thickness[0.01]}], 
     FilledCurveBox[{{Line[CompressedData["
1:eJxd1V1I02EUx/EtrC56o4xCsWykhiCRWWImncywF1wTixokKYbIkmgrbxzJ
oiKvrLQWxAoiltnLCiU1QzxgTaMpvkS1icl05TZ1+yNlGMXK6Py66IHDuTs3
H/g+mpJTBaXzVCpV6dz82X+flx/m6QPmlkn+Oj8/zl8xzBtHbM2PHkxxpeZO
ytJeNye0hZP8lhBfTY1vTFr8jmPXJbsOZYQ5ZG4y/9g6wPnRdm3mYJhn9Lse
e2694XMq8+afeQpX1KzK8TR18tOs22fWNih8MubCzmB5MzfUJUZ2+xR+viKi
Dpus3K49vGxLROGpL9VdbcZ7FOeMGPtnFS4/kmUr7nxBXWWz1+PfKrw6Umt3
6J1kPF9/ZU/N3L3WWuVmZi/FHqiavrxB4SWF7gyLZZCmE1sthXfDXKb2adS6
92SctPSkR0LcH7tA833hEFktv5683B5ia1qvwV7/kZyOHlv30SmOrvxW7Ljm
pVd9ppGEokn2DNTF7MsZo2NNrmdDuRO8PrBXZ/L6qLo1WRu1MsjuRWM3Lho+
U2dHWsOHbj+fWL6mb2Z4nAyjLUX24+N8NjvQqN0WoHST9eBg4BOnlFzSpVQF
Kff1ph1evY87XPGn99+foKjs9tSS5lE4EFzEgeAiDgQXcSC4iAPBRRwILuJA
cBEHgos4EFzEgeAiDgQXcSC4iAPBRRwILuJAcBEHgos4EFzEgeAiDgQXcSC4
iAPBRRwILuJAcBEHgos4EFzEgeAiDgQXcSC4iAPBRRwILuJAcBEHgos4EFzE
geAiDv9cxIHhIg4MF3FguIgDw0UcGC7iwHARB4aLODBcxIHhIg4MF3FguIgD
w0UcGC7iwHARB4YLOgUXdAou6BRc0Cm4oFNwQafggk7BBZ2CCzoFF3QKLugU
XNApuKBTcEGn4IJOwQWdggs6BRd0Ci7oFFzQKbigU3BBp+CCTsEFnYILOgWX
//+P34UFays=
         "]]}, {Line[CompressedData["
1:eJyF1V1I02EUx/EpoxfEAkOSwsqQhGFemCAGdgTT6EbQihQkwbfI3tAi8UIv
mk5XYpmVNyVpUmkvWIlMnR0MUckwNE1xS12r2drc/z+ziErK8Px24U0XD4dz
ca4+8H3Css+m5flrNJrjy+/f3F7hSjVts/Hi3a6lzffnefXefaOsdrJomm8/
sPWlPPSw9edWKjVOcWLTswTjVYX1xvjMtIp3PGJrcys6lc8fGX6SXzDKkVEN
9UmlKq/VR3/lktc8djGgaOGFynme8Pp5vz4eu/I0rF1RuSu5Wh10dfCgY0du
xkYvz8RmVcct3OSgMkPCy1Avm3JyehT1Hu30/oiY3eJla/CpY3ONZsq07NZ2
rPFyfnfl45iJfkoprIpJt6mcEd2zKzv5DRWnlpe4W1UeSHx/6NertxSeXjvc
kqPy5RDH4f7pCYr/Y4ieDFD5liey8tyUhXpHh3vuHFB4dp/d9Ltzhup0xdbv
Rz2s1yVtMpttFHS93958cJ4bNhhiay7ZKWR9ldId6uZG/5o9Tfs/kfZbs+bk
+Bfu3euXG+d00LhOO7RU6OShqEBL64XPtC64IN+yOMd6vSkwz+Ukbfsje3mW
g9syrp1QklzL9y0Ddc8/MoVHjLjK3VR5xnjatPABDgQXcSC4iAPBRRwILuJA
cBEH8rmsOBBcxIHgIg4EF3EguIgDwUUcCC7iQHARB4KLOBBcxIHgIg4EF3Eg
uIgDwUUcCC7iQHARB4KLOJDPZcWB4CIOBBdxILiIA8FFHAgu4kBwEQeCizgQ
XMSB4CIOBBdxILiIg89FHBgu4sBwEQeGizgwXMSB4SIODBdxYLiIA8NFHBgu
4sBwEQeGizgwXMSB4SIODBdxYLis6hYc0C04oFtwQLfggG7BgX0u0im4oFNw
Qafggk7BBZ2CCzoFF3QKLugUXNApuKBTcEGn4IJOwQWdggs6BRd0Ci7oFFzQ
KZ+LdAou6BRc/vef/AWs0Kog
         "]]}}]}], {
    {RGBColor[1, 0, 0], 
     PolygonBox[{{-0.866025403784439, -0.49999999999999933`}, \
{-0.8191520442889922, -0.5735764363510454}, {-0.7660444431189783, \
-0.6427876096865389}, {-0.7071067811865479, -0.7071067811865471}, \
{-0.6427876096865395, -0.7660444431189779}, {-0.5735764363510464, \
-0.8191520442889916}, {-0.5000000000000004, -0.8660254037844385}, \
{-0.4500000000000004, -0.7794228634059946}, {-0.5162187927159417, \
-0.7372368398600925}, {-0.5785088487178855, -0.6894399988070802}, \
{-0.6363961030678932, -0.6363961030678924}, {-0.6894399988070805, \
-0.578508848717885}, {-0.737236839860093, -0.5162187927159408}, \
{-0.7794228634059952, -0.4499999999999994}}]}, 
    {RGBColor[1, 0.85, 0.85], 
     PolygonBox[{{-1., 
      5.66553889764798*^-16}, {-0.9961946980917455, -0.08715574274765751}, \
{-0.9848077530122082, -0.17364817766692958`}, {-0.9659258262890684, \
-0.25881904510252035`}, {-0.9396926207859085, -0.3420201433256682}, \
{-0.9063077870366503, -0.4226182617406989}, {-0.866025403784439, \
-0.49999999999999933`}, {-0.7794228634059952, -0.4499999999999994}, \
{-0.8156770083329853, -0.380356435566629}, {-0.8457233587073177, \
-0.3078181289931014}, {-0.8693332436601616, -0.23293714059226833`}, \
{-0.8863269777109875, -0.15628335990023662`}, {-0.896575228282571, \
-0.07844016847289176}, {-0.9, 5.098985007883182*^-16}}]}, 
    {RGBColor[1, 1, 0], 
     PolygonBox[{{-0.8660254037844385, 
      0.5000000000000003}, {-0.9063077870366497, 
      0.4226182617406999}, {-0.9396926207859082, 
      0.3420201433256693}, {-0.9659258262890681, 
      0.25881904510252146`}, {-0.984807753012208, 
      0.1736481776669307}, {-0.9961946980917455, 0.08715574274765864}, {-1., 
      5.66553889764798*^-16}, {-0.9, 
      5.098985007883182*^-16}, {-0.896575228282571, 
      0.07844016847289277}, {-0.8863269777109872, 
      0.15628335990023762`}, {-0.8693332436601613, 
      0.23293714059226933`}, {-0.8457233587073174, 
      0.3078181289931024}, {-0.8156770083329847, 
      0.3803564355666299}, {-0.7794228634059946, 0.4500000000000003}}]}, 
    {RGBColor[0.88, 1, 0.88], 
     PolygonBox[{{-0.4999999999999994, 
      0.866025403784439}, {-0.5735764363510455, 
      0.8191520442889922}, {-0.642787609686539, 
      0.7660444431189783}, {-0.7071067811865471, 
      0.7071067811865479}, {-0.7660444431189776, 
      0.6427876096865398}, {-0.8191520442889916, 
      0.5735764363510464}, {-0.8660254037844385, 
      0.5000000000000003}, {-0.7794228634059946, 
      0.4500000000000003}, {-0.7372368398600925, 
      0.5162187927159417}, {-0.6894399988070798, 
      0.5785088487178859}, {-0.6363961030678924, 
      0.6363961030678932}, {-0.5785088487178851, 
      0.6894399988070805}, {-0.516218792715941, 
      0.737236839860093}, {-0.44999999999999946`, 0.7794228634059952}}]}, 
    {RGBColor[0, 1, 0], 
     PolygonBox[{{5.053215498074303*^-16, 1.}, {-0.08715574274765757, 
      0.9961946980917455}, {-0.17364817766692986`, 
      0.9848077530122081}, {-0.2588190451025202, 
      0.9659258262890684}, {-0.3420201433256681, 
      0.9396926207859086}, {-0.42261826174069894`, 
      0.9063077870366502}, {-0.4999999999999994, 
      0.866025403784439}, {-0.44999999999999946`, 
      0.7794228634059952}, {-0.38035643556662907`, 
      0.8156770083329852}, {-0.3078181289931013, 
      0.8457233587073179}, {-0.23293714059226817`, 
      0.8693332436601616}, {-0.15628335990023687`, 
      0.8863269777109873}, {-0.07844016847289181, 0.896575228282571}, {
      4.547893948266873*^-16, 0.9}}]}, 
    {RGBColor[0, 1, 0], 
     PolygonBox[{{0.5000000000000003, 0.8660254037844385}, {
      0.42261826174069983`, 0.9063077870366498}, {0.34202014332566905`, 
      0.9396926207859083}, {0.2588190451025212, 0.9659258262890682}, {
      0.17364817766693086`, 0.984807753012208}, {0.08715574274765857, 
      0.9961946980917455}, {5.053215498074303*^-16, 1.}, {
      4.547893948266873*^-16, 0.9}, {0.07844016847289272, 
      0.896575228282571}, {0.15628335990023778`, 0.8863269777109872}, {
      0.23293714059226908`, 0.8693332436601614}, {0.3078181289931021, 
      0.8457233587073175}, {0.38035643556662985`, 0.8156770083329848}, {
      0.4500000000000003, 0.7794228634059946}}]}, 
    {RGBColor[0.88, 1, 0.88], 
     PolygonBox[{{0.8660254037844389, 0.49999999999999944`}, {
      0.8191520442889921, 0.5735764363510456}, {0.7660444431189785, 
      0.6427876096865389}, {0.7071067811865478, 0.7071067811865472}, {
      0.6427876096865397, 0.7660444431189777}, {0.5735764363510465, 
      0.8191520442889916}, {0.5000000000000003, 0.8660254037844385}, {
      0.4500000000000003, 0.7794228634059946}, {0.5162187927159417, 
      0.7372368398600925}, {0.5785088487178857, 0.6894399988070801}, {
      0.6363961030678931, 0.6363961030678925}, {0.6894399988070805, 
      0.578508848717885}, {0.7372368398600928, 0.5162187927159412}, {
      0.7794228634059951, 0.4499999999999995}}]}, 
    {RGBColor[1, 1, 0], 
     PolygonBox[{{1., -8.881784197001252*^-16}, {0.9961946980917457, 
      0.08715574274765732}, {0.9848077530122082, 0.17364817766692955`}, {
      0.9659258262890685, 0.25881904510252}, {0.9396926207859086, 
      0.34202014332566805`}, {0.9063077870366503, 0.4226182617406988}, {
      0.8660254037844389, 0.49999999999999944`}, {0.7794228634059951, 
      0.4499999999999995}, {0.8156770083329853, 0.380356435566629}, {
      0.8457233587073179, 0.3078181289931013}, {0.8693332436601617, 
      0.23293714059226803`}, {0.8863269777109875, 0.15628335990023665`}, {
      0.896575228282571, 0.07844016847289166}, {
      0.9, -7.993605777301127*^-16}}]}, 
    {RGBColor[1, 0.85, 0.85], 
     PolygonBox[{{0.8660254037844385, -0.5000000000000002}, {
      0.9063077870366498, -0.4226182617406998}, {
      0.9396926207859082, -0.34202014332566916`}, {
      0.9659258262890681, -0.25881904510252135`}, {
      0.9848077530122079, -0.17364817766693103`}, {
      0.9961946980917454, -0.08715574274765896}, {
      1., -8.881784197001252*^-16}, {0.9, -7.993605777301127*^-16}, {
      0.8965752282825709, -0.07844016847289306}, {
      0.8863269777109871, -0.15628335990023792`}, {
      0.8693332436601613, -0.23293714059226922`}, {
      0.8457233587073174, -0.30781812899310224`}, {
      0.8156770083329848, -0.3803564355666298}, {
      0.7794228634059946, -0.45000000000000023`}}]}, 
    {RGBColor[1, 0, 0], 
     PolygonBox[{{0.4999999999999995, -0.8660254037844389}, {
      0.5735764363510456, -0.8191520442889921}, {
      0.6427876096865389, -0.7660444431189783}, {
      0.7071067811865472, -0.7071067811865478}, {
      0.7660444431189778, -0.6427876096865397}, {
      0.8191520442889916, -0.5735764363510464}, {
      0.8660254037844385, -0.5000000000000002}, {
      0.7794228634059946, -0.45000000000000023`}, {
      0.7372368398600926, -0.5162187927159416}, {
      0.6894399988070802, -0.5785088487178857}, {
      0.6363961030678925, -0.6363961030678931}, {
      0.5785088487178851, -0.6894399988070805}, {
      0.5162187927159412, -0.7372368398600928}, {
      0.44999999999999957`, -0.7794228634059951}}]}}, 
   {GrayLevel[0.5], Thickness[0.008], 
    {GrayLevel[0.5], Thickness[0.004], CapForm["Butt"], 
     StyleBox[{{
        {GrayLevel[0], 
         LineBox[{{{-0.5000000000000004, -0.8660254037844385}, 
            Scaled[{0.030000000000000072`, 
             0.05569219381653051}, {-0.5000000000000004, \
-0.8660254037844385}]}, {{-1., 1.2246467991473532`*^-16}, 
            Scaled[{0.06, 0.}, {-1., 
             1.2246467991473532`*^-16}]}, {{-0.4999999999999998, 
            0.8660254037844387}, 
            Scaled[{0.029999999999999992`, -0.055692193816530566`}, \
{-0.4999999999999998, 0.8660254037844387}]}, {{0.5000000000000003, 
            0.8660254037844385}, 
            Scaled[{-0.03000000000000002, -0.05569219381653053}, {
             0.5000000000000003, 0.8660254037844385}]}, {{1., 0.}, 
            Scaled[{-0.06, 0.}, {1., 0.}]}, {{
            0.5000000000000003, -0.8660254037844385}, 
            Scaled[{-0.030000000000000006`, 0.05569219381653054}, {
             0.5000000000000003, -0.8660254037844385}]}}]}, 
        {GrayLevel[0], 
         LineBox[{{{-0.7071067811865479, -0.7071067811865471}, 
            Scaled[{0.028284271247461915`, 
             0.03031499055704094}, {-0.7071067811865479, \
-0.7071067811865471}]}, {{-0.8660254037844388, -0.4999999999999997}, 
            Scaled[{0.03464101615137756, 
             0.021435935394489788`}, {-0.8660254037844388, \
-0.4999999999999997}]}, {{-0.9659258262890684, -0.25881904510252035`}, 
            Scaled[{0.038637033051562734`, 
             0.011096056659362344`}, {-0.9659258262890684, \
-0.25881904510252035`}]}, {{-0.9659258262890682, 0.258819045102521}, 
            Scaled[{0.03863703305156273, -0.011096056659362374`}, \
{-0.9659258262890682, 0.258819045102521}]}, {{-0.8660254037844385, 
            0.5000000000000003}, 
            Scaled[{0.03464101615137754, -0.02143593539448983}, \
{-0.8660254037844385, 0.5000000000000003}]}, {{-0.7071067811865475, 
            0.7071067811865476}, 
            Scaled[{0.028284271247461898`, -0.030314990557040962`}, \
{-0.7071067811865475, 0.7071067811865476}]}, {{-0.2588190451025204, 
            0.9659258262890684}, 
            Scaled[{0.010352761804100816`, -0.041411047216403325`}, \
{-0.2588190451025204, 0.9659258262890684}]}, {{6.123233995736766*^-17, 1.}, 
            Scaled[{0., -0.04287187078897963}, {6.123233995736766*^-17, 
             1.}]}, {{0.25881904510252096`, 0.9659258262890682}, 
            Scaled[{-0.010352761804100838`, -0.04141104721640332}, {
             0.25881904510252096`, 0.9659258262890682}]}, {{
            0.7071067811865476, 0.7071067811865476}, 
            Scaled[{-0.028284271247461905`, -0.030314990557040962`}, {
             0.7071067811865476, 0.7071067811865476}]}, {{0.8660254037844387, 
            0.49999999999999983`}, 
            Scaled[{-0.034641016151377546`, -0.02143593539448981}, {
             0.8660254037844387, 0.49999999999999983`}]}, {{
            0.9659258262890683, 0.25881904510252046`}, 
            Scaled[{-0.038637033051562734`, -0.01109605665936235}, {
             0.9659258262890683, 0.25881904510252046`}]}, {{
            0.9659258262890683, -0.25881904510252046`}, 
            Scaled[{-0.038637033051562734`, 0.011096056659362358`}, {
             0.9659258262890683, -0.25881904510252046`}]}, {{
            0.8660254037844385, -0.5000000000000002}, 
            Scaled[{-0.03464101615137754, 0.021435935394489836`}, {
             0.8660254037844385, -0.5000000000000002}]}, {{
            0.7071067811865476, -0.7071067811865476}, 
            Scaled[{-0.028284271247461894`, 0.030314990557040965`}, {
             0.7071067811865476, -0.7071067811865476}]}}]}}, 
       {GrayLevel[0], 
        StyleBox[{{
           {GrayLevel[0], 
            InsetBox["0", Offset[{1.5000000000000036, 2.5980762113533142}, 
             Scaled[{0.030000000000000072, 0.05569219381653051}, \
{-0.5000000000000004, -0.8660254037844385}]], {-0.5773502691896275, -1.}, 
             Automatic, {1, 0}], 
            InsetBox["20", Offset[{3., 0.}, 
             Scaled[{0.06, 0.}, {-1., 1.2246467991473532*^-16}]], {-1, 0.}, 
             Automatic, {1, 0}], 
            InsetBox["40", Offset[{1.4999999999999996, -2.598076211353317}, 
             Scaled[{0.029999999999999992, -0.055692193816530566}, \
{-0.4999999999999998, 0.8660254037844387}]], {-0.5773502691896255, 1.}, 
             Automatic, {1, 0}], 
            InsetBox["60", Offset[{-1.5000000000000009, -2.5980762113533156}, 
             Scaled[{-0.03000000000000002, -0.05569219381653053}, \
{0.5000000000000003, 0.8660254037844385}]], {0.5773502691896262, 1.}, 
             Automatic, {1, 0}], 
            InsetBox["80", Offset[{-3., 0.}, Scaled[{-0.06, 0.}, {1., 0.}]], {1, 0.},
              Automatic, {1, 0}], 
            InsetBox["100", Offset[{-1.5000000000000004, 2.598076211353316}, 
             Scaled[{-0.030000000000000006, 0.05569219381653054}, \
{0.5000000000000003, -0.8660254037844385}]], {0.577350269189626, -1.}, 
             Automatic, {1, 0}]}, 
           {GrayLevel[
            0], {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}}, \
{}},
         StripOnInput->False,
         FontFamily->"Helvetica",
         FontSize->Scaled[0.07]]}},
      StripOnInput->False,
      Antialiasing->True]}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}}, 
   InsetBox[
    FrameBox[
     StyleBox[
      StyleBox[
       TagBox[GridBox[{
          {"87"}
         },
         DefaultBaseStyle->"Column",
         GridBoxAlignment->{"Columns" -> {{Left}}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
        "Column"],
       StripOnInput->False,
       LineColor->GrayLevel[1],
       FrontFaceColor->GrayLevel[1],
       BackFaceColor->GrayLevel[1],
       GraphicsColor->GrayLevel[1],
       FontColor->GrayLevel[1]],
      StripOnInput->False,
      LineColor->GrayLevel[0.25],
      FrontFaceColor->GrayLevel[0.25],
      BackFaceColor->GrayLevel[0.25],
      GraphicsColor->GrayLevel[0.25],
      FontFamily->"Helvetica",
      FontSize->Scaled[0.07],
      FontColor->GrayLevel[0.25]],
     Background->GrayLevel[0.6],
     FrameMargins->1,
     FrameStyle->None,
     RoundingRadius->Scaled[0.01],
     StripOnInput->False], {0., -0.4}, Center, Automatic], 
   GeometricTransformationBox[GeometricTransformationBox[
     TagBox[
      TooltipBox[{
        {RGBColor[0.73, 0.24506099999999992`, 0.1971], 
         PolygonBox[{{0., -0.054700000000000006`}, {1, -0.025}, {1, 0.025}, {
           0., 0.054700000000000006`}}]}, 
        {RGBColor[0.73, 0.24506099999999992`, 0.1971], DiskBox[{0, 0}, 0.07]}, 
        {GrayLevel[1], DiskBox[{0, 0}, 0.035]}},
       "87"],
      Annotation[#, 87, "Tooltip"]& ], {{{0.8402223838474815, 
      0.3225311545907705}, {-0.3225311545907705, 0.8402223838474815}}, {0., 
      0.}}], {{{1, 0}, {0, 1}}, Center}], {}},
  AlignmentPoint->Center,
  AspectRatio->Automatic,
  Axes->False,
  AxesLabel->None,
  AxesOrigin->Automatic,
  AxesStyle->{},
  Background->None,
  BaseStyle->{},
  BaselinePosition->Automatic,
  ColorOutput->Automatic,
  ContentSelectable->Automatic,
  CoordinatesToolOptions:>Automatic,
  DisplayFunction->Identity,
  Epilog->{},
  FormatType->TraditionalForm,
  Frame->False,
  FrameLabel->None,
  FrameStyle->{},
  FrameTicks->Automatic,
  FrameTicksStyle->{},
  GridLines->None,
  GridLinesStyle->{},
  ImageMargins->0.,
  ImagePadding->All,
  ImageSize->125,
  ImageSizeRaw->Automatic,
  LabelStyle->Directive[
    GrayLevel[0.25], FontSize -> Scaled[0.07], FontFamily -> "Helvetica"],
  Method->Automatic,
  PlotLabel->None,
  PlotRange->All,
  PlotRangeClipping->False,
  PlotRangePadding->Automatic,
  PlotRegion->Automatic,
  PreserveImageOptions->Automatic,
  Prolog->{},
  RotateLabel->True,
  Ticks->Automatic,
  TicksStyle->GrayLevel[0]]], "Output",
 CellChangeTimes->{3.7741883231356535`*^9},
 CellLabel->
  "Out[695]=",ExpressionUUID->"6964a171-aa2d-4c94-92a9-8a52fd8f9467"]
}, Open  ]],

Cell["Make the date list step plot", "Text",
 CellChangeTimes->{{3.774021898744833*^9, 
  3.7740219179463215`*^9}},ExpressionUUID->"ffc6aa8c-d493-498a-9106-\
e738ec2f27ec"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"ClearAll", "[", 
  RowBox[{"dlsp", ",", "data"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"dlsp", "[", "data_", "]"}], ":=", 
    RowBox[{"DateListStepPlot", "[", 
     RowBox[{"data", ",", "\[IndentingNewLine]", 
      RowBox[{"ImageSize", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"200", ",", "130"}], "}"}]}], ",", "\[IndentingNewLine]", 
      RowBox[{"PlotRange", "\[Rule]", "All"}], ",", "\[IndentingNewLine]", 
      RowBox[{"PlotLabel", "\[Rule]", "\"\<plot label\>\""}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"Frame", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"Automatic", ",", "None"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"Automatic", ",", "None"}], "}"}]}], "}"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"FrameLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\"\<Time\>\"", ",", "\"\<Reading\>\""}], "}"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"GridLines", "\[Rule]", "Automatic"}], ",", 
      RowBox[{"GridLinesStyle", "\[Rule]", "Dotted"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"dlsp", "[", 
  RowBox[{"readingsDS", "[", 
   RowBox[{"All", ",", 
    RowBox[{"{", 
     RowBox[{"\"\<Timestamp\>\"", ",", "\"\<reading\>\""}], "}"}]}], "]"}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.7740219475003047`*^9, 3.7740219579757214`*^9}, {
   3.7740219979307914`*^9, 3.7740220862445965`*^9}, {3.7740221196205587`*^9, 
   3.7740221331687927`*^9}, {3.774022182290905*^9, 3.7740221839808917`*^9}, {
   3.7740222469475965`*^9, 3.774022275751403*^9}, {3.7740223613293695`*^9, 
   3.774022390906128*^9}, {3.7740230810842667`*^9, 3.774023084879268*^9}, {
   3.7740251212268376`*^9, 3.774025157601924*^9}, {3.7740252416198735`*^9, 
   3.7740252450668283`*^9}, 3.774025336939823*^9, {3.7740256900477734`*^9, 
   3.77402570281981*^9}, {3.774025756688384*^9, 3.7740258236073604`*^9}, {
   3.7740260148908005`*^9, 3.7740260152117867`*^9}, {3.7740271693575087`*^9, 
   3.774027169793498*^9}, 3.774188351645193*^9},
 CellLabel->
  "In[696]:=",ExpressionUUID->"fa39ca60-7f2d-4a0d-89ea-28e2b954f882"],

Cell[BoxData[
 GraphicsBox[{{{}, {{{}, {}, 
      {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       0.009166666666666668], AbsoluteThickness[1.6], LineBox[CompressedData["
1:eJx91ntIU2EUAPDrEBMVM5G01NGUVDJfpPkI3dnUq1tLy0fYtDVN94ekluEr
KhcWZVBCFgk9zMdaSNiwEBtkZhGKTijnq1EyJkqlsYiiNKRv/tU/51y4XH7w
cc93z/nu9x1RSVVOmYDjuHF2O552fRBfIFyWcBtXAqybZ3EP5cPdN9HHUHO7
wXfuF+Fs0GhUxai1maAs3VyJez8YZQvXUXNJ8GB7lRG3AsY6GpyUmLXpbD5C
Z9ScHxu/xQV3PmSVXNyEOwwE4U/ccfMw0+XhT7moZSKAsvVMtBC3DGpa/cIo
r5tvRlDm+5ciKZ9K3huDWitj9SjcQ3mqXhaLmpPDwzsecai1cuhMn5ZSFoTH
85TnJmwyyt5NrgrKffeijlNuq7xRRllZajtNued7SA3l1z/TalHDQbj01akO
9VAOhMb8rUfN5cHkgV3dqDfyfV9H2eXCTj1qFi9nQP4INRcL74LEL1Gz91Us
NQ1RdptJHcZ9iNWrcRS3HKRq0xhlQ/XILOVWP8UHysrSNQtqLg2ejVR/wp3F
6r08jzsPbDp3O2oWr/+HyK2QsGfEeXfKLcMfPSjPZzd74uZhsP29N2ouke1H
y764I1k++EDULJ5d/2UHZZVRF0w5NEYdgprNx65/G4qaree6QXEeanbenhO/
yMftCpnWYcISth/OFlCO6Ht1hLJUrSvC7QPiuB7CMnZeVlegZvvNgNBkQM3y
WdNqfkrZP2rlOWWbzpJahJqHQOUCbs4Lgi0rabhd2XmwhlsrAcufrbFHUTv+
l/I4ynz/ZBJqFk+qthJOYd8zvg+3K4zWThNOYf3CiWTcPtAsOUlYBg2fe6+o
UCew9e57lbJGs3oLNVsvIkNQG+XeDBNuVs/GcjNu1u/FN1vj6zCzfIkMi4Sl
bLwpEbcPLK1N4dYq2HyLkyjPTQQvouYCYJtzCOFc+HY2Y6ADNQe/c9tXcSc4
+u3VTtRe4FXgJOgiHH5ZgFvr6GdVj1Gzel67bTzc/Z//ARzgftY=
        "]]}}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.009166666666666668],
       AbsoluteThickness[1.6]}, {
      {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       0.009166666666666668], AbsoluteThickness[1.6]}, {}}, {
      {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       0.009166666666666668], AbsoluteThickness[1.6]}, {}}}, {{}, {}}}, {{}, {
     {Opacity[0], PointBox[CompressedData["
1:eJxV1GtIk1EYB/DXISYqZhJpeaEpqWTeSPOG7WzqdLa0vIDNuabpPkhqGTqV
yoVF2YeELBC6mNpaSNiwEBMyswjFNijnZY2SMVEqjUUUpSEd+/Cev4OX8eN5
nvM+z9nZEZbX5lcKOI7T0Gfj22kIkRYHL4u5/58ksm6ZYx4tIrdfxx5n8X3E
z/oLnEc0GlUZb102UVRsrWE+RIZlC9dYfgq5t6t2mFlOJrubXBR8fiZdL9iV
N+dP49vcmItIbvnFLcwRRBD52JNZSmZ7vQLQynZzINreHBvMLCP1Hf4R6HXL
jSi0dHApGn067UAc61dG5ynZj55ulMWz/Bzy4JZXAovnkJ7MGQlaEJkoRVvN
Dhnat9Vdjh64E3MC3VlzvRKtqHCcQfd9D6tHv/qZ0cCbHCGXvrpoeY/mk/C4
v42s/0IydXjv/c3939Wj3S7sMWB9/lDOQ1YfT96FiF5gfvVS6yjaYzZ9jPko
na9lAuMStWkSbawbn0N3+Ms/bJ5/zcben0Gejtd9Ys6l8y/P43wOvacT6wd/
CD1KwN5R5z3R7WMfvdDzeW3ezFIy0vXelzeXTM/Tsh9zNO1HGoT1TsOX3WjV
sD4UHR6nDsP1nIY34SWw39oRUSGLJ5FzoudFzO4k2z4GFtPzOFeMjhp4eQwt
UeuVzNuJKKEPLKP/z7pq3vT8DAWbjNhvfYflCTogZuUZ2qG3pSthv4IUC8yc
Dwm1rWQooX+reY1ZJya2PzviSzf9PlUJaOngVEop1EvUdvBB+r63qRifaJhJ
xbi9+WRaKczfJj4FlpGmz/1XVLDf2hG/q2iNZvWmCvZHaAzpRPdnmZjpvC1V
FmZ6/yW22RO10J/QuAiW0LgpWQv9La1NM+vkdP2yFLTVHLrI8gPJTtcwcAH5
djZrqJs3R34XdK12wzz0/l7tgX59il0EveDIywJm3cZ9q3rUC/P+A/H5v/o=

       "]]}, {
      {Opacity[0]}, {}}, {
      {Opacity[0]}, {}}}, {{}, {{}, {}}}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{3.774005809083*^9, 0},
  DisplayFunction->Identity,
  Frame->{{Automatic, None}, {Automatic, None}},
  FrameLabel->{{
     FormBox["\"Reading\"", TraditionalForm], None}, {
     FormBox["\"Time\"", TraditionalForm], None}},
  FrameTicks->FrontEndValueCache[{{Automatic, Automatic}, {
      Charting`DateTicksFunction[
      Automatic, Ticks -> Automatic, DateTicksFormat -> {Automatic}], 
      Charting`ScaledFrameTicks[
       Charting`DateTicksFunction[
       Automatic, Ticks -> Automatic, "TickLabels" -> None, 
        DateTicksFormat -> {Automatic}][
        SlotSequence[1]], {Identity, Identity}]& }}, {{
     Automatic, Automatic}, {{{3.7739952*^9, 
        FormBox[
         TagBox[
          GridBox[{{
             StyleBox["\"12:00\"", 
              Directive[], {}, StripOnInput -> False]}}, 
           GridBoxAlignment -> {"Columns" -> {{Center}}}, DefaultBaseStyle -> 
           "Column", 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"], 
         TraditionalForm], {0.013888888888888888`, 0.}, 
        Directive[]}, {3.7740384*^9, 
        FormBox[
         TagBox[
          GridBox[{{
             StyleBox["\"00:00\"", 
              Directive[], {}, StripOnInput -> False]}}, 
           GridBoxAlignment -> {"Columns" -> {{Center}}}, DefaultBaseStyle -> 
           "Column", 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"], 
         TraditionalForm], {0.013888888888888888`, 0.}, 
        Directive[]}, {3.7740816*^9, 
        FormBox[
         TagBox[
          GridBox[{{
             StyleBox["\"12:00\"", 
              Directive[], {}, StripOnInput -> False]}}, 
           GridBoxAlignment -> {"Columns" -> {{Center}}}, DefaultBaseStyle -> 
           "Column", 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"], 
         TraditionalForm], {0.013888888888888888`, 0.}, 
        Directive[]}, {3.7741248*^9, 
        FormBox[
         TagBox[
          GridBox[{{
             StyleBox["\"00:00\"", 
              Directive[], {}, StripOnInput -> False]}}, 
           GridBoxAlignment -> {"Columns" -> {{Center}}}, DefaultBaseStyle -> 
           "Column", 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"], 
         TraditionalForm], {0.013888888888888888`, 0.}, 
        Directive[]}, {3.774168*^9, 
        FormBox[
         TagBox[
          GridBox[{{
             StyleBox["\"12:00\"", 
              Directive[], {}, StripOnInput -> False]}}, 
           GridBoxAlignment -> {"Columns" -> {{Center}}}, DefaultBaseStyle -> 
           "Column", 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"], 
         TraditionalForm], {0.013888888888888888`, 0.}, 
        Directive[]}}, {{3.7739952*^9, 
        FormBox[
         TagBox[
          GridBox[{{
             StyleBox[
              TemplateBox[{0., 0.}, "Spacer2"], 
              Directive[], {}, StripOnInput -> False]}}, 
           GridBoxAlignment -> {"Columns" -> {{Center}}}, DefaultBaseStyle -> 
           "Column", 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"], 
         TraditionalForm], {0.013888888888888888`, 0.}, 
        Directive[]}, {3.7740384*^9, 
        FormBox[
         TagBox[
          GridBox[{{
             StyleBox[
              TemplateBox[{0., 0.}, "Spacer2"], 
              Directive[], {}, StripOnInput -> False]}}, 
           GridBoxAlignment -> {"Columns" -> {{Center}}}, DefaultBaseStyle -> 
           "Column", 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"], 
         TraditionalForm], {0.013888888888888888`, 0.}, 
        Directive[]}, {3.7740816*^9, 
        FormBox[
         TagBox[
          GridBox[{{
             StyleBox[
              TemplateBox[{0., 0.}, "Spacer2"], 
              Directive[], {}, StripOnInput -> False]}}, 
           GridBoxAlignment -> {"Columns" -> {{Center}}}, DefaultBaseStyle -> 
           "Column", 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"], 
         TraditionalForm], {0.013888888888888888`, 0.}, 
        Directive[]}, {3.7741248*^9, 
        FormBox[
         TagBox[
          GridBox[{{
             StyleBox[
              TemplateBox[{0., 0.}, "Spacer2"], 
              Directive[], {}, StripOnInput -> False]}}, 
           GridBoxAlignment -> {"Columns" -> {{Center}}}, DefaultBaseStyle -> 
           "Column", 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"], 
         TraditionalForm], {0.013888888888888888`, 0.}, 
        Directive[]}, {3.774168*^9, 
        FormBox[
         TagBox[
          GridBox[{{
             StyleBox[
              TemplateBox[{0., 0.}, "Spacer2"], 
              Directive[], {}, StripOnInput -> False]}}, 
           GridBoxAlignment -> {"Columns" -> {{Center}}}, DefaultBaseStyle -> 
           "Column", 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"], 
         TraditionalForm], {0.013888888888888888`, 0.}, 
        Directive[]}}}}],
  GridLines->FrontEndValueCache[{Charting`ScaledTickValues[
      ((Transpose[{#, 
        Table[
         Dashing[{0, Small}], {
          Length[#]}]}]& )[
       Part[
        Select[
         Charting`DateTicksFunction[
         Automatic, Ticks -> Automatic, DateTicksFormat -> {Automatic}][
          SlotSequence[1]], And[
          FreeQ[#, 
           Alternatives["", 
            Spacer[{0, 0}]]], Head[#] === List, Length[#] > 0]& ], All, 1]]& )[
       SlotSequence[1]], {Identity, Identity}]& , Automatic}, {{{3.7739952*^9, 
       Directive[
        Dashing[{0., Small}]]}, {3.7740384*^9, 
       Directive[
        Dashing[{0., Small}]]}, {3.7740816*^9, 
       Directive[
        Dashing[{0., Small}]]}, {3.7741248*^9, 
       Directive[
        Dashing[{0., Small}]]}, {3.774168*^9, 
       Directive[
        Dashing[{0., Small}]]}}, Automatic}],
  GridLinesStyle->Dashing[{0, Small}],
  ImageSize->{200, 130},
  Method->{
   "NoShowPlotTheme" -> Automatic, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotLabel->FormBox["\"plot label\"", TraditionalForm],
  PlotRange->{{3.774005809083*^9, 3.774161589831*^9}, {0, 87.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.08090169943749476]}},
  Ticks->{{}, Automatic}]], "Output",
 CellChangeTimes->{3.774188354260192*^9},
 CellLabel->
  "Out[698]=",ExpressionUUID->"16c70d5d-0237-4df2-8926-0e811a15c0db"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"ClearAll", "[", 
  RowBox[{"outerRF", ",", "items"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"outerRF", "[", 
   RowBox[{
   "bpW_", ",", "rsMult_", ",", "w_", ",", "h_", ",", "frmTF_", ",", 
    "items_List"}], "]"}], ":=", 
  RowBox[{"Rasterize", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Framed", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Grid", "[", "items", "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"Alignment", "\[Rule]", "Center"}], ",", "\[IndentingNewLine]", 
      RowBox[{"ImageSize", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"wPX", "[", "bpW", "]"}], ",", 
         RowBox[{"hPX", "[", 
          RowBox[{"bpW", ",", "w", ",", "h"}], "]"}]}], "}"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"FrameMargins", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "0"}], "}"}]}], "}"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"ContentPadding", "\[Rule]", "False"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"RoundingRadius", "\[Rule]", "0"}], ",", "\[IndentingNewLine]", 
      RowBox[{"FrameStyle", "\[Rule]", 
       RowBox[{"If", "[", 
        RowBox[{"frmTF", ",", "Red", ",", "White"}], "]"}]}]}], 
     "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
    RowBox[{"ImageSize", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"wPX", "[", "bpW", "]"}], ",", 
       RowBox[{"hPX", "[", 
        RowBox[{"bpW", ",", "w", ",", "h"}], "]"}]}], "}"}]}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"RasterSize", "\[Rule]", 
     RowBox[{"rsMult", "*", "bpW"}]}]}], "\[IndentingNewLine]", 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"items", "=", 
   RowBox[{"{", 
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"ag", "[", 
       RowBox[{"readingsDS", "[", 
        RowBox[{"First", ",", "\"\<reading\>\""}], "]"}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"grd", "[", 
       RowBox[{"readingsDS", ",", "5"}], "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"dlsp", "[", 
       RowBox[{"readingsDS", "[", 
        RowBox[{"All", ",", 
         RowBox[{"{", 
          RowBox[{"\"\<Timestamp\>\"", ",", "\"\<reading\>\""}], "}"}]}], 
        "]"}], "]"}]}], "\[IndentingNewLine]", "}"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"outerRF", "[", 
  RowBox[{
   RowBox[{"72", "*", "7.5"}], ",", "3", ",", "40", ",", "10", ",", "False", 
   ",", "items"}], "]"}]}], "Input",
 CellChangeTimes->{
  3.774022602356182*^9, {3.7740226448327217`*^9, 3.774022768034034*^9}, {
   3.7740228239335732`*^9, 3.774022918980071*^9}, {3.7740229564280615`*^9, 
   3.7740229636457973`*^9}, {3.774023026615224*^9, 3.7740230719823756`*^9}, {
   3.7740231303632317`*^9, 3.77402318501998*^9}, 3.7740232491212068`*^9, {
   3.77402329166335*^9, 3.774023319265185*^9}, {3.774024917808483*^9, 
   3.7740249792850885`*^9}, {3.774025441337478*^9, 3.774025451592514*^9}, 
   3.774025654892606*^9, {3.7740258560732813`*^9, 3.774025856470249*^9}},
 CellLabel->
  "In[699]:=",ExpressionUUID->"b5ed8e83-3a83-473b-b68a-7e6014e1f42d"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
iV5codd0h4uv5xobFzYPFjnlJZV4pfgujenSS61g7Hsd3JpThJhRhckejC8G
4zoiEwmWTBDJysCUNLCsRV85bomsdyD0V1YqqPtKeWvOlmutGWl9WwLGV/Lc
7is96z6L+9LOvmc7n2kuLihQeeY5TelX8VgwuC/Xa83dohbJKW06n58pcllP
vXnMUgOWItByuC8vT24Pz63+tLzUyFZHNuC+WgjcFwAAgNZSlfgi4+XXXg7+
b0dX68W1Ny5tBoletNAr6W3cm+vuRY2N6cpL77tMssvuuDa8jlQnprVhkgoT
6sG4vkizBIuD8YUysCQNLIMBey24qlmLvtjIMQUk9Jc7pbqv6N1TeaXNNMFi
1pd3S0+fDtfYMRdhFaL2OhVzX6lHJL6qaxY2vMuLlsxDpUofuy/nCftyuy9j
PR5bwDa5Z+abLcM4ZeqCtOus7O7Lz5Pbw3MbTAHwHBuDwYSYjS33YgPuq4XA
fQEAAGgn+cQX63MsIr5cOh8V6yW2N7JCr+7e3Mb+/MYBLfTilJca4WX3XSmm
S6eqDqNxIIzNLEP47T4/0pyYoTDM4MEsEizIBAuC8bkyMJYGpm2ELKPoy2P/
Y9UPVn3phftS3z0Lh8yfOjr4wkv0lVNalfjz5wb5tqlwyO/XblIr/UWbopMk
mfvglGWsBSeS2lLrxAxnW1QNHuKJ4L5cr7XSc6e/cOJ18ei+DI+P3C1ovlsc
7pnM7svTk1v1uW36gPtqIXBfAAAAWkhu8eXFetlLv8zWa2c6SvS6N7u+Swu9
ot5GLr5e29Vo6Gc0+i695squtgoOxYkZVJiuJExKCeMlmJgJ9mhp5yE5gWIZ
GJcG5m7AXguuZ+6iL4/6i9zeVT9hdaQ37svNEbm/YHLLSC+q4oZ0v3VsZ3Ny
X4oQ0C5W3H1Z28Hk/dd0eBkECNyXaZTrvrgzz98wutY87uK6Xa8ij4+cAG9f
s2f35enJrfrcNn7AfbUQ1X1t37t/9PUL/CCfVLJvAAAAQBnkTrb3KL60pV+/
t/nK72+9IlkvFurFtTcmiV6s0Evb2Ggp8bL6rmpMV3YbplNhggfTFIOZJRgr
A4vTwPhGSBcD9lpwMX3dG1n7H7+nUPVzVjt65L6ccrGcXzD512Rbx5/+HVbZ
E+1iGXcjxGBIfLgvS0eYYgB0S2rONtyXcaim0Wvel8HPpGW1CTaphMfH/FiF
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
ol/7jee//LVvnLtyizrD6c7WT0Z+RfUXq/5Si+54/WVxX07xX1n1VzDzY5fc
lr5Kv9oW/IU3HeAL3EsANB08xS3Eo/uiAwasWcB9YdR2wH0BRo5uR//ia1XX
6rjrWXz9czir4J//5bf4dC+1w5F+olovvqjJbr2Y8tKUeCm+S9JcJn91Z+1e
7jGzpl+nJMR4FeYowbRlYPQU/dlf/JUUhs9i8L/3334kaUat/rK7r8L666HU
/DhJ9de8T/1lf6D6rPMRbzrAF7iXAGg6eIpbCNxXy4H7wqjtgPsCFKnoy0V8
FSz6isTXfHdcEF+7xoyvPVfxZZEkZMysbH8mjLi/s7JtT/di7kuyXrTWi3Nf
ukIvU5WXyXepsmvNrLlW790Oxl3HQZbPJMR4FSbXgxkkmFoGRk4LPUXXby+r
Yfg3Z4LJAn77C1+iMfjSyZcMWKr7svU/uumvRaa/Vqn+2iK35Vigv7zl3ruX
fjW98xFvOsAXuJcAaDp4ilsIn5BPP4H7ahWS+/pgdKHqPQLt5e/eugr3BSR6
3+04sbV0Y3ZtLBJfW0x8zW3sL2xaxdd+IfHVPTj89ne+PzAw8LO3T/KCRdIv
tNCLTlM4tbwpT+B49/HE4gb56uU//lNboZdWefH9jJLv0smudLW1kjYyajFJ
hXESbE8oBtNJsCWxDOzlr/4pXxonJeHzZXX0VLMWSF5/3VnZHgjneVQz8L3q
r+CSzQX6azfQX51Ef3mc9tFdf1X9V0Ih8KYDfIF7CYCmg6e4haDuq+XAfYH6
APcFVLJ2OxYVX5uLsfjaCMRXJ0187SriK3uf44bYQGeHCpm//n+/R/58+daM
mmZ/aew2+eqv/vN3U6wXp7z0JV6S79JWc4UKa3plx+MwaTFJhfEejBWDyR2R
ahlYbMDI+SFnSQrDl5LwaQjYX/9NeKrH56RZNbv7h1cmglkJvv2d72ungMyS
fu+gvzYD/TXD9NfSFrlFvegvl4rKvul8xJsO8AXuJQCaDp7iFgL31XLgvkB9
gPsCElm7HYvn24fia318YWNyaWuqs3N79e5Mr8SXo/uiTY4j758lf/7BP70l
ptkHFU2v/38/I1/904l3VOslZ3npqrxsvktrujrCmOps5xrielQbZvdgWgmm
LwOLDNjP3/uQnKVfnf1UnQ7yxp1l8tWX//gbtAZs5P1z5D//4c23aAskP374
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
xZca8HUrFl+sz9FS7pXbeml9l6PgouOjK5PqsCxvUWGqBMtpwLQFYFL/oyX9
3q6/NrX6yzTto4/gL6XzURN6vx6F3re89AtvOsAXuJfqQmrTItQXMICnmEc2
UUOE4eHgf7VaipNluRoezeLLuE5+k26/0AD31XLgvkB9yOS+cK82lx4XfU3x
RV/6iPunrOjLa7ejWXxtPwjcVy7xNb6oC/jSpXtJTY4u1stdebkILjY+HJ1g
w76kxYM5SrBUA6YtALP1P2rjvxz0F7nEdv3lq/MxNfR+gYbeeyr9Sp3wsc6l
X3jTAb7AvVQfrPYL5gsYwVMsYSyr0lRXJe2OBc0X37PYGeU+l2q/+J/wvxg2
/kIL3FfLgU8A9QHuqyW4FH2x6pGCRV+TrOiruzefGnFfSrdjKeKLzeco9Dmm
lXvls15a32WxW0WGRYWpEiyHAUspABP7H+X4rwz66yDRX9sW/ZWz8zFH6H1Q
+tVF6RfedIA3cC/VCpr5L0waaJi/AQAGnmIdHRqoxUswmqklq6jh4ZFMSVsc
tngx5rhElWWJFtNk8JuB+2o58AmgPsB9tYFeFn1N0KKv1bsz67tzuoj7fEVf
mWK+9BM7huKL5ttnEF8LecSXVO6Var0syssuuz64PF58WFRYqgRLNWD6AjCl
/1GI/8qnv8LgL6a/2LSPnP4qGvyVI/Q+KP1a91n6ZXl+4b5A34N7CYCmg6e4
ImKPZSjU0n1t/wmzX+nyC+6r5cAngPoA99UGHN1XXFiSx33JRV9rQdHXQvai
r6zdjuaYL1F8bQnia3Z9j4qvO6v3soovU5+jvdzL0XqlKi9JW5359FbBYfFg
FgnmaMBSC8D4/kdb+r1Bf5HLR/UXuaCC/tJN+0hLv0T95a3z0aX0azIu/SIP
SxmlX7Vte8SbDvAF7iUAmg6e4mpIUV86YrllDMFP+T4B7qvlwCeA+gD31QZ6
kHJ/Y3ZNSPoyFH0x8dUtEHGfLeaL5dur4mvNTXxxUzoK4itjuZfWelkKvbS+
S5VXpy+N5R52FaZKMFMZmNaAORaAXaUFYGL6vYv+IrcZLf1S9ZdL7r3Hzsee
lX456uu6lX7hTQf4AvcSAE0HT3EluHuqhFiXGeu6UheIgftqOfAJoD7AffU9
PWh4dCj6Yt2OT7rFir6yxXwF4uuBIL66gvi6vXLXVXyJyfamPkd7uZfFelmU
V6rsOsXGJzfTR7xwqgpLlWAWA+ZSACb3P4rp93b9RW4zjf7Klnuf0vmYK/T+
SRx6n5R+LdDSr7X2ln7hTQf4AvcSAE0HT7FCGPaVTgZrpSJqqk6QVp+Eiw0F
efrK2tN1mbNQg/uSYBGJVe9IjyjJJ7TtNJZHq84k3Fff4+K+2Ctzb4q+NnIU
fVm7HbUxX6Z8e0l8TXcC92USX/KUjtaAL0u5l6XDUbJeWuWlkV2K1HrfeWiF
mMWDSRJMa8C0SfiWAjBT/JeL/opKvxz1lyb3vlDnY/7Sr9Wg9GvCR+mXyX3V
s/QLbzrAF7iXAGg6eIp50iZ55MkztSPbDmepTJuU546E+yqPVqmGQ7iv2tOq
Mwn31d/0suhrwj69Y66ir+zdjqH42lHy7dnEjmtivn0nLvpKq/hSk+0tfY6p
5V689bIUell8VySyPr4hjZPWoS6vsWEGCZbVgFkKwNT+xytx/Bc/+aOsvxYN
+ks37aOcex8Ff5XS+Ziv9Cuf+2pi4j3edIAvcC8B0HTwFCckcyX2zH0NW12b
ILHgvsqjVarhEO6r9rTqTMJ99TeZUu7zvYzT6R3HFzcnadHXWm+Kvly6HYWY
r5k45ksrvgL3tbg5vqiE26viy63P0cV6SbVeqcpL8l2C17p4XRq/iof6VTBM
QsxZgkmNkC4GzKX/Ua+/2MyPof6i1ytFf7kGf8mdj7lLvzZ6m/pl99i1anvE
mw7wBe4lAJoOnmJG3IdIa646atehPyTLJvQ4Bh2XQxr75dd9SS/XHt2X6bVd
674yveNjYV8L231CPfcZC/frwjncV6bdANVSdsq9puhrvfSir6zdjvqJHTti
zNdiVPRlF1+5+xxN5V4m68WUF++7VNP1K+24cE0/dAurNkxTD5ZmwLLqL3v/
o11/0SvlOu1jkc5HD6VfT4QJH9ejCR8notKvtiTe400H+AL3EgBNB09xTKK+
ilR0ucG7r+FRjalKFmA749d98RzCfbVsYbgvLFyfheG++pjeNDzKRV/d/YWM
RV8eI+6D7jau29ES85Uuvtisjm7iS+1zzGm9+CovXnmpsis0Wu8VGKoT4z2Y
WgmW24Cl9j9q9Zc08+Mtq/5KDf6i90bovh6VEnpvLf0iDwXZH/KAkP2cDEq/
Nsbmy0q8h/sC/QruJQCaDp7iGOa+yldfnNoyeqp4d9gCqPvCwr4WhvvCwvVZ
GO6rj3FveMwnvg7DlPtbC92Jpc0pS9HXboGir7zdjlHM10Yc88W6HVm+vSq+
WL59XvFlKfdKtV5CoZdFeekU1rvnr2Yd75GhVWEmCaYrA7MbMPf+x5z6yzzt
o9L5eODW+Vgo9F4u/doVUr8Wtx+QPaGlX1OdbbLzt1rT9og3HeAL3EsANB08
xTG9dF+q2VJQRZY4N6RlpakHgLyvloMMJVAfkPfVx/Sm4XF8YWNyeWt6ZSe1
6Kvrs+grirg3djtuyN2Ojvn2gvi6s5JbfLmUe6VaL5Py0uisc1ffOXfFcZCF
NTbMIsG0ZWCiAbMUgBXSX3dWVP1lm/aRC/5KOh839J2P7qH3xUu/lnYekn0I
S7/ukf0kj8x4mHifr/SrWYn3eNMBvsC9BEDTwVPMSPdR/mCFX0ZPpbqvtLIu
57IvuK+2A58A6gPcV7/Ss5T7icXNqc727dW7s+u780HKvaboa738oi9pbkdt
t6M+354XX3PrN2jMFye+TOH27uLLZL1Oa60XX+jFKy9RVWmk1tlg/PLsqGXQ
ZTQ2zFASxiQYKwOTDNhpqwGT+h8z6a8rov66QfUXP+3jgjH3PqXzUT/no4fQ
e1b6ta6UfpEtLm7dJw8IeUzIHgalX2Um3sN9gb4E9xIATQdPcUIvK79St6Up
4rLLuXSdxoD7ajnwCaA+wH31Ky7uy0vK/SRNuV+7N9vdW4gaHksv+tJH3Gvm
dtydWdt1ivkKxddNVXyFRV+O4suxz9FivVi1lVZ5SaZLVlsfCePtjy7HQ/5K
I8R0HkyQYGIZmNaAufc/uuqv8Pzz+uumqL/swV/k0rvN+SiE3hcv/erG+ktN
vCcPyFx37w4t/YoS79f7vu1xAgAAABCp9h+mmsCM1NCILoG+pE1ptqT/1vIb
TTi+GbivlgOfAOoD3Fe/0oOGRyHlfn13Lij6ihsed3Up96UUfaXP7Sh1O7pM
7Hj1dudqXvEl9TmmNjkK1kvX2Gj0XYLgCseHDkP8iaTCeA+mtkMKZWBuLZCm
/kd3/XWV6a/UaR/tnY/ZQ++9lH6tJqVfD2npF9kr8shMBYn3tPRrtb/bHqt+
wQIAAFA7qv2HqQZ0RoYDkgkYA8dkoWhxGDfX49Awp9o6oyPJTkgbEX7DftIZ
TX7g1LAJ99VOyDmn4+jrF+ATQE2A++pLetDwmJZyHzZ8UfG1py/6cnFfnPg6
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
kU6252aojIdqw0WeaArF/NV98edZM4Gl+zyP+fchZ6Wa/kdFrprjbw2Fey6b
CLSfbhMOAWmZphe1A/cl0+mMjgxrGIqJEsCGR6ve09zAfbUTuC9QQ+C++oCS
3Vc4yeMyneSRBd0/lIPund2Xe9B9trAvS8Oj6L6yNjye5tzXSc59SdM7CkVf
ScS9udvx/Yu/OPMJ+SFZD1nn6TDc/tzVRHxdD8RX2Oe4vDGzshWUe23urmzv
r9+9v7H3cOvgMa3y4n3XvjgOwiF9yHswWgkWGbCwC5JsgmyIbI5slGya7MB1
Xn9dnSI7SXaV7HCovy7T3Ht75yMfei+UfgVn7+q7XNvjSc59nS7S9kjdl7Xt
0UvkVzdr5BfvvvaUqR43PEz1CPdVS+C+/ODdfaknXZkQsXjeV173pVUcjr92
U19OSWC6OiM/eV8OOVgpc0zqt2EUU2+E4udZw9yK+XLiTY2j2a+a62/T5qu0
HEeWn2bKlssC3BdPZ8Q6x6MA3BfcV8OA+wI1ROu+pL9DcK/WnNIneVzcmFze
DiZ5DILu9xe3Kgq6Tw37WjSHfU0vXynQ8GhJuTcmfbGiL3FuR77b8e0PP333
3JVAfH1y88PL4+euTl4IM77iiq9AfN1e3phd3V7o3l3eDMq9ursPtvYf7dx/
Qq0Xr7wC0/U4GPcNg357IEkwVgO2/4isnGyCbIhsLux/jPRXUP0VZn9dCPTX
JNlVssNkt8nO09x7qfMxLv06ry/9UlO/HBLvtW2PptkebZFfi3kivyT35R75
pbqvDaepHrfGF3JO9eiS+wf31XN09RNKijXcVyr+3ZcsidTKpuLzPOZzX1K+
eBTr5KiWUvKltEcnbC9Wg4apG33M8+iWgaV0CzucAwczFz2G/C5nerYsWff5
r5rrbzUTNJ4dcksUU39qiAorklCWAtxXQgbzNTQ80tyWR7ivlgL3BWoI3Fcf
UKr7GptLmeSx1KD7pZ2HgvtyDvsqu+HxXa7h8e2PLkcNj1LSl1j0JXY7fvyL
Dy5F+faf3Pjg01tnr0xeuD5Nw+2vTcviq7O1t3b3/sbuw+2Dx3e5Wq/IenHK
6wEdT5QRfs5LMGbAaA0YWS1ZOdkE2RDZ3EL3Hqe/guwvGn1PdpLsKtlhsts0
+CvsfLwodz6qpV9c6hc5Xaz0i57JstsepcivxH0ZIr+o+yK3nyHu3rXt0X2q
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
kQeN7M9U4L42x3K5L/Kww32BvgT3EgBNB+5LojNCg+MTgaSxX/76HeOVK6pN
2UR6WZdz4RfcVzuB+wI1BO6r6bDX2BMnTmhfdcnn+d3XfFXuSwy63xSC7pn7
SoLuDe6ryCSPatD9e6L7evujy4L74sO+lBkeySc/P/3x2x9++m6Ycn8mTLm/
eCNIub86tXhzJprekSZ9saIvvttRyvii4uvBoycHDx/TWq+7+4Hy2tq9v3nv
/sa9g+vf/Rs2yH+SD7dCCUYNGPlJWACmVH+F+ovvfKSlX+v3HtDULzrhI9lh
sttk58khkAMxtT1Ksz3qIr8uC5Ff4RnOFHevdV9S26PFfbGpHtPc16Meua/N
g9n1vcR9zXdzuy/7XwhwX6CJ4F4CoOnAfWnpEIT/Hh0ZHgoZTuZXLI5aqQX3
BUoD7gvUELivplOy++py7muPvJhT97Wqc1/kvX52Zfvvf/Cjz3/xSzT5g/zh
737wo4n5VdV93VnZ/v7rP3rpC9GSX/7aN//hn96aXNp0cV9B0P2qPMmj5L68
TPKoBt2/aw+614Z9KTM8sobHKOX+9tKtudWppS6d3jFM+nrIir4OHiXdjnzG
F634ouLr3sHDndh6Xf/u31z727959399Rh3kK2rAyMJMf9Hqr0Mu+yvpfORK
v2jqF53wkewq2WGy2zTxnrU9SrM9/oSVfhkiv8ipGxHj7t/NGHfvPtWj7L4W
Ffe1qrivTY37Onnu8pe/9g16037l6988ffGK1n3NrGz/HfcgvPL1b/7jj0+Q
pyOOu5fd12p423Pu6x7ZsQm4LwBEcC8B0HTgvqpD16MI9wVKA+4L1BC4r6ZT
tvsiL+DkNfzO6j3ySr4Quq+g6Evnvj64eMU059OZi1d49zU+t/qZz35OXezX
fuP5G3eWacNjVvc1vrhB3VemSR5T3VeOoHtd2Nc58tUv5Bke+YbHKOV+eXNv
7W48vaOu6CtqUQwzvu6L4uv6d/XKSxobdw94/RU0Pz4Osu8PaS2ZUvpFU7+C
CR/v3ie7xyfeR22P16Y/Gh0nB0VneySHGUZ+ndNEfuWIu3d2Xy5TPVL3RW4V
1X0JUz0q7ou2PX73v/5QvWm///qPJPc1Mb/667+pub3Jh+Qrk/sijxV5uMgj
RnbgjuC+vgr3BQAF9xIATQfuqyr06Vy9cl/s/xain/h1X7/15eOO7kvaDTtY
uODCju6rVvuMhft+4RzuK9NugLIp0319VXBfXZv7ujoxS++Kvw8LvTZjCfDt
73yffn51co65rz8/+q2BsGzmwtUJ2vN47so4Laf5s7/4jxr3taG4rxXFfS0E
7msso/ui4svovnSTPL5z7so7Z69kCronf47Cvs4FYV9nLo19RGd4vDV7ZWpB
aHjc3u/+/+y96ZMc13nm238UP+HrvbZkmYq498OdG3GHM5bGEqyZ0Vj7You2
0ZZkbbQES6JIUGrLggiJI0EkAVJNQFiIrbE20I1u9L6v1VtV7xu2uu/Jk3ny
7HkyK6sqs/J9IoMBVmVVnjx5srvzF8/7vDuHmwfP1KQvvtrxiRduv3cYG3zR
bY3DX/Al8FVPSOmjxvoVNnw8eAYDI4n3XNkjDB5OAU4ETueqF/n1p5tB5JeW
fcWJu7e0eqTsy9Tq0cK+Bin7mlPY15LCvsoy+7rY9QDW5xe++o0HQ1O01WPP
yAys4TYP7TL2RZb3d8ny/tLXX77bN0KR772+kS97e37zu68g+0KhEgvXEgqV
dyH7MqtU6qHy6x9L6RU7GjFVo9gXryqyr2LsjOwLd87gzsi+cq179+7VnX0t
VMZKmxz7eiyxrzWPff3o1ROwJP509Zaa90XxF/zXN33NLsP/fuJTn+HzvpZ3
SN7Xn//Fi/DWyHzZnX0JTR6t7Itv8iixLwq+TOzL1uSRFjwq7MsPug/CvuB/
4V0S9nWzlw/7uj88/dDv8Lg2tbSuKXgM2jvKpq8nz/YPn+4ckIyvuOCLd3/B
x+FL4KvgCyXrF2v4qJY9et0e12DYD0m3Ry/y6+HoNT/yq5dEfn14F06ZRX7p
4u499mWKuze0emTsS4384tmX3OpRZF+s7BGWDWn16My+Pv9Vwma7eoYIqtrx
875uPxxp8zAXY190eX/y059R876oGWx6aYOyrzUN+3rMsa9NuPXqzb7gB0gD
fkwhr0ClJVxLKFTehexLVamno12It6ccyjNqtXekEPdlgVTo+zILd65xZ2Rf
uHMGd0b2lWvVlX09ml7RsK9NPfv6qFfDqM26n1raoAuGwoF3Oi/Bv0+dPquy
r5O/OwNvvX+pKyH7omFfSdnXjd5RG/uyN3n8UG7yKATdX7r13pV7sP8FL+j+
2oOhmw9H7wxMPhj2w77GvbCvhfLOytZBZe8JX/DI2jvypi/S2NGrdtzYPSxv
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
i7GvH3nv9ozMqOzr/uAUvPXKj19vRfZ179wNvs/jmNfncZawr9mViVJllvR5
3F3bPtwI2Neevc/j/uON3cPy9r6Kp0yrJRX2Rbd7Pz4Ow/b6PM567Gss7PN4
o+f9q/dgHjLEvqL6PE4sbdnZF/VrlUg3Rpl9wUbfpeyLLu+HozMq++obnYG3
4O5w7vNYQfaFQvHCtYRC5V14F3PiwrTaqZGKZ18l7u36FDw2SvVmX3/97Q+Q
fWVQyL5QGRSyr1wra+xrZHb5k5/+DDzgv/vBJQl8MfZ17sot2OHN02dV9nXy
d2doZdni5hOCv8zsa2Jpy8a+plf6p5Yt7IviLxP7ovjLZ1/3BlzZFy17lNiX
t7176fb7hH09uHDrIXzn9QfDN/vG7g5M9ozM9k8uDs8uTyyWZ1c2F9d3V7cP
N/afbovs67HHvp557OvZ8+ePnzzbP3y6s/94c/ewsn2gZVPqUkkRfLHt5g9f
gVOAEyHs68EwnBqcIJwmnOy7lH15m8y+Przryr7uDTiyL3pNbexreqUW9kV9
X0si+1rV+b7OXSXL+9Tpsyr7+s3ps/6tYWBfC4R97cMAJpe3xzz2NYjsC4Xi
hGsJhcq78C4WJEbJs7LC9nYhYivf5Kv+7EvakH1lRMi+UBkUsq9cqyHsq6Jh
X9sa9jUyu/zRv/w4bNfu9FYU8MXY1/DMMmUFXOSXz75onHj/xGJN7GtmtRb2
xaxfPPu6pLCvczd6JPb1nsK+3vbIz+nzN969dAv2+YCyr7uPrj0YuvmQsK8H
IzP9EwtDM8vjC+WZlY2Fys7K1sH6Xsi+9p9WD2nk13MWd/+ci/wiZY/lLY31
i27j//463VKnXjIEezgGJwWnBicIpwkn++6l237Yl8K+3lPYF0ymxL4uKeyL
gq9msS+a9/XHy10C+9rT5H0Nz5LlDXeByr7gRVI4Obtc3nuO7AuFSiBcSyhU
3oV3saywrrHGRPnsij8f+gqyryII2Rcqg0L2lWvVm30NeuwLHsPhYXyasK/9
BQP7mlpap+ALHu1Zn0ct+2KRX1/8+su3H45Q9nWzd/ivPvU38OI/ffv7pa2n
GvZVVtjXko59za7Vwr74skeZfXlx90b2dYVjX5duv3Px1js8+7p4C3b44Pp9
+Pjlu4+u3R/qejh659HE/eGZvvH5wemlsYW16eWN+fL28uZ+ZffJltfqcU+N
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
RrY60lqEvxFQ2VTw3K55cA8L8cSn9gQfyebR664o9hUOuGZPUCvNJK5JFKo1
lAx/dadhADvm/R331//9b28/mrwzOE0J2H2RgLEQsMFZVgUpErAwCozYwGYr
XkdIkoevg2DackgzB1Nz8s1ATCFj8Tb9t2mPK+Z3ibxLj7yemmsbidErKG/c
ZeWNE0tb46Wgh6NIvfoV6gWXrHt4Fi4fXES4lLf6J9oaWOeI4CuW8ElHleGp
0vWRvLDKC/syFLEdcacNNSwAaUhW+BWXfelODM7KmX0RybvJh9KPSTc1/ieP
HIVXDAOOfNk20a4jcYV1ESDuyJGQlkqY03lhWNmXbaIs35S2ZRB/I6AyKn3E
urXjYIKPZPPo9ZadfbETSWW8rTSTuCZRqFZRs/DXsba2T37mf3U9HLvZN36r
f+L2wBQlYN0KARNywGgvyPnK6ML6WBAFJtjAxDx81hSyxMEfoxlMw8F0KMxA
w+yIzP0jZswlwC7V32WyeMnIK0z0ko1ePvVa3IDphUmGqY6kXvco9RqYgosI
l/LGwzH6N3rj6xwRfEUKn3QUmR4/+dd5e03MtnStq3ywL1tykrvPKOkCUEZk
4ybx2FdUJFQiSuJm+9KypM6j4cTEglyOtXzOI1GOwtVVamPMnLLNtEsqYmGY
2FfkRDmeexrC3wiozIq5VvTSgZu4H7FgngYcvWmysq+IszCcUEFmEtckCtUy
Soy/GHzofvHFBKavT/zNZ6/1jFzvHfUJ2KNJSsDuWQmYWAhJo8A8GxiXh8/V
QgaBYIETzGIGkzmYkYY9U3gUh8XsiMywp/qFEuYKnV1RvEuyePFxXiHyKhPk
5SV6eUYvv7xxQ4my93s4RlCvR5M3+yfgIsKlhAt69cFwm3eJG1nniODLRfik
I8nMIqxsAa1g+WBfOq7CR0zZUEIKC8C91C7meQmQ5khAUvhgqyScRJNZFc/B
FfW2mvcl0SanQsPIkSTv82i95uqcJDqGy0QJqqsDFX8joDIs3qAiyJxBFe8j
VotT3Y/eNNnYlzv6cmVfrTWTuCZRqJZSIw1goP/66f/xYffglftDVx8MX+sZ
uUEJWP8EJWB3YxAwrxDSs4EJefheLSQPwfhySL0ZTORgehS2EzIoBYhF8DEL
13LEXBrYpfAuZvFihY125BUavfzyxvjUy7N7XfeoF1xQuKz0T/WG1Tki+HIU
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
Rq+wvJEavRJSrzNwWV/vOPmzX/wHvdAvekoAThF8pS580gnkGAmu7xl3pOg9
Homax74MiIJW0ykfM3EKN56QZAFEoy/TPnHOS3tiR44fd/MKRaIzbTGm4/zZ
rp/+wI5wx2kkY6ZGj0f0y8KYrmb6qH8ekfulx77q9/MGfyOgUCgUCoVCqaoF
f3WLJZC8Xjv5e5+AnX7/1+/8/+3d6VIiWRqA4fuaC5r78CaqZJRSS0tlR3ZE
UASXcq3qnomOnt8T4awRcwczZ8k8eXIhTTQlQd8n8kdHiwgJRAVvfOdkb78x
KLRGehVkfXipd8JX14L8Obz5s1fA1FZgwTEwey2kPQlmIph/RaTbwf5pdzC9
Sb5MYXqLMH8N02skVRBT42GqiXlZTJUxcziJLHjo/++7pfl1fW/OPXuZyypd
zmSXO9yl9u/S6xn1fJc74uX0LrN9vUleD7OSl3/QSy9vHN//pquXOPniJRAv
RHz12tivru+WPrvVy6aXLr64ehG+UsE3HVfy5UT2ZenUhenCO4J/SFm2r8Cr
8gf9qsxsBerG1msYtav7bPO+AZKkr5m3mut56Q20/M8q2Rt73qmx+c5B8us8
zv1iJHwk4Vc8eLuYMJX0AT73UF7bvhaw5JF/EQAAAKJFxqtUCtj6bmljv/ql
0Ngut/UMmF4FqXfCb5xet89ve9OH4ytZwCLGwNzdwOy1kPYkmL0nWGAYzO5g
wZEwbyrM1DA7iNlN7L+qUKkyZo6/JzierLqlApfbuHyZyxnr+tt/nMkuJ3b9
24pd3nxXcO96s329dd3Gm1Dymj3o9evx1Y/u9EG8BPoajtHV61s61SsyfFG9
0sI3HaSF99JSWkQwwbvBpxgAACDGK/NX5EiP8Hlze323vLFfzRecVZByH7Dm
sNg5rfTPaycXjdF1e3zbncqtwHwLIaPWQtqTYDKCuXuC6QhmhsHC82ChFKam
wnw1zB0Pc5uYlcWcOKaPv8Yev/sOdQ9O4FKNK5S5zFjXrNhlz3cFVzVae3nJ
5OVu5xVe22gGvcTpFSe5f/nYndy3xjfi5NcGF+KFKHWc3ex9KxxnVK/cqxc5
Er7SxTcdpIX3Uob8e917m13NsXU8wKcYAADgOZGVI70C5qyClDvhy2tB9g+a
J8XOabl3Xhu4W4Gd3+kxsPAVIb0IZpZD2nuC2cNg1qLIB6uD6ZGwwFSYqWEm
iLkTYv9y25Qdx5w+luD492/Wrwcal8lcpnR5scse7rLnu+wRL7Wq8cbtXWbK
K5C85NpGa9BrePOrOLG9iwdxktXyxqvqYFrujYvtU/FCiJfjq39fr1SqV+Rb
4lbJ+s3+rvBNB2nhvZSlZxctkr6QAJ9iAACAZ0VugP/63OFFMLkPWGXzoL5V
bH6tdPbq/YPGoNAeleRm+JO6GgNrjW86k3u9H77cDcyOYPYkmBXBAsNguoPd
mg7mbpKvU5g9FWbXsEATs7OYffzFX8n05vPyUD+K+pV/2PdpMpc31mUmu8LD
XfZ8lz3ipXqX3L4+tLAxlLzkjl7iZHYn9+3xbeP0un5yWVHLGwut0X5jsFfr
iRdCvBwLqF45xr3eBt90kBbeS9mKrV+ULyTCpxgAACChyPQxV/e4m70JmCpg
xdyeLmCNnXJbbobvLoQs98ZVOQYm98Nvn992pw96LWRgQzB7TzC9IjLQwQLz
YCaF2asjzQJJeejZMP+EmHNYZWyu46dbtwKNy5e5zE71KnbpxYx6uCuwnnFW
7/IWNgaT1y/i1HWnMnmJk3k0vKoNppX+uTjJ4lTr5Y3i5H8pNMQLIV6O9fxO
itWLca9F4psO0sJ7KXN6R3ff9QYjdnUHZuJTDAAAkFwqA2B38TNg+Z3cXnlj
v/ZFbQWmx8DMFSHlbmCDi6PRVevspn1+FxnBgisiYzqYSmHhqTCvhvmbmC+L
2YedyKKOR3NYv2UCVzBzmbEua7JrVu+6VM9LPMGp27vM9vVRyUttYn+mk5fa
0at7VmiPDpon4iSLU21dwLEsXohPG+lUr1mvONXrTfFNB2nhvQSsOj7FAAAA
84rsIfPGkGcK2OaO3gps86D+RY+Bqf3wD5onhfZIjoGptZBHI7khmJwE08sh
rT3BAsNgvg5mb5KvUlight24NcweD7OzmD7uw4eVsGYdd27dcka53MblZC5r
rMuUrnDs0vNdundN3N5lRrzMRRvFCXGTl9rOa6ST18QkLznoVeuJ07tVbIpT
/advlZjljelWL8LXW+ObDtLCewlYdXyKAQAAXmYBBSynx8D0FSEPj7aKzZ1K
Z0+uhRzItZDt01J3XOlP5CTY8Eouhxzfdib3vYtHuTG+NQwWuEak7mCBFBZd
w1QQc5qYncX8fcxLZFHHTeBwf/e71bjCmctXuqJil97CS1+r8cztXXrE6/jy
h9y+fuIubBxd1U8u1HZeY1/yqnS2Sk016FXL7ZXX8zuf0q5ejHtliG86SAvv
JWDV8SkGAAB4sVmdJP0Ctrn9+WtJ7QZW+1JoOGsh1YZgehLMXQ4p9wRrnKqN
8eWKSKeDDUIdzBsJ01uEmRqmEtNFKIjpw2QxXxyzEtnMw7qldw8mcEVmLlO6
TOyyhrvs+S7x1E6+y8s1yr3rp/ft89vW2U1jdF0fXuq9vEpded3Gw+aJOF16
E3u5trGgk1dFnNj4QS+q14rimw7SwnsJWHV8igEAAF4prTEhLaaA5dQYmLcW
UkWwnUpnt9b7ZkWwcu+8ejyVKyKHV7KD6Z3B9DyYszmYXBcZSGGBBZJ2EDMT
Yl4Wc8uYOS5nHxfhQ93D1Gpc4czljHWZya5Q7HLnu2Tv6pzftcY37t71F9Xj
Sbk3LnZOzZSXSV5qE/uaXNsok9fOp42tdKvXHYsclwbfdJAW3kvAquNTDAAA
8HqRe+C/poDFj4FZEUxOgjnLIfWeYPX+QWNw2BoW5IpI3cGcRZFuB1PrIqcP
fSeFyS3C9FSYV8NCQcxMiNnHxN/HEh3+e/ACV1Tm0qXLF7uufqjhrofO5K49
VvNdp9fiqdVPLqrHU7N3/WFzuN8Y7NX7+qKNW07yUtt57ZZiNrF/o1eN6pUJ
vukgLbyXgFXHpxgAACAtqRewRBFsc0cvh9zY9yLYVz0MVj/edzrYyO5g9eGl
3CRfp7DxbceZCpOXjNQLJE++/2oHMdPEAlnMPsZWJTMhSx+Rtz9z73BW5hpc
/Ty+/NG/fBQPTE52Te70YkbxsNX+XXo9o5zvEk9NLmlsDQ8aA72RlzPiVWy4
e3m5yWv22sbcKwa9qF7LiW86SAvvJWDV8SkGAABIVyYFLOfsCVbM7ZU31IrI
fEF2sG2vg/VlB2vKDlbsyE3yy73zikxhenXkZWN03Tz9bmpYZ3IvtwubPvQu
HmUT87KYW8ZUHNOHSWTPHvr26h5+kYHr+qe4WznNdSkHuqzMddca69L1XTww
Ndl16S5mlMNdcj1jS65nFE9KPDW5pFGPeBWb4omrVY3V9V25fX3MXl6vT15U
r2XGNx2khfcSsOr4FAMAALyFmNLy4sySMILl1IpINQxW1juD6XkwvUP+bq27
V+9/O5IjYQfNk8OWvl7kWbk3rvT1YNi0dnJRP7k8Gl4dja5ME2uNZRZrn9+p
MqbimOpj3elDTx8yXtnHgzym3tGVh/wt+evnco5Lr1vUjat5eu3PXHKsSzwk
Z7JLbd6lFzPq/bvkekY13+X2rvrGflWOeOW/yo283jh5xVcvwtcy4JsO0sJ7
CVh1fIoBAADezhsVsOQRLOctitQdTK6L/FJo6BS2U+l8rXadqbCj4wM9GNZy
Z8M6Z2o8TDaxSn9SPZ7KLDa4qKsyJo+h6mNOIpOVrKH6lf+QPzoyx/BK/Ja4
h5o4BlNxn9Xjidu4/JmrNdRjXeKB6cmu3WpXLmYsy9glnkL+sL6xL3etF09N
XqsxwYhXKsmL6rUq+KaDtPBeAlYdn2IAAIC3FpNiXhlh5opguoOtq03ydQrb
2K/pqbAvxcZWqaU3ClM1rLtX6znjYUeDA3dCrNAaFdojXcb0ofqYPmQlCx7d
cck5zM1k2iq2Zd0S9ybu87ApG5f4E+HMtVNpy9JVam4VGyp2OYsZxYPX+3d9
3tyO37U+9eRF9VohfNNBWngvAauOTzEAAMBivGkBiy8zs1PYtl4dub5bzu1V
9GCYU8MK3njYdrntZTE1J7anj3pf9jGVyFQlk6Fs3/mP42/hQ91epi1Vt3Tg
ko1L3b9cvVgyM116DaMuXRXx8OSDlLHr+cWMqSev+HNL9VpafNNBWngvAauO
TzEAAMAizdoJP5fGQsgkrSbGp81tXcPWnSAmx8N0E1MTYk4W04eOY/IoykQm
j5IKZSU1qVVqOv/Tf+hf0fcg7k0Hro39qvgTavWizFzrbuaSY13zlC5zGtM9
k7P+ENVryf0OAIBf1v80AViwx/wf57TWeXJ+96mzpv9X/jHT5wAAqyumgOVS
GgOz680LOljAZyuLqTJWlHFM9TE5MybHxmQl8x9l71C3kV1rt6TTlrwTN3C9
rHHZGq7FnDSS10rI+gsWAGDpZP1PE4AFo30BQPbiC1iKJSeQdF6fwjKXeuyy
T1HM36V6rZCsv2ABAJZO1v80AVgw2hcALIv4ApZ7mwhmp57lT2ENSybngeWN
AAAAwLvgRi0vcwEAFifbCBaoQFk1sQVkrvCTjXk8JC8AAADgHaF9AcBSSBKI
FtCFZpWisLmKVkCGTyQ+eVG9AAAAgHeH9gUAS+TZMbAMI9gqSljqqF4AAADA
+5WwfUXu9+VuIKb/39NjJ79mdgrL++7v6dH7kfzZ46w/pu7EumncbQHgHUsY
wehgkRJOppG8AAAAgA8gpfZlfm7vlO82sag99iP+XtR9+O4JAD6gJBGMDnY3
zwb+JC8AAADgI0mlfeVnXEFS3OnsoOXvWbNvN7OVAcCHkjCCfagONtf+/CQv
AAAA4ENKo325s1nuPQQnveQCyCf3R17jsu7KKl++VY72zalfAKAkj2DvL4XN
ezFKehcAAADw4aXTvkK/bdWv0HpF92feL3npK2pxo7kvVj4CQMC8HSxnXX4x
6471vLkuKxnoXSQvAAAAAEoq7SscpcztY/b1Mj+KvPP5HyMAfGwv6GDLE8Re
lrnCySvrFwEAAADAskmjfUX9rv8akPF/Mua2/t9g8AsAknlNB4tsYmHzFq3X
160A5rsAAAAAJJDSdR5DXtK+nsXgFwC8iG5EqRSnDBG7AAAAAMxvCdrXc5d4
pH0BQLpMRMq6Zs10a8n6bAEAAABYaUvQvp5f8wgAWITFN7Fbv6xPAAAAAID3
Zxna13N73QMAlsPt62T98AEAAAB8QMvQvrwNv6IfBW0MAAAAAAAAL7EU7cve
8mst33n0HsrT02Pe/RG7fQEAAAAAAGAuy9G+kmx4z9AXAAAAAAAA5rMs7et/
sflrLf/IzBcAAAAAAADmtETtS/3ssZNfsxLY2prMXnQvAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAIDX/B3y/hiQ=
    "], {{0, 407}, {1620, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->{540., 135.},
  ImageSizeRaw->{1620, 407},
  PlotRange->{{0, 1620}, {0, 407}}]], "Output",
 CellChangeTimes->{3.7741884053542786`*^9},
 CellLabel->
  "Out[702]=",ExpressionUUID->"3dc9fba1-0311-4496-8e98-380407289120"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"ClearAll", "[", 
  RowBox[{"args", ",", "func", ",", "funcWid", ",", "frmt", ",", "params"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"args", "=", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"\"\<reading\>\"", "\[Rule]", "\"\<Integer\>\""}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"\"\<rows\>\"", "\[Rule]", "\"\<Integer\>\""}]}], 
    "\[IndentingNewLine]", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"funcWid", "[", "dbID_", "]"}], ":=", 
   RowBox[{"Function", "[", "\[IndentingNewLine]", 
    RowBox[{"(*", 
     RowBox[{
      RowBox[{"dbID", "=", "\"\<FBrnXpZX\>\""}], ";"}], "*)"}], 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"bpW", "=", 
      RowBox[{"72", "*", "7.5"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"w", "=", "40"}], ";", "\[IndentingNewLine]", 
     RowBox[{"h", "=", "11"}], ";", "\[IndentingNewLine]", 
     RowBox[{"rsMult", "=", "3"}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"readings", "=", 
      RowBox[{"Databin", "[", 
       RowBox[{"dbID", ",", "All"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"readingsDB", "=", 
      RowBox[{"DatabinAdd", "[", 
       RowBox[{"readings", ",", 
        RowBox[{"<|", 
         RowBox[{"\"\<reading\>\"", "\[Rule]", "#reading"}], "|>"}]}], 
       "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"readingsDS", "=", 
      RowBox[{
       RowBox[{"Dataset", "[", "readingsDB", "]"}], "[", 
       RowBox[{"Reverse", ",", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"SortBy", "[", 
           RowBox[{"#", ",", "\"\<Timestamp\>\""}], "]"}], "&"}], ")"}]}], 
       "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{"Normal", "[", 
       RowBox[{"readingsDS", "[", 
        RowBox[{
         RowBox[{";;", "#rows"}], ",", 
         RowBox[{"Query", "[", 
          RowBox[{"{", 
           RowBox[{"\"\<reading\>\"", ",", 
            RowBox[{"\"\<Timestamp\>\"", "/*", "DateString"}]}], "}"}], 
          "]"}]}], "]"}], "]"}], "*)"}], "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"items", "=", 
      RowBox[{"{", 
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"ag", "[", 
          RowBox[{"readingsDS", "[", 
           RowBox[{"First", ",", "\"\<reading\>\""}], "]"}], "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"grd", "[", 
          RowBox[{"readingsDS", ",", "#rows"}], "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"dlsp", "[", 
          RowBox[{"readingsDS", "[", 
           RowBox[{"All", ",", 
            RowBox[{"{", 
             RowBox[{"\"\<Timestamp\>\"", ",", "\"\<reading\>\""}], "}"}]}], 
           "]"}], "]"}]}], "\[IndentingNewLine]", "}"}], "}"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"outerRF", "[", 
      RowBox[{
      "bpW", ",", "rsMult", ",", "w", ",", "h", ",", "False", ",", "items"}], 
      "]"}]}], "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"frmt", "=", "\"\<SVG\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"params", "=", 
   RowBox[{"<|", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"\"\<reading\>\"", "\[Rule]", "53"}], ",", "\[IndentingNewLine]", 
     RowBox[{"\"\<rows\>\"", "\[Rule]", "6"}]}], "\[IndentingNewLine]", 
    "|>"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"makeAPI", "[", 
   RowBox[{"args", ",", 
    RowBox[{"funcWid", "[", "\"\<FBrnXpZX\>\"", "]"}], ",", "frmt"}], "]"}], 
  "[", "params", "]"}]}], "Input",
 CellChangeTimes->{{3.774023438966531*^9, 3.7740234450515413`*^9}, {
  3.7740234936755342`*^9, 3.7740235238095064`*^9}, {3.774023561235928*^9, 
  3.7740236154701366`*^9}, {3.7740236454741364`*^9, 3.7740237497552032`*^9}, {
  3.7740238289431615`*^9, 3.7740238332641706`*^9}, {3.774023948964309*^9, 
  3.774023982577308*^9}, {3.774024054404964*^9, 3.7740241664646225`*^9}, {
  3.774024297065279*^9, 3.7740243439364223`*^9}, {3.774024524304776*^9, 
  3.7740245332797685`*^9}, {3.7740248277816486`*^9, 3.7740248503176484`*^9}, {
  3.774024882386965*^9, 3.7740249047689753`*^9}, {3.7740250148227854`*^9, 
  3.774025048725784*^9}, {3.774025261843322*^9, 3.7740252668953147`*^9}, {
  3.774025649645604*^9, 3.774025650183605*^9}, {3.774025867798688*^9, 
  3.7740258703306603`*^9}, {3.77402605317223*^9, 3.7740260533002377`*^9}, {
  3.7740301435974545`*^9, 3.7740301696382856`*^9}, {3.7740302170178022`*^9, 
  3.774030299699966*^9}},
 CellLabel->
  "In[703]:=",ExpressionUUID->"3842b88a-197e-45c4-b4ee-241ac5786d38"],

Cell[BoxData["\<\"SVG\"\>"], "Output",
 CellChangeTimes->{3.774188430530279*^9},
 CellLabel->
  "Out[706]=",ExpressionUUID->"1e104de4-32bc-4aae-86b4-c5c75316762e"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
1P7H1d2pTPyXW/q9WXxBf5HgTSckeRHdsyeVJpEuMHxKqEvpgGKduik5lwj3
I/qBIVX+5OmSDHvkb2hIKRIKt+ov5L4KNV9KmsQov1zdF3UX2C2wdl97uGw0
VtnR50RKnf7oBNhPNCec++Oc78PiENSV0o+wyX3FO6enivU9sbJ6ln9hfP4h
wr8I9ZAG3VPJ9NRv/bovkUdwX9gYG2PjLt0YdB9ORV+W4stSf8nJ9krAl67P
MV3M0TrTvg3Ki/RdBtmVZ7TuW4/MB8+98rJBfJ179eXklMjEsDISrJoCMGkJ
SLn/UYr/StLvc/WXjfgS9ZfZffWO/sKbToAhP0fzKpn9BIq+AkrOJUIfZYpZ
Uj8Zd+FRvskUxEWX59hsnUeh3kvlQyYd4ua+8q+ugCKxK/uiK5X609o7J8ll
30dqcYgspkdY/00I8pDcyPqe5Lkvy78w3v8Q4V+EWkjklm5NRnUD1H1hY2yM
jbGx68agy6hOfOXqr1R8za0lyfaTy9uZgC91PcdC5V6nzo/xM1E9zOTi5j/+
04//6NOf4Rv81d8896OfvHV9cbOM8iJ9V67dat3wM3Lc1ysvk82SZSTY6MwS
u4cf//1P8nv4wos/ODc+nXurn/2b5/7lJ29NLW7aFoDR6z/emd0I47/k9Pto
8cfy4quw/mIPV93PdyXgTSfAqArI1+dM+FFOeVivUHYuKTZAEgay/CI0A6VK
qKIY0Rik5X3ZnHR7j1CsT9J4+sqOXNxX5uri2TkxlLEkzu6LCK1yq+DK+7Wa
9yWJncIFdbkXZP0IZ8rmCrkv66uwPD3vf4jwL0ItFBFZcZOkTpflbxCDvC8A
AACNo2rxlbgv1TCEyfbLwpKOYrJ9GPC1aVrPkYsv+3SvxLdINmZsZul3Y2Mj
8vFPfHJ0eslsvfTKy+C7Cmiue3lD/sjZPPelb5YMz99agvH78/6HZ9UbyGA/
t7nV7IfsVzkFYNn+R2n9xyT+K0m/Z9OJL/4Y6q+V8uKrsP6q+xGvBLzpPAqT
onmHV1o5QiZ7i5+QCsVQ+eVhLkmlP/o6o/B/O/SRyVU3+g7FAnn1BQP3yU/p
5ZeL+9KekHXouow436kaOx/uK7dYza/7KvAISw2jlbovy9Pz/4cI/yLUQhH3
lfcZ67KvnnZfyaNT94mA7gQTDIDqsBdfyRu9k/jSlX7xJR0j8SUs6Rgk2wcB
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
p+23q1PLVWdkM6bpZpM7V8+BPrCzzjGW49k8wqXcl9090Zuzev8Q4V+EHgTu
q4upXYlg9MiA+wJtoB7xNSWLr8l88WWVbK8TX2zwJrsPz4+R7msl674k68WL
mvhvKeuVo7xmufKifJeV5loJBrtF9oN/JBirO2b3debF76cFZkKnZBIXZinB
+D3ht+h3PvHEX37+C8fPXuFRYFdbGz8dercv1F9J9Zd481X9xX+r+yqLpN9H
Xxmpv4LqLzYh2bT0pb96LfgLbzop4hJzgVQg0r35Zv179ghb7ac36z08zSXR
f5Cv8vlBVOE3afVVCt949FW6rMhXoOXRLlBMsxV1vnr/Jk7U6Ba45k7pkJO6
Mg9OzhNhv86j4Zszk3eZuY9wSfelXofTISz/wlTzhwj/IvQgvtzXZ7/zHvvt
uYnltl8B0FK7EsHokQH3Baqm/TFf4xvzF0nxtRplfJnFlznZ3iC+fhauKvil
r31TTPfi/29PbG/kP1GtF6/14r/VWS9KeSklXorvUjWX1mgt37y+vG052Mb8
U6e//7089/W9SLsJbZIZCbaeI8FEA8Zv0d999RtqGD6Pwf/BD38saUYpA1/U
koYv1CH9ntZft9nFTmWbH9m0vOhPf9mXfnWB/sKbDvAF5lLHg0VJQQ54insQ
X+6LjyMjs22/AqCldiWC0SMD7gtUilO3oxfxNbY+J4mva0s3XMWXU8AXH5OL
mx8PI+6vL26a070S90Wl2UdiR030Sq0XqbxE3yVVdlGmy8puLQWD3T02+H9P
R3bL09//rtl9JeVhaafkmuzBDJVgUhoYv0UXri2kYfix/ro0uch+9Yef+gy7
vWp7qaS/ct2XVfq9hf5iN/wa11/zG6Nza3Xpr7r/GJQFbzrAF5hLHUI26z5N
iSoaHQ96CDzFPYiYkM9/AvfVNYhfzX/41rtXJlcxMLyMb/7oFNwXaBvt73aM
xdfa+DwhvhaqEV9svPDiD9j/TX/znYNiiZGkX3iTI1+mcGJhQ7Jere37Y3Nr
7FfP/PUX1EUbM4VeGuWl9V1kNVfstcqPj76X476IZknFg6kSTC4Di5eGfOZz
/zHRg2IYvtg0ymvq9u77JvvvSQukqL+uL272hes8ruZ9s6X1V7TyI7tRE1x/
zfrRXzbBX93U+Yg3HeALzKVOIbdpEeoLaMBT3IOg7quLEb+az37nvbpPB3QP
//jzc3BfoD24djt6ifm6PL0yOrs2Nr8xoYqvrYLiy+xGxCIiM1zIfOt7r7L/
PnxlUk2zP335OvvVN777Cl3olW1szFFeku/Sma7FYFxd3CozzOKLDbJT0lWC
JTeE3R92l8QVIdUkfN4C+a3vB7d6ZGxaWlVzdffR2bFgVYIXXvwBuQSkbf9j
nv5aEPXXMtdfm2OR/lrxpb9syim7QH/hTQf4AnOpczDaL5gvoAVPcQ8C99XF
wH2BioD7Au3BvtvRY8zXpemVK5H42gzE13IkvuYC8XW3OvFl6b54k+PQe8fY
f/+n//pzKc1+YeveD/+/N9mv/utbv9ZarzzlleO7SM3VyoyJYGzmDvEjZvH1
0fe+m5yA1C+ZL8EoA/b2bz9gd+ndY2eSLsjEgF283mK/+su//gKvARt67zj7
n//8+s+Xdx5J+utHP3mL/erNoYPq+o+e9ddWULMX6q+dQH8tRvqLTVQ2XX3p
L4P7Ot0tnY940wG+wFzqKHjgf2Y1QKzMAPLAU9yDwH11MXBfoCLgvkB7aHPR
lyC+1icWNq8t3phc3p5e3Zlpi/iS+hz16V6BEuF+5nd+7wnRevHxb37v99mv
zk3MidZLW+ilUV45ZV2p48rqrIWC49R3v5Pnvr7DDx2cjHBuZgkmGbBIgoUG
7Mr0MrtLf/DH/dkw/OBOvnzgR+xXP/nFu7wF8tJkcKs//olP8oo78XthP2S/
Gp1ekgLwq9JfG3fYJUwF+ms70F8Lm2yicv11YXKpav3VHZ2PeNMBvsBcAqDp
4CnuQeC+uhi4L1ARcF+gDdQjvmZWx4J8+82ri1vXl7enVndm1m7Nbdzm4mux
evElWS+e7hVXfGWivf7uq//QF+Z6HRu+zNXNB2cu/cEfB70fz3/567T1Misv
scSLkl16zbUxLo55x7Gwceq7+83u69R3vxMJt/iUZAm2REmwbBlYphFy4/Z/
/vEb7F79xef+47mJOZ4DNjq7+sP/8mYiFZMWyL1/H6Sr/eXnnztxdjQ0YI9O
nht7+lOfYT8c2PdNNQDft/6K+jFD/XWbXQK7ouuJ/ppbvzK7yqZumzsf2eNZ
91+IIuBNB/gCcwmApoOnuAfpZfeVVMXWfSJVAfdVL108weC+QNUU6HYs8+Iv
L+y4uHV9aXtqZWdmbTcrviL3VV58rVqJr4d8JO4rzbQPc71+5/eeUJsi/83v
/v7I+KycY69YL7rKS1Reku+KTZfZcY3Nr2fGnH4Im536Tr77Co4uNUtSHkyt
BJPKwEQD9uLgPxE38PeeuHBtQczAP3N58nc+Qdzqj3/ik1eml8j1Hz3qryVS
f60E+otd+/jCJpu0HnPvDe7rdPM7H/GmA3yBuQRA08FT3IPAfXWlmuDAfdVL
F08wuC9QNfZFX75ivqKFHReChR1D8XVzZm13duP2/ObdFl/YsQ7xxdO9+F+S
xHolTY6js6svH3iN13oFHXx/1H/gxz+9PLVE1nqphV75ykvyXaTmMtiteLAb
y4dug9yg+1Pf2c/PIS02s5ZgUhmYZMDe/+jC1/e/FN3AP+5/afA1dlfVELDx
+fVX/vO//OGn/oRv+Yef+sw/v/5zcfFHUn+ZDZiF/nqwnNVfwbKPkf7aZVOU
TdSrfNnHOQ/LPrKHKFd/NT30Hm86wBeYSwA0HTzFPQjcV1eqCQ7cV7108QSD
+wKVIhV9Gd7EfXU78oUdx8WFHdd2Z9dvz2/ekcTXciC+HvgRX5qAL97nKKZ7
ieVe4Yjyqea3wjT7TU2avZP1UpSX6rtI0xVIrdmyI9d9sUNLbZKpByMlmL0B
k5LwN6O1IGP9dU8sAOMJYOF4GFflyYs/OhWAmfXXik5/Bbn3t9n5s8sJl33c
SnLvSwZ/uXY+1v2nwhm86QBfYC4B0HTwFPcgvey+uh64L1ARcF+gUly7Hcu4
r0y+fXZhx1R8bWfE14pX8aXrc8yKr/tqpn1mGUez9Vq+KSd6WSsv1Xep5ord
vSszq4XHyf0v5LuvbLOkpQRTy8ByDViyEKSagZ8YMEV/PZS+RC/6azVff0nL
Pka591V3PjY69B5vOsAXmEsANB08xT0I3FcXA/cFKgLuC1RHOyPuk5ivsTmL
hR0F8bVapfha2tGVe93PWK/N7DKOxlovstDLWnkpsisrr9gNvDy9YhiXjL89
+cK3c91Xcmg1NMwkwSwN2FrWgBUqAPOrv4Kf7z6k9Zey7GMY/HVjnOfez6xe
mm5r52OzQu/xpgN8gbkEQNPBU9yDwH11MXBfoCLgvkB1OBV9+Yz5SvPt04Ud
l9SFHXfjoq+KxJeuz9G+3CubZm9lvagSL11ll2q6LvExtUyOi8qQNjiR575O
7n8hObp4VuLZipVgTgaMJ+HzAjDRgBkKwGrTXzdV/RXn3i/x3PsNL7n3Xdz5
iDcd4AvMJQCaDp7iHgTuq4uB+wIVAfcFKqKdEfdCt2MU88Xz7aWFHZfJfHuv
4ksT8KWUeynpXmbrlXQ4ijn2qvKSrBdZ3yX6Lsl0pVJrckkdF/Qj2ebEt7+V
475e+HZ0dKHYjJZg87QEczJgdAHY1l27/sf26K80935Wzb2fXbvsKfir+0q/
8KYDfIG5BEDTwVPcg8B9dTFwX6Ai4L5AFbQz4l6O+VqkYr50CztWKb60sfbZ
cq/Ueq1lmhwNuV7mQi+6xEv0XZLsIu3W9cVknLcYfMvchscTL3w7OrpQbGYr
wYwGTErCJ1sg1QIwTf9jxfprJ9VfRO79apJ7nwZ/sUle0n3Z66+6/3jYgjcd
4AvMJQCaDp7iHqRfgP8E7qtrgPsCFQH3BarAsugridou/F6fxHyNzq2PL2xe
XQwcyFQc80Xm25sXdmyD+LIv9ypuvcgSL8V3SZoro7Outfg4Zz3Yxvnu69vf
ilRb0ikpZIipEqyYAZtczikAmw8LwOz010Of+mtX1F9y8Fc29z4K/vLY+Zir
oJulv/CmA3yBuQRA08FT3IOg7quLgfsCFQH3BbzT5qKvNOarZYz5KrewY574
emgQX4Y+R125l5P1Ihob7XyXaLoInXV14azLOPatb+a6r8iziZ2SYm5YrgRz
MmBqAVhe/6Nf/aVb9nEtJ/deCP5KOh9nVqrWX3BfoGfBXAKg6eAp7kHgvroY
uC9QEXBfwDtORV9PPPFEX19f6W7HKOZrcuXm9Nru7Mbt+a27XGXIMV+FFna0
Fl9psj29nqPa5yiUeyVde5loLxfrdTlrvRLlRfguG801MT/iMo5+8xu57ouX
h4ltkqkHSyRY0g5pacCkJHy7AjCq/5FKv69Ef9G594ux/mITmJ2q0Pm4Uabz
8Zm9z7DRfaVfeNMBvsBcAqDp4CnuQeC+uhi4L1ARcF/AL/ZFX/EGgftisNdz
15d63u04Nrc+sVBhzJeN+MpJto/Fl9TnmFPuJazhmG+91EIvQXmRvstScw2P
z9kMS/fFjnWOjbhHMuPBBAlGloHZGzBzAZjS/yjrL136vS/9ZRf8xTsfb7Jr
mSjR+cgeK/587d3b12WlX2MAAABAlrr/aQLtA+6ri4H7AhUB9wX84lT0dfr0
E48e9bHBXsw5jt2OK1G34+KWGPO1sGWM+WqT+NIGfKV9jlS6l1Tu5WS9Mo2N
lPISfVdhzaUbueKLDXYU8RzErDBRgmUywRwNGF0AZtH/SMZ/tUd/UZ2Pd6LO
xyD4a4tdHZvqTvpLtF78Kct9Kpulv+p+wQIAANBx1P1PE2gfcF9dDNwXqAi4
L+CRAkVf/K2cjwTHbsdN3u04s7ZbLOarHeJrPRRfmj7H/HIvg/XSF3qpystG
dp0Zmy02csXX0W9+QzoBnQQjy8CMBsy2AEzqf6xTf1kFfyWdj1tJ56NlkyO3
Xon4EvUX3BcAAICupO5/mmqnNTTowtAIo9Wq+6wLAffVxcB9gYqA+wIeKVb0
JY6kAMzcAimu7Rh3O+5I3Y5UzNfDIgs7+hBfUsCXQ7lXdg1Hk/VSCr1I5eUk
u06PzliOD77xDzbuS2qT1EkwogxMb8CSW+RUAEbEf/nQX67LPkrBX1Tn427S
+Thm0fmolnuJgz10Zv3VoNSv5E1nAYByYC4B0HTgvmJGBvuLMTA40jAF1svu
K6kWqPtEqgLuq166eILBfQFfWIqvpLZEfTG3LAALuh2nV0Zn18bnpbUd5W5H
DzFftuH2lPhSku3pgK94MUep3EtqctR1OBKFXhbKq5jm+ujKtDSc3Bfbhh9L
zQqTJFiaCeZqwHgLpFoAZhH/laTfV6S/3Dsf781t3mHnxs4z6nzkaz5Or7C7
YS73MjxcXVP6BV8BfIG5BEDTgfuKKey+AgZH6j59F+C+ulJNcOC+6qWLJxjc
F/BF+aIvGwMmdDuuJ92O0/puRy8xX1nx9cgsvua36CUd04Cv5Zt0n6Pa5DiX
NjnyNRxp66Uv9DL4Lku7ZTmO/MPXbdwXO4R0GqQEk8vASAMmrgXJWyDn1gwF
YET/YyH9FZvPR4T+KhH8Zdf5uMmm/ZXZ1UvTcumXrsmxi0u/4CuALzCXAGg6
cF8iraGBtJpraKQV9zSy/zIyNJj+LvyV/LPmFH/BfXWlmuDAfdVLF08wuC/g
Bcukr+S1Old86Vogw4j7qNvxatDtuJ3b7egx5stefBFLOioBX2Sfo67cy8Z6
FVBeOpd16vKU07AJupcObS/B1CgwyYDlFoDp+h+j+C9y8Uet/nroWX8pnY/L
9JqPPPReXvPR3OTYxaVf8BXAF5hLADQduK+U1HzpuhiT2rDUdBE/6nh62X11
PXBfoCLgvoAXvBd9SQVg7L1+89EzSdGX0u0oF31J3Y5V5NtT4uueJL4MyfZy
n6OwmCMv97rCy73EaC+qw9HSepl9l9lrfXhpMnfYuC+yWVKSYPkGLFsDJrdA
qgVgYv+jQX+tyos/hvrrrll/ecm9lzofV+jSr3DNx6Xtq0LoPXsc2ENhWe7V
faVf8BXAF5hLADQduK+ExGKZGhjVjRJj1hz55dd9fee/nH7j8PjOrbu6wx0Z
mWUbJKPCCwNwX6AyDO6L/XfxGa96GP7agM6niqIvdfCI+7G59QkecR92O85u
3J4Pxdeibm1HrzFfOvG1oBdfk6T40vU5WpR7ma2XpfIq5rhOXrzOh/jD97/+
NRv3xY+iSwzTSTCdAbMsAKP7Hw3p9zn664G9/ioa/JV2PvJZzc6BnRIZel/4
UeqC0i/4CuALzCUAmg7cV4yV+qI2s/xgB+HXfeUWgUh7qPDCANwXqAyD+7oy
uWrzV8LXQMlZc6m06CsZSxvPXkoi7he3ri9vTyndjkvE2o4Via8H1uKLSrbP
63OM0r00TY651steeRnslv1wcl/iICVYrgHjSfhkC2RSAJbb/8jjv2z0l5L9
VY3+2s0GfylrPpKh9+yhKPY08dKv3Ke1k/UXfAXwBeYSAE0H7iumt9wXJ/kJ
3FfXAPcFKgLuC5THpujrtMXyjoaxuP7sxanlKzOrYsT9jDbi3rS2Y6F8e1l8
JUVf5KqOBcRX1OeoKfeSmxzdrZfBd0ki68SFa67j8Nf25Yqv97/+NfGguQZM
lGCSARPXgoxaIA0FYLz/0aC/luz1V9r5mK+/igR/GdZ81Ibe92zpF3wF8AXm
EgBNB+4rxi64S8wEkz/YJPcl/QTuq2uA+wIVAfcFStK2oq/LMyujc2vjC1HR
lxJx/4CIuLfudjTm26fiS+p2tBVfS3rxRZZ7cfFlbHI0WC8b5WWQXcfPX3Ud
NkVf73/9a2S/pH0ZGG3AlAKwnP5HR/2lrPwoL/sY6y/n4K/8NR+tQu9XLk4t
taH0iz3mdf+lkYGvAL7AXAKg6cB9JSQOyyCxiG3Kh92H60UmC0b2D4RLTHr+
RAa4ry4G7gtUBNwXKIlYHGJ4jy5V9BV2O16ZXUuKvqY0RV/eux0NCzum4msz
FV/Bqo424osK+FL7HNNyL6rJ0dJ6kcrLLLuOnZtwGjbu6/DX9iVHNEswGwOm
bYHM63/kd95GfyUrPwb6a9Okv9RlH8t0Pq6qnY9U6P2EEHrfm6Vf8BXAF5hL
ADQduK+UVGz1DxArPbZGBlPdFKmvVvqZYuorrSOT0e0vcxqZD+hWp1SA++pi
4L5ARdi7L7Yl+4nH8c0fnYL7ajrtKvr63OWZ1dG59fGFzauLNyaXb06v7s6u
35aLvsKI++Ldji759lrxtVZUfAl9joZ0L6ncS7VeZKFXrvKSXNbRs+NOw9J9
8WOJ56BKMLIMTDJguQVgav9jEf21Zq+/vHU+OoXex6VfxUPvc0u/4L5AL4C5
BEDTgfsSkU3UAGNwMPhPUksJsqxQw6NefGn3KR7S7hMEcF9dDNwXqAh79+V9
OVfDoUFTsHRfZYq+ltKir42J1tb1pe2plZ2ZtVtzG3cWNBH3ay5FXy4xX7L4
ivLts+JrSlrV0Si+5IAvqs/R3ORoY71yfZeqsz4YGbMc7/39V23cV3Is8Rwk
CWZjwAwtkOoSkGr/o6X+Yl+iqr/4N57VX2WDv1xD7+c276D0iwNfAXyBuQRA
04H7ktCWVRHVVWm7Y0nzJfYstkaEn0u1X+JHxE8Maj9BAvfVxcB9gYqA+wKF
EcWX4fXZV9HXxMLmtaToa+P2vDHi3le3I5VvnxVfG7biiwd80eIrLFJK+xw1
5V6GJkfJeqmFXqryMpuuI8OjlsPSfSXHUiWYrgwstwBMaoGUC8CK6a9ljf7a
yOgvvuwjlXvvpfNRG3rvvfTLUlzDfYEuBnMJgKYD90XR4oFaogTjmVqyihoc
HHJK2hIwxYsljiursgzRYkQGvx64ry4G7gtUBNwXKIxT0Vcx9yUWfV1Nir7W
b82l3Y5WRV8luh1N+fazG7eDoi/rii96SUcp4Msovlytl73ykozW+2euWI6D
X/2KjfviRxGPrpNglgbMXn8l8V9l9Jd52Ucx+Iso/TLqL9fQ+zaXfnVs4j18
BfAF5hIATQfuqyZij6Up1KJ+bf5IYr/y5RfcVxcD9wUqAu4LFKadRV/jSdHX
WlD0teCj6KtMt6MkvpJ8+9xWR634suhzLGO9cn2XKrUOs3H6cu6wEV/v/f1X
+VHEo0sSzMmA5SaAif2PmfT7ZPHHudCA5eqvVSf95bPzUVf6xSY/Ow3vpV+6
R7hjS7/gK4AvMJcAaDpwX/WQo74oYrmlDcHP+X0K3FcXA/cFKgLuCxSjDSn3
i+t00ZcQcX9/WS368tDtKImvB4Z8+2LiS17SkVrP0Sbdi8z10hV6qcpLll2U
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
7Ta8rsiABQbv6HCQA3b4I6IALI7/0ukvdsm/DBedJIK/qM5Hcc1HP6Vf0yti
6Vd+2+Na5as95kZ+sRNjJxnG3a8UcF8dG3cPXwF8gbkEQNOB+4pJ0u/t3Bey
7uG+Oga4r86hKycYB+4LGKjafSlhX7fmNkuFfa3muC/HhsfFvIZHfcq9fdGX
GHFPdjvKMV/u4uuN3xwL0r0OffiL9z9654Mzvz42wkO9wlqvwHoFhV7nxk+c
nwiUV+y7zoxOD4/NnB2fPTsxe+7q3Pmrc8e/9Q179/X+1/axHbLdHg0uM7zA
uAaMncA7UQFYmABWUn8JwV9k56Maeu9c+nV9US39ykm8b0/boyHya+POzNou
O5Mw7j6M/OquuHv4CuALzCUAmg7cV0witYwVXUl1WMPrvqSf9I776krgvkAb
gPsCBuyD7gvUk0RhX3NB2Ne1pRti2BfZ8Fgy7MtPw6Mh5b5c0ZfY7XhQ1+0o
xnwdjrod1VUdZfEVxNqfZFv+8sjpd44O/+b42XfDXK/DH106ciaxXld5ldfp
K1PDo9Mj4zPnJmbPX52/cG3+4vWFS5Oty1OLbJx84Vv27uuDf/g62yHb7Yng
kkMDFlwpu8ZA67HTYCfDTultof9Rp7+SlR/5VdPBX0LnI7nmY7HSL/a1WiXe
W7c9kqs9yu5LX/plE/m1GEd+zYSRX0HcfRz5xR46722PdUV+wVcAX2AuAdB0
4L4SEvmlL+lKzFejy77avc4jXlqrBu4LtAG4L2Cg0qD7i1PLV8Kg+yDsa2l7
Kgj7ujW/2aawr1INj5qUez9FX/puRzXmy0Z8sd++ffgU73P8zfGzB0+eP/TR
xffPXP5gOOhwPHF+IrVeYzNnQ+XFfdeVqcXR6aWxmeXx2ZWJuZWJ+dWPvvOC
vftiu2I7ZLuNDdgEOxw76Pu8BTLUX7z/MQjAV/TXmwb9JQV/aTof/Zd+UW2P
QemX+2qPbYj8YocL4u5Xg7j7KPKru+Lu4SuALzCXAGg6cF8pgtkaUFd6bI2k
v2501RfcV9cB9wXaANwXMJDb8MjffAsG3U8HQffj8xtXF3nQ/e6sEPa1JId9
lXFfUcOjFPbFGx5T91Wg4dEx5d6m6IuMuDd1O4ZqiAy3D8TXe1x8nflV1Od4
4VBc7nX83MTJC1cT63VuYvbCtXle4jU6sxT6rtWrC2vXWuvXFzcmFzemljad
Fnlku2I7PCcYMHY4dlBeAMZOg/c/shNjpxeu/6jVXz+P9Ze587FM6VfivpLS
L5vE+8B9zVm1PXL3lW17fLCU1/Zo775WRfcVR36xB4qdwOTydhD5NV888qsz
4+7hK4AvMJcAaDpwXyKC/eKKizE4GPxn9seNNl9wX10H3BdoA3BfQEf9Qfe8
6Ms66L5I2JfQ8Bi4L5eGR/uU+5MXr0vuy77oi1jb8fBHbx/OxnzpxFdU8RUF
fL136sLh05eODF9Jyr0+ujw5PDp9NrZeV6aXxmaXJ+ZWry2sXW+tTy1tTi9v
zazcmF29Mbe6Pb9208l9sV2xHXIDFtSAjU6zw8UFYMHlB/2PcfyXlf5Kgr8O
n8p0PmbXfHQt/eLfjmviva7t8Vq27ZFNqty2Rz+RXzti5Bd3X/fYAzUTxt2H
kV8bo6H78h75Vbv7AgAAADjt/Geok2kNDWZFlwRREdY44L66DLgv0AbgvoCO
yoPup4Og+/GFTfZiHgbd785t0EH33sO+5IbHdceGR2qFR8uiL8l9pcs72kTc
G7odQ/H1hkl8BbH2QZ/jufGk3GtkfOb81bmL1xeuTC8G1mt+9drC+uTixvTy
1uzKjbm17YX1m62NncXN3aWtW+de/r69+Dr9vf3XWutsh6EBW2SHYAdih0sK
wNhpfBDor8vsxDL6S2h+fCPWX+bOx0zp1/Fzaug9ueAj/y7I0q/8tsds6Vf+
ao8WbY9eIr/kuPvNOzNrt6ZWbgaRX5XF3de11GPdL1gAAAA6jrb9G9QEWiND
Q4OZaq+gAGxopNV47RUC99VlwH2BNgD3BXRU7L6CoPtRKuh+0UfQvS7sKyn6
MoR9BQ2PS0UaHi1T7rn4Shsec4u+woh7stsxE/MVi6+fBqs6yuLr/dOXPxgZ
PR6Jr8kzcblX2OHIa70C6zWzvBWUeAXKK/Bdyzdur2zfWbt5d23n7sUfvGTv
vkZe/C7bFdsh2y3bOTsEOxAvAGOHZicQ9j+yWxHEf0n6i518ciGR/soGf8md
j0rovaH0i995tfQrJ/He3PYorfa4lG17XMu0PZaP/LKJu1+i4u5Hw7j7i1NL
cF8AAAC6krb9GwRqB+6ry4D7Am0A7gvosFnksUzQ/eUw6H6i8qD7OOxru0TY
19z66Jy8wqN9w6Mu5V4q+sos73hcTPoi1nakux25+Hr3BF/V8VdHk1bHRHyF
fY5j0+cmonKv8dmVqwtrvNZrbnV7YT2o8lq+cXt1+87azt2N3fubtx5s3X54
487Dy//pFXv3de7l77NdsR1OhwaMHYIdiBeAsUOzE2CnwU6G66+w+ivM/jo6
wk77rUOn2CUkl6PrfBTXfBRLvxL9JaV+kaVfauK9ue2RWO1xbs0+8otNOTny
66a3yC9z3P1EEHfP3VeFcfe1uK+2HRF0K5hLADQdPMU9CNxXlwH3BdoA3BfQ
Uekij5emgqD7sfmNYJHHIOh+Z3Y9DvvariTovnzYVyC+ZlbLNDxy8WVIubcp
+npLKvrKxny9+e5x9lu28a+ODvNw+1R88YCvsaDP8dJka3R6aWJuled6za7e
mF+/GVmvm3fXd+9t3npw487D7buP2LgZDqewrwuvvsR2xXbIdst2zg7BDhQU
gIUJYOwE2GkE+utiqL/C5sco+v7oMDt5dgnsQqTgr0zno33pV6HEe6vVHmdW
5bbHVqbt0Rj5dd8y8qtg3P12HHe/fps9XOxkoqUeZ7tnqUe86QBfYC4B0HTw
FBej1Wpw/yPcV5cB9wXaANwX0FGt+5peSRZ51AfdP/ASdC+FfbVuuIV90Q2P
ivtyaniUUu7loi91eUd90Zcc8/XeSbYZ+9Rvjp8NxNdHl+KMr6z4mgnSva63
wnKvte3Wxs7y1q3Vm3fWd+9t3X6QKq97j3bCsXvPzX1d+seX2a7YDtlu2c7Z
IdiB2OHYQdmhM/rrwrUo+ytc+ZGdNjt5dgli7r3Y+WhT+kUs+GiReE+2PdLu
i2x7dIn8kuLu6civInH3D7Jx92yS86Ueb1a61CPcF2g0mEsANB08xTKt1sjQ
IMFATJQANjhS95kWBu6ry4D7Am1AdV9HRmb3/fAkG8+9+gHcVy+TG/ZV2H2J
izwKQfe3tUH39u4rK76sgu7LhH1dXTC7L3PD4yF9yr226EuIuCe6HQ+eSGK+
2N7YzvmqjicvXBXF19jM8tX51SDda2Vrfi0o91rZvr2+E9R6JVVeifJi49b9
R6ODDg2PbNwM7RnbIdvtyvYdXgDGDhf0P2b0F29+vMpOkp0qO2F22kLwF9X5
qITep6VfyoKP7+aVftm3PZ6dmGdfd4dGfnH3tass9XgjWOpx2sdSj3BfoIvB
XAKg6eApFmkNGdd4zAD3BffVKcB9gTagui/2gBse/OoOjT8jnUaVQfeh+5pb
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
X/HajmtTS5vza9s85mvr9oMc8RXOgYcPH95/8PDe/Qdj/+llJ/fFPv4grBzT
6S92AlHw19o2OzF2enzNx5HxWbH0K1nwkV3gz+zaHjOrPbpEfvFvyiryS3Rf
ZNy9fqlHNuX0Sz0+dIr8Ih4K0n3duCe4rxvs9EZD91VgqUdL9xX+TWgHeNMB
vsBcAqDp4ClOoOSXUvhVRdx9vM/gMAaDJW6WtxszcF89MuC+gEfgvgCJpfsq
tMhj6L7m1sYXNlP3tZlxXys+3dcD0n0lizwG7stpkUcedK9xX4awL9V90WFf
vOFRCfv6+XsfSg2PUcr9eyd/8f5HvwpT7g99dPHI8JXj4fKOQdIXL/oKI+5n
V260NnbSbkcl40sSXw9C63Xn3oPbd+87iS822Mdl/SVkf7FDB52Pt8LOx40d
dmJJ6H1U+hWkfvEFH4O2R3Zp7ALZZUqJ91Hbo7ra4wdR26NN5Bf/XsjIL5P7
0kR+GZZ6ZNMsXepRdV/ucfcW7ov3+d6b27jDHjF2GtcC97XJHj24LwBEMJcA
aDp4ilNSrzUwGPujqNYqWkKxlXYmesv7yiorg/uKj62VbrkbxDi5r4HBY4Xd
C+m+rkyuYvgdvzpxHe4LVA3cFyCp3n2tB+5ribuvW/buy2mRR+6+hEUe76cN
jxuZoPvJZcJ95SzyKATd27gvLr4k92UK++Li63Bew2Occn/w5PnDpy8dHRk7
cT5Y3nFkbObCNZ70xYu+wrUdd+5K3Y6q+GLj/oOHd+8H1uvWnfs7t++5ui/2
8YeU/sqUft15yE4mLP26GZV+TS+xE2anzU6eXcLRkVF2OQc/TBPvc9oeD2fa
Hv9/9t60O47rzNbEj9Infu5ru2z5H6i77G6b5a7rbnm261q9iqha1XZXudq6
1VaVJReu2yrJdvvSokjZsGRREklxnsAJ85iYMhPIBBIzwQHZ74kTw4kzxYkh
EznsvWJxgZmRESciTiQQz9rvfo2RXwL7spQ9inH3MfY1veLS6jHGvtZ2Y3H3
m2Krx2eZWz1a2Ne6xL4ah3SLCexrIxv7opsd7AvqSWEuQVC3C3exKCFLPgBI
wkuiikJfweaV3SkAK9nW5Wz8SsW+fvSr68Wyr9TnCErS+HwN7AtqtcC+IK3C
x9hz585pH3V5k8ds7GtskbGvaY99LXjsa6VN7OupiX3Nre2E7CsKujewr8xN
Hjn4uqCGfQnsSw37OheyL12Hx7Dg8eObD72U+6nrD2dvjy/cm17y2jv6SV9G
05fi+ArB1/7h092DJ2Nv/Gsq8DX57/9GH6eNNOP4S6x8lKxfi571i4ZKA6Zh
0+DpEOhAvMT7qOzR1u3RHvnlneFUcfcZWz2uyK0e+bwys6+nmdmX5r4wsK8V
j33RjUbjmfbYF92AhbMv/oUA9gV1ozCXIKjbhbtYUnmYN02M2JOGfhVV76g6
tcC+oPQC+4LaILAvSKsWs6+awL72Fjd89lXVsS96rl+oNP79zd98+atfG/BE
P/zizd9MLlZV9jVXabzxq9986Sv+mt/8/iv/8buzUysbGva1obCvqsK+lmX2
VUCTR4egezXs62ycff3eY19hh8d4weP0jUc85X5lfKEyvey1d6zvVBo86Ssy
fUXVjvFSRxF8be8fjr7+Wir2NfGLf6WP00aeC/iLdhFWPgqpX8z6Vdk6YA0f
K5s0VBowDdsre5xTyx79bo/eIrKvs0mRX3ni7u2tHmX2taywr6rCvjY07Ouj
q3e/+f0f8kn7rR+8cuHGPS37mq80fiHcCN/5wSu/Pn2O7o4g7l5mX9WQfW0c
0I3G2FeZs69aZvZl/0IA+4K6UZhLENTtwl2sVZkU+//I8NCgp6HhkYKKHbU1
imBfUHqBfUFtENgXpFU72FdZYl/PtOzr0o17AwZdvHFPZF8TpepnP/9FdbXP
/MWLj+ZWNU0e4+yLNXlU2NfEcp2zr8Qmj1nYlxh0fzXGvtSwr7NK2Bf9QK/T
arzD44Vbo5+OTFx7MH1zdI4VPHop97Or9dLa1urG7tr248192fQlVjs2GaRi
GV8cfO0cPNnaO9zcffzw5+nY19gb/0ofp43Qprzax1jlo2z98hs+7tIgaag0
YBo2K3scnaMDocO5EHZ7vHj7LOv2KEd+qezLj/wyx90XyL4eCeyLporKvmKt
HhX2xcsef/7Lt9VJ+8avfiOxr8nF6ue+oJne9CK9ZWJflZ1ndHMteexrrrpD
A5v02dd3wb4giAtzCYK6XbiLj0v6dK52sa/wbyH+ynGxL2kYdmFl08qJ7KsD
x4yVu27ltOyrwGGo7Mt9y1Cr1Ur29V169J702Bc9jC/U9pY89sUKHhX2dX9y
gc+Kf/eMXhsBBPjpa2/w1+9PlUL29Xc/+smAZ5u5fn+S1zxevTfB7TR/+w//
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
YndnX9mMONbhKxtKw75iRxfwkOnhGLpJPV2t8VlpQthMb6thXBJtSltoqL6c
ZxeOt3+2c+K0U01qmarcVjD8RggUciURHynsK4Jfucoek0dh2LxQlWkvkLQJ
7KvHBPYFtUFgX5Aqd/Zl+UPGUfRInpZ9/eLN3wx41Y6cAIB9ZWZfz93Yl6Xg
kUvKvTexr+da9nUYY19TnH1NM/Z13WdfYzH29WFh7OvC8bGv5cYhTcWJpRp3
fJ3+w/np1Y2w5vGdYVbP+9nPf7Ew9rX5mAeL5RTYV4cpwSQjODVO8oqkyGCh
TaLuV+WeS5Ivx2x48f7vHphkCX6y9Bp0vp7ZuIb2U2b4lYZ9GQeUORBdJETu
Hqd07CvRrJaffeXZhePtXyj7SjrtWuX8HsJvhEBaqNVx7Cvu8orJvQUl2FeP
CewLaoPAviBV7uyL/tpIu+SseZTAF9iXK/t6DN9Xx/m+/u2/vUXT8r+/96HY
55GmLk1gjr9+8avfFOX7itU8Lnk1j+lvXrCvDlPsWTLs/6Z97LR+ut/hV/65
FCMEGtojwi9LrJRFiYlJqT1cGdOXkmO64rMuBfuyjChjbaZoI7OFsDvtxPK2
parQPmT3kWTeReKeHTPFUjRCSDztAxm+r5KE3wiBuoV9eWuNDA8NRgTMy+VP
UYIJ9tVjAvuC2iCwL0hViryvDz5oJ/v6dwV8hezr7370E3prttJQ2dfUysZA
0Oex89lXyqz72++L7OtBkPc1F+V9le15X17g19PnRy3P+zqy5X2V+zLv6z95
pq/J5brKvma9Nqa+9Yum94/Z9J6vNFT2teCtqe/zaM/7Snnn0s0O9tVhMrhh
HKFGa5Onu0n551JCtn0MfulogmuIlxN+cbucudGXWQ5tELXH4nR0jnxk2khg
zDvSNXpM/lS4w1iA1bTb+U01kmy7MChtnr7jrHI77Vm+r5KE3wiBtGnxbc/7
aovAvnpMYF9QGwT2BanqTPb16mtvDCjgK2RfP/XeHZksqezrztg8vfWTf/l5
B7Kv1vR5XGR9HheFPo87afo87h3Wtw/U7o2m2SIVPHL2RRspos/jdG/3eeR/
7pe3n6nsixb+LmdffHrfnyqp7OvBVIneorsjdZ9HsK+ul8FrIz9LTr968iRv
w+YGJfpOBcwlbXdCnefF74cnXTNXd01xvq8Woi83sqGZvMX5vsSSPk03U/c+
j9nH4LZ2tpGk3IXT7Z9rJMqAEk472FdLFcGviGtJ7Eu3ShcK7KvHBPYFtUFg
X5CqTmNfk4vVL3/1a/SH0bt/+kgCXyH7ev/CNVrhrdPnVPb15u/ODniVZbyz
noV9zVa2E9jXfNXCvjj+cmJft0Zd2Rcve5TYl7fQi39g7OsubYS2+endiWsP
pm+Ozo1MMvY1sbg2u1pfXNta3dxb3zlsHDzf8djXfpx9eVyq+fz50ZOnzw8O
n+4ePNnaO9zYeayyLy3+UsEXLfRx2ghtijZIm33u7eN5nH3te+yLhtQ4eEbD
o0HSUGnAE5x9TS7SgTD2dXfiE5993aWDpUMOD19mX5/cLJx98Wuag31tu/i+
Kjsa9iX5vt6/yKb326fPqezr16fP+beGjX0dMPZV5exrA+yrZ5TU/01+qo09
cmZOse45FTGXVChkRD3WS5ZwMYwXLW3eV96sL7scksB0JqBi8r4couwSekzq
92F6n3mdOFzS9la0Xw63keTZhevtn+mcaI/E4bTbvq8yCr8RBAlB8oO8iFBk
X2Xh7dYUPLZLYF89JrAvqA0C+4JUHRv72tGwr8nF6ue+8EVaLt24t6GAr5B9
TZSqAx4rECK/fPbF48Qfzq7mYl+ldRp5ZvYV4q+07Os9hX2945Gf0x9cfvej
67QOfeTDa/c/ufWItn/1PmNfdycXH86u0AmZWa2X1rZWN3bXth9v7j8L2dfB
s+ahV/bI2ZcX+XUkRX7VdNavMPee/uWLuoIu7OvoKGBftNNDr+AxZF80MBoe
DZKGSgOmYdPg706W6EDocC4x9vWIDpCxrwu36JB905fCvt5T2Nf7l0f07OvW
aMi+OPjKzr4W1vKwL5739cePr4jsi89eKe9rYpFNb7oLVPZFL9JbdJvU94+0
7GvFY18LHvua9tjXGNhXzyj2vOkH6LyqPGDGk6f9mJ2s6eE9qCLmksK2zJnv
uvc1lyjBGiX1ebTsWae86Eu7Dy1/ix1ZMCENrRuL6PPoFmMnruXtx+GGcCBz
/iURh5x0NdxGkmcXrrd/lnOiPQyX0277vsom/EaIKd5GMYzUGhyMxct3N/ny
2BdX+ArYV1cL7Atqg8C+IFWtZl9jjH1t0GM4PYwvMPZ1sGJgX/OVTQ6+6NE+
7POoZV9h5Ne3fvDK9fuTnH1dvTfxl1/5K3rxb//hH8vbzzTsq66wr4qOfS3W
8rAv0folsq+PFPb1/uWRGPu6ILCvj67L7Ov8NVqB1v/w2v2Pbz66dGf86v2p
G49m70yUHsysjJcq0yu1hWpjpb5b3TrY2H+686S5G7AvqdVjM172aLF+2ZcH
//YzbvqSCx6VJo80jF2PfW3sPaXh0SBpqDRgGjYNng6BDoQOhw6KDo0OkA6T
DpYO+bTEvj667s6+PjKwL36NMrKv0ror+6rL7Cvs8/jm786Ozpc5+5qtNMI+
j3OVRjS9vcivb//glZsPJvnMv/Vgkvsh//7HP2G3hol9NcC+eli2BGzhUdLi
1+n3gsdmQXNJuhLqaZVWkGGCzVIlbsw1GsxxsCkuf7K1TLuGa45/+pU1cu6H
aF7ReEbMvNCy11Q2NctIHHehv7COt7/bSLL0anBK7Eefx4IV1TXm7KbYuYLv
q8cE9gW1QWBfkKqWsq/qTClgX42IfTVk9rXusa+fvva6/S8qUggH7k2WPvv5
L6orfOYvXnw0t5qKfU2vNiL2tVS3sC+Ov0zsSy17lNmXF3fP2dcHV+5F7OvS
7T9cvBW1egzY15kPr4atHum/9O7wp3f+fPXexzceXrwzduXe1PVHs7fHF+5P
L48tVKaW1+crm8u1Hb/V42Gs1aNc9nh09OTZ84Mg8b6xe1jf0Vu/LOCLPkIf
5Cn3tCna4PMjTcFjFHR/6Dd5pEHSUGnANGwaPB0CHQgdzkXGvh7SAdJh0sGe
CdnXh1fPKOyLThedNDp1Ifv6QGRfNx5a2BcHXxb2xa+1nn0t1miSyOyrksy+
aDl/5S7HX5JoJl+8cY+bvvhyf6rELV6SQjLsxr4aNEgaMN2GrWNf7fmawpNO
IDFdWniQNNfEWdbqTxUzl+LP/5oTG7sESe+LFynBQeavdSIFzkodHd90QV+m
dbRkRB98ZkpOe9XNp5aIzrTFmLaTrd24Ogb9jlN33LR92GkXDulq4oflA3EZ
iWYXaU674/dVeuE3gk5l3khRhGCDaZspdrDAvnpMYF9QGwT2BWnVcva1HLCv
dc6+DrXsK+HvKU+R9Wu/OVdpvPGr33zpK1/jb/3lV772H787O7WyQRvPzL4m
MrEvU+RXyL4+NrGvy3eHP9Wzr3fj7It+OPfJjeFLt+mDtKmLt8cu35u8/tBv
9Tg677d65HH3UuRXWPb4NCx7DKxfPPWLVz66468H//azsNqRJ31x09dRaPrS
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
c5StMvb1uFTfn1/bnWHsa3PcY1+V9OzL5dsA7AvqRmEuQVC3q3/vYpF8DQ4N
j4wwD9ighn7J3KursZcnsK8eE9gX1AaBfUFa3bp1q0XsixZ69B732NdMZYse
yUse+1rdeuKxr2ci+/LwV2b21dSyr1jcvcK+Zivbevbl0OpRZF+p4+6tkV8J
ZY9Ct0fa7Kd3J67en77xaO7ORClu/dpa3dhjDR/3nm4fxiofNfgrImBHz58f
+RDM42DR8sxHXszsFdi9eLi9CXzRTmnXNAAaBg2GJ30Jpq8SDZsGT4fwSdjh
8dJtOkB7waMt7CtH0H3IvkxNHmlK0MSgySyzr8oWTSQt+5KaPCrsq5mRfbGV
dexr64nAvrZohJx9Zbhtwb6gXhXmEgR1u/r2Lo7QV8zjVR4ejL0c/d9aDtld
AvvqMYF9QW0Q2BekVWvZ18IaY18rnH3tlGr7Sxr29by2l4V9SdavkH3xyC8N
+6or7Cve6nFiuR5av+zsq6i4+yjy61I88ktT9ih0e/z0Lku8v8kS72PWr9nV
8VJ1eoU1fFyqbZc399d3Dv3KRwl/CcWPEgFr+lDr6LmHwtji/XwUvC1SL7nU
UQBfQbXjIQ2DBsPaO/pJX3HT150xOpA/X71PBxV1eIwXPL4bL3hkYV+XksK+
cgTdm9gXN33RJJGbPErsq65nX2HYF2dfMvhKy7542FecfdHNRbcYjYRGNcnZ
18Ja69gXfXW05zuqb590oMKFuQRB3a5+vYsjpiXndoVQbHC4LHjDmDWsF7gX
E9hXjwnsC2qDwL4grVrKvh4x9lWjx/CZ8tYcY197SxsB+xIivwL2deTKvnRl
jwnsS2r1WG15q0enyK8r+sgvc7fHWOK9YP3yUr+mmfVrcnFtdrVe4pWPjf3a
7qHf81GHvyQCFkKwo/gkORKQl0S9jODr4BntmgZAw6DB0JBoYDQ8GuSdcZ70
FZm+wpR7OkCXgsco7OuKU9hXwU0el5Umj1WlyWNa9nWQiX3t8g0G7GvjMd1i
jH2VOfuqPcrKvkxNHsG+oK4W5hIEdbv69S4WCVf8nbjTq0eqHOMC++oxgX1B
bRDYF6SVC/uiB+HM7GtssTa5sjFd3pqr7iww9nWw0pDZ17oz+7JEfknsq7xt
ZV9S3L2VfbFWj85x9y6RXx/GI78sZY/vxsseZesXT/0ambz2YObm6NzdydKD
mZWxhQqvfCytba3Ud6te8FdDh7/C+keRgIUQTF2eqdTrub8dCXw1GPjyejtu
7NIw/GrHhQoN767f3nGGhk2DV01fp1XTl0PBo2PYV4qg+5RNHmX2FWvy+DRz
k0cd+zqS2Rfb8rMVxr4OGPuqcva1QQPOwL540L2JffGvArAvqEuFuQRB3a5+
vYtD9qW2a4xH4Pca92IC++oxgX1BbRDYF6SVyL7sD7z0UJz2Obo6U2Lsa3lj
utxg7Guds6/DcgvYF2/1KLCvZxH72vTZV+pWj25x9/bIr8xlj47Wr0t3x6/c
n7r+cPa2WPm4XJsrb3rBX3r8JRrARAL2NM7BRN7Fl5B6iXYvLfiiXXsxX5s0
mHi14+wV3t7x1iMX01f2gkdz2FeKoPs0TR4N7OtZ4exrXWVfjUO6uRY89kW3
G42Tbr3MTR7BvqCeFOYSBHW7+vUudmRf6ru9oPDwwlfAvrpaYF9QGwT2BWnV
BvY1sbwxvdqYrW4vrO8t1j32JbR6XDe3eszAvrStHpdaEHcflj3a2Zd72WOs
26M58V6wfvkNHy/cHv10ZOLqA6/ycXzh3vTSI6/nIw/+WlzfDvAXK37k0fe7
TyMDWOQBEyCYaQmRF6dekd0rCLfnpY4B+PJjvmgwNCQamF/t+GCaBnwhaO9I
B6I1fYkp9+fipi/3gkeXoHuXsC8WdK9r8jibusljOvZlafIYsi8P9tJUP1zc
OKBbjMZDt9sE2BcEKcJcgqBuV7/exU7sqzfJF3xfPSewL6gNAvuCTGop+xot
rU8s16dWG7OV7fn13cX6/rIz+yq+1WOauPtRhX25R37JZY8e+3Iqe3SwfkUN
Hy/fpe3QZlnofVD5yHo+esFfE4sR/lrZ2K00DtZ3Djf2n249fh4awHwCFodg
PgeLL4/jyOsg8HqFdi/aLG2cdlHxSh05+JpZqdEw/JiviZJf7ehH3D+iwdMh
0IHE2jvaTV/2Do9hwaMQ9sXBV+age9H0lTnovrAmjwL7WouzL9oj3Vw0DBrS
FGNfrMljS9lX276g+vVJBypemEsQ1O3q17vYhX31KvoC++o1gX1BbRDYF2TS
64K0D7y3s8bd++xrqT61uhmxr83HAfsKWz0G7KvNrR6d4+4dI78ylD0y69dl
XeK9wfrl9UC8/O75a7TO8KU7QeXjo0t3xq/cm7r+0A/+uj/D8deaj7+87K9K
Y39t+3F9j9U/bh8eSQRsX3CCmZZwNZF60aZog7RZ2jjtgnZEu/MdXxx8zSzT
kGhgNDwaJA01rHakQ6ADocOhg/q9B/fspq8o5f5y3PTlXPBYVNhXnqD77OyL
B93H2BcPun9KtxXtfX6Ns69NGm029uUS/Qf2BXWpMJcgqNvVr3cx2FdMYF9d
LbAvqA0C+4JMah37ooUewMeX6lMrmzOVLXowL3nsy2/1GLGvsNWjM/sqPO6+
ZZFflrJHU+K9g/Xrylmp8jEK/pq5NTYv4C+e/cWi75drO+XNPVb/uHO4sfe0
cfA8JGC7Ac4SOZi0hCvsxqjXc9oUbZA2SxunXfBwe9qpCL68mK8ZL+Zrgob6
0Y0HYbUjHQgdTrLpyyHlPkPBY8i+9AWPWvalhH25B90X2eQxxr6eMPZV259f
26FRTbEmj4x9ZbhhXb4HwL6gLhXmEgR1u/r1Lgb7ignsq6sF9gW1QWBfkEkt
ZV+PFtboMXxyZXOmvDW3tlNirR4D9iWUPdaON+4+X+SXU9lj3Pr1oTbx3mz9
Ehs++qH3fuXjrT9dvhsFf92dkPDXozkWfT+1vD67urFQbSytb6/Ud8ueAay2
ywnYsy2PgPkQzONgIgrzYddT/12+5pbn9WLUa/eQNlX27F60cdoF7Yh2N+5l
fEngi4ZHg/Rjvli14y06hDNBtaO2vaPG9KWk3H8YN32pHR4zFzzaw76koHua
Wu0JulebPK6yJo+PWZPHNd7kcXN8KUuTR3f21bawr2b/PulAxQtzCYK6Xf16
F4N9xQT21dUC+4LaILAvyCQx7r4V7Iu1elzZmC5vsVaPNb/VY6VlrR61cffL
lrh7a+QXL3tUI7/SlT1arF9XU6R+iZWPXs/Ha7znox/8xfDX2Kd3J66G+Itl
f7Ho+7GFyuTS2sxKfa6yWVrbWqqxAHxWArnFQsDqu0829j0I9pg5wbYPfcAl
Lt7rR7QCQ177T+kj657XixU5buzSBktenSPtgnZEu2Pga3qZBhAHXyzf3o/5
8ns7XmPgS4q4d0z6umo0fWUueOTsS1vwmBz2VYvCvljQ/ZYadH/UliaPW3S7
0U0H9gVBkjCXIKjb1a93sQC4ypIsb4k67iPIoX5mXwOBjncYxQrsq3PUkxOM
C+wLMqmlrR4fzVf9Vo/loNXjRopWj5nj7l0iv+aqO66RXznKHjWJ9ybrl5L6
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
fZ9ultnK9hQreKyPZTV9uYd9Ha/pqwn25UsqBTMV073Ei54iD4tj2HV/KPdc
knw5Zp+R93/3TCZL8JOl16Dz9cwWuK/9lBlipGFfxgElsRqjREKk89gVwb4S
zWr52VeeXTieE6cjNcvpi8h5tSwC++pD9TP7Cm/i4x1GsQL76hz15ATjAvuC
UqkdZY+pE++Ls34J+Cuyfimh9ykqH5XgLzH3Pg/+MtY/6kogtQTsw+NgXx+a
qZdU5KjavaQ6x1TgS23sqMZ8jYkxX9ZqR1vE/ZZU7dg601c85b7GTF8zLOXe
L3jMdvfxy+Ri+gL76gSFj46qLSj5WdItkKgflH8uxWCBhvaIj/yWWKlEuOHk
r3K8nBm5Q3JMlykeKpF9WUaUsTZTtJEl57xnZV/WomL7kN1HknkXjudEdzDO
E8PxiyjX91WSwL76UGBfA72FJsC+Okc9OcG4wL6gtBJRRivYV8sT7zXWr6bJ
+uUSeq+tfNQHfwW59y5tH1X8pW3+mIWABRDMRKgcrz7pl7/85fnz5xcWFugt
+vfixYtvv/22jX0JyCst9VLBV9jS0QV86Rs7JsV8GasdEyLuJdOXHnwVYvpa
5qav1qfc3+6kgscm2Neq5kky3bNkkc+d3a38cykh2z4Gv3S4wzXEywm/uF3O
3OjLLIc2iNpjcTo6R8pzxQZ53PO+HD4V7jBqTsmi8d3Ob6qRZNuF4zmJ1ko9
MRy/iHJ+XyUJ7KsPBfY10FtoAuyrc9STE4wL7AtKKxf2lafssWlMvD/kVEFn
/dJZZZKsXw6Vj0+1ofeJPR81wV9K7n0i/lIJWIi/7PWPJgKmQjAtnnr77bcd
r/7p06e167z//vsm9qVBXmbqpQNfMbsXB18q9XICX7p8+4nlIOYrqbdjtoj7
rKavZmD6OlJNX0vc9LXGTF85U+7dCx7BvjpBdiOI8ER5ZfCll3inNzco0Xcq
YC5puxPqrEZ+yz2JdrjamorzfbUQfSV3T4y/3gLfl1jRq+lm6t7nMfsY3NbO
NpKcA7J2eM2Bvix6QSR11tWcdqkT2FcfSswTC1/sE/bVkwL7gtogsC8ordpQ
9qhLvN9f3jxc3XraLutXcui9vvLREvxVWn+ktH004S+TAezaQ2P9o2wAcyBg
Wjz13nvvNa38iuuXv/wlt3vRmvQzf/HMmTN8kvz2t7/VfiqRel0wUq90dY5a
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
fuWveHLgN7/3w1/9f+9OLteNBExbAql6wEICFreBSRBMKof0OZiCwkw0LOOi
ki4PdsV4l1jYKCIvxeglptm//c4f6RyaqNfYQvW1of/4H798kp/ql7/7X371
2zMTSzXV7jW9uuFdlK/xNb/1/VfeOn1uttIw2b0ygS9DY8dYvv1jlm+/Hubb
FxDz5WL6ksBXd5m+mnjSgYoT5hIEdbtwF3eNArhlKmtMej9STvZFD7w/+tV1
lwWPxu1RqbyF0w61WmBfUKv1elyJ1q+CKh/rUyt+8Jefe7/xWG37WCT+Mtc/
ji1UPvv5Lw4o+sxfvPhwdlWTACaUQDoSsKgQshqzgekhWNwPZkFhBSw62KVa
vCzIS+rheHt8np89iXpx8DUytfSfPvcFy6kOwdfofPkzuotCV2q8VG0X+PLz
7RfoUvKYr5XNiaX62OJ6zpiv3q525MKTDlSUMJcgqNuFu7hrFNi+jL6uxBUC
5WRfEAT1ocC+oDaonaH3zVjwl5x7r7Z95PirlgN/JcZ/Df7oJ9xWdO3eBK9/
vHpv/Jvf+yG9+Lf/8I/aFpCaEkgzAdPbwJRyyIiDJaEwmYmJSxxqSYt2IzLs
MvAuqbYxhrzW/MO8M77wP3z28xxSSYH2vMjx//j7/4t7vS7fGeMn88rdsW8E
p1qMtT/1f/5TeFH4Zbp+f/JbP3iFXvy7H/3Evc4xEXzxxo4a8CXl21d4vr0f
85UffPVwtSMXnnSgooS5BEHdLtzF3aJkW5ez8QvsC4KgtAL7gtog99D7Qiof
aRlVc+8Z/jqIt3308Zdv/WoN/hovVQcGBr70la+tK/Ffn/mLF+mtqZW62gJS
S8CkJHwhCkwmYDYIpnIwAYXFaJiZiVkAl4Z0aXmXmOVlcHmFoV4s16u2d2ci
Al8kiXrRcn96mV7/n/7nk2ozx+BUb/B0r9H5Cv33L7/ytbU9OdaeO/TmKo0C
wdd6HHwJjR0PGPgS8u3HF2s0dVtd7RhC5u41fTXxpAMVJ8wlCOp24S7uFoF9
QRB0jLo9XnnnwpS4lMpbxz0oqAeVtvIxJ/sKgr9qk8sb06ss915t+9gG/EXL
O8MfDQwMvHX6nNr/8T9+d5be+uPHV6QWkNkImNYGJkMwAweTUZgCxFIsynZU
2OXzLhfkFYR6/ebMMEdeP/vFm/wHNdD+d+99QK//6rdnQuoVFjm+6Z3q4Y+v
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
z81rXHxIAsQHn8/OAypwgwH96vT0NPgAmB76+rt/+MXI9MrjuTWrgLUWt49X
9k7XWuebx2+2Tz+rLGByM/z0GJjcD78ogtkfDZkbBrM7mF4XGaUwvUXYD3+J
atiPcQ378a9mPMxqYtbxZ7uPlR3vrbpltqY3R5S5TOlyxK54PWPcu8ze9WbE
64tv4oWNVvLK7+jlGPSKq9ehZ/Xaas2s70+u7Ii3Vby5I9PLw88WMqNfdT/M
kfAVFr0CoXAvAb2O9oV+VP0hfIQJdIAbDOhnneSv/EdACnfu3Ln/eOrh07mP
ni+OTq+Mz61NLG5OruzMrO/PbbUWd45X9lUBK58BsxZCJp8Iaa2FfP1vH0wE
sz8aMtoTLO5g1qJIvTnYn10pzNQwuZwwmg374S9JE/uTylNJGbMSmapk0fFj
5kh9swlc+khnrqR06cmufOzS812qdyV716sRL7l9vXjhjuSVWduoBr3yW9m3
3vzOZ9ZLVq/GzsTS1vj8unhbxZsr3mLxRpvRr7bHvQhfAdErEAr3EtDraF/o
T0Ufwqe7BBsxoUPcYEBfy+cv/3Zxll4CeevWLf0/7j0avf94OipgMyvj8+sT
S1uTDVnA5nUBS1ZBqs+CPPt879W7/fPfHFx80VSb4afGwNK7gdlrIe1JMBPB
9DCYs4PpdZFyJCwzFWZqmApi0XiYNSFmypg+vvY7vkrqVhy4osaVZK4vv/uv
pHSlYtfPUezS8126d33zg713/Wdx7zLJK7udl8egl7js4uL7VK+xmcbHk0uP
JuaGHk+Lt9i86XcY9+oO9AqEwr0E9DraF/qX/tw8K1EM8jmLCIgbDOhnHa5/
zBQw497w6ND49KOJuY8nl8ZmGk+sAqZXQUY74R++3jp5W7gQMt4PP7MW0p4E
s5dDpjvYd/kOlqQwayrM1LBoNizdxPTxpYljViIrO5Jvjh/k2+iwMpdVusxk
Vz52RfNd3+uyl+pd+YWNajuvTPKKBr0KljeKiy/ego2j16upfb2sWa+oes0P
jc/It9WlVjIlfF0GegVC4V4Ceh3tCwAAwKnD/FVUwO6OPh8an3k0Ma8LWDQD
trKjd8Jf2D5a3n3ZOHi1LgvYJ6kCpsbAsruBqbWQMoLZu+KbCJZeEZnqYHpd
ZJLCrKmwdA1T9emnVBOLspg54j5WdURp6w/Rg0SBSzUuk7n0NvXyBL4pi112
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
AAAAAAAAAAAAAAAAAAAAAAAAAACu0/8DNzYrRg==
    "], {{0, 448}, {1620, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->{540., 148.5},
  ImageSizeRaw->{1620, 448},
  PlotRange->{{0, 1620}, {0, 448}}]], "Output",
 CellChangeTimes->{3.7741884329942784`*^9},
 CellLabel->
  "Out[708]=",ExpressionUUID->"762eb69a-7683-417a-9ded-b8b098de16a6"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"ClearAll", "[", 
  RowBox[{"endPoint", ",", "funcName", ",", "permit"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"endPoint", "=", "\"\<live-coding\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"funcName", "=", "\"\<gauge-grid\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"permit", "=", "\"\<Public\>\""}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"makeCD", "[", 
  RowBox[{"args", ",", " ", 
   RowBox[{"funcWid", "[", "\"\<FBrnXpZX\>\"", "]"}], ",", "frmt", ",", 
   "endPoint", ",", "funcName", ",", "permit"}], "]"}]}], "Input",
 CellChangeTimes->{{3.774024211766733*^9, 3.7740242474837255`*^9}},
 CellLabel->
  "In[709]:=",ExpressionUUID->"39443aab-17fb-41ca-b0d0-096d80bf5e57"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"CloudObject", "[", 
   TemplateBox[{
    "\"https://www.wolframcloud.com/obj/mitch/live-coding/gauge-grid\"",
     "https://www.wolframcloud.com/obj/mitch/live-coding/gauge-grid"},
    "HyperlinkURL"], "]"}],
  CloudObject["https://www.wolframcloud.com/obj/mitch/live-coding/gauge-grid"],
  SelectWithContents->True]], "Output",
 CellChangeTimes->{3.774188448323279*^9},
 CellLabel->
  "Out[713]=",ExpressionUUID->"3dac28b4-cfcf-446a-a38b-a49a33dd7c6f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"url", "=", 
  RowBox[{"URLBuild", "[", 
   RowBox[{
    RowBox[{"makeCD", "[", 
     RowBox[{"args", ",", " ", 
      RowBox[{"funcWid", "[", "\"\<FBrnXpZX\>\"", "]"}], ",", "frmt", ",", 
      "endPoint", ",", "funcName", ",", "permit"}], "]"}], ",", "params"}], 
   "]"}]}], "\n", 
 RowBox[{
  RowBox[{"session", "=", 
   RowBox[{"StartWebSession", "[", "\"\<Chrome\>\"", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"WebExecute", "[", 
   RowBox[{"session", ",", 
    RowBox[{"{", 
     RowBox[{"\"\<OpenPage\>\"", "\[Rule]", "url"}], "}"}]}], "]"}], 
  ";"}]}], "Input",
 CellChangeTimes->{3.774024272158733*^9, 3.7741884627113686`*^9},
 CellLabel->
  "In[714]:=",ExpressionUUID->"5e39e300-f22b-4ed8-88f0-d8b6fe42ca4c"],

Cell[BoxData["\<\"https://www.wolframcloud.com/obj/mitch/live-coding/gauge-\
grid?reading=53&rows=6\"\>"], "Output",
 CellChangeTimes->{3.7741884739563446`*^9},
 CellLabel->
  "Out[714]=",ExpressionUUID->"7363b03d-2ad0-4fe0-a955-a89053711d62"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Upcoming sessions", "Chapter",
 CellChangeTimes->{{3.7638952926466093`*^9, 3.7638952984445906`*^9}, {
  3.7639024836480412`*^9, 3.7639024948250484`*^9}, {3.773237263330803*^9, 
  3.773237277552941*^9}},ExpressionUUID->"a8231bc6-a2be-43b8-b5ad-\
045d367a75d2"],

Cell["\<\
- Add NodeJS (+ Express) to the mix
- Introducing global state management of API requests and responses in React
- User managment
- Security
- Encryption
- AWS serverless (NodeJS)
- Sockets between React/Node and WC
- Making WC read, write, listen, and speak\
\>", "Text",
 CellChangeTimes->{{3.763895311183606*^9, 3.763895404183589*^9}, {
  3.7638955300315895`*^9, 3.763895581598591*^9}, {3.763902220666043*^9, 
  3.763902252925053*^9}, {3.763902357468041*^9, 3.7639024548940425`*^9}, {
  3.7639024981630635`*^9, 3.7639026050470424`*^9}, {3.763998374709749*^9, 
  3.7639983804727407`*^9}, {3.7730598740551395`*^9, 3.773059928816169*^9}, {
  3.7732372166076655`*^9, 
  3.773237238754826*^9}},ExpressionUUID->"da94c342-84e8-4745-9feb-\
29a8dc81f6a8"]
}, Open  ]]
}, Open  ]]
},
WindowToolbars->"RulerBar",
WindowSize->{931, 917},
WindowMargins->{{Automatic, -2891}, {28, Automatic}},
FrontEndVersion->"12.0 for Microsoft Windows (64-bit) (March 17, 2019)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 483, 10, 276, "Title",ExpressionUUID->"7d907abe-a0ba-4b39-905d-46d65bf1926e"],
Cell[CellGroupData[{
Cell[1088, 36, 162, 3, 67, "Chapter",ExpressionUUID->"cbb3bda8-dc2b-4eac-8dfb-a802d8b0bec1"],
Cell[1253, 41, 216, 6, 56, "Text",ExpressionUUID->"4f1d6671-dc53-4a50-bed1-bbc2202ae343"],
Cell[CellGroupData[{
Cell[1494, 51, 308, 6, 44, "Input",ExpressionUUID->"721224c1-4e5a-403f-9de2-be954c80dcbb"],
Cell[1805, 59, 545, 7, 32, "Output",ExpressionUUID->"682ead1a-f060-4c23-a60c-a10152501725"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2387, 71, 257, 5, 44, "Input",ExpressionUUID->"fa87c054-4986-427c-970b-da9bebd5f4c6"],
Cell[2647, 78, 505, 7, 32, "Output",ExpressionUUID->"2d54e654-6749-4a94-8136-8ea862e9454a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3189, 90, 1137, 23, 83, "Input",ExpressionUUID->"bf085ee1-349b-415e-bf4b-e8df1a01ea50"],
Cell[4329, 115, 318, 6, 32, "Output",ExpressionUUID->"1a796059-7345-4236-926a-c6644cc2f7e6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[4684, 126, 153, 3, 67, "Section",ExpressionUUID->"aadec40a-3368-4723-89fd-8eb251f38546"],
Cell[4840, 131, 2055, 38, 452, "Text",ExpressionUUID->"61070079-5b9c-44ad-ba6d-a20bd75cf098"]
}, Closed]],
Cell[CellGroupData[{
Cell[6932, 174, 161, 3, 53, "Section",ExpressionUUID->"c94a9a1d-f6a8-4105-87a9-29514bdfea20"],
Cell[7096, 179, 5245, 74, 1068, "Text",ExpressionUUID->"4ffdfe0e-774a-401d-ba25-ab0a9cd91077"]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[12390, 259, 290, 4, 67, "Chapter",ExpressionUUID->"d40c6ba1-9bcf-48d5-b198-46dd20d72e26"],
Cell[12683, 265, 2614, 51, 273, "Input",ExpressionUUID->"725d77f7-93a5-4ad3-bc6a-c4bd3716c6e5"],
Cell[CellGroupData[{
Cell[15322, 320, 1522, 40, 143, "Input",ExpressionUUID->"370f31d8-63d6-4ae1-b568-0a8fbf6f63f1"],
Cell[16847, 362, 845, 11, 32, "Output",ExpressionUUID->"c81b73da-42cf-4ea9-914a-1afeda0c5a3f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[17729, 378, 845, 19, 105, "Input",ExpressionUUID->"a23c238a-f39c-4cda-9ce2-ca353ef5b2e0"],
Cell[18577, 399, 1062, 22, 35, "Output",ExpressionUUID->"3f0d46be-6bd0-4ba7-be26-3f55ad4356e0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[19676, 426, 161, 3, 44, "Subsubsection",ExpressionUUID->"94cdac42-45ea-41b6-b1d9-3c215566d0f9"],
Cell[CellGroupData[{
Cell[19862, 433, 1212, 29, 121, "Input",ExpressionUUID->"2fbc15d9-7803-49d9-a984-6e45b5c14c0e"],
Cell[21077, 464, 653, 9, 32, "Output",ExpressionUUID->"9ee9bf0f-aec6-4e3e-8a79-4cf8dbda542a"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[21779, 479, 156, 3, 44, "Subsubsection",ExpressionUUID->"a09bf26f-61f5-40ad-86c2-a450b2166acf"],
Cell[CellGroupData[{
Cell[21960, 486, 5540, 129, 501, "Input",ExpressionUUID->"9c743ede-8036-4933-bd0f-05293f601214"],
Cell[27503, 617, 883, 12, 32, "Output",ExpressionUUID->"b9ef856a-790b-4c65-b53b-6532209ac6b2"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[28447, 636, 644, 9, 67, "Chapter",ExpressionUUID->"389bf249-e632-44c7-bdb6-0b9f44175665"],
Cell[CellGroupData[{
Cell[29116, 649, 177, 3, 64, "Subchapter",ExpressionUUID->"6b7892d5-ab21-4e8f-b33c-eba54d95f823"],
Cell[CellGroupData[{
Cell[29318, 656, 1777, 43, 257, "Input",ExpressionUUID->"da8336b3-e756-475c-84ff-e0ba473ab316"],
Cell[31098, 701, 75757, 1289, 230, "Output",ExpressionUUID->"ffac9269-5455-4b99-8d89-f3108a248632"]
}, Open  ]],
Cell[CellGroupData[{
Cell[106892, 1995, 321, 6, 48, "Input",ExpressionUUID->"2d776ae1-4faf-4b81-9459-f32fa008844a"],
Cell[107216, 2003, 184, 3, 32, "Output",ExpressionUUID->"6357b808-1320-4a8b-a190-8e24831de63e"],
Cell[107403, 2008, 184, 3, 32, "Output",ExpressionUUID->"23ab5d56-a2ab-44a9-9344-a92f09edfd26"]
}, Open  ]],
Cell[CellGroupData[{
Cell[107624, 2016, 2595, 64, 314, "Input",ExpressionUUID->"99e565e7-0def-4a56-93bb-4fded035a9ef"],
Cell[110222, 2082, 75634, 1288, 230, "Output",ExpressionUUID->"cc0c843f-af04-47dc-b938-ded3f2f12f7b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[185893, 3375, 1306, 35, 162, "Input",ExpressionUUID->"90e0a49a-153e-416a-ae11-f55d5555b68f"],
Cell[187202, 3412, 262, 4, 32, "Output",ExpressionUUID->"267d1364-670e-4934-9352-877df72358f4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[187501, 3421, 278, 4, 44, "Subsubsection",ExpressionUUID->"02a021d1-03a1-4565-9e73-763c06ac59e2"],
Cell[CellGroupData[{
Cell[187804, 3429, 3232, 85, 428, "Input",ExpressionUUID->"99db4031-0e2e-4817-b83c-05afd8bbedf4"],
Cell[191039, 3516, 285, 5, 32, "Output",ExpressionUUID->"b8f765bf-ec33-4ccc-8024-6c038b0cb203"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[191397, 3529, 410, 6, 67, "Chapter",ExpressionUUID->"0493cc2b-5455-4cf2-8c5b-23605cbe9aff"],
Cell[CellGroupData[{
Cell[191832, 3539, 443, 8, 105, "Section",ExpressionUUID->"abab56c3-1c64-484a-9f07-5879a8efa036"],
Cell[192278, 3549, 7459, 146, 1144, "Text",ExpressionUUID->"1b7a4bfe-0a92-451e-b855-c338331eea75"],
Cell[CellGroupData[{
Cell[199762, 3699, 159, 3, 44, "Subsubsection",ExpressionUUID->"5e9d7795-49c5-41a3-8221-313ddf00674a"],
Cell[CellGroupData[{
Cell[199946, 3706, 2511, 56, 314, "Input",ExpressionUUID->"4461d6fc-df5c-4ae2-8bab-5a57b0040b5f"],
Cell[202460, 3764, 50348, 854, 216, "Output",ExpressionUUID->"9a6c2a86-2bd4-4ac6-ac2c-10b63669c11f"],
Cell[252811, 4620, 661, 10, 32, "Output",ExpressionUUID->"d8650a5c-f498-4da0-9932-b4fddcd3cdcd"],
Cell[253475, 4632, 806, 15, 49, "Output",ExpressionUUID->"21315f98-6ac8-4c4a-95a2-ad40e9c9c1f0"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[254330, 4653, 159, 3, 44, "Subsubsection",ExpressionUUID->"3aa60cff-ccef-40b5-8390-cc14c93a6c54"],
Cell[254492, 4658, 556, 14, 144, "Text",ExpressionUUID->"ee98c2e6-b82e-4d2d-8518-8b078ac28a40"],
Cell[CellGroupData[{
Cell[255073, 4676, 1597, 34, 162, "Input",ExpressionUUID->"bbf9aa3d-4643-4571-8793-e79173546f7c"],
Cell[256673, 4712, 457, 7, 32, "Output",ExpressionUUID->"fc35180d-8ff2-469a-a0d1-09ca41e372f0"],
Cell[257133, 4721, 461, 7, 32, "Output",ExpressionUUID->"602e0ebd-2a6b-4ebf-81ec-0ae52df9a1da"]
}, Open  ]],
Cell[CellGroupData[{
Cell[257631, 4733, 2095, 47, 200, "Input",ExpressionUUID->"f6fdfc61-f36d-4451-9047-561dba909801"],
Cell[259729, 4782, 58013, 990, 237, "Output",ExpressionUUID->"f92a7380-2a61-463e-8bfc-b2b97c348cc4"],
Cell[317745, 5774, 814, 16, 32, "Output",ExpressionUUID->"0397e644-ba75-4427-87f1-8d5e748b4f4c"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[318608, 5796, 208, 4, 44, "Subsubsection",ExpressionUUID->"df12afa6-c199-4812-9851-3370998754e5"],
Cell[318819, 5802, 423, 8, 34, "Text",ExpressionUUID->"bf405268-dab0-4b7c-937f-f87d439e3e67"],
Cell[319245, 5812, 1624, 37, 140, "Input",ExpressionUUID->"c2d19874-5ae9-4436-82c9-45dfceb0c898"],
Cell[CellGroupData[{
Cell[320894, 5853, 902, 16, 86, "Input",ExpressionUUID->"6105afa1-0c82-48e0-957e-0087f7a93d23"],
Cell[321799, 5871, 554, 8, 32, "Output",ExpressionUUID->"853cc6e6-a1b4-4a1a-befe-6d0a1cfbf3c5"],
Cell[322356, 5881, 553, 8, 32, "Output",ExpressionUUID->"bd7ece4e-1892-401a-84ad-7887dde6bf01"],
Cell[322912, 5891, 575, 9, 49, "Output",ExpressionUUID->"c9a54b64-b514-4365-9524-5730194e3a42"]
}, Open  ]],
Cell[CellGroupData[{
Cell[323524, 5905, 754, 14, 86, "Input",ExpressionUUID->"3be342bb-678f-491b-91de-04e745fb322f"],
Cell[324281, 5921, 386, 7, 32, "Output",ExpressionUUID->"174fbd1f-3923-4a46-b9b6-6de20d3064c7"],
Cell[324670, 5930, 386, 7, 32, "Output",ExpressionUUID->"62b81601-478b-49ef-8cc1-86d37ffd5b19"],
Cell[325059, 5939, 405, 8, 49, "Output",ExpressionUUID->"7058f1b6-60fe-4223-8f09-dafa167a67a8"]
}, Open  ]],
Cell[CellGroupData[{
Cell[325501, 5952, 2201, 54, 238, "Input",ExpressionUUID->"1b3651fc-0299-4e30-b33b-e00be80f9037"],
Cell[327705, 6008, 57605, 983, 179, "Output",ExpressionUUID->"c90a1406-79fa-48ca-a010-fd23684c7eed"],
Cell[385313, 6993, 487, 11, 49, "Output",ExpressionUUID->"5a6a6cd9-1414-410e-9803-3c588b3ff7c4"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[385849, 7010, 210, 4, 44, "Subsubsection",ExpressionUUID->"70669eee-dc0b-4af5-a555-76be7202e8ec"],
Cell[386062, 7016, 539, 11, 78, "Text",ExpressionUUID->"9cf411a6-b7ad-4030-aa13-d6d1fd6308ba"],
Cell[CellGroupData[{
Cell[386626, 7031, 5538, 126, 428, "Input",ExpressionUUID->"d695f85e-40d9-49f6-a068-ceb7af352078"],
Cell[392167, 7159, 58799, 1007, 183, "Output",ExpressionUUID->"3b43006d-19a7-4f0c-99aa-4ff55a08b94b"],
Cell[450969, 8168, 1161, 20, 49, "Output",ExpressionUUID->"581c4176-d248-43ae-a49f-a0bf05727a1a"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[452191, 8195, 163, 3, 64, "Subchapter",ExpressionUUID->"1bd1934c-c8be-4b54-93f4-3118a6d0fb6d"],
Cell[452357, 8200, 429, 10, 78, "Text",ExpressionUUID->"32994b4f-7559-4aa8-97eb-8d66dc153992"],
Cell[CellGroupData[{
Cell[452811, 8214, 835, 19, 117, "Input",ExpressionUUID->"e384f534-f64b-4b5e-963d-253d55ae6140"],
Cell[453649, 8235, 474, 13, 59, "Output",ExpressionUUID->"ad491d5e-87c3-4708-9383-68b10bc2765c"],
Cell[454126, 8250, 284, 5, 32, "Output",ExpressionUUID->"c9749b2e-8311-4ac5-9ffa-aca0e7c35b95"],
Cell[454413, 8257, 1058, 31, 46, "Output",ExpressionUUID->"aa67d2aa-22f4-40b8-967d-b9111bafd6de"]
}, Open  ]],
Cell[455486, 8291, 246, 5, 34, "Text",ExpressionUUID->"06906aaa-cd5b-4252-9f6c-8473961526a7"],
Cell[CellGroupData[{
Cell[455757, 8300, 668, 15, 124, "Input",ExpressionUUID->"85ff80ca-acf9-454b-8ea7-abcfb57df5ec"],
Cell[456428, 8317, 636, 19, 60, "Output",ExpressionUUID->"c38f6c99-3199-4410-8861-e03440d6c352"]
}, Open  ]],
Cell[CellGroupData[{
Cell[457101, 8341, 1285, 29, 219, "Input",ExpressionUUID->"7d3c277a-7cdc-4acc-94df-d5e06cf2ce69"],
Cell[458389, 8372, 1736, 33, 60, "Output",ExpressionUUID->"7d25b0eb-4fb9-4d60-a32d-40d760c82b32"],
Cell[460128, 8407, 304, 5, 32, "Output",ExpressionUUID->"3428cf20-63da-4d44-a938-6b516b4b33fb"],
Cell[460435, 8414, 451, 10, 49, "Output",ExpressionUUID->"403cdd2f-7570-4190-bb74-3b96dd4200b8"]
}, Open  ]],
Cell[460901, 8427, 3459, 93, 330, "Text",ExpressionUUID->"e2f37ecf-78d3-47c6-bf31-743c3660c360"],
Cell[CellGroupData[{
Cell[464385, 8524, 4825, 99, 428, "Input",ExpressionUUID->"81540305-a488-4b3e-b33b-80d208413e79"],
Cell[469213, 8625, 40011, 655, 130, "Output",ExpressionUUID->"d7e176c9-0b9d-4b42-9f18-c2a0a76ab67f"],
Cell[509227, 9282, 2342, 33, 32, "Output",ExpressionUUID->"8999ce1d-f26a-46a0-b77d-a1a001d4d370"],
Cell[511572, 9317, 2492, 38, 49, "Output",ExpressionUUID->"9ce563b2-bdad-4e16-a016-2a65314eb65f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[514101, 9360, 192, 3, 44, "Subsubsection",ExpressionUUID->"5d754b71-44d2-4f12-80d4-2be63962d981"],
Cell[CellGroupData[{
Cell[514318, 9367, 354, 6, 28, "Input",ExpressionUUID->"a651e608-8727-41fd-86f8-fcf085233817"],
Cell[514675, 9375, 12039, 293, 174, "Output",ExpressionUUID->"b6d41644-b26b-4889-b66e-29c4102010d7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[526751, 9673, 357, 6, 28, "Input",ExpressionUUID->"67caa394-6043-46e6-ab8a-9451613cdcec"],
Cell[527111, 9681, 12063, 291, 96, "Output",ExpressionUUID->"951fa4d0-c8a7-4c3b-bde3-5abaac78ac50"]
}, Open  ]],
Cell[CellGroupData[{
Cell[539211, 9977, 359, 6, 28, "Input",ExpressionUUID->"48343c3d-1367-4e55-9628-c0ed67c4e1a0"],
Cell[539573, 9985, 11960, 290, 96, "Output",ExpressionUUID->"e24dc544-1596-4a55-bcf3-cb8ec9147a1f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[551570, 10280, 312, 6, 28, "Input",ExpressionUUID->"76e483d8-6603-4f1c-8ce1-c6019a2a996c"],
Cell[551885, 10288, 12263, 295, 96, "Output",ExpressionUUID->"86293a27-2d7c-43f1-84a1-249ba1c52224"]
}, Open  ]],
Cell[CellGroupData[{
Cell[564185, 10588, 313, 6, 28, "Input",ExpressionUUID->"da9265a3-4ba3-4ea1-8104-c39a31809af4"],
Cell[564501, 10596, 12226, 295, 96, "Output",ExpressionUUID->"1a54ed4a-17a1-42f7-a86e-47e202d54978"]
}, Open  ]],
Cell[576742, 10894, 1251, 31, 109, "Text",ExpressionUUID->"3dd5c710-6100-448b-9f09-4c48d9e10853"],
Cell[CellGroupData[{
Cell[578018, 10929, 210, 4, 28, "Input",ExpressionUUID->"17d735a2-d236-47f7-9655-6cfd2228eaa6"],
Cell[578231, 10935, 12303, 298, 96, "Output",ExpressionUUID->"b9d5a84d-9b6a-4c66-9bca-9da1f037682f"]
}, Open  ]],
Cell[590549, 11236, 154, 3, 34, "Text",ExpressionUUID->"d70427fd-99aa-4962-bf11-971362fa5ac9"],
Cell[CellGroupData[{
Cell[590728, 11243, 308, 6, 28, "Input",ExpressionUUID->"31dd5fc2-a540-424d-ba4d-12c7ea37ba72"],
Cell[591039, 11251, 11953, 290, 96, "Output",ExpressionUUID->"4c41a154-507c-4129-af8d-1e079f6ed6b7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[603029, 11546, 447, 8, 28, "Input",ExpressionUUID->"002d2161-d12b-4480-b05c-a456e899cb82"],
Cell[603479, 11556, 11977, 291, 96, "Output",ExpressionUUID->"bd58dc0c-c695-4319-a8ca-43f120c29358"]
}, Open  ]],
Cell[615471, 11850, 149, 3, 34, "Text",ExpressionUUID->"4cfd789f-8715-43e7-a065-5cdfd8f86ec6"],
Cell[CellGroupData[{
Cell[615645, 11857, 353, 6, 28, "Input",ExpressionUUID->"d3f5a675-7bbb-4f00-8bf4-1c9d93a54e10"],
Cell[616001, 11865, 11879, 289, 96, "Output",ExpressionUUID->"2a07cfa0-073b-4912-bee9-76641b22c7ef"]
}, Open  ]],
Cell[CellGroupData[{
Cell[627917, 12159, 203, 4, 28, "Input",ExpressionUUID->"c41f3aea-6e0d-4966-9ed0-588fce93c98e"],
Cell[628123, 12165, 11871, 289, 96, "Output",ExpressionUUID->"db82f969-9337-49dd-82c1-647b63ff78a8"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[640043, 12460, 190, 3, 37, "Subsection",ExpressionUUID->"48f51a77-e5a5-44f2-b150-475e96dee4e4"],
Cell[640236, 12465, 538, 9, 34, "Text",ExpressionUUID->"4ae43a17-c9e7-4bd3-a4b9-39952928628f"],
Cell[CellGroupData[{
Cell[640799, 12478, 666, 16, 105, "Input",ExpressionUUID->"5f73716e-fa95-4c87-9e40-73a8f478a273"],
Cell[641468, 12496, 957, 30, 49, "Output",ExpressionUUID->"09bb586e-eba9-4b7a-bb86-6ca761fde1e1"],
Cell[642428, 12528, 335, 6, 32, "Output",ExpressionUUID->"1ab5d274-6f6a-413e-a023-5340d82fe500"],
Cell[642766, 12536, 2206, 62, 46, "Output",ExpressionUUID->"ed3deea1-40cc-4881-b64b-4956e656d0ef"]
}, Open  ]],
Cell[CellGroupData[{
Cell[645009, 12603, 265, 6, 28, "Input",ExpressionUUID->"3b19828c-5184-4045-8d98-8161a2e1fcb1"],
Cell[645277, 12611, 155, 3, 32, "Output",ExpressionUUID->"8edbc983-9d16-464c-8269-ed54642f571b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[645469, 12619, 607, 14, 28, "Input",ExpressionUUID->"234fad72-ed17-4005-8971-c52163b57aa5"],
Cell[646079, 12635, 2301, 65, 78, "Output",ExpressionUUID->"24beeb1a-52d9-4d82-8e1e-8d4afe40aba2"]
}, Open  ]],
Cell[648395, 12703, 426, 8, 56, "Text",ExpressionUUID->"7730933e-1b87-4cf1-a0b2-c92103180b26"],
Cell[CellGroupData[{
Cell[648846, 12715, 6153, 141, 884, "Input",ExpressionUUID->"191ae26d-4ce5-4588-971a-ffcdb37f8193"],
Cell[655002, 12858, 3224, 81, 124, "Output",ExpressionUUID->"e942fada-3db9-4a85-929c-313d127c60fe"],
Cell[658229, 12941, 3784, 97, 132, "Output",ExpressionUUID->"3b014b38-0a84-4b51-8833-10ef4264389b"],
Cell[662016, 13040, 54638, 900, 130, "Output",ExpressionUUID->"d297b5b4-8234-44b4-a07d-015499c2c8f7"],
Cell[716657, 13942, 1073, 16, 32, "Output",ExpressionUUID->"93ab4eb3-e4ae-4d06-80fb-c00968ff18ba"],
Cell[717733, 13960, 1077, 16, 32, "Output",ExpressionUUID->"0794f847-7fd2-492a-92a2-7a05efcf98fb"],
Cell[718813, 13978, 1074, 16, 32, "Output",ExpressionUUID->"111f77bb-a833-4fe5-9b43-73f16f1ff4aa"],
Cell[719890, 13996, 1226, 21, 49, "Output",ExpressionUUID->"5b38f10f-667f-46c2-aaf2-e4945170ead5"]
}, Open  ]],
Cell[721131, 14020, 927, 19, 188, "Text",ExpressionUUID->"e420b43f-c97e-449f-9672-3b777dd62622"],
Cell[CellGroupData[{
Cell[722083, 14043, 576, 12, 86, "Input",ExpressionUUID->"583a8907-5751-405b-8574-27bd41cc8683"],
Cell[722662, 14057, 871, 28, 49, "Output",ExpressionUUID->"4a57f3d4-f4fb-4cf3-acf2-a007e4bce792"],
Cell[723536, 14087, 2118, 60, 46, "Output",ExpressionUUID->"fbe2eafd-8b35-4344-850a-9cc36268d7de"],
Cell[725657, 14149, 922, 29, 49, "Output",ExpressionUUID->"20830c05-5d20-4e8e-b50c-49be3d3f0297"],
Cell[726582, 14180, 2168, 60, 46, "Output",ExpressionUUID->"de31fb75-20c7-44e8-a111-f3e2cb0bdc28"]
}, Open  ]],
Cell[728765, 14243, 2034, 48, 219, "Input",ExpressionUUID->"30bb4b9f-bc98-4728-be09-63fdf6cc06f3"],
Cell[730802, 14293, 10198, 207, 1321, "Input",ExpressionUUID->"04657f2b-2ff6-4fc0-bde5-44e4141397b3"],
Cell[CellGroupData[{
Cell[741025, 14504, 341, 8, 28, "Input",ExpressionUUID->"6e704d22-87cf-4543-b4b4-0788fe00712f"],
Cell[741369, 14514, 14895, 246, 130, "Output",ExpressionUUID->"0f956120-8984-4419-9e6e-0e8dc8a94791"]
}, Open  ]],
Cell[CellGroupData[{
Cell[756301, 14765, 245, 6, 28, "Input",ExpressionUUID->"bdc99fad-6c7c-4118-87e5-1c8af55d37b7"],
Cell[756549, 14773, 1492, 25, 35, "Output",ExpressionUUID->"a3e6e098-6478-4424-9ebd-660fefdc7c04"]
}, Open  ]],
Cell[CellGroupData[{
Cell[758078, 14803, 975, 24, 67, "Input",ExpressionUUID->"f0352c38-d467-48a5-80bb-5dcf9d324d62"],
Cell[759056, 14829, 1400, 20, 52, "Output",ExpressionUUID->"17222bab-0c27-4875-9abd-895a380a2f8c"]
}, Open  ]],
Cell[760471, 14852, 249, 6, 34, "Text",ExpressionUUID->"3b9d5772-fd6b-4224-a6e0-aa512e2f1b90"],
Cell[CellGroupData[{
Cell[760745, 14862, 246, 5, 28, "Input",ExpressionUUID->"70bce0ab-06e7-4bad-a0f0-5bee0237b848"],
Cell[760994, 14869, 185, 3, 32, "Output",ExpressionUUID->"1e5d190c-0cc0-42dc-b0ca-7ed5ace01cf8"]
}, Open  ]],
Cell[CellGroupData[{
Cell[761216, 14877, 392, 7, 28, "Input",ExpressionUUID->"0c40a55a-b5ae-4f94-a0cd-1ae36998850b"],
Cell[761611, 14886, 271, 4, 32, "Output",ExpressionUUID->"8e17304c-3345-4175-91bf-0b157d38ac85"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[761955, 14898, 753, 10, 67, "Chapter",ExpressionUUID->"662f0697-6bd2-47b5-ad9c-5b9db247263c"],
Cell[CellGroupData[{
Cell[762733, 14912, 162, 3, 44, "Subsubsection",ExpressionUUID->"226732a0-a3f9-493c-96f6-45d69aad94c8"],
Cell[762898, 14917, 229, 4, 34, "Text",ExpressionUUID->"1af7bef8-8291-45d3-9da0-74b411a7a5bf"],
Cell[763130, 14923, 1424, 28, 168, "Input",ExpressionUUID->"3c2fd98c-5145-4599-a4c1-ca76a25d1b07"]
}, Open  ]],
Cell[CellGroupData[{
Cell[764591, 14956, 223, 4, 44, "Subsubsection",ExpressionUUID->"b91d6c81-1862-4a68-9f0b-9430c8b42d0e"],
Cell[CellGroupData[{
Cell[764839, 14964, 139, 3, 28, "Input",ExpressionUUID->"71550abf-13c2-4977-8dd5-e8681f9cb319"],
Cell[764981, 14969, 14358, 289, 71, "Output",ExpressionUUID->"c3527e7e-f0a5-47d5-bba6-11d959958d9d"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[779388, 15264, 233, 4, 44, "Subsubsection",ExpressionUUID->"44c9280d-574e-4231-91d9-2920c6c05ef5"],
Cell[CellGroupData[{
Cell[779646, 15272, 806, 18, 48, "Input",ExpressionUUID->"7b8e4f9d-f30a-4468-8d39-6e62b0740fb2"],
Cell[780455, 15292, 30031, 565, 117, "Output",ExpressionUUID->"f4167fe8-6393-49b9-a9bd-5d11b51326cf"]
}, Open  ]],
Cell[CellGroupData[{
Cell[810523, 15862, 517, 12, 48, "Input",ExpressionUUID->"26f794f9-bde1-4708-8312-c09b9d2f11ff"],
Cell[811043, 15876, 14081, 285, 71, "Output",ExpressionUUID->"5c416452-1891-44d0-ab3f-18b7789f2966"]
}, Open  ]],
Cell[CellGroupData[{
Cell[825161, 16166, 1253, 32, 143, "Input",ExpressionUUID->"1097e129-3d42-42cd-8668-86c670ae09c1"],
Cell[826417, 16200, 55556, 1130, 583, "Output",ExpressionUUID->"ee5054bf-dec7-4fff-9e67-b196eec9733c"],
Cell[881976, 17332, 207, 4, 32, "Output",ExpressionUUID->"13bc2af0-c43f-4d6b-823e-70f666954586"],
Cell[882186, 17338, 9072, 208, 148, "Output",ExpressionUUID->"4f05685b-5820-4a4d-b193-f224284a9a31"],
Cell[891261, 17548, 208, 4, 32, "Output",ExpressionUUID->"43498fcd-4ad3-40ba-a7f6-817300f4194e"],
Cell[891472, 17554, 10204, 206, 197, "Output",ExpressionUUID->"0b930479-a24d-44b9-ac5c-6d1cdecda4bb"],
Cell[901679, 17762, 206, 4, 32, "Output",ExpressionUUID->"cc1bba48-5fdb-476c-b7b2-6572dd227c29"]
}, Open  ]],
Cell[CellGroupData[{
Cell[901922, 17771, 153, 3, 28, "Input",ExpressionUUID->"77add106-d63a-4f3d-87d5-87876f7915f0"],
Cell[902078, 17776, 20517, 422, 335, "Output",ExpressionUUID->"6d3fa00d-2261-4c6e-95e9-3f255549260f"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[922644, 18204, 166, 3, 44, "Subsubsection",ExpressionUUID->"5ed54710-577f-4046-9914-8467bd4666dc"],
Cell[CellGroupData[{
Cell[922835, 18211, 367, 9, 28, "Input",ExpressionUUID->"e37ca69b-521f-4da7-a8c7-c330df07eb74"],
Cell[923205, 18222, 78608, 1595, 592, "Output",ExpressionUUID->"dd4b958a-a266-4a87-8d7d-5127b201eb83"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1001850, 19822, 456, 13, 28, "Input",ExpressionUUID->"05f6cc10-7ffe-43ba-924e-6711533c37d1"],
Cell[1002309, 19837, 80069, 1605, 592, "Output",ExpressionUUID->"19ced1f9-7b1d-4702-a56c-1308ec5580d9"]
}, Open  ]],
Cell[1082393, 21445, 387, 10, 28, "Input",ExpressionUUID->"7ef3cd4f-2f4b-4397-89cd-046ec2eb8143"],
Cell[CellGroupData[{
Cell[1082805, 21459, 2285, 64, 162, "Input",ExpressionUUID->"2c2c08bb-5101-43a7-93fa-fc1dbed34be3"],
Cell[1085093, 21525, 2936, 74, 139, "Output",ExpressionUUID->"73418c24-ac22-41e8-af5f-4c5fe358127c"],
Cell[1088032, 21601, 2576, 71, 96, "Output",ExpressionUUID->"939ada98-232f-4a5d-8d8b-73262c32d9f6"],
Cell[1090611, 21674, 11076, 202, 107, "Output",ExpressionUUID->"dee30ace-b33a-48f0-b8b8-db0e7dd2f78d"],
Cell[1101690, 21878, 1128, 41, 32, "Output",ExpressionUUID->"64318e6a-66c9-49a6-b31a-7daee42e648a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1102855, 21924, 888, 23, 48, "Input",ExpressionUUID->"54bc293a-55ff-44b1-ba0c-32b0be8c84d4"],
Cell[1103746, 21949, 450, 15, 32, "Output",ExpressionUUID->"8fb89fe7-0475-43b1-83d3-d9744b4b629d"],
Cell[1104199, 21966, 450, 15, 32, "Output",ExpressionUUID->"54aeff55-7041-44b7-93a2-d6772c169560"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1104686, 21986, 1559, 40, 124, "Input",ExpressionUUID->"4a73e747-24c1-41bf-abf4-c8836e6f2529"],
Cell[1106248, 22028, 1455, 53, 32, "Output",ExpressionUUID->"0f00bc76-cba7-45de-ae4a-25cc1d1bd2e4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1107740, 22086, 343, 10, 28, "Input",ExpressionUUID->"aaab5a3c-19f0-4a4d-886e-fe36f31c895d"],
Cell[1108086, 22098, 10967, 200, 109, "Output",ExpressionUUID->"479e088b-9264-40ad-a2de-82984f4a3add"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1119090, 22303, 4035, 94, 314, "Input",ExpressionUUID->"55aa9a47-fc2d-4a11-962b-6bfd575ebd0b"],
Cell[1123128, 22399, 2573, 88, 135, "Output",ExpressionUUID->"74ea5497-2fe8-43da-93bf-34d068cb6667"],
Cell[1125704, 22489, 182, 3, 32, "Output",ExpressionUUID->"2411946d-5840-454f-a306-fe248a045f21"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1125923, 22497, 726, 18, 105, "Input",ExpressionUUID->"429d0a26-f02e-461b-9984-580f4da81f17"],
Cell[1126652, 22517, 2791, 94, 132, "Output",ExpressionUUID->"091fa4c7-688d-4691-8f55-55069d2f7644"]
}, Open  ]],
Cell[1129458, 22614, 236, 4, 34, "Text",ExpressionUUID->"ef11ce72-9815-4f83-bf1e-dcc5741f630b"],
Cell[CellGroupData[{
Cell[1129719, 22622, 1185, 32, 86, "Input",ExpressionUUID->"dd3d2102-3cf3-45ae-89b4-09ac6e71ed3b"],
Cell[1130907, 22656, 17698, 473, 52, "Output",ExpressionUUID->"52f4358a-4b1b-4c27-a1c5-9740b2e3ee8f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1148642, 23134, 2066, 43, 276, "Input",ExpressionUUID->"2eb8ab95-3257-46d8-922c-334c89da5974"],
Cell[1150711, 23179, 219677, 3178, 142, "Output",ExpressionUUID->"6964a171-aa2d-4c94-92a9-8a52fd8f9467"]
}, Open  ]],
Cell[1370403, 26360, 172, 3, 34, "Text",ExpressionUUID->"ffc6aa8c-d493-498a-9106-e738ec2f27ec"],
Cell[CellGroupData[{
Cell[1370600, 26367, 2217, 47, 200, "Input",ExpressionUUID->"fa39ca60-7f2d-4a0d-89ea-28e2b954f882"],
Cell[1372820, 26416, 9949, 230, 147, "Output",ExpressionUUID->"16c70d5d-0237-4df2-8926-0e811a15c0db"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1382806, 26651, 3247, 77, 390, "Input",ExpressionUUID->"b5ed8e83-3a83-473b-b68a-7e6014e1f42d"],
Cell[1386056, 26730, 91609, 1507, 152, "Output",ExpressionUUID->"3dc9fba1-0311-4496-8e98-380407289120"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1477702, 28242, 4642, 107, 599, "Input",ExpressionUUID->"3842b88a-197e-45c4-b4ee-241ac5786d38"],
Cell[1482347, 28351, 163, 3, 32, "Output",ExpressionUUID->"1e104de4-32bc-4aae-86b4-c5c75316762e"],
Cell[1482513, 28356, 95701, 1574, 166, "Output",ExpressionUUID->"762eb69a-7683-417a-9ded-b8b098de16a6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1578251, 29935, 793, 20, 124, "Input",ExpressionUUID->"39443aab-17fb-41ca-b0d0-096d80bf5e57"],
Cell[1579047, 29957, 498, 11, 35, "Output",ExpressionUUID->"3dac28b4-cfcf-446a-a38b-a49a33dd7c6f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1579582, 29973, 766, 21, 67, "Input",ExpressionUUID->"5e39e300-f22b-4ed8-88f0-d8b6fe42ca4c"],
Cell[1580351, 29996, 243, 4, 32, "Output",ExpressionUUID->"7363b03d-2ad0-4fe0-a955-a89053711d62"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1580655, 30007, 265, 4, 67, "Chapter",ExpressionUUID->"a8231bc6-a2be-43b8-b5ad-045d367a75d2"],
Cell[1580923, 30013, 759, 17, 188, "Text",ExpressionUUID->"da94c342-84e8-4745-9feb-29a8dc81f6a8"]
}, Open  ]]
}, Open  ]]
}
]
*)

